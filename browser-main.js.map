{
  "version": 3,
  "sources": ["../node_modules/base64-js/index.js", "../node_modules/ieee754/index.js", "../node_modules/buffer/index.js", "../lib/esbuild-shims.js", "../node_modules/object-assign/index.js", "../node_modules/react/cjs/react.production.min.js", "../node_modules/react/index.js", "../node_modules/scheduler/cjs/scheduler.production.min.js", "../node_modules/scheduler/index.js", "../node_modules/react-dom/cjs/react-dom.production.min.js", "../node_modules/react-dom/index.js", "../node_modules/classnames/index.js", "../node_modules/colorspaces/colorspaces.js", "../node_modules/hsluv/hsluv.js", "../vendor/bezier-js/index.js", "../node_modules/react-dom/cjs/react-dom-server.browser.production.min.js", "../node_modules/react-dom/server.browser.js", "../vendor/gif.js/gif.js", "../node_modules/avro-js/etc/browser/crypto.js", "../node_modules/avro-js/lib/utils.js", "../node_modules/has-symbols/shams.js", "../node_modules/has-symbols/index.js", "../node_modules/function-bind/implementation.js", "../node_modules/function-bind/index.js", "../node_modules/has/src/index.js", "../node_modules/get-intrinsic/index.js", "../node_modules/call-bind/index.js", "../node_modules/call-bind/callBound.js", "../node_modules/is-arguments/index.js", "../node_modules/is-generator-function/index.js", "../node_modules/foreach/index.js", "../node_modules/available-typed-arrays/index.js", "../node_modules/es-abstract/node_modules/has-symbols/shams.js", "../node_modules/es-abstract/node_modules/has-symbols/index.js", "../node_modules/es-abstract/node_modules/get-intrinsic/index.js", "../node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js", "../node_modules/is-typed-array/index.js", "../node_modules/which-typed-array/index.js", "../node_modules/util/support/types.js", "../node_modules/util/support/isBufferBrowser.js", "../node_modules/inherits/inherits_browser.js", "../node_modules/util/util.js", "../node_modules/avro-js/lib/schemas.js", "../node_modules/underscore/modules/_setup.js", "../node_modules/underscore/modules/restArguments.js", "../node_modules/underscore/modules/isObject.js", "../node_modules/underscore/modules/isNull.js", "../node_modules/underscore/modules/isUndefined.js", "../node_modules/underscore/modules/isBoolean.js", "../node_modules/underscore/modules/isElement.js", "../node_modules/underscore/modules/_tagTester.js", "../node_modules/underscore/modules/isString.js", "../node_modules/underscore/modules/isNumber.js", "../node_modules/underscore/modules/isDate.js", "../node_modules/underscore/modules/isRegExp.js", "../node_modules/underscore/modules/isError.js", "../node_modules/underscore/modules/isSymbol.js", "../node_modules/underscore/modules/isArrayBuffer.js", "../node_modules/underscore/modules/isFunction.js", "../node_modules/underscore/modules/_hasObjectTag.js", "../node_modules/underscore/modules/_stringTagBug.js", "../node_modules/underscore/modules/isDataView.js", "../node_modules/underscore/modules/isArray.js", "../node_modules/underscore/modules/_has.js", "../node_modules/underscore/modules/isArguments.js", "../node_modules/underscore/modules/isFinite.js", "../node_modules/underscore/modules/isNaN.js", "../node_modules/underscore/modules/constant.js", "../node_modules/underscore/modules/_createSizePropertyCheck.js", "../node_modules/underscore/modules/_shallowProperty.js", "../node_modules/underscore/modules/_getByteLength.js", "../node_modules/underscore/modules/_isBufferLike.js", "../node_modules/underscore/modules/isTypedArray.js", "../node_modules/underscore/modules/_getLength.js", "../node_modules/underscore/modules/_collectNonEnumProps.js", "../node_modules/underscore/modules/keys.js", "../node_modules/underscore/modules/isEmpty.js", "../node_modules/underscore/modules/isMatch.js", "../node_modules/underscore/modules/underscore.js", "../node_modules/underscore/modules/_toBufferView.js", "../node_modules/underscore/modules/isEqual.js", "../node_modules/underscore/modules/allKeys.js", "../node_modules/underscore/modules/_methodFingerprint.js", "../node_modules/underscore/modules/isMap.js", "../node_modules/underscore/modules/isWeakMap.js", "../node_modules/underscore/modules/isSet.js", "../node_modules/underscore/modules/isWeakSet.js", "../node_modules/underscore/modules/values.js", "../node_modules/underscore/modules/pairs.js", "../node_modules/underscore/modules/invert.js", "../node_modules/underscore/modules/functions.js", "../node_modules/underscore/modules/_createAssigner.js", "../node_modules/underscore/modules/extend.js", "../node_modules/underscore/modules/extendOwn.js", "../node_modules/underscore/modules/defaults.js", "../node_modules/underscore/modules/_baseCreate.js", "../node_modules/underscore/modules/create.js", "../node_modules/underscore/modules/clone.js", "../node_modules/underscore/modules/tap.js", "../node_modules/underscore/modules/toPath.js", "../node_modules/underscore/modules/_toPath.js", "../node_modules/underscore/modules/_deepGet.js", "../node_modules/underscore/modules/get.js", "../node_modules/underscore/modules/has.js", "../node_modules/underscore/modules/identity.js", "../node_modules/underscore/modules/matcher.js", "../node_modules/underscore/modules/property.js", "../node_modules/underscore/modules/_optimizeCb.js", "../node_modules/underscore/modules/_baseIteratee.js", "../node_modules/underscore/modules/iteratee.js", "../node_modules/underscore/modules/_cb.js", "../node_modules/underscore/modules/mapObject.js", "../node_modules/underscore/modules/noop.js", "../node_modules/underscore/modules/propertyOf.js", "../node_modules/underscore/modules/times.js", "../node_modules/underscore/modules/random.js", "../node_modules/underscore/modules/now.js", "../node_modules/underscore/modules/_createEscaper.js", "../node_modules/underscore/modules/_escapeMap.js", "../node_modules/underscore/modules/escape.js", "../node_modules/underscore/modules/_unescapeMap.js", "../node_modules/underscore/modules/unescape.js", "../node_modules/underscore/modules/templateSettings.js", "../node_modules/underscore/modules/template.js", "../node_modules/underscore/modules/result.js", "../node_modules/underscore/modules/uniqueId.js", "../node_modules/underscore/modules/chain.js", "../node_modules/underscore/modules/_executeBound.js", "../node_modules/underscore/modules/partial.js", "../node_modules/underscore/modules/bind.js", "../node_modules/underscore/modules/_isArrayLike.js", "../node_modules/underscore/modules/_flatten.js", "../node_modules/underscore/modules/bindAll.js", "../node_modules/underscore/modules/memoize.js", "../node_modules/underscore/modules/delay.js", "../node_modules/underscore/modules/defer.js", "../node_modules/underscore/modules/throttle.js", "../node_modules/underscore/modules/debounce.js", "../node_modules/underscore/modules/wrap.js", "../node_modules/underscore/modules/negate.js", "../node_modules/underscore/modules/compose.js", "../node_modules/underscore/modules/after.js", "../node_modules/underscore/modules/before.js", "../node_modules/underscore/modules/once.js", "../node_modules/underscore/modules/findKey.js", "../node_modules/underscore/modules/_createPredicateIndexFinder.js", "../node_modules/underscore/modules/findIndex.js", "../node_modules/underscore/modules/findLastIndex.js", "../node_modules/underscore/modules/sortedIndex.js", "../node_modules/underscore/modules/_createIndexFinder.js", "../node_modules/underscore/modules/indexOf.js", "../node_modules/underscore/modules/lastIndexOf.js", "../node_modules/underscore/modules/find.js", "../node_modules/underscore/modules/findWhere.js", "../node_modules/underscore/modules/each.js", "../node_modules/underscore/modules/map.js", "../node_modules/underscore/modules/_createReduce.js", "../node_modules/underscore/modules/reduce.js", "../node_modules/underscore/modules/reduceRight.js", "../node_modules/underscore/modules/filter.js", "../node_modules/underscore/modules/reject.js", "../node_modules/underscore/modules/every.js", "../node_modules/underscore/modules/some.js", "../node_modules/underscore/modules/contains.js", "../node_modules/underscore/modules/invoke.js", "../node_modules/underscore/modules/pluck.js", "../node_modules/underscore/modules/where.js", "../node_modules/underscore/modules/max.js", "../node_modules/underscore/modules/min.js", "../node_modules/underscore/modules/sample.js", "../node_modules/underscore/modules/shuffle.js", "../node_modules/underscore/modules/sortBy.js", "../node_modules/underscore/modules/_group.js", "../node_modules/underscore/modules/groupBy.js", "../node_modules/underscore/modules/indexBy.js", "../node_modules/underscore/modules/countBy.js", "../node_modules/underscore/modules/partition.js", "../node_modules/underscore/modules/toArray.js", "../node_modules/underscore/modules/size.js", "../node_modules/underscore/modules/_keyInObj.js", "../node_modules/underscore/modules/pick.js", "../node_modules/underscore/modules/omit.js", "../node_modules/underscore/modules/initial.js", "../node_modules/underscore/modules/first.js", "../node_modules/underscore/modules/rest.js", "../node_modules/underscore/modules/last.js", "../node_modules/underscore/modules/compact.js", "../node_modules/underscore/modules/flatten.js", "../node_modules/underscore/modules/difference.js", "../node_modules/underscore/modules/without.js", "../node_modules/underscore/modules/uniq.js", "../node_modules/underscore/modules/union.js", "../node_modules/underscore/modules/intersection.js", "../node_modules/underscore/modules/unzip.js", "../node_modules/underscore/modules/zip.js", "../node_modules/underscore/modules/object.js", "../node_modules/underscore/modules/range.js", "../node_modules/underscore/modules/chunk.js", "../node_modules/underscore/modules/_chainResult.js", "../node_modules/underscore/modules/mixin.js", "../node_modules/underscore/modules/underscore-array-methods.js", "../node_modules/underscore/modules/index.js", "../node_modules/underscore/modules/index-default.js", "../node_modules/avro-js/etc/deprecated/validator.js", "../node_modules/avro-js/etc/browser/avro.js", "../lib/browser-main.tsx", "../lib/page.tsx", "../lib/pages/index.tsx", "../lib/pages/waves-page.tsx", "../lib/checkbox.tsx", "../lib/color-widget.tsx", "../lib/util.ts", "../lib/numeric-slider.tsx", "../lib/pages/clouds-page.tsx", "../lib/randomizer-widget.tsx", "../lib/palette-algorithm-widget.tsx", "../lib/random-colors.ts", "../lib/random.ts", "../lib/color-util.ts", "../lib/svg-symbol.tsx", "../lib/colors.ts", "../lib/unique-id.tsx", "../lib/visible-specs.tsx", "../lib/bounding-box.ts", "../lib/path.ts", "../lib/specs.ts", "../lib/point.ts", "../lib/svg-composition-context.tsx", "../lib/symbol-context-widget.tsx", "../lib/pages/vocabulary-page.tsx", "../lib/svg-vocabulary.ts", "../lib/vocabulary.ts", "../lib/_svg-vocabulary.ts", "../lib/hover-debug-helper.tsx", "../lib/pages/creature-page.tsx", "../lib/auto-sizing-svg.tsx", "../lib/export-svg.tsx", "../lib/animated-gif.ts", "../vendor/gif.js/gif.worker.ts", "../lib/creature-symbol.tsx", "../lib/attach.tsx", "../lib/svg-transform.tsx", "../lib/vocabulary-widget.tsx", "../lib/pages/mandala-page/index.tsx", "../lib/page-with-shareable-state.tsx", "../lib/pages/mandala-page/core.tsx", "../lib/mandala-circle.tsx", "../lib/animation.ts", "../lib/use-debounced-effect.ts", "../lib/pages/mandala-page/serialization.ts", "../lib/base64.ts", "../lib/pages/debug-page.tsx", "../lib/creature-symbol-factory.tsx"],
  "sourcesContent": ["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n", "import * as buf from \"buffer/\";\n\nexport let process = { env: {} };\n\nexport let Buffer = buf.Buffer;\n", "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n", "/** @license React v17.0.1\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.1\";\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n", "/** @license React v0.20.1\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\nwindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n", "/** @license React v17.0.1\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),m=require(\"object-assign\"),r=require(\"scheduler\");function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\nfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\nvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\nja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\npa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\nvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\nfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\nfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\nfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\nreturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\nfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\nfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\nfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\nfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\nfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\nfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\nfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\nfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\nfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\nfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\nfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\nfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\nfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\nvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\nfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\nfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\nfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\nfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\nfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\nfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\nea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\nda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\nfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\nfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\nfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\nfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\na:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\nt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\nx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\ngf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\nK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\ncase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\nfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\nfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\nfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\nfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\nfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\nvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\nfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\nfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\nfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\nfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\nfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\nfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\nfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\nfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\nfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\nfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\na.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\nn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\nh)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\nu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\nfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\nfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\nfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\nfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\nfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\nfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\nfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\nfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\nfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\nfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\nvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\nb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\nwh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\nvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\nfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\nfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\nfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\nfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\nvar si={dehydrated:null,retryLane:0};\nfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\nfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\nBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\nDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\nl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\nc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\njf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\ne=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\ngb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\nbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\nc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\nnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\nf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\nfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\nfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\nfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\nfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\nfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\nreturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\nfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\na)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\nf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\nfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\nfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\nfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\nfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\nfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\nc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\nfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\nfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\nfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\nvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\ng;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\nfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\nfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\nfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\nbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\nZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\nJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\ng.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\nZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\nfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\nfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\nfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\nck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\nb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\na=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\nd=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\nph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\nc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\nk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\nf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\nfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\ntypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\nfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\nfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\nd&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\nfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\nqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\nfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\ngc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\nyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\nHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.1\",rendererPackageName:\"react-dom\"};\nvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\npk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\nexports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.1\";\n", "'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n", "/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n", "(function () {\n\n  // All Math on this page comes from http://www.easyrgb.com\n  var dot_product = function dot_product(a, b) {\n    var ret = 0;\n    var iterable = __range__(0, a.length - 1, true);\n    for (var j = 0; j < iterable.length; j++) {\n      var i = iterable[j];\n      ret += a[i] * b[i];\n    }\n    return ret;\n  };\n\n  // Rounds number to a given number of decimal places\n  var round = function round(num, places) {\n    var m = Math.pow(10, places);\n    return Math.round(num * m) / m;\n  };\n\n  // Returns whether given color coordinates fit within their valid range\n  var within_range = function within_range(vector, ranges) {\n    // Round to three decimal places to avoid rounding errors\n    // e.g. R_rgb = -0.0000000001\n    vector = vector.map(function (n) {\n      return round(n, 3);\n    });\n    var iterable = __range__(0, vector.length - 1, true);\n    for (var j = 0; j < iterable.length; j++) {\n      var i = iterable[j];\n      if (vector[i] < ranges[i][0] || vector[i] > ranges[i][1]) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // The D65 standard illuminant\n  var ref_X = 0.95047;\n  var ref_Y = 1.00000;\n  var ref_Z = 1.08883;\n  var ref_U = 4 * ref_X / (ref_X + 15 * ref_Y + 3 * ref_Z);\n  var ref_V = 9 * ref_Y / (ref_X + 15 * ref_Y + 3 * ref_Z);\n\n  // CIE L*a*b* constants\n  var lab_e = 0.008856;\n  var lab_k = 903.3;\n\n  // Used for Lab and Luv conversions\n  var f = function f(t) {\n    if (t > lab_e) {\n      return Math.pow(t, 1 / 3);\n    } else {\n      return 7.787 * t + 16 / 116;\n    }\n  };\n  var f_inv = function f_inv(t) {\n    if (Math.pow(t, 3) > lab_e) {\n      return Math.pow(t, 3);\n    } else {\n      return (116 * t - 16) / lab_k;\n    }\n  };\n\n  // This map will contain our conversion functions\n  // conv[from][to] = (tuple) -> ...\n  var conv = {\n    'CIEXYZ': {},\n    'CIExyY': {},\n    'CIELAB': {},\n    'CIELCH': {},\n    'CIELUV': {},\n    'CIELCHuv': {},\n    'sRGB': {},\n    'hex': {}\n  };\n\n  conv['CIEXYZ']['sRGB'] = function (tuple) {\n    var m = [[3.2406, -1.5372, -0.4986], [-0.9689, 1.8758, 0.0415], [0.0557, -0.2040, 1.0570]];\n    var from_linear = function from_linear(c) {\n      var a = 0.055;\n      if (c <= 0.0031308) {\n        return 12.92 * c;\n      } else {\n        return 1.055 * Math.pow(c, 1 / 2.4) - 0.055;\n      }\n    };\n    var _R = from_linear(dot_product(m[0], tuple));\n    var _G = from_linear(dot_product(m[1], tuple));\n    var _B = from_linear(dot_product(m[2], tuple));\n    return [_R, _G, _B];\n  };\n\n  conv['sRGB']['CIEXYZ'] = function (tuple) {\n    var _R = tuple[0];\n    var _G = tuple[1];\n    var _B = tuple[2];\n    var to_linear = function to_linear(c) {\n      var a = 0.055;\n      if (c > 0.04045) {\n        return Math.pow((c + a) / (1 + a), 2.4);\n      } else {\n        return c / 12.92;\n      }\n    };\n    var m = [[0.4124, 0.3576, 0.1805], [0.2126, 0.7152, 0.0722], [0.0193, 0.1192, 0.9505]];\n    var rgbl = [to_linear(_R), to_linear(_G), to_linear(_B)];\n    var _X = dot_product(m[0], rgbl);\n    var _Y = dot_product(m[1], rgbl);\n    var _Z = dot_product(m[2], rgbl);\n    return [_X, _Y, _Z];\n  };\n\n  conv['CIEXYZ']['CIExyY'] = function (tuple) {\n    var _X = tuple[0];\n    var _Y = tuple[1];\n    var _Z = tuple[2];\n    var sum = _X + _Y + _Z;\n    if (sum === 0) {\n      return [0, 0, _Y];\n    }\n    return [_X / sum, _Y / sum, _Y];\n  };\n\n  conv['CIExyY']['CIEXYZ'] = function (tuple) {\n    var _x = tuple[0];\n    var _y = tuple[1];\n    var _Y = tuple[2];\n    if (_y === 0) {\n      return [0, 0, 0];\n    }\n    var _X = _x * _Y / _y;\n    var _Z = (1 - _x - _y) * _Y / _y;\n    return [_X, _Y, _Z];\n  };\n\n  conv['CIEXYZ']['CIELAB'] = function (tuple) {\n    var _X = tuple[0];\n    var _Y = tuple[1];\n    var _Z = tuple[2];\n    var fx = f(_X / ref_X);\n    var fy = f(_Y / ref_Y);\n    var fz = f(_Z / ref_Z);\n    var _L = 116 * fy - 16;\n    var _a = 500 * (fx - fy);\n    var _b = 200 * (fy - fz);\n    return [_L, _a, _b];\n  };\n\n  conv['CIELAB']['CIEXYZ'] = function (tuple) {\n    var _L = tuple[0];\n    var _a = tuple[1];\n    var _b = tuple[2];\n    var var_y = (_L + 16) / 116;\n    var var_z = var_y - _b / 200;\n    var var_x = _a / 500 + var_y;\n    var _X = ref_X * f_inv(var_x);\n    var _Y = ref_Y * f_inv(var_y);\n    var _Z = ref_Z * f_inv(var_z);\n    return [_X, _Y, _Z];\n  };\n\n  conv['CIEXYZ']['CIELUV'] = function (tuple) {\n    var _X = tuple[0];\n    var _Y = tuple[1];\n    var _Z = tuple[2];\n    var var_U = 4 * _X / (_X + 15 * _Y + 3 * _Z);\n    var var_V = 9 * _Y / (_X + 15 * _Y + 3 * _Z);\n    var _L = 116 * f(_Y / ref_Y) - 16;\n    // Black will create a divide-by-zero error\n    if (_L === 0) {\n      return [0, 0, 0];\n    }\n    var _U = 13 * _L * (var_U - ref_U);\n    var _V = 13 * _L * (var_V - ref_V);\n    return [_L, _U, _V];\n  };\n\n  conv['CIELUV']['CIEXYZ'] = function (tuple) {\n    var _L = tuple[0];\n    var _U = tuple[1];\n    var _V = tuple[2];\n    // Black will create a divide-by-zero error\n    if (_L === 0) {\n      return [0, 0, 0];\n    }\n    var var_Y = f_inv((_L + 16) / 116);\n    var var_U = _U / (13 * _L) + ref_U;\n    var var_V = _V / (13 * _L) + ref_V;\n    var _Y = var_Y * ref_Y;\n    var _X = 0 - 9 * _Y * var_U / ((var_U - 4) * var_V - var_U * var_V);\n    var _Z = (9 * _Y - 15 * var_V * _Y - var_V * _X) / (3 * var_V);\n    return [_X, _Y, _Z];\n  };\n\n  var scalar_to_polar = function scalar_to_polar(tuple) {\n    var _L = tuple[0];\n    var var1 = tuple[1];\n    var var2 = tuple[2];\n    var _C = Math.pow(Math.pow(var1, 2) + Math.pow(var2, 2), 1 / 2);\n    var _h_rad = Math.atan2(var2, var1);\n    var _h = _h_rad * 360 / 2 / Math.PI;\n    if (_h < 0) {\n      _h = 360 + _h;\n    }\n    return [_L, _C, _h];\n  };\n  conv['CIELAB']['CIELCH'] = scalar_to_polar;\n  conv['CIELUV']['CIELCHuv'] = scalar_to_polar;\n\n  var polar_to_scalar = function polar_to_scalar(tuple) {\n    var _L = tuple[0];\n    var _C = tuple[1];\n    var _h = tuple[2];\n    var _h_rad = _h / 360 * 2 * Math.PI;\n    var var1 = Math.cos(_h_rad) * _C;\n    var var2 = Math.sin(_h_rad) * _C;\n    return [_L, var1, var2];\n  };\n  conv['CIELCH']['CIELAB'] = polar_to_scalar;\n  conv['CIELCHuv']['CIELUV'] = polar_to_scalar;\n\n  // Represents sRGB [0-1] values as [0-225] values. Errors out if value\n  // out of the range\n  var sRGB_prepare = function sRGB_prepare(tuple) {\n    tuple = tuple.map(function (n) {\n      return round(n, 3);\n    });\n    for (var i = 0; i < tuple.length; i++) {\n      var ch = tuple[i];\n      if (ch < 0 || ch > 1) {\n        throw new Error(\"Illegal sRGB value\");\n      }\n    }\n    return tuple.map(function (ch) {\n      return Math.round(ch * 255);\n    });\n  };\n\n  conv['sRGB']['hex'] = function (tuple) {\n    var hex = \"#\";\n    tuple = sRGB_prepare(tuple);\n    for (var i = 0; i < tuple.length; i++) {\n      var ch = tuple[i];\n      ch = ch.toString(16);\n      if (ch.length === 1) {\n        ch = '0' + ch;\n      }\n      hex += ch;\n    }\n    return hex;\n  };\n\n  conv['hex']['sRGB'] = function (hex) {\n    if (hex.charAt(0) === \"#\") {\n      hex = hex.substring(1, 7);\n    }\n    var r = hex.substring(0, 2);\n    var g = hex.substring(2, 4);\n    var b = hex.substring(4, 6);\n    return [r, g, b].map(function (n) {\n      return parseInt(n, 16) / 255;\n    });\n  };\n\n  var converter = function converter(from, to) {\n    // The goal of this function is to find the shortest path\n    // between `from` and `to` on this tree:\n    //\n    //         - CIELAB - CIELCH\n    //  CIEXYZ - CIELUV - CIELCHuv\n    //         - sRGB - hex\n    //         - CIExyY\n    //\n    // Topologically sorted nodes (child, parent)\n    var tree = [['CIELCH', 'CIELAB'], ['CIELCHuv', 'CIELUV'], ['hex', 'sRGB'], ['CIExyY', 'CIEXYZ'], ['CIELAB', 'CIEXYZ'], ['CIELUV', 'CIEXYZ'], ['sRGB', 'CIEXYZ']];\n    // Recursively generate path. Each recursion makes the tree\n    // smaller by elimination a leaf node. This leaf node is either\n    // irrelevant to our conversion (trivial case) or it describes\n    // an endpoint of our conversion, in which case we add a new \n    // step to the conversion and recurse.\n    var path = function path(tree, from, to) {\n      if (from === to) {\n        return function (t) {\n          return t;\n        };\n      }\n      var child = tree[0][0];\n      var parent = tree[0][1];\n      // If we start with hex (a leaf node), we know for a fact that \n      // the next node is going to be sRGB (others by analogy)\n      if (from === child) {\n        // We discovered the first step, now find the rest of the path\n        // and return their composition\n        var p = path(tree.slice(1), parent, to);\n        return function (t) {\n          return p(conv[child][parent](t));\n        };\n      }\n      // If we need to end with hex, we know for a fact that the node\n      // before it is going to be sRGB (others by analogy)\n      if (to === child) {\n        // We found the last step, now find the rest of the path and\n        // return their composition\n        var p = path(tree.slice(1), from, parent);\n        return function (t) {\n          return conv[parent][child](p(t));\n        };\n      }\n      // The current tree leaf is irrelevant to our path, ignore it and\n      // recurse\n      var p = path(tree.slice(1), from, to);\n      return p;\n    };\n    // Main conversion function\n    var func = path(tree, from, to);\n    return func;\n  };\n\n  var root = {};\n\n  // If Stylus is installed, make module.exports work as a plugin\n  try {\n    (function () {\n      var stylus = require('stylus');\n      root = function root() {\n        var spaces = Object.keys(conv).filter(function (space) {\n          return space !== 'sRGB' && space !== 'hex';\n        }).map(function (space) {\n          return space;\n        });\n        return function (style) {\n          return spaces.map(function (space) {\n            return style.define(space, function (space) {\n              return function (a, b, c) {\n                var g = void 0,\n                    r = void 0;\n                var foo = converter(space, 'sRGB');\n                var rgb = sRGB_prepare(foo([a.val, b.val, c.val]));\n                return new stylus.nodes.RGBA(rgb[0], rgb[1], rgb[2], 1);\n              };\n            }(space));\n          });\n        };\n      };\n    })();\n  } catch (error) {}\n\n  root.converter = converter;\n  root.make_color = function (space1, tuple) {\n    return {\n      as: function as(space2) {\n        var val = converter(space1, space2)(tuple);\n        return val;\n      },\n      is_displayable: function is_displayable() {\n        var val = converter(space1, 'sRGB')(tuple);\n        return within_range(val, [[0, 1], [0, 1], [0, 1]]);\n      },\n      is_visible: function is_visible() {\n        var val = converter(space1, 'CIEXYZ')(tuple);\n        return within_range(val, [[0, ref_X], [0, ref_Y], [0, ref_Z]]);\n      }\n    };\n  };\n\n  // Export to Node.js\n  if (typeof module !== 'undefined' && module !== null) {\n    module.exports = root;\n  }\n  // Export to jQuery\n  if (typeof jQuery !== 'undefined' && jQuery !== null) {\n    jQuery.colorspaces = root;\n  }\n  // Make a stylus plugin if stylus exists\n\n  function __range__(left, right, inclusive) {\n    var range = [];\n    var ascending = left < right;\n    var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n    for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n      range.push(i);\n    }\n    return range;\n  }\n  \n})();\n\n", "// Generated by Haxe 3.4.4\nvar hsluv = hsluv || {};\nhsluv.Geometry = function() { };\nhsluv.Geometry.intersectLineLine = function(a,b) {\n\tvar x = (a.intercept - b.intercept) / (b.slope - a.slope);\n\tvar y = a.slope * x + a.intercept;\n\treturn { x : x, y : y};\n};\nhsluv.Geometry.distanceFromOrigin = function(point) {\n\treturn Math.sqrt(Math.pow(point.x,2) + Math.pow(point.y,2));\n};\nhsluv.Geometry.distanceLineFromOrigin = function(line) {\n\treturn Math.abs(line.intercept) / Math.sqrt(Math.pow(line.slope,2) + 1);\n};\nhsluv.Geometry.perpendicularThroughPoint = function(line,point) {\n\tvar slope = -1 / line.slope;\n\tvar intercept = point.y - slope * point.x;\n\treturn { slope : slope, intercept : intercept};\n};\nhsluv.Geometry.angleFromOrigin = function(point) {\n\treturn Math.atan2(point.y,point.x);\n};\nhsluv.Geometry.normalizeAngle = function(angle) {\n\tvar m = 2 * Math.PI;\n\treturn (angle % m + m) % m;\n};\nhsluv.Geometry.lengthOfRayUntilIntersect = function(theta,line) {\n\treturn line.intercept / (Math.sin(theta) - line.slope * Math.cos(theta));\n};\nhsluv.Hsluv = function() { };\nhsluv.Hsluv.getBounds = function(L) {\n\tvar result = [];\n\tvar sub1 = Math.pow(L + 16,3) / 1560896;\n\tvar sub2 = sub1 > hsluv.Hsluv.epsilon ? sub1 : L / hsluv.Hsluv.kappa;\n\tvar _g = 0;\n\twhile(_g < 3) {\n\t\tvar c = _g++;\n\t\tvar m1 = hsluv.Hsluv.m[c][0];\n\t\tvar m2 = hsluv.Hsluv.m[c][1];\n\t\tvar m3 = hsluv.Hsluv.m[c][2];\n\t\tvar _g1 = 0;\n\t\twhile(_g1 < 2) {\n\t\t\tvar t = _g1++;\n\t\t\tvar top1 = (284517 * m1 - 94839 * m3) * sub2;\n\t\t\tvar top2 = (838422 * m3 + 769860 * m2 + 731718 * m1) * L * sub2 - 769860 * t * L;\n\t\t\tvar bottom = (632260 * m3 - 126452 * m2) * sub2 + 126452 * t;\n\t\t\tresult.push({ slope : top1 / bottom, intercept : top2 / bottom});\n\t\t}\n\t}\n\treturn result;\n};\nhsluv.Hsluv.maxSafeChromaForL = function(L) {\n\tvar bounds = hsluv.Hsluv.getBounds(L);\n\tvar min = Infinity;\n\tvar _g = 0;\n\twhile(_g < bounds.length) {\n\t\tvar bound = bounds[_g];\n\t\t++_g;\n\t\tvar length = hsluv.Geometry.distanceLineFromOrigin(bound);\n\t\tmin = Math.min(min,length);\n\t}\n\treturn min;\n};\nhsluv.Hsluv.maxChromaForLH = function(L,H) {\n\tvar hrad = H / 360 * Math.PI * 2;\n\tvar bounds = hsluv.Hsluv.getBounds(L);\n\tvar min = Infinity;\n\tvar _g = 0;\n\twhile(_g < bounds.length) {\n\t\tvar bound = bounds[_g];\n\t\t++_g;\n\t\tvar length = hsluv.Geometry.lengthOfRayUntilIntersect(hrad,bound);\n\t\tif(length >= 0) {\n\t\t\tmin = Math.min(min,length);\n\t\t}\n\t}\n\treturn min;\n};\nhsluv.Hsluv.dotProduct = function(a,b) {\n\tvar sum = 0;\n\tvar _g1 = 0;\n\tvar _g = a.length;\n\twhile(_g1 < _g) {\n\t\tvar i = _g1++;\n\t\tsum += a[i] * b[i];\n\t}\n\treturn sum;\n};\nhsluv.Hsluv.fromLinear = function(c) {\n\tif(c <= 0.0031308) {\n\t\treturn 12.92 * c;\n\t} else {\n\t\treturn 1.055 * Math.pow(c,0.416666666666666685) - 0.055;\n\t}\n};\nhsluv.Hsluv.toLinear = function(c) {\n\tif(c > 0.04045) {\n\t\treturn Math.pow((c + 0.055) / 1.055,2.4);\n\t} else {\n\t\treturn c / 12.92;\n\t}\n};\nhsluv.Hsluv.xyzToRgb = function(tuple) {\n\treturn [hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[0],tuple)),hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[1],tuple)),hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[2],tuple))];\n};\nhsluv.Hsluv.rgbToXyz = function(tuple) {\n\tvar rgbl = [hsluv.Hsluv.toLinear(tuple[0]),hsluv.Hsluv.toLinear(tuple[1]),hsluv.Hsluv.toLinear(tuple[2])];\n\treturn [hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[0],rgbl),hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[1],rgbl),hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[2],rgbl)];\n};\nhsluv.Hsluv.yToL = function(Y) {\n\tif(Y <= hsluv.Hsluv.epsilon) {\n\t\treturn Y / hsluv.Hsluv.refY * hsluv.Hsluv.kappa;\n\t} else {\n\t\treturn 116 * Math.pow(Y / hsluv.Hsluv.refY,0.333333333333333315) - 16;\n\t}\n};\nhsluv.Hsluv.lToY = function(L) {\n\tif(L <= 8) {\n\t\treturn hsluv.Hsluv.refY * L / hsluv.Hsluv.kappa;\n\t} else {\n\t\treturn hsluv.Hsluv.refY * Math.pow((L + 16) / 116,3);\n\t}\n};\nhsluv.Hsluv.xyzToLuv = function(tuple) {\n\tvar X = tuple[0];\n\tvar Y = tuple[1];\n\tvar Z = tuple[2];\n\tvar divider = X + 15 * Y + 3 * Z;\n\tvar varU = 4 * X;\n\tvar varV = 9 * Y;\n\tif(divider != 0) {\n\t\tvarU /= divider;\n\t\tvarV /= divider;\n\t} else {\n\t\tvarU = NaN;\n\t\tvarV = NaN;\n\t}\n\tvar L = hsluv.Hsluv.yToL(Y);\n\tif(L == 0) {\n\t\treturn [0,0,0];\n\t}\n\tvar U = 13 * L * (varU - hsluv.Hsluv.refU);\n\tvar V = 13 * L * (varV - hsluv.Hsluv.refV);\n\treturn [L,U,V];\n};\nhsluv.Hsluv.luvToXyz = function(tuple) {\n\tvar L = tuple[0];\n\tvar U = tuple[1];\n\tvar V = tuple[2];\n\tif(L == 0) {\n\t\treturn [0,0,0];\n\t}\n\tvar varU = U / (13 * L) + hsluv.Hsluv.refU;\n\tvar varV = V / (13 * L) + hsluv.Hsluv.refV;\n\tvar Y = hsluv.Hsluv.lToY(L);\n\tvar X = 0 - 9 * Y * varU / ((varU - 4) * varV - varU * varV);\n\tvar Z = (9 * Y - 15 * varV * Y - varV * X) / (3 * varV);\n\treturn [X,Y,Z];\n};\nhsluv.Hsluv.luvToLch = function(tuple) {\n\tvar L = tuple[0];\n\tvar U = tuple[1];\n\tvar V = tuple[2];\n\tvar C = Math.sqrt(U * U + V * V);\n\tvar H;\n\tif(C < 0.00000001) {\n\t\tH = 0;\n\t} else {\n\t\tvar Hrad = Math.atan2(V,U);\n\t\tH = Hrad * 180.0 / Math.PI;\n\t\tif(H < 0) {\n\t\t\tH = 360 + H;\n\t\t}\n\t}\n\treturn [L,C,H];\n};\nhsluv.Hsluv.lchToLuv = function(tuple) {\n\tvar L = tuple[0];\n\tvar C = tuple[1];\n\tvar H = tuple[2];\n\tvar Hrad = H / 360.0 * 2 * Math.PI;\n\tvar U = Math.cos(Hrad) * C;\n\tvar V = Math.sin(Hrad) * C;\n\treturn [L,U,V];\n};\nhsluv.Hsluv.hsluvToLch = function(tuple) {\n\tvar H = tuple[0];\n\tvar S = tuple[1];\n\tvar L = tuple[2];\n\tif(L > 99.9999999) {\n\t\treturn [100,0,H];\n\t}\n\tif(L < 0.00000001) {\n\t\treturn [0,0,H];\n\t}\n\tvar max = hsluv.Hsluv.maxChromaForLH(L,H);\n\tvar C = max / 100 * S;\n\treturn [L,C,H];\n};\nhsluv.Hsluv.lchToHsluv = function(tuple) {\n\tvar L = tuple[0];\n\tvar C = tuple[1];\n\tvar H = tuple[2];\n\tif(L > 99.9999999) {\n\t\treturn [H,0,100];\n\t}\n\tif(L < 0.00000001) {\n\t\treturn [H,0,0];\n\t}\n\tvar max = hsluv.Hsluv.maxChromaForLH(L,H);\n\tvar S = C / max * 100;\n\treturn [H,S,L];\n};\nhsluv.Hsluv.hpluvToLch = function(tuple) {\n\tvar H = tuple[0];\n\tvar S = tuple[1];\n\tvar L = tuple[2];\n\tif(L > 99.9999999) {\n\t\treturn [100,0,H];\n\t}\n\tif(L < 0.00000001) {\n\t\treturn [0,0,H];\n\t}\n\tvar max = hsluv.Hsluv.maxSafeChromaForL(L);\n\tvar C = max / 100 * S;\n\treturn [L,C,H];\n};\nhsluv.Hsluv.lchToHpluv = function(tuple) {\n\tvar L = tuple[0];\n\tvar C = tuple[1];\n\tvar H = tuple[2];\n\tif(L > 99.9999999) {\n\t\treturn [H,0,100];\n\t}\n\tif(L < 0.00000001) {\n\t\treturn [H,0,0];\n\t}\n\tvar max = hsluv.Hsluv.maxSafeChromaForL(L);\n\tvar S = C / max * 100;\n\treturn [H,S,L];\n};\nhsluv.Hsluv.rgbToHex = function(tuple) {\n\tvar h = \"#\";\n\tvar _g = 0;\n\twhile(_g < 3) {\n\t\tvar i = _g++;\n\t\tvar chan = tuple[i];\n\t\tvar c = Math.round(chan * 255);\n\t\tvar digit2 = c % 16;\n\t\tvar digit1 = (c - digit2) / 16 | 0;\n\t\th += hsluv.Hsluv.hexChars.charAt(digit1) + hsluv.Hsluv.hexChars.charAt(digit2);\n\t}\n\treturn h;\n};\nhsluv.Hsluv.hexToRgb = function(hex) {\n\thex = hex.toLowerCase();\n\tvar ret = [];\n\tvar _g = 0;\n\twhile(_g < 3) {\n\t\tvar i = _g++;\n\t\tvar digit1 = hsluv.Hsluv.hexChars.indexOf(hex.charAt(i * 2 + 1));\n\t\tvar digit2 = hsluv.Hsluv.hexChars.indexOf(hex.charAt(i * 2 + 2));\n\t\tvar n = digit1 * 16 + digit2;\n\t\tret.push(n / 255.0);\n\t}\n\treturn ret;\n};\nhsluv.Hsluv.lchToRgb = function(tuple) {\n\treturn hsluv.Hsluv.xyzToRgb(hsluv.Hsluv.luvToXyz(hsluv.Hsluv.lchToLuv(tuple)));\n};\nhsluv.Hsluv.rgbToLch = function(tuple) {\n\treturn hsluv.Hsluv.luvToLch(hsluv.Hsluv.xyzToLuv(hsluv.Hsluv.rgbToXyz(tuple)));\n};\nhsluv.Hsluv.hsluvToRgb = function(tuple) {\n\treturn hsluv.Hsluv.lchToRgb(hsluv.Hsluv.hsluvToLch(tuple));\n};\nhsluv.Hsluv.rgbToHsluv = function(tuple) {\n\treturn hsluv.Hsluv.lchToHsluv(hsluv.Hsluv.rgbToLch(tuple));\n};\nhsluv.Hsluv.hpluvToRgb = function(tuple) {\n\treturn hsluv.Hsluv.lchToRgb(hsluv.Hsluv.hpluvToLch(tuple));\n};\nhsluv.Hsluv.rgbToHpluv = function(tuple) {\n\treturn hsluv.Hsluv.lchToHpluv(hsluv.Hsluv.rgbToLch(tuple));\n};\nhsluv.Hsluv.hsluvToHex = function(tuple) {\n\treturn hsluv.Hsluv.rgbToHex(hsluv.Hsluv.hsluvToRgb(tuple));\n};\nhsluv.Hsluv.hpluvToHex = function(tuple) {\n\treturn hsluv.Hsluv.rgbToHex(hsluv.Hsluv.hpluvToRgb(tuple));\n};\nhsluv.Hsluv.hexToHsluv = function(s) {\n\treturn hsluv.Hsluv.rgbToHsluv(hsluv.Hsluv.hexToRgb(s));\n};\nhsluv.Hsluv.hexToHpluv = function(s) {\n\treturn hsluv.Hsluv.rgbToHpluv(hsluv.Hsluv.hexToRgb(s));\n};\nhsluv.Hsluv.m = [[3.240969941904521,-1.537383177570093,-0.498610760293],[-0.96924363628087,1.87596750150772,0.041555057407175],[0.055630079696993,-0.20397695888897,1.056971514242878]];\nhsluv.Hsluv.minv = [[0.41239079926595,0.35758433938387,0.18048078840183],[0.21263900587151,0.71516867876775,0.072192315360733],[0.019330818715591,0.11919477979462,0.95053215224966]];\nhsluv.Hsluv.refY = 1.0;\nhsluv.Hsluv.refU = 0.19783000664283;\nhsluv.Hsluv.refV = 0.46831999493879;\nhsluv.Hsluv.kappa = 903.2962962;\nhsluv.Hsluv.epsilon = 0.0088564516;\nhsluv.Hsluv.hexChars = \"0123456789abcdef\";\nvar root = {\n    \"hsluvToRgb\": hsluv.Hsluv.hsluvToRgb,\n    \"rgbToHsluv\": hsluv.Hsluv.rgbToHsluv,\n    \"hpluvToRgb\": hsluv.Hsluv.hpluvToRgb,\n    \"rgbToHpluv\": hsluv.Hsluv.rgbToHpluv,\n    \"hsluvToHex\": hsluv.Hsluv.hsluvToHex,\n    \"hexToHsluv\": hsluv.Hsluv.hexToHsluv,\n    \"hpluvToHex\": hsluv.Hsluv.hpluvToHex,\n    \"hexToHpluv\": hsluv.Hsluv.hexToHpluv,\n    \"lchToHpluv\": hsluv.Hsluv.lchToHpluv,\n    \"hpluvToLch\": hsluv.Hsluv.hpluvToLch,\n    \"lchToHsluv\": hsluv.Hsluv.lchToHsluv,\n    \"hsluvToLch\": hsluv.Hsluv.hsluvToLch,\n    \"lchToLuv\": hsluv.Hsluv.lchToLuv,\n    \"luvToLch\": hsluv.Hsluv.luvToLch,\n    \"xyzToLuv\": hsluv.Hsluv.xyzToLuv,\n    \"luvToXyz\": hsluv.Hsluv.luvToXyz,\n    \"xyzToRgb\": hsluv.Hsluv.xyzToRgb,\n    \"rgbToXyz\": hsluv.Hsluv.rgbToXyz,\n    \"lchToRgb\": hsluv.Hsluv.lchToRgb,\n    \"rgbToLch\": hsluv.Hsluv.rgbToLch\n};\n\nmodule.exports = root;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Bezier = void 0;\n// math-inlining.\nconst {\n  abs,\n  cos,\n  sin,\n  acos,\n  atan2,\n  sqrt,\n  pow\n} = Math; // cube root function yielding real roots\n\nfunction crt(v) {\n  return v < 0 ? -pow(-v, 1 / 3) : pow(v, 1 / 3);\n} // trig constants\n\n\nconst pi = Math.PI,\n      tau = 2 * pi,\n      quart = pi / 2,\n      // float precision significant decimal\nepsilon = 0.000001,\n      // extremas used in bbox calculation and similar algorithms\nnMax = Number.MAX_SAFE_INTEGER || 9007199254740991,\n      nMin = Number.MIN_SAFE_INTEGER || -9007199254740991,\n      // a zero coordinate, which is surprisingly useful\nZERO = {\n  x: 0,\n  y: 0,\n  z: 0\n}; // Bezier utility functions\n\nconst utils = {\n  // Legendre-Gauss abscissae with n=24 (x_i values, defined at i=n as the roots of the nth order Legendre polynomial Pn(x))\n  Tvalues: [-0.0640568928626056260850430826247450385909, 0.0640568928626056260850430826247450385909, -0.1911188674736163091586398207570696318404, 0.1911188674736163091586398207570696318404, -0.3150426796961633743867932913198102407864, 0.3150426796961633743867932913198102407864, -0.4337935076260451384870842319133497124524, 0.4337935076260451384870842319133497124524, -0.5454214713888395356583756172183723700107, 0.5454214713888395356583756172183723700107, -0.6480936519369755692524957869107476266696, 0.6480936519369755692524957869107476266696, -0.7401241915785543642438281030999784255232, 0.7401241915785543642438281030999784255232, -0.8200019859739029219539498726697452080761, 0.8200019859739029219539498726697452080761, -0.8864155270044010342131543419821967550873, 0.8864155270044010342131543419821967550873, -0.9382745520027327585236490017087214496548, 0.9382745520027327585236490017087214496548, -0.9747285559713094981983919930081690617411, 0.9747285559713094981983919930081690617411, -0.9951872199970213601799974097007368118745, 0.9951872199970213601799974097007368118745],\n  // Legendre-Gauss weights with n=24 (w_i values, defined by a function linked to in the Bezier primer article)\n  Cvalues: [0.1279381953467521569740561652246953718517, 0.1279381953467521569740561652246953718517, 0.1258374563468282961213753825111836887264, 0.1258374563468282961213753825111836887264, 0.121670472927803391204463153476262425607, 0.121670472927803391204463153476262425607, 0.1155056680537256013533444839067835598622, 0.1155056680537256013533444839067835598622, 0.1074442701159656347825773424466062227946, 0.1074442701159656347825773424466062227946, 0.0976186521041138882698806644642471544279, 0.0976186521041138882698806644642471544279, 0.086190161531953275917185202983742667185, 0.086190161531953275917185202983742667185, 0.0733464814110803057340336152531165181193, 0.0733464814110803057340336152531165181193, 0.0592985849154367807463677585001085845412, 0.0592985849154367807463677585001085845412, 0.0442774388174198061686027482113382288593, 0.0442774388174198061686027482113382288593, 0.0285313886289336631813078159518782864491, 0.0285313886289336631813078159518782864491, 0.0123412297999871995468056670700372915759, 0.0123412297999871995468056670700372915759],\n  arcfn: function (t, derivativeFn) {\n    const d = derivativeFn(t);\n    let l = d.x * d.x + d.y * d.y;\n\n    if (typeof d.z !== \"undefined\") {\n      l += d.z * d.z;\n    }\n\n    return sqrt(l);\n  },\n  compute: function (t, points, _3d) {\n    // shortcuts\n    if (t === 0) {\n      points[0].t = 0;\n      return points[0];\n    }\n\n    const order = points.length - 1;\n\n    if (t === 1) {\n      points[order].t = 1;\n      return points[order];\n    }\n\n    const mt = 1 - t;\n    let p = points; // constant?\n\n    if (order === 0) {\n      points[0].t = t;\n      return points[0];\n    } // linear?\n\n\n    if (order === 1) {\n      const ret = {\n        x: mt * p[0].x + t * p[1].x,\n        y: mt * p[0].y + t * p[1].y,\n        t: t\n      };\n\n      if (_3d) {\n        ret.z = mt * p[0].z + t * p[1].z;\n      }\n\n      return ret;\n    } // quadratic/cubic curve?\n\n\n    if (order < 4) {\n      let mt2 = mt * mt,\n          t2 = t * t,\n          a,\n          b,\n          c,\n          d = 0;\n\n      if (order === 2) {\n        p = [p[0], p[1], p[2], ZERO];\n        a = mt2;\n        b = mt * t * 2;\n        c = t2;\n      } else if (order === 3) {\n        a = mt2 * mt;\n        b = mt2 * t * 3;\n        c = mt * t2 * 3;\n        d = t * t2;\n      }\n\n      const ret = {\n        x: a * p[0].x + b * p[1].x + c * p[2].x + d * p[3].x,\n        y: a * p[0].y + b * p[1].y + c * p[2].y + d * p[3].y,\n        t: t\n      };\n\n      if (_3d) {\n        ret.z = a * p[0].z + b * p[1].z + c * p[2].z + d * p[3].z;\n      }\n\n      return ret;\n    } // higher order curves: use de Casteljau's computation\n\n\n    const dCpts = JSON.parse(JSON.stringify(points));\n\n    while (dCpts.length > 1) {\n      for (let i = 0; i < dCpts.length - 1; i++) {\n        dCpts[i] = {\n          x: dCpts[i].x + (dCpts[i + 1].x - dCpts[i].x) * t,\n          y: dCpts[i].y + (dCpts[i + 1].y - dCpts[i].y) * t\n        };\n\n        if (typeof dCpts[i].z !== \"undefined\") {\n          dCpts[i] = dCpts[i].z + (dCpts[i + 1].z - dCpts[i].z) * t;\n        }\n      }\n\n      dCpts.splice(dCpts.length - 1, 1);\n    }\n\n    dCpts[0].t = t;\n    return dCpts[0];\n  },\n  computeWithRatios: function (t, points, ratios, _3d) {\n    const mt = 1 - t,\n          r = ratios,\n          p = points;\n    let f1 = r[0],\n        f2 = r[1],\n        f3 = r[2],\n        f4 = r[3],\n        d; // spec for linear\n\n    f1 *= mt;\n    f2 *= t;\n\n    if (p.length === 2) {\n      d = f1 + f2;\n      return {\n        x: (f1 * p[0].x + f2 * p[1].x) / d,\n        y: (f1 * p[0].y + f2 * p[1].y) / d,\n        z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z) / d,\n        t: t\n      };\n    } // upgrade to quadratic\n\n\n    f1 *= mt;\n    f2 *= 2 * mt;\n    f3 *= t * t;\n\n    if (p.length === 3) {\n      d = f1 + f2 + f3;\n      return {\n        x: (f1 * p[0].x + f2 * p[1].x + f3 * p[2].x) / d,\n        y: (f1 * p[0].y + f2 * p[1].y + f3 * p[2].y) / d,\n        z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z + f3 * p[2].z) / d,\n        t: t\n      };\n    } // upgrade to cubic\n\n\n    f1 *= mt;\n    f2 *= 1.5 * mt;\n    f3 *= 3 * mt;\n    f4 *= t * t * t;\n\n    if (p.length === 4) {\n      d = f1 + f2 + f3 + f4;\n      return {\n        x: (f1 * p[0].x + f2 * p[1].x + f3 * p[2].x + f4 * p[3].x) / d,\n        y: (f1 * p[0].y + f2 * p[1].y + f3 * p[2].y + f4 * p[3].y) / d,\n        z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z + f3 * p[2].z + f4 * p[3].z) / d,\n        t: t\n      };\n    }\n  },\n  derive: function (points, _3d) {\n    const dpoints = [];\n\n    for (let p = points, d = p.length, c = d - 1; d > 1; d--, c--) {\n      const list = [];\n\n      for (let j = 0, dpt; j < c; j++) {\n        dpt = {\n          x: c * (p[j + 1].x - p[j].x),\n          y: c * (p[j + 1].y - p[j].y)\n        };\n\n        if (_3d) {\n          dpt.z = c * (p[j + 1].z - p[j].z);\n        }\n\n        list.push(dpt);\n      }\n\n      dpoints.push(list);\n      p = list;\n    }\n\n    return dpoints;\n  },\n  between: function (v, m, M) {\n    return m <= v && v <= M || utils.approximately(v, m) || utils.approximately(v, M);\n  },\n  approximately: function (a, b, precision) {\n    return abs(a - b) <= (precision || epsilon);\n  },\n  length: function (derivativeFn) {\n    const z = 0.5,\n          len = utils.Tvalues.length;\n    let sum = 0;\n\n    for (let i = 0, t; i < len; i++) {\n      t = z * utils.Tvalues[i] + z;\n      sum += utils.Cvalues[i] * utils.arcfn(t, derivativeFn);\n    }\n\n    return z * sum;\n  },\n  map: function (v, ds, de, ts, te) {\n    const d1 = de - ds,\n          d2 = te - ts,\n          v2 = v - ds,\n          r = v2 / d1;\n    return ts + d2 * r;\n  },\n  lerp: function (r, v1, v2) {\n    const ret = {\n      x: v1.x + r * (v2.x - v1.x),\n      y: v1.y + r * (v2.y - v1.y)\n    };\n\n    if (!!v1.z && !!v2.z) {\n      ret.z = v1.z + r * (v2.z - v1.z);\n    }\n\n    return ret;\n  },\n  pointToString: function (p) {\n    let s = p.x + \"/\" + p.y;\n\n    if (typeof p.z !== \"undefined\") {\n      s += \"/\" + p.z;\n    }\n\n    return s;\n  },\n  pointsToString: function (points) {\n    return \"[\" + points.map(utils.pointToString).join(\", \") + \"]\";\n  },\n  copy: function (obj) {\n    return JSON.parse(JSON.stringify(obj));\n  },\n  angle: function (o, v1, v2) {\n    const dx1 = v1.x - o.x,\n          dy1 = v1.y - o.y,\n          dx2 = v2.x - o.x,\n          dy2 = v2.y - o.y,\n          cross = dx1 * dy2 - dy1 * dx2,\n          dot = dx1 * dx2 + dy1 * dy2;\n    return atan2(cross, dot);\n  },\n  // round as string, to avoid rounding errors\n  round: function (v, d) {\n    const s = \"\" + v;\n    const pos = s.indexOf(\".\");\n    return parseFloat(s.substring(0, pos + 1 + d));\n  },\n  dist: function (p1, p2) {\n    const dx = p1.x - p2.x,\n          dy = p1.y - p2.y;\n    return sqrt(dx * dx + dy * dy);\n  },\n  closest: function (LUT, point) {\n    let mdist = pow(2, 63),\n        mpos,\n        d;\n    LUT.forEach(function (p, idx) {\n      d = utils.dist(point, p);\n\n      if (d < mdist) {\n        mdist = d;\n        mpos = idx;\n      }\n    });\n    return {\n      mdist: mdist,\n      mpos: mpos\n    };\n  },\n  abcratio: function (t, n) {\n    // see ratio(t) note on http://pomax.github.io/bezierinfo/#abc\n    if (n !== 2 && n !== 3) {\n      return false;\n    }\n\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    } else if (t === 0 || t === 1) {\n      return t;\n    }\n\n    const bottom = pow(t, n) + pow(1 - t, n),\n          top = bottom - 1;\n    return abs(top / bottom);\n  },\n  projectionratio: function (t, n) {\n    // see u(t) note on http://pomax.github.io/bezierinfo/#abc\n    if (n !== 2 && n !== 3) {\n      return false;\n    }\n\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    } else if (t === 0 || t === 1) {\n      return t;\n    }\n\n    const top = pow(1 - t, n),\n          bottom = pow(t, n) + top;\n    return top / bottom;\n  },\n  lli8: function (x1, y1, x2, y2, x3, y3, x4, y4) {\n    const nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n          ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n          d = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n    if (d == 0) {\n      return false;\n    }\n\n    return {\n      x: nx / d,\n      y: ny / d\n    };\n  },\n  lli4: function (p1, p2, p3, p4) {\n    const x1 = p1.x,\n          y1 = p1.y,\n          x2 = p2.x,\n          y2 = p2.y,\n          x3 = p3.x,\n          y3 = p3.y,\n          x4 = p4.x,\n          y4 = p4.y;\n    return utils.lli8(x1, y1, x2, y2, x3, y3, x4, y4);\n  },\n  lli: function (v1, v2) {\n    return utils.lli4(v1, v1.c, v2, v2.c);\n  },\n  makeline: function (p1, p2) {\n    const x1 = p1.x,\n          y1 = p1.y,\n          x2 = p2.x,\n          y2 = p2.y,\n          dx = (x2 - x1) / 3,\n          dy = (y2 - y1) / 3;\n    return new Bezier(x1, y1, x1 + dx, y1 + dy, x1 + 2 * dx, y1 + 2 * dy, x2, y2);\n  },\n  findbbox: function (sections) {\n    let mx = nMax,\n        my = nMax,\n        MX = nMin,\n        MY = nMin;\n    sections.forEach(function (s) {\n      const bbox = s.bbox();\n      if (mx > bbox.x.min) mx = bbox.x.min;\n      if (my > bbox.y.min) my = bbox.y.min;\n      if (MX < bbox.x.max) MX = bbox.x.max;\n      if (MY < bbox.y.max) MY = bbox.y.max;\n    });\n    return {\n      x: {\n        min: mx,\n        mid: (mx + MX) / 2,\n        max: MX,\n        size: MX - mx\n      },\n      y: {\n        min: my,\n        mid: (my + MY) / 2,\n        max: MY,\n        size: MY - my\n      }\n    };\n  },\n  shapeintersections: function (s1, bbox1, s2, bbox2, curveIntersectionThreshold) {\n    if (!utils.bboxoverlap(bbox1, bbox2)) return [];\n    const intersections = [];\n    const a1 = [s1.startcap, s1.forward, s1.back, s1.endcap];\n    const a2 = [s2.startcap, s2.forward, s2.back, s2.endcap];\n    a1.forEach(function (l1) {\n      if (l1.virtual) return;\n      a2.forEach(function (l2) {\n        if (l2.virtual) return;\n        const iss = l1.intersects(l2, curveIntersectionThreshold);\n\n        if (iss.length > 0) {\n          iss.c1 = l1;\n          iss.c2 = l2;\n          iss.s1 = s1;\n          iss.s2 = s2;\n          intersections.push(iss);\n        }\n      });\n    });\n    return intersections;\n  },\n  makeshape: function (forward, back, curveIntersectionThreshold) {\n    const bpl = back.points.length;\n    const fpl = forward.points.length;\n    const start = utils.makeline(back.points[bpl - 1], forward.points[0]);\n    const end = utils.makeline(forward.points[fpl - 1], back.points[0]);\n    const shape = {\n      startcap: start,\n      forward: forward,\n      back: back,\n      endcap: end,\n      bbox: utils.findbbox([start, forward, back, end])\n    };\n\n    shape.intersections = function (s2) {\n      return utils.shapeintersections(shape, shape.bbox, s2, s2.bbox, curveIntersectionThreshold);\n    };\n\n    return shape;\n  },\n  getminmax: function (curve, d, list) {\n    if (!list) return {\n      min: 0,\n      max: 0\n    };\n    let min = nMax,\n        max = nMin,\n        t,\n        c;\n\n    if (list.indexOf(0) === -1) {\n      list = [0].concat(list);\n    }\n\n    if (list.indexOf(1) === -1) {\n      list.push(1);\n    }\n\n    for (let i = 0, len = list.length; i < len; i++) {\n      t = list[i];\n      c = curve.get(t);\n\n      if (c[d] < min) {\n        min = c[d];\n      }\n\n      if (c[d] > max) {\n        max = c[d];\n      }\n    }\n\n    return {\n      min: min,\n      mid: (min + max) / 2,\n      max: max,\n      size: max - min\n    };\n  },\n  align: function (points, line) {\n    const tx = line.p1.x,\n          ty = line.p1.y,\n          a = -atan2(line.p2.y - ty, line.p2.x - tx),\n          d = function (v) {\n      return {\n        x: (v.x - tx) * cos(a) - (v.y - ty) * sin(a),\n        y: (v.x - tx) * sin(a) + (v.y - ty) * cos(a)\n      };\n    };\n\n    return points.map(d);\n  },\n  roots: function (points, line) {\n    line = line || {\n      p1: {\n        x: 0,\n        y: 0\n      },\n      p2: {\n        x: 1,\n        y: 0\n      }\n    };\n    const order = points.length - 1;\n    const aligned = utils.align(points, line);\n\n    const reduce = function (t) {\n      return 0 <= t && t <= 1;\n    };\n\n    if (order === 2) {\n      const a = aligned[0].y,\n            b = aligned[1].y,\n            c = aligned[2].y,\n            d = a - 2 * b + c;\n\n      if (d !== 0) {\n        const m1 = -sqrt(b * b - a * c),\n              m2 = -a + b,\n              v1 = -(m1 + m2) / d,\n              v2 = -(-m1 + m2) / d;\n        return [v1, v2].filter(reduce);\n      } else if (b !== c && d === 0) {\n        return [(2 * b - c) / (2 * b - 2 * c)].filter(reduce);\n      }\n\n      return [];\n    } // see http://www.trans4mind.com/personal_development/mathematics/polynomials/cubicAlgebra.htm\n\n\n    const pa = aligned[0].y,\n          pb = aligned[1].y,\n          pc = aligned[2].y,\n          pd = aligned[3].y;\n    let d = -pa + 3 * pb - 3 * pc + pd,\n        a = 3 * pa - 6 * pb + 3 * pc,\n        b = -3 * pa + 3 * pb,\n        c = pa;\n\n    if (utils.approximately(d, 0)) {\n      // this is not a cubic curve.\n      if (utils.approximately(a, 0)) {\n        // in fact, this is not a quadratic curve either.\n        if (utils.approximately(b, 0)) {\n          // in fact in fact, there are no solutions.\n          return [];\n        } // linear solution:\n\n\n        return [-c / b].filter(reduce);\n      } // quadratic solution:\n\n\n      const q = sqrt(b * b - 4 * a * c),\n            a2 = 2 * a;\n      return [(q - b) / a2, (-b - q) / a2].filter(reduce);\n    } // at this point, we know we need a cubic solution:\n\n\n    a /= d;\n    b /= d;\n    c /= d;\n    const p = (3 * b - a * a) / 3,\n          p3 = p / 3,\n          q = (2 * a * a * a - 9 * a * b + 27 * c) / 27,\n          q2 = q / 2,\n          discriminant = q2 * q2 + p3 * p3 * p3;\n    let u1, v1, x1, x2, x3;\n\n    if (discriminant < 0) {\n      const mp3 = -p / 3,\n            mp33 = mp3 * mp3 * mp3,\n            r = sqrt(mp33),\n            t = -q / (2 * r),\n            cosphi = t < -1 ? -1 : t > 1 ? 1 : t,\n            phi = acos(cosphi),\n            crtr = crt(r),\n            t1 = 2 * crtr;\n      x1 = t1 * cos(phi / 3) - a / 3;\n      x2 = t1 * cos((phi + tau) / 3) - a / 3;\n      x3 = t1 * cos((phi + 2 * tau) / 3) - a / 3;\n      return [x1, x2, x3].filter(reduce);\n    } else if (discriminant === 0) {\n      u1 = q2 < 0 ? crt(-q2) : -crt(q2);\n      x1 = 2 * u1 - a / 3;\n      x2 = -u1 - a / 3;\n      return [x1, x2].filter(reduce);\n    } else {\n      const sd = sqrt(discriminant);\n      u1 = crt(-q2 + sd);\n      v1 = crt(q2 + sd);\n      return [u1 - v1 - a / 3].filter(reduce);\n    }\n  },\n  droots: function (p) {\n    // quadratic roots are easy\n    if (p.length === 3) {\n      const a = p[0],\n            b = p[1],\n            c = p[2],\n            d = a - 2 * b + c;\n\n      if (d !== 0) {\n        const m1 = -sqrt(b * b - a * c),\n              m2 = -a + b,\n              v1 = -(m1 + m2) / d,\n              v2 = -(-m1 + m2) / d;\n        return [v1, v2];\n      } else if (b !== c && d === 0) {\n        return [(2 * b - c) / (2 * (b - c))];\n      }\n\n      return [];\n    } // linear roots are even easier\n\n\n    if (p.length === 2) {\n      const a = p[0],\n            b = p[1];\n\n      if (a !== b) {\n        return [a / (a - b)];\n      }\n\n      return [];\n    }\n\n    return [];\n  },\n  curvature: function (t, d1, d2, _3d, kOnly) {\n    let num,\n        dnm,\n        adk,\n        dk,\n        k = 0,\n        r = 0; //\n    // We're using the following formula for curvature:\n    //\n    //              x'y\" - y'x\"\n    //   k(t) = ------------------\n    //           (x'\u00B2 + y'\u00B2)^(3/2)\n    //\n    // from https://en.wikipedia.org/wiki/Radius_of_curvature#Definition\n    //\n    // With it corresponding 3D counterpart:\n    //\n    //          sqrt( (y'z\" - y\"z')\u00B2 + (z'x\" - z\"x')\u00B2 + (x'y\" - x\"y')\u00B2)\n    //   k(t) = -------------------------------------------------------\n    //                     (x'\u00B2 + y'\u00B2 + z'\u00B2)^(3/2)\n    //\n\n    const d = utils.compute(t, d1);\n    const dd = utils.compute(t, d2);\n    const qdsum = d.x * d.x + d.y * d.y;\n\n    if (_3d) {\n      num = sqrt(pow(d.y * dd.z - dd.y * d.z, 2) + pow(d.z * dd.x - dd.z * d.x, 2) + pow(d.x * dd.y - dd.x * d.y, 2));\n      dnm = pow(qdsum + d.z * d.z, 3 / 2);\n    } else {\n      num = d.x * dd.y - d.y * dd.x;\n      dnm = pow(qdsum, 3 / 2);\n    }\n\n    if (num === 0 || dnm === 0) {\n      return {\n        k: 0,\n        r: 0\n      };\n    }\n\n    k = num / dnm;\n    r = dnm / num; // We're also computing the derivative of kappa, because\n    // there is value in knowing the rate of change for the\n    // curvature along the curve. And we're just going to\n    // ballpark it based on an epsilon.\n\n    if (!kOnly) {\n      // compute k'(t) based on the interval before, and after it,\n      // to at least try to not introduce forward/backward pass bias.\n      const pk = utils.curvature(t - 0.001, d1, d2, _3d, true).k;\n      const nk = utils.curvature(t + 0.001, d1, d2, _3d, true).k;\n      dk = (nk - k + (k - pk)) / 2;\n      adk = (abs(nk - k) + abs(k - pk)) / 2;\n    }\n\n    return {\n      k: k,\n      r: r,\n      dk: dk,\n      adk: adk\n    };\n  },\n  inflections: function (points) {\n    if (points.length < 4) return []; // FIXME: TODO: add in inflection abstraction for quartic+ curves?\n\n    const p = utils.align(points, {\n      p1: points[0],\n      p2: points.slice(-1)[0]\n    }),\n          a = p[2].x * p[1].y,\n          b = p[3].x * p[1].y,\n          c = p[1].x * p[2].y,\n          d = p[3].x * p[2].y,\n          v1 = 18 * (-3 * a + 2 * b + 3 * c - d),\n          v2 = 18 * (3 * a - b - 3 * c),\n          v3 = 18 * (c - a);\n\n    if (utils.approximately(v1, 0)) {\n      if (!utils.approximately(v2, 0)) {\n        let t = -v3 / v2;\n        if (0 <= t && t <= 1) return [t];\n      }\n\n      return [];\n    }\n\n    const trm = v2 * v2 - 4 * v1 * v3,\n          sq = Math.sqrt(trm),\n          d2 = 2 * v1;\n    if (utils.approximately(d2, 0)) return [];\n    return [(sq - v2) / d2, -(v2 + sq) / d2].filter(function (r) {\n      return 0 <= r && r <= 1;\n    });\n  },\n  bboxoverlap: function (b1, b2) {\n    const dims = [\"x\", \"y\"],\n          len = dims.length;\n\n    for (let i = 0, dim, l, t, d; i < len; i++) {\n      dim = dims[i];\n      l = b1[dim].mid;\n      t = b2[dim].mid;\n      d = (b1[dim].size + b2[dim].size) / 2;\n      if (abs(l - t) >= d) return false;\n    }\n\n    return true;\n  },\n  expandbox: function (bbox, _bbox) {\n    if (_bbox.x.min < bbox.x.min) {\n      bbox.x.min = _bbox.x.min;\n    }\n\n    if (_bbox.y.min < bbox.y.min) {\n      bbox.y.min = _bbox.y.min;\n    }\n\n    if (_bbox.z && _bbox.z.min < bbox.z.min) {\n      bbox.z.min = _bbox.z.min;\n    }\n\n    if (_bbox.x.max > bbox.x.max) {\n      bbox.x.max = _bbox.x.max;\n    }\n\n    if (_bbox.y.max > bbox.y.max) {\n      bbox.y.max = _bbox.y.max;\n    }\n\n    if (_bbox.z && _bbox.z.max > bbox.z.max) {\n      bbox.z.max = _bbox.z.max;\n    }\n\n    bbox.x.mid = (bbox.x.min + bbox.x.max) / 2;\n    bbox.y.mid = (bbox.y.min + bbox.y.max) / 2;\n\n    if (bbox.z) {\n      bbox.z.mid = (bbox.z.min + bbox.z.max) / 2;\n    }\n\n    bbox.x.size = bbox.x.max - bbox.x.min;\n    bbox.y.size = bbox.y.max - bbox.y.min;\n\n    if (bbox.z) {\n      bbox.z.size = bbox.z.max - bbox.z.min;\n    }\n  },\n  pairiteration: function (c1, c2, curveIntersectionThreshold) {\n    const c1b = c1.bbox(),\n          c2b = c2.bbox(),\n          r = 100000,\n          threshold = curveIntersectionThreshold || 0.5;\n\n    if (c1b.x.size + c1b.y.size < threshold && c2b.x.size + c2b.y.size < threshold) {\n      return [(r * (c1._t1 + c1._t2) / 2 | 0) / r + \"/\" + (r * (c2._t1 + c2._t2) / 2 | 0) / r];\n    }\n\n    let cc1 = c1.split(0.5),\n        cc2 = c2.split(0.5),\n        pairs = [{\n      left: cc1.left,\n      right: cc2.left\n    }, {\n      left: cc1.left,\n      right: cc2.right\n    }, {\n      left: cc1.right,\n      right: cc2.right\n    }, {\n      left: cc1.right,\n      right: cc2.left\n    }];\n    pairs = pairs.filter(function (pair) {\n      return utils.bboxoverlap(pair.left.bbox(), pair.right.bbox());\n    });\n    let results = [];\n    if (pairs.length === 0) return results;\n    pairs.forEach(function (pair) {\n      results = results.concat(utils.pairiteration(pair.left, pair.right, threshold));\n    });\n    results = results.filter(function (v, i) {\n      return results.indexOf(v) === i;\n    });\n    return results;\n  },\n  getccenter: function (p1, p2, p3) {\n    const dx1 = p2.x - p1.x,\n          dy1 = p2.y - p1.y,\n          dx2 = p3.x - p2.x,\n          dy2 = p3.y - p2.y,\n          dx1p = dx1 * cos(quart) - dy1 * sin(quart),\n          dy1p = dx1 * sin(quart) + dy1 * cos(quart),\n          dx2p = dx2 * cos(quart) - dy2 * sin(quart),\n          dy2p = dx2 * sin(quart) + dy2 * cos(quart),\n          // chord midpoints\n    mx1 = (p1.x + p2.x) / 2,\n          my1 = (p1.y + p2.y) / 2,\n          mx2 = (p2.x + p3.x) / 2,\n          my2 = (p2.y + p3.y) / 2,\n          // midpoint offsets\n    mx1n = mx1 + dx1p,\n          my1n = my1 + dy1p,\n          mx2n = mx2 + dx2p,\n          my2n = my2 + dy2p,\n          // intersection of these lines:\n    arc = utils.lli8(mx1, my1, mx1n, my1n, mx2, my2, mx2n, my2n),\n          r = utils.dist(arc, p1); // arc start/end values, over mid point:\n\n    let s = atan2(p1.y - arc.y, p1.x - arc.x),\n        m = atan2(p2.y - arc.y, p2.x - arc.x),\n        e = atan2(p3.y - arc.y, p3.x - arc.x),\n        _; // determine arc direction (cw/ccw correction)\n\n\n    if (s < e) {\n      // if s<m<e, arc(s, e)\n      // if m<s<e, arc(e, s + tau)\n      // if s<e<m, arc(e, s + tau)\n      if (s > m || m > e) {\n        s += tau;\n      }\n\n      if (s > e) {\n        _ = e;\n        e = s;\n        s = _;\n      }\n    } else {\n      // if e<m<s, arc(e, s)\n      // if m<e<s, arc(s, e + tau)\n      // if e<s<m, arc(s, e + tau)\n      if (e < m && m < s) {\n        _ = e;\n        e = s;\n        s = _;\n      } else {\n        e += tau;\n      }\n    } // assign and done.\n\n\n    arc.s = s;\n    arc.e = e;\n    arc.r = r;\n    return arc;\n  },\n  numberSort: function (a, b) {\n    return a - b;\n  }\n};\n/**\n * Poly Bezier\n * @param {[type]} curves [description]\n */\n\nclass PolyBezier {\n  constructor(curves) {\n    this.curves = [];\n    this._3d = false;\n\n    if (!!curves) {\n      this.curves = curves;\n      this._3d = this.curves[0]._3d;\n    }\n  }\n\n  valueOf() {\n    return this.toString();\n  }\n\n  toString() {\n    return \"[\" + this.curves.map(function (curve) {\n      return utils.pointsToString(curve.points);\n    }).join(\", \") + \"]\";\n  }\n\n  addCurve(curve) {\n    this.curves.push(curve);\n    this._3d = this._3d || curve._3d;\n  }\n\n  length() {\n    return this.curves.map(function (v) {\n      return v.length();\n    }).reduce(function (a, b) {\n      return a + b;\n    });\n  }\n\n  curve(idx) {\n    return this.curves[idx];\n  }\n\n  bbox() {\n    const c = this.curves;\n    var bbox = c[0].bbox();\n\n    for (var i = 1; i < c.length; i++) {\n      utils.expandbox(bbox, c[i].bbox());\n    }\n\n    return bbox;\n  }\n\n  offset(d) {\n    const offset = [];\n    this.curves.forEach(function (v) {\n      offset.push(...v.offset(d));\n    });\n    return new PolyBezier(offset);\n  }\n\n}\n/**\n  A javascript Bezier curve library by Pomax.\n\n  Based on http://pomax.github.io/bezierinfo\n\n  This code is MIT licensed.\n**/\n// math-inlining.\n\n\nconst {\n  abs: abs$1,\n  min,\n  max,\n  cos: cos$1,\n  sin: sin$1,\n  acos: acos$1,\n  sqrt: sqrt$1\n} = Math;\nconst pi$1 = Math.PI;\n/**\n * Bezier curve constructor.\n *\n * ...docs pending...\n */\n\nclass Bezier {\n  constructor(coords) {\n    let args = coords && coords.forEach ? coords : Array.from(arguments).slice();\n    let coordlen = false;\n\n    if (typeof args[0] === \"object\") {\n      coordlen = args.length;\n      const newargs = [];\n      args.forEach(function (point) {\n        [\"x\", \"y\", \"z\"].forEach(function (d) {\n          if (typeof point[d] !== \"undefined\") {\n            newargs.push(point[d]);\n          }\n        });\n      });\n      args = newargs;\n    }\n\n    let higher = false;\n    const len = args.length;\n\n    if (coordlen) {\n      if (coordlen > 4) {\n        if (arguments.length !== 1) {\n          throw new Error(\"Only new Bezier(point[]) is accepted for 4th and higher order curves\");\n        }\n\n        higher = true;\n      }\n    } else {\n      if (len !== 6 && len !== 8 && len !== 9 && len !== 12) {\n        if (arguments.length !== 1) {\n          throw new Error(\"Only new Bezier(point[]) is accepted for 4th and higher order curves\");\n        }\n      }\n    }\n\n    const _3d = this._3d = !higher && (len === 9 || len === 12) || coords && coords[0] && typeof coords[0].z !== \"undefined\";\n\n    const points = this.points = [];\n\n    for (let idx = 0, step = _3d ? 3 : 2; idx < len; idx += step) {\n      var point = {\n        x: args[idx],\n        y: args[idx + 1]\n      };\n\n      if (_3d) {\n        point.z = args[idx + 2];\n      }\n\n      points.push(point);\n    }\n\n    const order = this.order = points.length - 1;\n    const dims = this.dims = [\"x\", \"y\"];\n    if (_3d) dims.push(\"z\");\n    this.dimlen = dims.length;\n    const aligned = utils.align(points, {\n      p1: points[0],\n      p2: points[order]\n    });\n    this._linear = !aligned.some(p => abs$1(p.y) > 0.0001);\n    this._lut = [];\n    this._t1 = 0;\n    this._t2 = 1;\n    this.update();\n  }\n\n  static quadraticFromPoints(p1, p2, p3, t) {\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    } // shortcuts, although they're really dumb\n\n\n    if (t === 0) {\n      return new Bezier(p2, p2, p3);\n    }\n\n    if (t === 1) {\n      return new Bezier(p1, p2, p2);\n    } // real fitting.\n\n\n    const abc = Bezier.getABC(2, p1, p2, p3, t);\n    return new Bezier(p1, abc.A, p3);\n  }\n\n  static cubicFromPoints(S, B, E, t, d1) {\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    }\n\n    const abc = Bezier.getABC(3, S, B, E, t);\n\n    if (typeof d1 === \"undefined\") {\n      d1 = utils.dist(B, abc.C);\n    }\n\n    const d2 = d1 * (1 - t) / t;\n    const selen = utils.dist(S, E),\n          lx = (E.x - S.x) / selen,\n          ly = (E.y - S.y) / selen,\n          bx1 = d1 * lx,\n          by1 = d1 * ly,\n          bx2 = d2 * lx,\n          by2 = d2 * ly; // derivation of new hull coordinates\n\n    const e1 = {\n      x: B.x - bx1,\n      y: B.y - by1\n    },\n          e2 = {\n      x: B.x + bx2,\n      y: B.y + by2\n    },\n          A = abc.A,\n          v1 = {\n      x: A.x + (e1.x - A.x) / (1 - t),\n      y: A.y + (e1.y - A.y) / (1 - t)\n    },\n          v2 = {\n      x: A.x + (e2.x - A.x) / t,\n      y: A.y + (e2.y - A.y) / t\n    },\n          nc1 = {\n      x: S.x + (v1.x - S.x) / t,\n      y: S.y + (v1.y - S.y) / t\n    },\n          nc2 = {\n      x: E.x + (v2.x - E.x) / (1 - t),\n      y: E.y + (v2.y - E.y) / (1 - t)\n    }; // ...done\n\n    return new Bezier(S, nc1, nc2, E);\n  }\n\n  static getUtils() {\n    return utils;\n  }\n\n  getUtils() {\n    return Bezier.getUtils();\n  }\n\n  static get PolyBezier() {\n    return PolyBezier;\n  }\n\n  valueOf() {\n    return this.toString();\n  }\n\n  toString() {\n    return utils.pointsToString(this.points);\n  }\n\n  toSVG() {\n    if (this._3d) return false;\n    const p = this.points,\n          x = p[0].x,\n          y = p[0].y,\n          s = [\"M\", x, y, this.order === 2 ? \"Q\" : \"C\"];\n\n    for (let i = 1, last = p.length; i < last; i++) {\n      s.push(p[i].x);\n      s.push(p[i].y);\n    }\n\n    return s.join(\" \");\n  }\n\n  setRatios(ratios) {\n    if (ratios.length !== this.points.length) {\n      throw new Error(\"incorrect number of ratio values\");\n    }\n\n    this.ratios = ratios;\n    this._lut = []; //  invalidate any precomputed LUT\n  }\n\n  verify() {\n    const print = this.coordDigest();\n\n    if (print !== this._print) {\n      this._print = print;\n      this.update();\n    }\n  }\n\n  coordDigest() {\n    return this.points.map(function (c, pos) {\n      return \"\" + pos + c.x + c.y + (c.z ? c.z : 0);\n    }).join(\"\");\n  }\n\n  update() {\n    // invalidate any precomputed LUT\n    this._lut = [];\n    this.dpoints = utils.derive(this.points, this._3d);\n    this.computedirection();\n  }\n\n  computedirection() {\n    const points = this.points;\n    const angle = utils.angle(points[0], points[this.order], points[1]);\n    this.clockwise = angle > 0;\n  }\n\n  length() {\n    return utils.length(this.derivative.bind(this));\n  }\n\n  static getABC(order = 2, S, B, E, t = 0.5) {\n    const u = utils.projectionratio(t, order),\n          um = 1 - u,\n          C = {\n      x: u * S.x + um * E.x,\n      y: u * S.y + um * E.y\n    },\n          s = utils.abcratio(t, order),\n          A = {\n      x: B.x + (B.x - C.x) / s,\n      y: B.y + (B.y - C.y) / s\n    };\n    return {\n      A,\n      B,\n      C,\n      S,\n      E\n    };\n  }\n\n  getABC(t, B) {\n    B = B || this.get(t);\n    let S = this.points[0];\n    let E = this.points[this.order];\n    return Bezier.getABC(this.order, S, B, E, t);\n  }\n\n  getLUT(steps) {\n    this.verify();\n    steps = steps || 100;\n\n    if (this._lut.length === steps) {\n      return this._lut;\n    }\n\n    this._lut = []; // We want a range from 0 to 1 inclusive, so\n    // we decrement and then use <= rather than <:\n\n    steps--;\n\n    for (let i = 0, p, t; i < steps; i++) {\n      t = i / (steps - 1);\n      p = this.compute(t);\n      p.t = t;\n\n      this._lut.push(p);\n    }\n\n    return this._lut;\n  }\n\n  on(point, error) {\n    error = error || 5;\n    const lut = this.getLUT(),\n          hits = [];\n\n    for (let i = 0, c, t = 0; i < lut.length; i++) {\n      c = lut[i];\n\n      if (utils.dist(c, point) < error) {\n        hits.push(c);\n        t += i / lut.length;\n      }\n    }\n\n    if (!hits.length) return false;\n    return t /= hits.length;\n  }\n\n  project(point) {\n    // step 1: coarse check\n    const LUT = this.getLUT(),\n          l = LUT.length - 1,\n          closest = utils.closest(LUT, point),\n          mpos = closest.mpos,\n          t1 = (mpos - 1) / l,\n          t2 = (mpos + 1) / l,\n          step = 0.1 / l; // step 2: fine check\n\n    let mdist = closest.mdist,\n        t = t1,\n        ft = t,\n        p;\n    mdist += 1;\n\n    for (let d; t < t2 + step; t += step) {\n      p = this.compute(t);\n      d = utils.dist(point, p);\n\n      if (d < mdist) {\n        mdist = d;\n        ft = t;\n      }\n    }\n\n    ft = ft < 0 ? 0 : ft > 1 ? 1 : ft;\n    p = this.compute(ft);\n    p.t = ft;\n    p.d = mdist;\n    return p;\n  }\n\n  get(t) {\n    return this.compute(t);\n  }\n\n  point(idx) {\n    return this.points[idx];\n  }\n\n  compute(t) {\n    if (this.ratios) {\n      return utils.computeWithRatios(t, this.points, this.ratios, this._3d);\n    }\n\n    return utils.compute(t, this.points, this._3d, this.ratios);\n  }\n\n  raise() {\n    const p = this.points,\n          np = [p[0]],\n          k = p.length;\n\n    for (let i = 1, pi, pim; i < k; i++) {\n      pi = p[i];\n      pim = p[i - 1];\n      np[i] = {\n        x: (k - i) / k * pi.x + i / k * pim.x,\n        y: (k - i) / k * pi.y + i / k * pim.y\n      };\n    }\n\n    np[k] = p[k - 1];\n    return new Bezier(np);\n  }\n\n  derivative(t) {\n    return utils.compute(t, this.dpoints[0]);\n  }\n\n  dderivative(t) {\n    return utils.compute(t, this.dpoints[1]);\n  }\n\n  align() {\n    let p = this.points;\n    return new Bezier(utils.align(p, {\n      p1: p[0],\n      p2: p[p.length - 1]\n    }));\n  }\n\n  curvature(t) {\n    return utils.curvature(t, this.dpoints[0], this.dpoints[1], this._3d);\n  }\n\n  inflections() {\n    return utils.inflections(this.points);\n  }\n\n  normal(t) {\n    return this._3d ? this.__normal3(t) : this.__normal2(t);\n  }\n\n  __normal2(t) {\n    const d = this.derivative(t);\n    const q = sqrt$1(d.x * d.x + d.y * d.y);\n    return {\n      x: -d.y / q,\n      y: d.x / q\n    };\n  }\n\n  __normal3(t) {\n    // see http://stackoverflow.com/questions/25453159\n    const r1 = this.derivative(t),\n          r2 = this.derivative(t + 0.01),\n          q1 = sqrt$1(r1.x * r1.x + r1.y * r1.y + r1.z * r1.z),\n          q2 = sqrt$1(r2.x * r2.x + r2.y * r2.y + r2.z * r2.z);\n    r1.x /= q1;\n    r1.y /= q1;\n    r1.z /= q1;\n    r2.x /= q2;\n    r2.y /= q2;\n    r2.z /= q2; // cross product\n\n    const c = {\n      x: r2.y * r1.z - r2.z * r1.y,\n      y: r2.z * r1.x - r2.x * r1.z,\n      z: r2.x * r1.y - r2.y * r1.x\n    };\n    const m = sqrt$1(c.x * c.x + c.y * c.y + c.z * c.z);\n    c.x /= m;\n    c.y /= m;\n    c.z /= m; // rotation matrix\n\n    const R = [c.x * c.x, c.x * c.y - c.z, c.x * c.z + c.y, c.x * c.y + c.z, c.y * c.y, c.y * c.z - c.x, c.x * c.z - c.y, c.y * c.z + c.x, c.z * c.z]; // normal vector:\n\n    const n = {\n      x: R[0] * r1.x + R[1] * r1.y + R[2] * r1.z,\n      y: R[3] * r1.x + R[4] * r1.y + R[5] * r1.z,\n      z: R[6] * r1.x + R[7] * r1.y + R[8] * r1.z\n    };\n    return n;\n  }\n\n  hull(t) {\n    let p = this.points,\n        _p = [],\n        q = [],\n        idx = 0;\n    q[idx++] = p[0];\n    q[idx++] = p[1];\n    q[idx++] = p[2];\n\n    if (this.order === 3) {\n      q[idx++] = p[3];\n    } // we lerp between all points at each iteration, until we have 1 point left.\n\n\n    while (p.length > 1) {\n      _p = [];\n\n      for (let i = 0, pt, l = p.length - 1; i < l; i++) {\n        pt = utils.lerp(t, p[i], p[i + 1]);\n        q[idx++] = pt;\n\n        _p.push(pt);\n      }\n\n      p = _p;\n    }\n\n    return q;\n  }\n\n  split(t1, t2) {\n    // shortcuts\n    if (t1 === 0 && !!t2) {\n      return this.split(t2).left;\n    }\n\n    if (t2 === 1) {\n      return this.split(t1).right;\n    } // no shortcut: use \"de Casteljau\" iteration.\n\n\n    const q = this.hull(t1);\n    const result = {\n      left: this.order === 2 ? new Bezier([q[0], q[3], q[5]]) : new Bezier([q[0], q[4], q[7], q[9]]),\n      right: this.order === 2 ? new Bezier([q[5], q[4], q[2]]) : new Bezier([q[9], q[8], q[6], q[3]]),\n      span: q\n    }; // make sure we bind _t1/_t2 information!\n\n    result.left._t1 = utils.map(0, 0, 1, this._t1, this._t2);\n    result.left._t2 = utils.map(t1, 0, 1, this._t1, this._t2);\n    result.right._t1 = utils.map(t1, 0, 1, this._t1, this._t2);\n    result.right._t2 = utils.map(1, 0, 1, this._t1, this._t2); // if we have no t2, we're done\n\n    if (!t2) {\n      return result;\n    } // if we have a t2, split again:\n\n\n    t2 = utils.map(t2, t1, 1, 0, 1);\n    return result.right.split(t2).left;\n  }\n\n  extrema() {\n    const result = {};\n    let roots = [];\n    this.dims.forEach(function (dim) {\n      let mfn = function (v) {\n        return v[dim];\n      };\n\n      let p = this.dpoints[0].map(mfn);\n      result[dim] = utils.droots(p);\n\n      if (this.order === 3) {\n        p = this.dpoints[1].map(mfn);\n        result[dim] = result[dim].concat(utils.droots(p));\n      }\n\n      result[dim] = result[dim].filter(function (t) {\n        return t >= 0 && t <= 1;\n      });\n      roots = roots.concat(result[dim].sort(utils.numberSort));\n    }.bind(this));\n    result.values = roots.sort(utils.numberSort).filter(function (v, idx) {\n      return roots.indexOf(v) === idx;\n    });\n    return result;\n  }\n\n  bbox() {\n    const extrema = this.extrema(),\n          result = {};\n    this.dims.forEach(function (d) {\n      result[d] = utils.getminmax(this, d, extrema[d]);\n    }.bind(this));\n    return result;\n  }\n\n  overlaps(curve) {\n    const lbbox = this.bbox(),\n          tbbox = curve.bbox();\n    return utils.bboxoverlap(lbbox, tbbox);\n  }\n\n  offset(t, d) {\n    if (typeof d !== \"undefined\") {\n      const c = this.get(t),\n            n = this.normal(t);\n      const ret = {\n        c: c,\n        n: n,\n        x: c.x + n.x * d,\n        y: c.y + n.y * d\n      };\n\n      if (this._3d) {\n        ret.z = c.z + n.z * d;\n      }\n\n      return ret;\n    }\n\n    if (this._linear) {\n      const nv = this.normal(0),\n            coords = this.points.map(function (p) {\n        const ret = {\n          x: p.x + t * nv.x,\n          y: p.y + t * nv.y\n        };\n\n        if (p.z && nv.z) {\n          ret.z = p.z + t * nv.z;\n        }\n\n        return ret;\n      });\n      return [new Bezier(coords)];\n    }\n\n    return this.reduce().map(function (s) {\n      if (s._linear) {\n        return s.offset(t)[0];\n      }\n\n      return s.scale(t);\n    });\n  }\n\n  simple() {\n    if (this.order === 3) {\n      const a1 = utils.angle(this.points[0], this.points[3], this.points[1]);\n      const a2 = utils.angle(this.points[0], this.points[3], this.points[2]);\n      if (a1 > 0 && a2 < 0 || a1 < 0 && a2 > 0) return false;\n    }\n\n    const n1 = this.normal(0);\n    const n2 = this.normal(1);\n    let s = n1.x * n2.x + n1.y * n2.y;\n\n    if (this._3d) {\n      s += n1.z * n2.z;\n    }\n\n    return abs$1(acos$1(s)) < pi$1 / 3;\n  }\n\n  reduce() {\n    // TODO: examine these var types in more detail...\n    let i,\n        t1 = 0,\n        t2 = 0,\n        step = 0.01,\n        segment,\n        pass1 = [],\n        pass2 = []; // first pass: split on extrema\n\n    let extrema = this.extrema().values;\n\n    if (extrema.indexOf(0) === -1) {\n      extrema = [0].concat(extrema);\n    }\n\n    if (extrema.indexOf(1) === -1) {\n      extrema.push(1);\n    }\n\n    for (t1 = extrema[0], i = 1; i < extrema.length; i++) {\n      t2 = extrema[i];\n      segment = this.split(t1, t2);\n      segment._t1 = t1;\n      segment._t2 = t2;\n      pass1.push(segment);\n      t1 = t2;\n    } // second pass: further reduce these segments to simple segments\n\n\n    pass1.forEach(function (p1) {\n      t1 = 0;\n      t2 = 0;\n\n      while (t2 <= 1) {\n        for (t2 = t1 + step; t2 <= 1 + step; t2 += step) {\n          segment = p1.split(t1, t2);\n\n          if (!segment.simple()) {\n            t2 -= step;\n\n            if (abs$1(t1 - t2) < step) {\n              // we can never form a reduction\n              return [];\n            }\n\n            segment = p1.split(t1, t2);\n            segment._t1 = utils.map(t1, 0, 1, p1._t1, p1._t2);\n            segment._t2 = utils.map(t2, 0, 1, p1._t1, p1._t2);\n            pass2.push(segment);\n            t1 = t2;\n            break;\n          }\n        }\n      }\n\n      if (t1 < 1) {\n        segment = p1.split(t1, 1);\n        segment._t1 = utils.map(t1, 0, 1, p1._t1, p1._t2);\n        segment._t2 = p1._t2;\n        pass2.push(segment);\n      }\n    });\n    return pass2;\n  }\n\n  scale(d) {\n    const order = this.order;\n    let distanceFn = false;\n\n    if (typeof d === \"function\") {\n      distanceFn = d;\n    }\n\n    if (distanceFn && order === 2) {\n      return this.raise().scale(distanceFn);\n    } // TODO: add special handling for degenerate (=linear) curves.\n\n\n    const clockwise = this.clockwise;\n    const r1 = distanceFn ? distanceFn(0) : d;\n    const r2 = distanceFn ? distanceFn(1) : d;\n    const v = [this.offset(0, 10), this.offset(1, 10)];\n    const points = this.points;\n    const np = [];\n    const o = utils.lli4(v[0], v[0].c, v[1], v[1].c);\n\n    if (!o) {\n      throw new Error(\"cannot scale this curve. Try reducing it first.\");\n    } // move all points by distance 'd' wrt the origin 'o'\n    // move end points by fixed distance along normal.\n\n\n    [0, 1].forEach(function (t) {\n      const p = np[t * order] = utils.copy(points[t * order]);\n      p.x += (t ? r2 : r1) * v[t].n.x;\n      p.y += (t ? r2 : r1) * v[t].n.y;\n    });\n\n    if (!distanceFn) {\n      // move control points to lie on the intersection of the offset\n      // derivative vector, and the origin-through-control vector\n      [0, 1].forEach(t => {\n        if (order === 2 && !!t) return;\n        const p = np[t * order];\n        const d = this.derivative(t);\n        const p2 = {\n          x: p.x + d.x,\n          y: p.y + d.y\n        };\n        np[t + 1] = utils.lli4(p, p2, o, points[t + 1]);\n      });\n      return new Bezier(np);\n    } // move control points by \"however much necessary to\n    // ensure the correct tangent to endpoint\".\n\n\n    [0, 1].forEach(function (t) {\n      if (order === 2 && !!t) return;\n      var p = points[t + 1];\n      var ov = {\n        x: p.x - o.x,\n        y: p.y - o.y\n      };\n      var rc = distanceFn ? distanceFn((t + 1) / order) : d;\n      if (distanceFn && !clockwise) rc = -rc;\n      var m = sqrt$1(ov.x * ov.x + ov.y * ov.y);\n      ov.x /= m;\n      ov.y /= m;\n      np[t + 1] = {\n        x: p.x + rc * ov.x,\n        y: p.y + rc * ov.y\n      };\n    });\n    return new Bezier(np);\n  }\n\n  outline(d1, d2, d3, d4) {\n    d2 = typeof d2 === \"undefined\" ? d1 : d2;\n    const reduced = this.reduce(),\n          len = reduced.length,\n          fcurves = [];\n    let bcurves = [],\n        p,\n        alen = 0,\n        tlen = this.length();\n    const graduated = typeof d3 !== \"undefined\" && typeof d4 !== \"undefined\";\n\n    function linearDistanceFunction(s, e, tlen, alen, slen) {\n      return function (v) {\n        const f1 = alen / tlen,\n              f2 = (alen + slen) / tlen,\n              d = e - s;\n        return utils.map(v, 0, 1, s + f1 * d, s + f2 * d);\n      };\n    } // form curve oulines\n\n\n    reduced.forEach(function (segment) {\n      const slen = segment.length();\n\n      if (graduated) {\n        fcurves.push(segment.scale(linearDistanceFunction(d1, d3, tlen, alen, slen)));\n        bcurves.push(segment.scale(linearDistanceFunction(-d2, -d4, tlen, alen, slen)));\n      } else {\n        fcurves.push(segment.scale(d1));\n        bcurves.push(segment.scale(-d2));\n      }\n\n      alen += slen;\n    }); // reverse the \"return\" outline\n\n    bcurves = bcurves.map(function (s) {\n      p = s.points;\n\n      if (p[3]) {\n        s.points = [p[3], p[2], p[1], p[0]];\n      } else {\n        s.points = [p[2], p[1], p[0]];\n      }\n\n      return s;\n    }).reverse(); // form the endcaps as lines\n\n    const fs = fcurves[0].points[0],\n          fe = fcurves[len - 1].points[fcurves[len - 1].points.length - 1],\n          bs = bcurves[len - 1].points[bcurves[len - 1].points.length - 1],\n          be = bcurves[0].points[0],\n          ls = utils.makeline(bs, fs),\n          le = utils.makeline(fe, be),\n          segments = [ls].concat(fcurves).concat([le]).concat(bcurves);\n    return new PolyBezier(segments);\n  }\n\n  outlineshapes(d1, d2, curveIntersectionThreshold) {\n    d2 = d2 || d1;\n    const outline = this.outline(d1, d2).curves;\n    const shapes = [];\n\n    for (let i = 1, len = outline.length; i < len / 2; i++) {\n      const shape = utils.makeshape(outline[i], outline[len - i], curveIntersectionThreshold);\n      shape.startcap.virtual = i > 1;\n      shape.endcap.virtual = i < len / 2 - 1;\n      shapes.push(shape);\n    }\n\n    return shapes;\n  }\n\n  intersects(curve, curveIntersectionThreshold) {\n    if (!curve) return this.selfintersects(curveIntersectionThreshold);\n\n    if (curve.p1 && curve.p2) {\n      return this.lineIntersects(curve);\n    }\n\n    if (curve instanceof Bezier) {\n      curve = curve.reduce();\n    }\n\n    return this.curveintersects(this.reduce(), curve, curveIntersectionThreshold);\n  }\n\n  lineIntersects(line) {\n    const mx = min(line.p1.x, line.p2.x),\n          my = min(line.p1.y, line.p2.y),\n          MX = max(line.p1.x, line.p2.x),\n          MY = max(line.p1.y, line.p2.y);\n    return utils.roots(this.points, line).filter(t => {\n      var p = this.get(t);\n      return utils.between(p.x, mx, MX) && utils.between(p.y, my, MY);\n    });\n  }\n\n  selfintersects(curveIntersectionThreshold) {\n    // \"simple\" curves cannot intersect with their direct\n    // neighbour, so for each segment X we check whether\n    // it intersects [0:x-2][x+2:last].\n    const reduced = this.reduce(),\n          len = reduced.length - 2,\n          results = [];\n\n    for (let i = 0, result, left, right; i < len; i++) {\n      left = reduced.slice(i, i + 1);\n      right = reduced.slice(i + 2);\n      result = this.curveintersects(left, right, curveIntersectionThreshold);\n      results.push(...result);\n    }\n\n    return results;\n  }\n\n  curveintersects(c1, c2, curveIntersectionThreshold) {\n    const pairs = []; // step 1: pair off any overlapping segments\n\n    c1.forEach(function (l) {\n      c2.forEach(function (r) {\n        if (l.overlaps(r)) {\n          pairs.push({\n            left: l,\n            right: r\n          });\n        }\n      });\n    }); // step 2: for each pairing, run through the convergence algorithm.\n\n    let intersections = [];\n    pairs.forEach(function (pair) {\n      const result = utils.pairiteration(pair.left, pair.right, curveIntersectionThreshold);\n\n      if (result.length > 0) {\n        intersections = intersections.concat(result);\n      }\n    });\n    return intersections;\n  }\n\n  arcs(errorThreshold) {\n    errorThreshold = errorThreshold || 0.5;\n    return this._iterate(errorThreshold, []);\n  }\n\n  _error(pc, np1, s, e) {\n    const q = (e - s) / 4,\n          c1 = this.get(s + q),\n          c2 = this.get(e - q),\n          ref = utils.dist(pc, np1),\n          d1 = utils.dist(pc, c1),\n          d2 = utils.dist(pc, c2);\n    return abs$1(d1 - ref) + abs$1(d2 - ref);\n  }\n\n  _iterate(errorThreshold, circles) {\n    let t_s = 0,\n        t_e = 1,\n        safety; // we do a binary search to find the \"good `t` closest to no-longer-good\"\n\n    do {\n      safety = 0; // step 1: start with the maximum possible arc\n\n      t_e = 1; // points:\n\n      let np1 = this.get(t_s),\n          np2,\n          np3,\n          arc,\n          prev_arc; // booleans:\n\n      let curr_good = false,\n          prev_good = false,\n          done; // numbers:\n\n      let t_m = t_e,\n          prev_e = 1; // step 2: find the best possible arc\n\n      do {\n        prev_good = curr_good;\n        prev_arc = arc;\n        t_m = (t_s + t_e) / 2;\n        np2 = this.get(t_m);\n        np3 = this.get(t_e);\n        arc = utils.getccenter(np1, np2, np3); //also save the t values\n\n        arc.interval = {\n          start: t_s,\n          end: t_e\n        };\n\n        let error = this._error(arc, np1, t_s, t_e);\n\n        curr_good = error <= errorThreshold;\n        done = prev_good && !curr_good;\n        if (!done) prev_e = t_e; // this arc is fine: we can move 'e' up to see if we can find a wider arc\n\n        if (curr_good) {\n          // if e is already at max, then we're done for this arc.\n          if (t_e >= 1) {\n            // make sure we cap at t=1\n            arc.interval.end = prev_e = 1;\n            prev_arc = arc; // if we capped the arc segment to t=1 we also need to make sure that\n            // the arc's end angle is correct with respect to the bezier end point.\n\n            if (t_e > 1) {\n              let d = {\n                x: arc.x + arc.r * cos$1(arc.e),\n                y: arc.y + arc.r * sin$1(arc.e)\n              };\n              arc.e += utils.angle({\n                x: arc.x,\n                y: arc.y\n              }, d, this.get(1));\n            }\n\n            break;\n          } // if not, move it up by half the iteration distance\n\n\n          t_e = t_e + (t_e - t_s) / 2;\n        } else {\n          // this is a bad arc: we need to move 'e' down to find a good arc\n          t_e = t_m;\n        }\n      } while (!done && safety++ < 100);\n\n      if (safety >= 100) {\n        break;\n      } // console.log(\"L835: [F] arc found\", t_s, prev_e, prev_arc.x, prev_arc.y, prev_arc.s, prev_arc.e);\n\n\n      prev_arc = prev_arc ? prev_arc : arc;\n      circles.push(prev_arc);\n      t_s = prev_e;\n    } while (t_e < 1);\n\n    return circles;\n  }\n\n}\n\nexports.Bezier = Bezier;\n", "/** @license React v17.0.1\n * react-dom-server.browser.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),m=require(\"react\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar q=60106,r=60107,u=60108,z=60114,B=60109,aa=60110,ba=60112,D=60113,ca=60120,da=60115,ea=60116,fa=60121,ha=60117,ia=60119,ja=60129,ka=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;q=E(\"react.portal\");r=E(\"react.fragment\");u=E(\"react.strict_mode\");z=E(\"react.profiler\");B=E(\"react.provider\");aa=E(\"react.context\");ba=E(\"react.forward_ref\");D=E(\"react.suspense\");ca=E(\"react.suspense_list\");da=E(\"react.memo\");ea=E(\"react.lazy\");fa=E(\"react.block\");ha=E(\"react.fundamental\");ia=E(\"react.scope\");ja=E(\"react.debug_trace_mode\");ka=E(\"react.legacy_hidden\")}\nfunction F(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case r:return\"Fragment\";case q:return\"Portal\";case z:return\"Profiler\";case u:return\"StrictMode\";case D:return\"Suspense\";case ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case aa:return(a.displayName||\"Context\")+\".Consumer\";case B:return(a._context.displayName||\"Context\")+\".Provider\";case ba:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||\n(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case da:return F(a.type);case fa:return F(a._render);case ea:b=a._payload;a=a._init;try{return F(a(b))}catch(c){}}return null}var la=m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,ma={};function I(a,b){for(var c=a._threadCount|0;c<=b;c++)a[c]=a._currentValue2,a._threadCount=c+1}function na(a,b,c,d){if(d&&(d=a.contextType,\"object\"===typeof d&&null!==d))return I(d,c),d[c];if(a=a.contextTypes){c={};for(var f in a)c[f]=b[f];b=c}else b=ma;return b}\nfor(var J=new Uint16Array(16),K=0;15>K;K++)J[K]=K+1;J[15]=0;var oa=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,pa=Object.prototype.hasOwnProperty,qa={},ra={};\nfunction sa(a){if(pa.call(ra,a))return!0;if(pa.call(qa,a))return!1;if(oa.test(a))return ra[a]=!0;qa[a]=!0;return!1}function ta(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction ua(a,b,c,d){if(null===b||\"undefined\"===typeof b||ta(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function M(a,b,c,d,f,h,t){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=f;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=h;this.removeEmptyString=t}var N={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){N[a]=new M(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];N[b]=new M(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){N[a]=new M(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){N[a]=new M(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){N[a]=new M(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){N[a]=new M(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){N[a]=new M(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){N[a]=new M(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){N[a]=new M(a,5,!1,a.toLowerCase(),null,!1,!1)});var va=/[\\-:]([a-z])/g;function wa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(va,\nwa);N[b]=new M(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(va,wa);N[b]=new M(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(va,wa);N[b]=new M(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){N[a]=new M(a,1,!1,a.toLowerCase(),null,!1,!1)});\nN.xlinkHref=new M(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){N[a]=new M(a,1,!1,a.toLowerCase(),null,!0,!0)});var xa=/[\"'&<>]/;\nfunction O(a){if(\"boolean\"===typeof a||\"number\"===typeof a)return\"\"+a;a=\"\"+a;var b=xa.exec(a);if(b){var c=\"\",d,f=0;for(d=b.index;d<a.length;d++){switch(a.charCodeAt(d)){case 34:b=\"&quot;\";break;case 38:b=\"&amp;\";break;case 39:b=\"&#x27;\";break;case 60:b=\"&lt;\";break;case 62:b=\"&gt;\";break;default:continue}f!==d&&(c+=a.substring(f,d));f=d+1;c+=b}a=f!==d?c+a.substring(f,d):c}return a}\nfunction ya(a,b){var c=N.hasOwnProperty(a)?N[a]:null;var d;if(d=\"style\"!==a)d=null!==c?0===c.type:!(2<a.length)||\"o\"!==a[0]&&\"O\"!==a[0]||\"n\"!==a[1]&&\"N\"!==a[1]?!1:!0;if(d||ua(a,b,c,!1))return\"\";if(null!==c){a=c.attributeName;d=c.type;if(3===d||4===d&&!0===b)return a+'=\"\"';c.sanitizeURL&&(b=\"\"+b);return a+'=\"'+(O(b)+'\"')}return sa(a)?a+'=\"'+(O(b)+'\"'):\"\"}function za(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}\nvar Aa=\"function\"===typeof Object.is?Object.is:za,P=null,Q=null,R=null,S=!1,T=!1,U=null,V=0;function W(){if(null===P)throw Error(p(321));return P}function Ba(){if(0<V)throw Error(p(312));return{memoizedState:null,queue:null,next:null}}function Ca(){null===R?null===Q?(S=!1,Q=R=Ba()):(S=!0,R=Q):null===R.next?(S=!1,R=R.next=Ba()):(S=!0,R=R.next);return R}function Da(a,b,c,d){for(;T;)T=!1,V+=1,R=null,c=a(b,d);Ea();return c}function Ea(){P=null;T=!1;Q=null;V=0;R=U=null}\nfunction Fa(a,b){return\"function\"===typeof b?b(a):b}function Ga(a,b,c){P=W();R=Ca();if(S){var d=R.queue;b=d.dispatch;if(null!==U&&(c=U.get(d),void 0!==c)){U.delete(d);d=R.memoizedState;do d=a(d,c.action),c=c.next;while(null!==c);R.memoizedState=d;return[d,b]}return[R.memoizedState,b]}a=a===Fa?\"function\"===typeof b?b():b:void 0!==c?c(b):b;R.memoizedState=a;a=R.queue={last:null,dispatch:null};a=a.dispatch=Ha.bind(null,P,a);return[R.memoizedState,a]}\nfunction Ia(a,b){P=W();R=Ca();b=void 0===b?null:b;if(null!==R){var c=R.memoizedState;if(null!==c&&null!==b){var d=c[1];a:if(null===d)d=!1;else{for(var f=0;f<d.length&&f<b.length;f++)if(!Aa(b[f],d[f])){d=!1;break a}d=!0}if(d)return c[0]}}a=a();R.memoizedState=[a,b];return a}function Ha(a,b,c){if(!(25>V))throw Error(p(301));if(a===P)if(T=!0,a={action:c,next:null},null===U&&(U=new Map),c=U.get(b),void 0===c)U.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}}function Ja(){}\nvar X=null,Ka={readContext:function(a){var b=X.threadID;I(a,b);return a[b]},useContext:function(a){W();var b=X.threadID;I(a,b);return a[b]},useMemo:Ia,useReducer:Ga,useRef:function(a){P=W();R=Ca();var b=R.memoizedState;return null===b?(a={current:a},R.memoizedState=a):b},useState:function(a){return Ga(Fa,a)},useLayoutEffect:function(){},useCallback:function(a,b){return Ia(function(){return a},b)},useImperativeHandle:Ja,useEffect:Ja,useDebugValue:Ja,useDeferredValue:function(a){W();return a},useTransition:function(){W();\nreturn[function(a){a()},!1]},useOpaqueIdentifier:function(){return(X.identifierPrefix||\"\")+\"R:\"+(X.uniqueID++).toString(36)},useMutableSource:function(a,b){W();return b(a._source)}},La={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};function Ma(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nvar Na={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},Oa=l({menuitem:!0},Na),Y={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,\ngridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Pa=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Y).forEach(function(a){Pa.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Y[b]=Y[a]})});\nvar Qa=/([A-Z])/g,Ra=/^ms-/,Z=m.Children.toArray,Sa=la.ReactCurrentDispatcher,Ta={listing:!0,pre:!0,textarea:!0},Ua=/^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/,Va={},Wa={};function Xa(a){if(void 0===a||null===a)return a;var b=\"\";m.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}var Ya=Object.prototype.hasOwnProperty,Za={children:null,dangerouslySetInnerHTML:null,suppressContentEditableWarning:null,suppressHydrationWarning:null};function $a(a,b){if(void 0===a)throw Error(p(152,F(b)||\"Component\"));}\nfunction ab(a,b,c){function d(d,h){var e=h.prototype&&h.prototype.isReactComponent,f=na(h,b,c,e),t=[],g=!1,n={isMounted:function(){return!1},enqueueForceUpdate:function(){if(null===t)return null},enqueueReplaceState:function(a,c){g=!0;t=[c]},enqueueSetState:function(a,c){if(null===t)return null;t.push(c)}};if(e){if(e=new h(d.props,f,n),\"function\"===typeof h.getDerivedStateFromProps){var k=h.getDerivedStateFromProps.call(null,d.props,e.state);null!=k&&(e.state=l({},e.state,k))}}else if(P={},e=h(d.props,\nf,n),e=Da(h,d.props,e,f),null==e||null==e.render){a=e;$a(a,h);return}e.props=d.props;e.context=f;e.updater=n;n=e.state;void 0===n&&(e.state=n=null);if(\"function\"===typeof e.UNSAFE_componentWillMount||\"function\"===typeof e.componentWillMount)if(\"function\"===typeof e.componentWillMount&&\"function\"!==typeof h.getDerivedStateFromProps&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof h.getDerivedStateFromProps&&e.UNSAFE_componentWillMount(),t.length){n=t;var v=\ng;t=null;g=!1;if(v&&1===n.length)e.state=n[0];else{k=v?n[0]:e.state;var H=!0;for(v=v?1:0;v<n.length;v++){var x=n[v];x=\"function\"===typeof x?x.call(e,k,d.props,f):x;null!=x&&(H?(H=!1,k=l({},k,x)):l(k,x))}e.state=k}}else t=null;a=e.render();$a(a,h);if(\"function\"===typeof e.getChildContext&&(d=h.childContextTypes,\"object\"===typeof d)){var y=e.getChildContext();for(var A in y)if(!(A in d))throw Error(p(108,F(h)||\"Unknown\",A));}y&&(b=l({},b,y))}for(;m.isValidElement(a);){var f=a,h=f.type;if(\"function\"!==\ntypeof h)break;d(f,h)}return{child:a,context:b}}\nvar bb=function(){function a(a,b,f){m.isValidElement(a)?a.type!==r?a=[a]:(a=a.props.children,a=m.isValidElement(a)?[a]:Z(a)):a=Z(a);a={type:null,domNamespace:La.html,children:a,childIndex:0,context:ma,footer:\"\"};var c=J[0];if(0===c){var d=J;c=d.length;var g=2*c;if(!(65536>=g))throw Error(p(304));var e=new Uint16Array(g);e.set(d);J=e;J[0]=c+1;for(d=c;d<g-1;d++)J[d]=d+1;J[g-1]=0}else J[0]=J[c];this.threadID=c;this.stack=[a];this.exhausted=!1;this.currentSelectValue=null;this.previousWasTextNode=!1;\nthis.makeStaticMarkup=b;this.suspenseDepth=0;this.contextIndex=-1;this.contextStack=[];this.contextValueStack=[];this.uniqueID=0;this.identifierPrefix=f&&f.identifierPrefix||\"\"}var b=a.prototype;b.destroy=function(){if(!this.exhausted){this.exhausted=!0;this.clearProviders();var a=this.threadID;J[a]=J[0];J[0]=a}};b.pushProvider=function(a){var b=++this.contextIndex,c=a.type._context,h=this.threadID;I(c,h);var t=c[h];this.contextStack[b]=c;this.contextValueStack[b]=t;c[h]=a.props.value};b.popProvider=\nfunction(){var a=this.contextIndex,b=this.contextStack[a],f=this.contextValueStack[a];this.contextStack[a]=null;this.contextValueStack[a]=null;this.contextIndex--;b[this.threadID]=f};b.clearProviders=function(){for(var a=this.contextIndex;0<=a;a--)this.contextStack[a][this.threadID]=this.contextValueStack[a]};b.read=function(a){if(this.exhausted)return null;var b=X;X=this;var c=Sa.current;Sa.current=Ka;try{for(var h=[\"\"],t=!1;h[0].length<a;){if(0===this.stack.length){this.exhausted=!0;var g=this.threadID;\nJ[g]=J[0];J[0]=g;break}var e=this.stack[this.stack.length-1];if(t||e.childIndex>=e.children.length){var L=e.footer;\"\"!==L&&(this.previousWasTextNode=!1);this.stack.pop();if(\"select\"===e.type)this.currentSelectValue=null;else if(null!=e.type&&null!=e.type.type&&e.type.type.$$typeof===B)this.popProvider(e.type);else if(e.type===D){this.suspenseDepth--;var G=h.pop();if(t){t=!1;var C=e.fallbackFrame;if(!C)throw Error(p(303));this.stack.push(C);h[this.suspenseDepth]+=\"\\x3c!--$!--\\x3e\";continue}else h[this.suspenseDepth]+=\nG}h[this.suspenseDepth]+=L}else{var n=e.children[e.childIndex++],k=\"\";try{k+=this.render(n,e.context,e.domNamespace)}catch(v){if(null!=v&&\"function\"===typeof v.then)throw Error(p(294));throw v;}finally{}h.length<=this.suspenseDepth&&h.push(\"\");h[this.suspenseDepth]+=k}}return h[0]}finally{Sa.current=c,X=b,Ea()}};b.render=function(a,b,f){if(\"string\"===typeof a||\"number\"===typeof a){f=\"\"+a;if(\"\"===f)return\"\";if(this.makeStaticMarkup)return O(f);if(this.previousWasTextNode)return\"\\x3c!-- --\\x3e\"+O(f);\nthis.previousWasTextNode=!0;return O(f)}b=ab(a,b,this.threadID);a=b.child;b=b.context;if(null===a||!1===a)return\"\";if(!m.isValidElement(a)){if(null!=a&&null!=a.$$typeof){f=a.$$typeof;if(f===q)throw Error(p(257));throw Error(p(258,f.toString()));}a=Z(a);this.stack.push({type:null,domNamespace:f,children:a,childIndex:0,context:b,footer:\"\"});return\"\"}var c=a.type;if(\"string\"===typeof c)return this.renderDOM(a,b,f);switch(c){case ka:case ja:case u:case z:case ca:case r:return a=Z(a.props.children),this.stack.push({type:null,\ndomNamespace:f,children:a,childIndex:0,context:b,footer:\"\"}),\"\";case D:throw Error(p(294));case ia:throw Error(p(343));}if(\"object\"===typeof c&&null!==c)switch(c.$$typeof){case ba:P={};var d=c.render(a.props,a.ref);d=Da(c.render,a.props,d,a.ref);d=Z(d);this.stack.push({type:null,domNamespace:f,children:d,childIndex:0,context:b,footer:\"\"});return\"\";case da:return a=[m.createElement(c.type,l({ref:a.ref},a.props))],this.stack.push({type:null,domNamespace:f,children:a,childIndex:0,context:b,footer:\"\"}),\n\"\";case B:return c=Z(a.props.children),f={type:a,domNamespace:f,children:c,childIndex:0,context:b,footer:\"\"},this.pushProvider(a),this.stack.push(f),\"\";case aa:c=a.type;d=a.props;var g=this.threadID;I(c,g);c=Z(d.children(c[g]));this.stack.push({type:a,domNamespace:f,children:c,childIndex:0,context:b,footer:\"\"});return\"\";case ha:throw Error(p(338));case ea:return c=a.type,d=c._init,c=d(c._payload),a=[m.createElement(c,l({ref:a.ref},a.props))],this.stack.push({type:null,domNamespace:f,children:a,childIndex:0,\ncontext:b,footer:\"\"}),\"\"}throw Error(p(130,null==c?c:typeof c,\"\"));};b.renderDOM=function(a,b,f){var c=a.type.toLowerCase();f===La.html&&Ma(c);if(!Va.hasOwnProperty(c)){if(!Ua.test(c))throw Error(p(65,c));Va[c]=!0}var d=a.props;if(\"input\"===c)d=l({type:void 0},d,{defaultChecked:void 0,defaultValue:void 0,value:null!=d.value?d.value:d.defaultValue,checked:null!=d.checked?d.checked:d.defaultChecked});else if(\"textarea\"===c){var g=d.value;if(null==g){g=d.defaultValue;var e=d.children;if(null!=e){if(null!=\ng)throw Error(p(92));if(Array.isArray(e)){if(!(1>=e.length))throw Error(p(93));e=e[0]}g=\"\"+e}null==g&&(g=\"\")}d=l({},d,{value:void 0,children:\"\"+g})}else if(\"select\"===c)this.currentSelectValue=null!=d.value?d.value:d.defaultValue,d=l({},d,{value:void 0});else if(\"option\"===c){e=this.currentSelectValue;var L=Xa(d.children);if(null!=e){var G=null!=d.value?d.value+\"\":L;g=!1;if(Array.isArray(e))for(var C=0;C<e.length;C++){if(\"\"+e[C]===G){g=!0;break}}else g=\"\"+e===G;d=l({selected:void 0,children:void 0},\nd,{selected:g,children:L})}}if(g=d){if(Oa[c]&&(null!=g.children||null!=g.dangerouslySetInnerHTML))throw Error(p(137,c));if(null!=g.dangerouslySetInnerHTML){if(null!=g.children)throw Error(p(60));if(!(\"object\"===typeof g.dangerouslySetInnerHTML&&\"__html\"in g.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=g.style&&\"object\"!==typeof g.style)throw Error(p(62));}g=d;e=this.makeStaticMarkup;L=1===this.stack.length;G=\"<\"+a.type;b:if(-1===c.indexOf(\"-\"))C=\"string\"===typeof g.is;else switch(c){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":C=\n!1;break b;default:C=!0}for(w in g)if(Ya.call(g,w)){var n=g[w];if(null!=n){if(\"style\"===w){var k=void 0,v=\"\",H=\"\";for(k in n)if(n.hasOwnProperty(k)){var x=0===k.indexOf(\"--\"),y=n[k];if(null!=y){if(x)var A=k;else if(A=k,Wa.hasOwnProperty(A))A=Wa[A];else{var cb=A.replace(Qa,\"-$1\").toLowerCase().replace(Ra,\"-ms-\");A=Wa[A]=cb}v+=H+A+\":\";H=k;x=null==y||\"boolean\"===typeof y||\"\"===y?\"\":x||\"number\"!==typeof y||0===y||Y.hasOwnProperty(H)&&Y[H]?(\"\"+y).trim():y+\"px\";v+=x;H=\";\"}}n=v||null}k=null;C?Za.hasOwnProperty(w)||\n(k=w,k=sa(k)&&null!=n?k+'=\"'+(O(n)+'\"'):\"\"):k=ya(w,n);k&&(G+=\" \"+k)}}e||L&&(G+=' data-reactroot=\"\"');var w=G;g=\"\";Na.hasOwnProperty(c)?w+=\"/>\":(w+=\">\",g=\"</\"+a.type+\">\");a:{e=d.dangerouslySetInnerHTML;if(null!=e){if(null!=e.__html){e=e.__html;break a}}else if(e=d.children,\"string\"===typeof e||\"number\"===typeof e){e=O(e);break a}e=null}null!=e?(d=[],Ta.hasOwnProperty(c)&&\"\\n\"===e.charAt(0)&&(w+=\"\\n\"),w+=e):d=Z(d.children);a=a.type;f=null==f||\"http://www.w3.org/1999/xhtml\"===f?Ma(a):\"http://www.w3.org/2000/svg\"===\nf&&\"foreignObject\"===a?\"http://www.w3.org/1999/xhtml\":f;this.stack.push({domNamespace:f,type:c,children:d,childIndex:0,context:b,footer:g});this.previousWasTextNode=!1;return w};return a}();exports.renderToNodeStream=function(){throw Error(p(207));};exports.renderToStaticMarkup=function(a,b){a=new bb(a,!0,b);try{return a.read(Infinity)}finally{a.destroy()}};exports.renderToStaticNodeStream=function(){throw Error(p(208));};exports.renderToString=function(a,b){a=new bb(a,!1,b);try{return a.read(Infinity)}finally{a.destroy()}};\nexports.version=\"17.0.1\";\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-dom-server.browser.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom-server.browser.development.js');\n}\n", "// gif.js 0.2.0 - https://github.com/jnordberg/gif.js\n(function (f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n    g.GIF = f();\n  }\n})(function () {\n  var define, module, exports;\n  return (function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof require == \"function\" && require;\n          if (!u && a) return a(o, !0);\n          if (i) return i(o, !0);\n          var f = new Error(\"Cannot find module '\" + o + \"'\");\n          throw ((f.code = \"MODULE_NOT_FOUND\"), f);\n        }\n        var l = (n[o] = { exports: {} });\n        t[o][0].call(\n          l.exports,\n          function (e) {\n            var n = t[o][1][e];\n            return s(n ? n : e);\n          },\n          l,\n          l.exports,\n          e,\n          t,\n          n,\n          r\n        );\n      }\n      return n[o].exports;\n    }\n    var i = typeof require == \"function\" && require;\n    for (var o = 0; o < r.length; o++) s(r[o]);\n    return s;\n  })(\n    {\n      1: [\n        function (require, module, exports) {\n          function EventEmitter() {\n            this._events = this._events || {};\n            this._maxListeners = this._maxListeners || undefined;\n          }\n          module.exports = EventEmitter;\n          EventEmitter.EventEmitter = EventEmitter;\n          EventEmitter.prototype._events = undefined;\n          EventEmitter.prototype._maxListeners = undefined;\n          EventEmitter.defaultMaxListeners = 10;\n          EventEmitter.prototype.setMaxListeners = function (n) {\n            if (!isNumber(n) || n < 0 || isNaN(n))\n              throw TypeError(\"n must be a positive number\");\n            this._maxListeners = n;\n            return this;\n          };\n          EventEmitter.prototype.emit = function (type) {\n            var er, handler, len, args, i, listeners;\n            if (!this._events) this._events = {};\n            if (type === \"error\") {\n              if (\n                !this._events.error ||\n                (isObject(this._events.error) && !this._events.error.length)\n              ) {\n                er = arguments[1];\n                if (er instanceof Error) {\n                  throw er;\n                } else {\n                  var err = new Error(\n                    'Uncaught, unspecified \"error\" event. (' + er + \")\"\n                  );\n                  err.context = er;\n                  throw err;\n                }\n              }\n            }\n            handler = this._events[type];\n            if (isUndefined(handler)) return false;\n            if (isFunction(handler)) {\n              switch (arguments.length) {\n                case 1:\n                  handler.call(this);\n                  break;\n                case 2:\n                  handler.call(this, arguments[1]);\n                  break;\n                case 3:\n                  handler.call(this, arguments[1], arguments[2]);\n                  break;\n                default:\n                  args = Array.prototype.slice.call(arguments, 1);\n                  handler.apply(this, args);\n              }\n            } else if (isObject(handler)) {\n              args = Array.prototype.slice.call(arguments, 1);\n              listeners = handler.slice();\n              len = listeners.length;\n              for (i = 0; i < len; i++) listeners[i].apply(this, args);\n            }\n            return true;\n          };\n          EventEmitter.prototype.addListener = function (type, listener) {\n            var m;\n            if (!isFunction(listener))\n              throw TypeError(\"listener must be a function\");\n            if (!this._events) this._events = {};\n            if (this._events.newListener)\n              this.emit(\n                \"newListener\",\n                type,\n                isFunction(listener.listener) ? listener.listener : listener\n              );\n            if (!this._events[type]) this._events[type] = listener;\n            else if (isObject(this._events[type]))\n              this._events[type].push(listener);\n            else this._events[type] = [this._events[type], listener];\n            if (isObject(this._events[type]) && !this._events[type].warned) {\n              if (!isUndefined(this._maxListeners)) {\n                m = this._maxListeners;\n              } else {\n                m = EventEmitter.defaultMaxListeners;\n              }\n              if (m && m > 0 && this._events[type].length > m) {\n                this._events[type].warned = true;\n                console.error(\n                  \"(node) warning: possible EventEmitter memory \" +\n                    \"leak detected. %d listeners added. \" +\n                    \"Use emitter.setMaxListeners() to increase limit.\",\n                  this._events[type].length\n                );\n                if (typeof console.trace === \"function\") {\n                  console.trace();\n                }\n              }\n            }\n            return this;\n          };\n          EventEmitter.prototype.on = EventEmitter.prototype.addListener;\n          EventEmitter.prototype.once = function (type, listener) {\n            if (!isFunction(listener))\n              throw TypeError(\"listener must be a function\");\n            var fired = false;\n            function g() {\n              this.removeListener(type, g);\n              if (!fired) {\n                fired = true;\n                listener.apply(this, arguments);\n              }\n            }\n            g.listener = listener;\n            this.on(type, g);\n            return this;\n          };\n          EventEmitter.prototype.removeListener = function (type, listener) {\n            var list, position, length, i;\n            if (!isFunction(listener))\n              throw TypeError(\"listener must be a function\");\n            if (!this._events || !this._events[type]) return this;\n            list = this._events[type];\n            length = list.length;\n            position = -1;\n            if (\n              list === listener ||\n              (isFunction(list.listener) && list.listener === listener)\n            ) {\n              delete this._events[type];\n              if (this._events.removeListener)\n                this.emit(\"removeListener\", type, listener);\n            } else if (isObject(list)) {\n              for (i = length; i-- > 0; ) {\n                if (\n                  list[i] === listener ||\n                  (list[i].listener && list[i].listener === listener)\n                ) {\n                  position = i;\n                  break;\n                }\n              }\n              if (position < 0) return this;\n              if (list.length === 1) {\n                list.length = 0;\n                delete this._events[type];\n              } else {\n                list.splice(position, 1);\n              }\n              if (this._events.removeListener)\n                this.emit(\"removeListener\", type, listener);\n            }\n            return this;\n          };\n          EventEmitter.prototype.removeAllListeners = function (type) {\n            var key, listeners;\n            if (!this._events) return this;\n            if (!this._events.removeListener) {\n              if (arguments.length === 0) this._events = {};\n              else if (this._events[type]) delete this._events[type];\n              return this;\n            }\n            if (arguments.length === 0) {\n              for (key in this._events) {\n                if (key === \"removeListener\") continue;\n                this.removeAllListeners(key);\n              }\n              this.removeAllListeners(\"removeListener\");\n              this._events = {};\n              return this;\n            }\n            listeners = this._events[type];\n            if (isFunction(listeners)) {\n              this.removeListener(type, listeners);\n            } else if (listeners) {\n              while (listeners.length)\n                this.removeListener(type, listeners[listeners.length - 1]);\n            }\n            delete this._events[type];\n            return this;\n          };\n          EventEmitter.prototype.listeners = function (type) {\n            var ret;\n            if (!this._events || !this._events[type]) ret = [];\n            else if (isFunction(this._events[type])) ret = [this._events[type]];\n            else ret = this._events[type].slice();\n            return ret;\n          };\n          EventEmitter.prototype.listenerCount = function (type) {\n            if (this._events) {\n              var evlistener = this._events[type];\n              if (isFunction(evlistener)) return 1;\n              else if (evlistener) return evlistener.length;\n            }\n            return 0;\n          };\n          EventEmitter.listenerCount = function (emitter, type) {\n            return emitter.listenerCount(type);\n          };\n          function isFunction(arg) {\n            return typeof arg === \"function\";\n          }\n          function isNumber(arg) {\n            return typeof arg === \"number\";\n          }\n          function isObject(arg) {\n            return typeof arg === \"object\" && arg !== null;\n          }\n          function isUndefined(arg) {\n            return arg === void 0;\n          }\n        },\n        {},\n      ],\n      2: [\n        function (require, module, exports) {\n          var UA, browser, mode, platform, ua;\n          ua = navigator.userAgent.toLowerCase();\n          platform = navigator.platform.toLowerCase();\n          UA = ua.match(\n            /(opera|ie|firefox|chrome|version)[\\s\\/:]([\\w\\d\\.]+)?.*?(safari|version[\\s\\/:]([\\w\\d\\.]+)|$)/\n          ) || [null, \"unknown\", 0];\n          mode = UA[1] === \"ie\" && document.documentMode;\n          browser = {\n            name: UA[1] === \"version\" ? UA[3] : UA[1],\n            version:\n              mode || parseFloat(UA[1] === \"opera\" && UA[4] ? UA[4] : UA[2]),\n            platform: {\n              name: ua.match(/ip(?:ad|od|hone)/)\n                ? \"ios\"\n                : (ua.match(/(?:webos|android)/) ||\n                    platform.match(/mac|win|linux/) || [\"other\"])[0],\n            },\n          };\n          browser[browser.name] = true;\n          browser[browser.name + parseInt(browser.version, 10)] = true;\n          browser.platform[browser.platform.name] = true;\n          module.exports = browser;\n        },\n        {},\n      ],\n      3: [\n        function (require, module, exports) {\n          var EventEmitter,\n            GIF,\n            browser,\n            extend = function (child, parent) {\n              for (var key in parent) {\n                if (hasProp.call(parent, key)) child[key] = parent[key];\n              }\n              function ctor() {\n                this.constructor = child;\n              }\n              ctor.prototype = parent.prototype;\n              child.prototype = new ctor();\n              child.__super__ = parent.prototype;\n              return child;\n            },\n            hasProp = {}.hasOwnProperty,\n            indexOf =\n              [].indexOf ||\n              function (item) {\n                for (var i = 0, l = this.length; i < l; i++) {\n                  if (i in this && this[i] === item) return i;\n                }\n                return -1;\n              },\n            slice = [].slice;\n          EventEmitter = require(\"events\").EventEmitter;\n          browser = require(\"./browser.coffee\");\n          GIF = (function (superClass) {\n            var defaults, frameDefaults;\n            extend(GIF, superClass);\n            defaults = {\n              workerScript: \"gif.worker.js\",\n              workers: 2,\n              repeat: 0,\n              background: \"#fff\",\n              quality: 10,\n              width: null,\n              height: null,\n              transparent: null,\n              debug: false,\n              dither: false,\n            };\n            frameDefaults = { delay: 500, copy: false };\n            function GIF(options) {\n              var base, key, value;\n              this.running = false;\n              this.options = {};\n              this.frames = [];\n              this.freeWorkers = [];\n              this.activeWorkers = [];\n              this.setOptions(options);\n              for (key in defaults) {\n                value = defaults[key];\n                if ((base = this.options)[key] == null) {\n                  base[key] = value;\n                }\n              }\n            }\n            GIF.prototype.setOption = function (key, value) {\n              this.options[key] = value;\n              if (\n                this._canvas != null &&\n                (key === \"width\" || key === \"height\")\n              ) {\n                return (this._canvas[key] = value);\n              }\n            };\n            GIF.prototype.setOptions = function (options) {\n              var key, results, value;\n              results = [];\n              for (key in options) {\n                if (!hasProp.call(options, key)) continue;\n                value = options[key];\n                results.push(this.setOption(key, value));\n              }\n              return results;\n            };\n            GIF.prototype.addFrame = function (image, options) {\n              var frame, key;\n              if (options == null) {\n                options = {};\n              }\n              frame = {};\n              frame.transparent = this.options.transparent;\n              for (key in frameDefaults) {\n                frame[key] = options[key] || frameDefaults[key];\n              }\n              if (this.options.width == null) {\n                this.setOption(\"width\", image.width);\n              }\n              if (this.options.height == null) {\n                this.setOption(\"height\", image.height);\n              }\n              if (\n                typeof ImageData !== \"undefined\" &&\n                ImageData !== null &&\n                image instanceof ImageData\n              ) {\n                frame.data = image.data;\n              } else if (\n                (typeof CanvasRenderingContext2D !== \"undefined\" &&\n                  CanvasRenderingContext2D !== null &&\n                  image instanceof CanvasRenderingContext2D) ||\n                (typeof WebGLRenderingContext !== \"undefined\" &&\n                  WebGLRenderingContext !== null &&\n                  image instanceof WebGLRenderingContext)\n              ) {\n                if (options.copy) {\n                  frame.data = this.getContextData(image);\n                } else {\n                  frame.context = image;\n                }\n              } else if (image.childNodes != null) {\n                if (options.copy) {\n                  frame.data = this.getImageData(image);\n                } else {\n                  frame.image = image;\n                }\n              } else {\n                throw new Error(\"Invalid image\");\n              }\n              return this.frames.push(frame);\n            };\n            GIF.prototype.render = function () {\n              var i, j, numWorkers, ref;\n              if (this.running) {\n                throw new Error(\"Already running\");\n              }\n              if (this.options.width == null || this.options.height == null) {\n                throw new Error(\n                  \"Width and height must be set prior to rendering\"\n                );\n              }\n              this.running = true;\n              this.nextFrame = 0;\n              this.finishedFrames = 0;\n              this.imageParts = function () {\n                var j, ref, results;\n                results = [];\n                for (\n                  i = j = 0, ref = this.frames.length;\n                  0 <= ref ? j < ref : j > ref;\n                  i = 0 <= ref ? ++j : --j\n                ) {\n                  results.push(null);\n                }\n                return results;\n              }.call(this);\n              numWorkers = this.spawnWorkers();\n              if (this.options.globalPalette === true) {\n                this.renderNextFrame();\n              } else {\n                for (\n                  i = j = 0, ref = numWorkers;\n                  0 <= ref ? j < ref : j > ref;\n                  i = 0 <= ref ? ++j : --j\n                ) {\n                  this.renderNextFrame();\n                }\n              }\n              this.emit(\"start\");\n              return this.emit(\"progress\", 0);\n            };\n            GIF.prototype.abort = function () {\n              var worker;\n              while (true) {\n                worker = this.activeWorkers.shift();\n                if (worker == null) {\n                  break;\n                }\n                this.log(\"killing active worker\");\n                worker.terminate();\n              }\n              this.running = false;\n              return this.emit(\"abort\");\n            };\n            GIF.prototype.spawnWorkers = function () {\n              var j, numWorkers, ref, results;\n              numWorkers = Math.min(this.options.workers, this.frames.length);\n              (function () {\n                results = [];\n                for (\n                  var j = (ref = this.freeWorkers.length);\n                  ref <= numWorkers ? j < numWorkers : j > numWorkers;\n                  ref <= numWorkers ? j++ : j--\n                ) {\n                  results.push(j);\n                }\n                return results;\n              }\n                .apply(this)\n                .forEach(\n                  (function (_this) {\n                    return function (i) {\n                      var worker;\n                      _this.log(\"spawning worker \" + i);\n                      worker = new Worker(_this.options.workerScript);\n                      worker.onmessage = function (event) {\n                        _this.activeWorkers.splice(\n                          _this.activeWorkers.indexOf(worker),\n                          1\n                        );\n                        _this.freeWorkers.push(worker);\n                        return _this.frameFinished(event.data);\n                      };\n                      return _this.freeWorkers.push(worker);\n                    };\n                  })(this)\n                ));\n              return numWorkers;\n            };\n            GIF.prototype.frameFinished = function (frame) {\n              var i, j, ref;\n              this.log(\n                \"frame \" +\n                  frame.index +\n                  \" finished - \" +\n                  this.activeWorkers.length +\n                  \" active\"\n              );\n              this.finishedFrames++;\n              this.emit(\"progress\", this.finishedFrames / this.frames.length);\n              this.imageParts[frame.index] = frame;\n              if (this.options.globalPalette === true) {\n                this.options.globalPalette = frame.globalPalette;\n                this.log(\"global palette analyzed\");\n                if (this.frames.length > 2) {\n                  for (\n                    i = j = 1, ref = this.freeWorkers.length;\n                    1 <= ref ? j < ref : j > ref;\n                    i = 1 <= ref ? ++j : --j\n                  ) {\n                    this.renderNextFrame();\n                  }\n                }\n              }\n              if (indexOf.call(this.imageParts, null) >= 0) {\n                return this.renderNextFrame();\n              } else {\n                return this.finishRendering();\n              }\n            };\n            GIF.prototype.finishRendering = function () {\n              var data,\n                frame,\n                i,\n                image,\n                j,\n                k,\n                l,\n                len,\n                len1,\n                len2,\n                len3,\n                offset,\n                page,\n                ref,\n                ref1,\n                ref2;\n              len = 0;\n              ref = this.imageParts;\n              for (j = 0, len1 = ref.length; j < len1; j++) {\n                frame = ref[j];\n                len += (frame.data.length - 1) * frame.pageSize + frame.cursor;\n              }\n              len += frame.pageSize - frame.cursor;\n              this.log(\n                \"rendering finished - filesize \" + Math.round(len / 1e3) + \"kb\"\n              );\n              data = new Uint8Array(len);\n              offset = 0;\n              ref1 = this.imageParts;\n              for (k = 0, len2 = ref1.length; k < len2; k++) {\n                frame = ref1[k];\n                ref2 = frame.data;\n                for (i = l = 0, len3 = ref2.length; l < len3; i = ++l) {\n                  page = ref2[i];\n                  data.set(page, offset);\n                  if (i === frame.data.length - 1) {\n                    offset += frame.cursor;\n                  } else {\n                    offset += frame.pageSize;\n                  }\n                }\n              }\n              image = new Blob([data], { type: \"image/gif\" });\n              return this.emit(\"finished\", image, data);\n            };\n            GIF.prototype.renderNextFrame = function () {\n              var frame, task, worker;\n              if (this.freeWorkers.length === 0) {\n                throw new Error(\"No free workers\");\n              }\n              if (this.nextFrame >= this.frames.length) {\n                return;\n              }\n              frame = this.frames[this.nextFrame++];\n              worker = this.freeWorkers.shift();\n              task = this.getTask(frame);\n              this.log(\n                \"starting frame \" +\n                  (task.index + 1) +\n                  \" of \" +\n                  this.frames.length\n              );\n              this.activeWorkers.push(worker);\n              return worker.postMessage(task);\n            };\n            GIF.prototype.getContextData = function (ctx) {\n              return ctx.getImageData(\n                0,\n                0,\n                this.options.width,\n                this.options.height\n              ).data;\n            };\n            GIF.prototype.getImageData = function (image) {\n              var ctx;\n              if (this._canvas == null) {\n                this._canvas = document.createElement(\"canvas\");\n                this._canvas.width = this.options.width;\n                this._canvas.height = this.options.height;\n              }\n              ctx = this._canvas.getContext(\"2d\");\n              ctx.setFill = this.options.background;\n              ctx.fillRect(0, 0, this.options.width, this.options.height);\n              ctx.drawImage(image, 0, 0);\n              return this.getContextData(ctx);\n            };\n            GIF.prototype.getTask = function (frame) {\n              var index, task;\n              index = this.frames.indexOf(frame);\n              task = {\n                index: index,\n                last: index === this.frames.length - 1,\n                delay: frame.delay,\n                transparent: frame.transparent,\n                width: this.options.width,\n                height: this.options.height,\n                quality: this.options.quality,\n                dither: this.options.dither,\n                globalPalette: this.options.globalPalette,\n                repeat: this.options.repeat,\n                canTransfer: browser.name === \"chrome\",\n              };\n              if (frame.data != null) {\n                task.data = frame.data;\n              } else if (frame.context != null) {\n                task.data = this.getContextData(frame.context);\n              } else if (frame.image != null) {\n                task.data = this.getImageData(frame.image);\n              } else {\n                throw new Error(\"Invalid frame\");\n              }\n              return task;\n            };\n            GIF.prototype.log = function () {\n              var args;\n              args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n              if (!this.options.debug) {\n                return;\n              }\n              return console.log.apply(console, args);\n            };\n            return GIF;\n          })(EventEmitter);\n          module.exports = GIF;\n        },\n        { \"./browser.coffee\": 2, events: 1 },\n      ],\n    },\n    {},\n    [3]\n  )(3);\n});\n", "/* jshint browserify: true */\n\n/**\n *  Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *\n *  https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\n'use strict';\n\n/**\n * Shim to disable schema fingerprint computation.\n *\n */\n\nfunction createHash() {\n  throw new Error('fingerprinting not supported in the browser');\n}\n\n\nmodule.exports = {\n  createHash: createHash\n};\n", "/* jshint node: true */\n\n/**\n *  Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *\n *  https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\n'use strict';\n\nvar crypto = require('crypto');\n\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param s {String} The string.\n *\n */\nfunction capitalize(s) { return s.charAt(0).toUpperCase() + s.slice(1); }\n\n/**\n * Compare two numbers.\n *\n * @param n1 {Number} The first one.\n * @param n2 {Number} The second one.\n *\n */\nfunction compare(n1, n2) { return n1 === n2 ? 0 : (n1 < n2 ? -1 : 1); }\n\n/**\n * Compute a string's hash.\n *\n * @param str {String} The string to hash.\n * @param algorithm {String} The algorithm used. Defaults to MD5.\n *\n */\nfunction getHash(str, algorithm) {\n  algorithm = algorithm || 'md5';\n  var hash = crypto.createHash(algorithm);\n  hash.end(str);\n  return hash.read();\n}\n\n/**\n * Find index of value in array.\n *\n * @param arr {Array} Can also be a false-ish value.\n * @param v {Object} Value to find.\n *\n * Returns -1 if not found, -2 if found multiple times.\n *\n */\nfunction singleIndexOf(arr, v) {\n  var pos = -1;\n  var i, l;\n  if (!arr) {\n    return -1;\n  }\n  for (i = 0, l = arr.length; i < l; i++) {\n    if (arr[i] === v) {\n      if (pos >= 0) {\n        return -2;\n      }\n      pos = i;\n    }\n  }\n  return pos;\n}\n\n/**\n * Convert array to map.\n *\n * @param arr {Array} Elements.\n * @param fn {Function} Function returning an element's key.\n *\n */\nfunction toMap(arr, fn) {\n  var obj = {};\n  var i, elem;\n  for (i = 0; i < arr.length; i++) {\n    elem = arr[i];\n    obj[fn(elem)] = elem;\n  }\n  return obj;\n}\n\n/**\n * Check whether an array has duplicates.\n *\n * @param arr {Array} The array.\n * @param fn {Function} Optional function to apply to each element.\n *\n */\nfunction hasDuplicates(arr, fn) {\n  var obj = {};\n  var i, l, elem;\n  for (i = 0, l = arr.length; i < l; i++) {\n    elem = arr[i];\n    if (fn) {\n      elem = fn(elem);\n    }\n    if (obj[elem]) {\n      return true;\n    }\n    obj[elem] = true;\n  }\n  return false;\n}\n\n/**\n * \"Abstract\" function to help with \"subclassing\".\n *\n */\nfunction abstractFunction() { throw new Error('abstract'); }\n\n/**\n * Generator of random things.\n *\n * Inspired by: https://stackoverflow.com/a/424445/1062617\n *\n */\nfunction Lcg(seed) {\n  var a = 1103515245;\n  var c = 12345;\n  var m = Math.pow(2, 31);\n  var state = Math.floor(seed || Math.random() * (m - 1));\n\n  this._max = m;\n  this._nextInt = function () {\n    state = (a * state + c) % m;\n    return state;\n  };\n}\n\nLcg.prototype.nextBoolean = function () {\n  // jshint -W018\n  return !!(this._nextInt() % 2);\n};\n\nLcg.prototype.nextInt = function (start, end) {\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  }\n  end = end === undefined ? this._max : end;\n  return start + Math.floor(this.nextFloat() * (end - start));\n};\n\nLcg.prototype.nextFloat = function (start, end) {\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  }\n  end = end === undefined ? 1 : end;\n  return start + (end - start) * this._nextInt() / this._max;\n};\n\nLcg.prototype.nextString = function(len, flags) {\n  len |= 0;\n  flags = flags || 'aA';\n  var mask = '';\n  if (flags.indexOf('a') > -1) {\n    mask += 'abcdefghijklmnopqrstuvwxyz';\n  }\n  if (flags.indexOf('A') > -1) {\n    mask += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  }\n  if (flags.indexOf('#') > -1) {\n    mask += '0123456789';\n  }\n  if (flags.indexOf('!') > -1) {\n    mask += '~`!@#$%^&*()_+-={}[]:\";\\'<>?,./|\\\\';\n  }\n  var result = [];\n  for (var i = 0; i < len; i++) {\n    result.push(this.choice(mask));\n  }\n  return result.join('');\n};\n\nLcg.prototype.nextBuffer = function (len) {\n  var arr = [];\n  var i;\n  for (i = 0; i < len; i++) {\n    arr.push(this.nextInt(256));\n  }\n  return new Buffer(arr);\n};\n\nLcg.prototype.choice = function (arr) {\n  var len = arr.length;\n  if (!len) {\n    throw new Error('choosing from empty array');\n  }\n  return arr[this.nextInt(len)];\n};\n\n/**\n * Ordered queue which returns items consecutively.\n *\n * This is actually a heap by index, with the added requirements that elements\n * can only be retrieved consecutively.\n *\n */\nfunction OrderedQueue() {\n  this._index = 0;\n  this._items = [];\n}\n\nOrderedQueue.prototype.push = function (item) {\n  var items = this._items;\n  var i = items.length | 0;\n  var j;\n  items.push(item);\n  while (i > 0 && items[i].index < items[j = ((i - 1) >> 1)].index) {\n    item = items[i];\n    items[i] = items[j];\n    items[j] = item;\n    i = j;\n  }\n};\n\nOrderedQueue.prototype.pop = function () {\n  var items = this._items;\n  var len = (items.length - 1) | 0;\n  var first = items[0];\n  if (!first || first.index > this._index) {\n    return null;\n  }\n  this._index++;\n  if (!len) {\n    items.pop();\n    return first;\n  }\n  items[0] = items.pop();\n  var mid = len >> 1;\n  var i = 0;\n  var i1, i2, j, item, c, c1, c2;\n  while (i < mid) {\n    item = items[i];\n    i1 = (i << 1) + 1;\n    i2 = (i + 1) << 1;\n    c1 = items[i1];\n    c2 = items[i2];\n    if (!c2 || c1.index <= c2.index) {\n      c = c1;\n      j = i1;\n    } else {\n      c = c2;\n      j = i2;\n    }\n    if (c.index >= item.index) {\n      break;\n    }\n    items[j] = item;\n    items[i] = c;\n    i = j;\n  }\n  return first;\n};\n\n/**\n * A tap is a buffer which remembers what has been already read.\n *\n * It is optimized for performance, at the cost of failing silently when\n * overflowing the buffer. This is a purposeful trade-off given the expected\n * rarity of this case and the large performance hit necessary to enforce\n * validity. See `isValid` below for more information.\n *\n */\nfunction Tap(buf, pos) {\n  this.buf = buf;\n  this.pos = pos | 0;\n}\n\n/**\n * Check that the tap is in a valid state.\n *\n * For efficiency reasons, none of the methods below will fail if an overflow\n * occurs (either read, skip, or write). For this reason, it is up to the\n * caller to always check that the read, skip, or write was valid by calling\n * this method.\n *\n */\nTap.prototype.isValid = function () { return this.pos <= this.buf.length; };\n\n/**\n * Returns the contents of the tap up to the current position.\n *\n */\nTap.prototype.getValue = function () { return this.buf.slice(0, this.pos); };\n\n// Read, skip, write methods.\n//\n// These should fail silently when the buffer overflows. Note this is only\n// required to be true when the functions are decoding valid objects. For\n// example errors will still be thrown if a bad count is read, leading to a\n// negative position offset (which will typically cause a failure in\n// `readFixed`).\n\nTap.prototype.readBoolean = function () { return !!this.buf[this.pos++]; };\n\nTap.prototype.skipBoolean = function () { this.pos++; };\n\nTap.prototype.writeBoolean = function (b) { this.buf[this.pos++] = !!b; };\n\nTap.prototype.readInt = Tap.prototype.readLong = function () {\n  var n = 0;\n  var k = 0;\n  var buf = this.buf;\n  var b, h, f, fk;\n\n  do {\n    b = buf[this.pos++];\n    h = b & 0x80;\n    n |= (b & 0x7f) << k;\n    k += 7;\n  } while (h && k < 28);\n\n  if (h) {\n    // Switch to float arithmetic, otherwise we might overflow.\n    f = n;\n    fk = 268435456; // 2 ** 28.\n    do {\n      b = buf[this.pos++];\n      f += (b & 0x7f) * fk;\n      fk *= 128;\n    } while (b & 0x80);\n    return (f % 2 ? -(f + 1) : f) / 2;\n  }\n\n  return (n >> 1) ^ -(n & 1);\n};\n\nTap.prototype.skipInt = Tap.prototype.skipLong = function () {\n  var buf = this.buf;\n  while (buf[this.pos++] & 0x80) {}\n};\n\nTap.prototype.writeInt = Tap.prototype.writeLong = function (n) {\n  var buf = this.buf;\n  var f, m;\n\n  if (n >= -1073741824 && n < 1073741824) {\n    // Won't overflow, we can use integer arithmetic.\n    m = n >= 0 ? n << 1 : (~n << 1) | 1;\n    do {\n      buf[this.pos] = m & 0x7f;\n      m >>= 7;\n    } while (m && (buf[this.pos++] |= 0x80));\n  } else {\n    // We have to use slower floating arithmetic.\n    f = n >= 0 ? n * 2 : (-n * 2) - 1;\n    do {\n      buf[this.pos] = f & 0x7f;\n      f /= 128;\n    } while (f >= 1 && (buf[this.pos++] |= 0x80));\n  }\n  this.pos++;\n};\n\nTap.prototype.readFloat = function () {\n  var buf = this.buf;\n  var pos = this.pos;\n  this.pos += 4;\n  if (this.pos > buf.length) {\n    return;\n  }\n  return this.buf.readFloatLE(pos);\n};\n\nTap.prototype.skipFloat = function () { this.pos += 4; };\n\nTap.prototype.writeFloat = function (f) {\n  var buf = this.buf;\n  var pos = this.pos;\n  this.pos += 4;\n  if (this.pos > buf.length) {\n    return;\n  }\n  return this.buf.writeFloatLE(f, pos);\n};\n\nTap.prototype.readDouble = function () {\n  var buf = this.buf;\n  var pos = this.pos;\n  this.pos += 8;\n  if (this.pos > buf.length) {\n    return;\n  }\n  return this.buf.readDoubleLE(pos);\n};\n\nTap.prototype.skipDouble = function () { this.pos += 8; };\n\nTap.prototype.writeDouble = function (d) {\n  var buf = this.buf;\n  var pos = this.pos;\n  this.pos += 8;\n  if (this.pos > buf.length) {\n    return;\n  }\n  return this.buf.writeDoubleLE(d, pos);\n};\n\nTap.prototype.readFixed = function (len) {\n  var pos = this.pos;\n  this.pos += len;\n  if (this.pos > this.buf.length) {\n    return;\n  }\n  var fixed = new Buffer(len);\n  this.buf.copy(fixed, 0, pos, pos + len);\n  return fixed;\n};\n\nTap.prototype.skipFixed = function (len) { this.pos += len; };\n\nTap.prototype.writeFixed = function (buf, len) {\n  len = len || buf.length;\n  var pos = this.pos;\n  this.pos += len;\n  if (this.pos > this.buf.length) {\n    return;\n  }\n  buf.copy(this.buf, pos, 0, len);\n};\n\nTap.prototype.readBytes = function () {\n  return this.readFixed(this.readLong());\n};\n\nTap.prototype.skipBytes = function () {\n  var len = this.readLong();\n  this.pos += len;\n};\n\nTap.prototype.writeBytes = function (buf) {\n  var len = buf.length;\n  this.writeLong(len);\n  this.writeFixed(buf, len);\n};\n\nTap.prototype.readString = function () {\n  var len = this.readLong();\n  var pos = this.pos;\n  var buf = this.buf;\n  this.pos += len;\n  if (this.pos > buf.length) {\n    return;\n  }\n  return this.buf.utf8Slice(pos, pos + len);\n};\n\nTap.prototype.skipString = function () {\n  var len = this.readLong();\n  this.pos += len;\n};\n\nTap.prototype.writeString = function (s) {\n  var len = Buffer.byteLength(s);\n  this.writeLong(len);\n  var pos = this.pos;\n  this.pos += len;\n  if (this.pos > this.buf.length) {\n    return;\n  }\n  this.buf.utf8Write(s, pos, len);\n};\n\n// Helper used to speed up writing defaults.\n\nTap.prototype.writeBinary = function (str, len) {\n  var pos = this.pos;\n  this.pos += len;\n  if (this.pos > this.buf.length) {\n    return;\n  }\n  this.buf.write(str, pos, len, 'binary');\n};\n\n// Binary comparison methods.\n//\n// These are not guaranteed to consume the objects they are comparing when\n// returning a non-zero result (allowing for performance benefits), so no other\n// operations should be done on either tap after a compare returns a non-zero\n// value. Also, these methods do not have the same silent failure requirement\n// as read, skip, and write since they are assumed to be called on valid\n// buffers.\n\nTap.prototype.matchBoolean = function (tap) {\n  return this.buf[this.pos++] - tap.buf[tap.pos++];\n};\n\nTap.prototype.matchInt = Tap.prototype.matchLong = function (tap) {\n  var n1 = this.readLong();\n  var n2 = tap.readLong();\n  return n1 === n2 ? 0 : (n1 < n2 ? -1 : 1);\n};\n\nTap.prototype.matchFloat = function (tap) {\n  var n1 = this.readFloat();\n  var n2 = tap.readFloat();\n  return n1 === n2 ? 0 : (n1 < n2 ? -1 : 1);\n};\n\nTap.prototype.matchDouble = function (tap) {\n  var n1 = this.readDouble();\n  var n2 = tap.readDouble();\n  return n1 === n2 ? 0 : (n1 < n2 ? -1 : 1);\n};\n\nTap.prototype.matchFixed = function (tap, len) {\n  return this.readFixed(len).compare(tap.readFixed(len));\n};\n\nTap.prototype.matchBytes = Tap.prototype.matchString = function (tap) {\n  var l1 = this.readLong();\n  var p1 = this.pos;\n  this.pos += l1;\n  var l2 = tap.readLong();\n  var p2 = tap.pos;\n  tap.pos += l2;\n  var b1 = this.buf.slice(p1, this.pos);\n  var b2 = tap.buf.slice(p2, tap.pos);\n  return b1.compare(b2);\n};\n\n// Functions for supporting custom long classes.\n//\n// The two following methods allow the long implementations to not have to\n// worry about Avro's zigzag encoding, we directly expose longs as unpacked.\n\nTap.prototype.unpackLongBytes = function () {\n  var res = new Buffer(8);\n  var n = 0;\n  var i = 0; // Byte index in target buffer.\n  var j = 6; // Bit offset in current target buffer byte.\n  var buf = this.buf;\n  var b, neg;\n\n  b = buf[this.pos++];\n  neg = b & 1;\n  res.fill(0);\n\n  n |= (b & 0x7f) >> 1;\n  while (b & 0x80) {\n    b = buf[this.pos++];\n    n |= (b & 0x7f) << j;\n    j += 7;\n    if (j >= 8) {\n      // Flush byte.\n      j -= 8;\n      res[i++] = n;\n      n >>= 8;\n    }\n  }\n  res[i] = n;\n\n  if (neg) {\n    invert(res, 8);\n  }\n\n  return res;\n};\n\nTap.prototype.packLongBytes = function (buf) {\n  var neg = (buf[7] & 0x80) >> 7;\n  var res = this.buf;\n  var j = 1;\n  var k = 0;\n  var m = 3;\n  var n;\n\n  if (neg) {\n    invert(buf, 8);\n    n = 1;\n  } else {\n    n = 0;\n  }\n\n  var parts = [\n    buf.readUIntLE(0, 3),\n    buf.readUIntLE(3, 3),\n    buf.readUIntLE(6, 2)\n  ];\n  // Not reading more than 24 bits because we need to be able to combine the\n  // \"carry\" bits from the previous part and JavaScript only supports bitwise\n  // operations on 32 bit integers.\n  while (m && !parts[--m]) {} // Skip trailing 0s.\n\n  // Leading parts (if any), we never bail early here since we need the\n  // continuation bit to be set.\n  while (k < m) {\n    n |= parts[k++] << j;\n    j += 24;\n    while (j > 7) {\n      res[this.pos++] = (n & 0x7f) | 0x80;\n      n >>= 7;\n      j -= 7;\n    }\n  }\n\n  // Final part, similar to normal packing aside from the initial offset.\n  n |= parts[m] << j;\n  do {\n    res[this.pos] = n & 0x7f;\n    n >>= 7;\n  } while (n && (res[this.pos++] |= 0x80));\n  this.pos++;\n\n  // Restore original buffer (could make this optional?).\n  if (neg) {\n    invert(buf, 8);\n  }\n};\n\n// Helpers.\n\n/**\n * Invert all bits in a buffer.\n *\n * @param buf {Buffer} Non-empty buffer to invert.\n * @param len {Number} Buffer length (must be positive).\n *\n */\nfunction invert(buf, len) {\n  while (len--) {\n    buf[len] = ~buf[len];\n  }\n}\n\n\nmodule.exports = {\n  abstractFunction: abstractFunction,\n  capitalize: capitalize,\n  compare: compare,\n  getHash: getHash,\n  toMap: toMap,\n  singleIndexOf: singleIndexOf,\n  hasDuplicates: hasDuplicates,\n  Lcg: Lcg,\n  OrderedQueue: OrderedQueue,\n  Tap: Tap\n};\n", "'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar origSymbol = global.Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n", "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n", "'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n", "'use strict';\n\n/* globals\n\tAggregateError,\n\tSharedArrayBuffer,\n*/\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n", "'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n", "'use strict';\n\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n", "'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n", "\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nmodule.exports = function forEach (obj, fn, ctx) {\n    if (toString.call(fn) !== '[object Function]') {\n        throw new TypeError('iterator must be a function');\n    }\n    var l = obj.length;\n    if (l === +l) {\n        for (var i = 0; i < l; i++) {\n            fn.call(ctx, obj[i], i, obj);\n        }\n    } else {\n        for (var k in obj) {\n            if (hasOwn.call(obj, k)) {\n                fn.call(ctx, obj[k], k, obj);\n            }\n        }\n    }\n};\n\n", "'use strict';\n\nvar possibleNames = [\n\t'BigInt64Array',\n\t'BigUint64Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Int8Array',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray'\n];\n\nmodule.exports = function availableTypedArrays() {\n\tvar out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof global[possibleNames[i]] === 'function') {\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n", "'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n", "'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%');\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n", "'use strict';\n\nvar forEach = require('foreach');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasSymbols = require('has-symbols')();\nvar hasToStringTag = hasSymbols && typeof Symbol.toStringTag === 'symbol';\n\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new global[typedArray]();\n\t\tif (!(Symbol.toStringTag in arr)) {\n\t\t\tthrow new EvalError('this engine has support for Symbol.toStringTag, but ' + typedArray + ' does not have the property! Please report this.');\n\t\t}\n\t\tvar proto = getPrototypeOf(arr);\n\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\tif (!descriptor) {\n\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t}\n\t\ttoStrTags[typedArray] = descriptor.get;\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n", "'use strict';\n\nvar forEach = require('foreach');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasSymbols = require('has-symbols')();\nvar hasToStringTag = hasSymbols && typeof Symbol.toStringTag === 'symbol';\n\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tif (typeof global[typedArray] === 'function') {\n\t\t\tvar arr = new global[typedArray]();\n\t\t\tif (!(Symbol.toStringTag in arr)) {\n\t\t\t\tthrow new EvalError('this engine has support for Symbol.toStringTag, but ' + typedArray + ' does not have the property! Please report this.');\n\t\t\t}\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar foundName = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!foundName) {\n\t\t\ttry {\n\t\t\t\tvar name = getter.call(value);\n\t\t\t\tif (name === typedArray) {\n\t\t\t\t\tfoundName = name;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\treturn foundName;\n};\n\nvar isTypedArray = require('is-typed-array');\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!isTypedArray(value)) { return false; }\n\tif (!hasToStringTag) { return $slice($toString(value), 8, -1); }\n\treturn tryTypedArrays(value);\n};\n", "// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nisSharedArrayBufferToString.working = (\n  typeof SharedArrayBuffer !== 'undefined' &&\n  isSharedArrayBufferToString(new SharedArrayBuffer())\n);\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBuffer;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n", "module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n", "/* jshint node: true */\n\n/**\n *  Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *\n *  https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\n'use strict';\n\nvar utils = require('./utils'),\n    buffer = require('buffer'), // For `SlowBuffer`.\n    util = require('util');\n\n// Convenience imports.\nvar Tap = utils.Tap;\nvar f = util.format;\n\n// All Avro types.\nvar TYPES = {\n  'array': ArrayType,\n  'boolean': BooleanType,\n  'bytes': BytesType,\n  'double': DoubleType,\n  'enum': EnumType,\n  'error': RecordType,\n  'fixed': FixedType,\n  'float': FloatType,\n  'int': IntType,\n  'long': LongType,\n  'map': MapType,\n  'null': NullType,\n  'record': RecordType,\n  'request': RecordType,\n  'string': StringType,\n  'union': UnionType\n};\n\n// Valid (field, type, and symbol) name regex.\nvar NAME_PATTERN = /^[A-Za-z_][A-Za-z0-9_]*$/;\n\n// Random generator.\nvar RANDOM = new utils.Lcg();\n\n// Encoding tap (shared for performance).\nvar TAP = new Tap(new buffer.SlowBuffer(1024));\n\n// Path prefix for validity checks (shared for performance).\nvar PATH = [];\n\n// Currently active logical type, used for name redirection.\nvar LOGICAL_TYPE = null;\n\n\n/**\n * Schema parsing entry point.\n *\n * It isn't exposed directly but called from `parse` inside `index.js` (node)\n * or `avro.js` (browserify) which each add convenience functionality.\n *\n */\nfunction createType(attrs, opts) {\n  if (attrs instanceof Type) {\n    return attrs;\n  }\n\n  opts = getOpts(attrs, opts);\n\n  var type;\n  if (typeof attrs == 'string') { // Type reference.\n    if (opts.namespace && !~attrs.indexOf('.') && !isPrimitive(attrs)) {\n      attrs = opts.namespace + '.' + attrs;\n    }\n    type = opts.registry[attrs];\n    if (type) {\n      // Type was already defined, return it.\n      return type;\n    }\n    if (isPrimitive(attrs)) {\n      // Reference to a primitive type. These are also defined names by default\n      // so we create the appropriate type and it to the registry for future\n      // reference.\n      type = opts.registry[attrs] = createType({type: attrs}, opts);\n      return type;\n    }\n    throw new Error(f('undefined type name: %s', attrs));\n  }\n\n  if (opts.typeHook && (type = opts.typeHook(attrs, opts))) {\n    if (!(type instanceof Type)) {\n      throw new Error(f('invalid typehook return value: %j', type));\n    }\n    return type;\n  }\n\n  if (attrs.logicalType && !LOGICAL_TYPE) {\n    var DerivedType = opts.logicalTypes[attrs.logicalType];\n    if (DerivedType) {\n      var registry = {};\n      Object.keys(opts.registry).forEach(function (key) {\n        registry[key] = opts.registry[key];\n      });\n      try {\n        return new DerivedType(attrs, opts);\n      } catch (err) {\n        if (opts.assertLogicalTypes) {\n          throw err;\n        }\n        LOGICAL_TYPE = null;\n        opts.registry = registry; // In case any names were registered.\n      }\n    }\n  }\n\n  if (attrs instanceof Array) { // Union.\n    type = new UnionType(attrs, opts);\n  } else { // New type definition.\n    type = (function (typeName) {\n      var Type = TYPES[typeName];\n      if (Type === undefined) {\n        throw new Error(f('unknown type: %j', typeName));\n      }\n      return new Type(attrs, opts);\n    })(attrs.type);\n  }\n  return type;\n}\n\n/**\n * \"Abstract\" base Avro type class.\n *\n * This class' constructor will register any named types to support\n * recursive schemas.\n *\n * All type values are represented in memory similarly to their JSON\n * representation, except for `bytes` and `fixed` which are represented as\n * `Buffer`s. See individual subclasses for details.\n *\n */\nfunction Type(registry) {\n  var name = this._name;\n  var type = LOGICAL_TYPE || this;\n  LOGICAL_TYPE = null;\n\n  if (registry === undefined || name === undefined) {\n    return;\n  }\n\n  var prev = registry[name];\n  if (prev !== undefined) {\n    throw new Error(f('duplicate type name: %s', name));\n  }\n  registry[name] = type;\n}\n\nType.__reset = function (size) { TAP.buf = new buffer.SlowBuffer(size); };\n\nType.prototype.createResolver = function (type, opts) {\n  if (!(type instanceof Type)) {\n    // More explicit error message than the \"incompatible type\" thrown\n    // otherwise (especially because of the overridden `toJSON` method).\n    throw new Error(f('not a type: %j', type));\n  }\n\n  if (type instanceof LogicalType && !(this instanceof LogicalType)) {\n    // Trying to read a logical type as a built-in: unwrap the logical type.\n    return this.createResolver(type._underlyingType, opts);\n  }\n\n  opts = opts || {};\n  opts.registry = opts.registry || {};\n\n  var resolver, key;\n  if (this instanceof RecordType && type instanceof RecordType) {\n    key = this._name + ':' + type._name; // ':' is illegal in Avro type names.\n    resolver = opts.registry[key];\n    if (resolver) {\n      return resolver;\n    }\n  }\n\n  resolver = new Resolver(this);\n  if (key) { // Register resolver early for recursive schemas.\n    opts.registry[key] = resolver;\n  }\n\n  if (type instanceof UnionType) {\n    var resolvers = type._types.map(function (t) {\n      return this.createResolver(t, opts);\n    }, this);\n    resolver._read = function (tap) {\n      var index = tap.readLong();\n      var resolver = resolvers[index];\n      if (resolver === undefined) {\n        throw new Error(f('invalid union index: %s', index));\n      }\n      return resolvers[index]._read(tap);\n    };\n  } else {\n    this._updateResolver(resolver, type, opts);\n  }\n\n  if (!resolver._read) {\n    throw new Error(f('cannot read %s as %s', type, this));\n  }\n  return resolver;\n};\n\nType.prototype.decode = function (buf, pos, resolver) {\n  var tap = new Tap(buf);\n  tap.pos = pos | 0;\n  var val = readValue(this, tap, resolver);\n  if (!tap.isValid()) {\n    return {value: undefined, offset: -1};\n  }\n  return {value: val, offset: tap.pos};\n};\n\nType.prototype.encode = function (val, buf, pos) {\n  var tap = new Tap(buf);\n  tap.pos = pos | 0;\n  this._write(tap, val);\n  if (!tap.isValid()) {\n    // Don't throw as there is no way to predict this. We also return the\n    // number of missing bytes to ease resizing.\n    return buf.length - tap.pos;\n  }\n  return tap.pos;\n};\n\nType.prototype.fromBuffer = function (buf, resolver, noCheck) {\n  var tap = new Tap(buf);\n  var val = readValue(this, tap, resolver, noCheck);\n  if (!tap.isValid()) {\n    throw new Error('truncated buffer');\n  }\n  if (!noCheck && tap.pos < buf.length) {\n    throw new Error('trailing data');\n  }\n  return val;\n};\n\nType.prototype.toBuffer = function (val) {\n  TAP.pos = 0;\n  this._write(TAP, val);\n  if (!TAP.isValid()) {\n    Type.__reset(2 * TAP.pos);\n    TAP.pos = 0;\n    this._write(TAP, val);\n  }\n  var buf = new Buffer(TAP.pos);\n  TAP.buf.copy(buf, 0, 0, TAP.pos);\n  return buf;\n};\n\nType.prototype.fromString = function (str) {\n  return this._copy(JSON.parse(str), {coerce: 2});\n};\n\nType.prototype.toString = function (val) {\n  if (val === undefined) {\n    // Consistent behavior with standard `toString` expectations.\n    return this.getSchema(true);\n  }\n  return JSON.stringify(this._copy(val, {coerce: 3}));\n};\n\nType.prototype.clone = function (val, opts) {\n  if (opts) {\n    opts = {\n      coerce: !!opts.coerceBuffers | 0, // Coerce JSON to Buffer.\n      fieldHook: opts.fieldHook,\n      wrap: !!opts.wrapUnions | 0 // Wrap first match into union.\n    };\n  }\n  return this._copy(val, opts);\n};\n\nType.prototype.isValid = function (val, opts) {\n  while (PATH.length) {\n    // In case the previous `isValid` call didn't complete successfully (e.g.\n    // if an exception was thrown, but then caught in client code), `PATH`\n    // might be non-empty, we must manually clear it.\n    PATH.pop();\n  }\n  return this._check(val, opts && opts.errorHook);\n};\n\nType.prototype.compareBuffers = function (buf1, buf2) {\n  return this._match(new Tap(buf1), new Tap(buf2));\n};\n\nType.prototype.getName = function (noRef) {\n  return noRef ? getTypeName(this) : this._name;\n};\n\nType.prototype.getSchema = function (noDeref) {\n  return stringify(this, noDeref);\n};\n\nType.prototype.getFingerprint = function (algorithm) {\n  return utils.getHash(this.getSchema(), algorithm);\n};\n\nType.prototype.inspect = function () {\n  if (this instanceof PrimitiveType) {\n    return f('<%s>', this.constructor.name);\n  } else {\n    var obj = JSON.parse(this.getSchema(true)); // Slow, only for debugging.\n    if (typeof obj == 'object') {\n      obj.type = undefined; // Would be redundant with constructor name.\n    }\n    return f('<%s %j>', this.constructor.name, obj);\n  }\n};\n\nType.prototype._check = utils.abstractFunction;\nType.prototype._copy = utils.abstractFunction;\nType.prototype._match = utils.abstractFunction;\nType.prototype._read = utils.abstractFunction;\nType.prototype._skip = utils.abstractFunction;\nType.prototype._updateResolver = utils.abstractFunction;\nType.prototype._write = utils.abstractFunction;\nType.prototype.compare = utils.abstractFunction;\nType.prototype.random = utils.abstractFunction;\n\n// Implementations.\n\n/**\n * Base primitive Avro type.\n *\n * Most of the primitive types share the same cloning and resolution\n * mechanisms, provided by this class. This class also lets us conveniently\n * check whether a type is a primitive using `instanceof`.\n *\n */\nfunction PrimitiveType() { Type.call(this); }\nutil.inherits(PrimitiveType, Type);\nPrimitiveType.prototype._updateResolver = function (resolver, type) {\n  if (type.constructor === this.constructor) {\n    resolver._read = this._read;\n  }\n};\nPrimitiveType.prototype._copy = function (val) {\n  this._check(val, throwInvalidError);\n  return val;\n};\nPrimitiveType.prototype.compare = utils.compare;\n\n/**\n * Nulls.\n *\n */\nfunction NullType() { PrimitiveType.call(this); }\nutil.inherits(NullType, PrimitiveType);\nNullType.prototype._check = function (val, cb) {\n  var b = val === null;\n  if (!b && cb) {\n    cb(PATH.slice(), val, this);\n  }\n  return b;\n};\nNullType.prototype._read = function () { return null; };\nNullType.prototype._skip = function () {};\nNullType.prototype._write = function (tap, val) {\n  if (val !== null) {\n    throwInvalidError(null, val, this);\n  }\n};\nNullType.prototype._match = function () { return 0; };\nNullType.prototype.compare = NullType.prototype._match;\nNullType.prototype.random = NullType.prototype._read;\nNullType.prototype.toJSON = function () { return 'null'; };\n\n/**\n * Booleans.\n *\n */\nfunction BooleanType() { PrimitiveType.call(this); }\nutil.inherits(BooleanType, PrimitiveType);\nBooleanType.prototype._check = function (val, cb) {\n  var b = typeof val == 'boolean';\n  if (!b && cb) {\n    cb(PATH.slice(), val, this);\n  }\n  return b;\n};\nBooleanType.prototype._read = function (tap) { return tap.readBoolean(); };\nBooleanType.prototype._skip = function (tap) { tap.skipBoolean(); };\nBooleanType.prototype._write = function (tap, val) {\n  if (typeof val != 'boolean') {\n    throwInvalidError(null, val, this);\n  }\n  tap.writeBoolean(val);\n};\nBooleanType.prototype._match = function (tap1, tap2) {\n  return tap1.matchBoolean(tap2);\n};\nBooleanType.prototype.random = function () { return RANDOM.nextBoolean(); };\nBooleanType.prototype.toJSON = function () { return 'boolean'; };\n\n/**\n * Integers.\n *\n */\nfunction IntType() { PrimitiveType.call(this); }\nutil.inherits(IntType, PrimitiveType);\nIntType.prototype._check = function (val, cb) {\n  var b = val === (val | 0);\n  if (!b && cb) {\n    cb(PATH.slice(), val, this);\n  }\n  return b;\n};\nIntType.prototype._read = function (tap) { return tap.readInt(); };\nIntType.prototype._skip = function (tap) { tap.skipInt(); };\nIntType.prototype._write = function (tap, val) {\n  if (val !== (val | 0)) {\n    throwInvalidError(null, val, this);\n  }\n  tap.writeInt(val);\n};\nIntType.prototype._match = function (tap1, tap2) {\n  return tap1.matchInt(tap2);\n};\nIntType.prototype.random = function () { return RANDOM.nextInt(1000) | 0; };\nIntType.prototype.toJSON = function () { return 'int'; };\n\n/**\n * Longs.\n *\n * We can't capture all the range unfortunately since JavaScript represents all\n * numbers internally as `double`s, so the default implementation plays safe\n * and throws rather than potentially silently change the data. See `using` or\n * `AbstractLongType` below for a way to implement a custom long type.\n *\n */\nfunction LongType() { PrimitiveType.call(this); }\nutil.inherits(LongType, PrimitiveType);\nLongType.prototype._check = function (val, cb) {\n  var b = typeof val == 'number' && val % 1 === 0 && isSafeLong(val);\n  if (!b && cb) {\n    cb(PATH.slice(), val, this);\n  }\n  return b;\n};\nLongType.prototype._read = function (tap) {\n  var n = tap.readLong();\n  if (!isSafeLong(n)) {\n    throw new Error('potential precision loss');\n  }\n  return n;\n};\nLongType.prototype._skip = function (tap) { tap.skipLong(); };\nLongType.prototype._write = function (tap, val) {\n  if (typeof val != 'number' || val % 1 || !isSafeLong(val)) {\n    throwInvalidError(null, val, this);\n  }\n  tap.writeLong(val);\n};\nLongType.prototype._match = function (tap1, tap2) {\n  return tap1.matchLong(tap2);\n};\nLongType.prototype._updateResolver = function (resolver, type) {\n  if (type instanceof LongType || type instanceof IntType) {\n    resolver._read = type._read;\n  }\n};\nLongType.prototype.random = function () { return RANDOM.nextInt(); };\nLongType.prototype.toJSON = function () { return 'long'; };\nLongType.using = function (methods, noUnpack) {\n  methods = methods || {}; // Will give a more helpful error message.\n  // We map some of the methods to a different name to be able to intercept\n  // their input and output (otherwise we wouldn't be able to perform any\n  // unpacking logic, and the type wouldn't work when nested).\n  var mapping = {\n    toBuffer: '_toBuffer',\n    fromBuffer: '_fromBuffer',\n    fromJSON: '_fromJSON',\n    toJSON: '_toJSON',\n    isValid: '_isValid',\n    compare: 'compare'\n  };\n  var type = new AbstractLongType(noUnpack);\n  Object.keys(mapping).forEach(function (name) {\n    if (methods[name] === undefined) {\n      throw new Error(f('missing method implementation: %s', name));\n    }\n    type[mapping[name]] = methods[name];\n  });\n  return type;\n};\n\n/**\n * Floats.\n *\n */\nfunction FloatType() { PrimitiveType.call(this); }\nutil.inherits(FloatType, PrimitiveType);\nFloatType.prototype._check = function (val, cb) {\n  var b = typeof val == 'number';\n  if (!b && cb) {\n    cb(PATH.slice(), val, this);\n  }\n  return b;\n};\nFloatType.prototype._read = function (tap) { return tap.readFloat(); };\nFloatType.prototype._skip = function (tap) { tap.skipFloat(); };\nFloatType.prototype._write = function (tap, val) {\n  if (typeof val != 'number') {\n    throwInvalidError(null, val, this);\n  }\n  tap.writeFloat(val);\n};\nFloatType.prototype._match = function (tap1, tap2) {\n  return tap1.matchFloat(tap2);\n};\nFloatType.prototype._updateResolver = function (resolver, type) {\n  if (\n    type instanceof FloatType ||\n    type instanceof LongType ||\n    type instanceof IntType\n  ) {\n    resolver._read = type._read;\n  }\n};\nFloatType.prototype.random = function () { return RANDOM.nextFloat(1e3); };\nFloatType.prototype.toJSON = function () { return 'float'; };\n\n/**\n * Doubles.\n *\n */\nfunction DoubleType() { PrimitiveType.call(this); }\nutil.inherits(DoubleType, PrimitiveType);\nDoubleType.prototype._check = function (val, cb) {\n  var b = typeof val == 'number';\n  if (!b && cb) {\n    cb(PATH.slice(), val, this);\n  }\n  return b;\n};\nDoubleType.prototype._read = function (tap) { return tap.readDouble(); };\nDoubleType.prototype._skip = function (tap) { tap.skipDouble(); };\nDoubleType.prototype._write = function (tap, val) {\n  if (typeof val != 'number') {\n    throwInvalidError(null, val, this);\n  }\n  tap.writeDouble(val);\n};\nDoubleType.prototype._match = function (tap1, tap2) {\n  return tap1.matchDouble(tap2);\n};\nDoubleType.prototype._updateResolver = function (resolver, type) {\n  if (\n    type instanceof DoubleType ||\n    type instanceof FloatType ||\n    type instanceof LongType ||\n    type instanceof IntType\n  ) {\n    resolver._read = type._read;\n  }\n};\nDoubleType.prototype.random = function () { return RANDOM.nextFloat(); };\nDoubleType.prototype.toJSON = function () { return 'double'; };\n\n/**\n * Strings.\n *\n */\nfunction StringType() { PrimitiveType.call(this); }\nutil.inherits(StringType, PrimitiveType);\nStringType.prototype._check = function (val, cb) {\n  var b = typeof val == 'string';\n  if (!b && cb) {\n    cb(PATH.slice(), val, this);\n  }\n  return b;\n};\nStringType.prototype._read = function (tap) { return tap.readString(); };\nStringType.prototype._skip = function (tap) { tap.skipString(); };\nStringType.prototype._write = function (tap, val) {\n  if (typeof val != 'string') {\n    throwInvalidError(null, val, this);\n  }\n  tap.writeString(val);\n};\nStringType.prototype._match = function (tap1, tap2) {\n  return tap1.matchString(tap2);\n};\nStringType.prototype._updateResolver = function (resolver, type) {\n  if (type instanceof StringType || type instanceof BytesType) {\n    resolver._read = this._read;\n  }\n};\nStringType.prototype.random = function () {\n  return RANDOM.nextString(RANDOM.nextInt(32));\n};\nStringType.prototype.toJSON = function () { return 'string'; };\n\n/**\n * Bytes.\n *\n * These are represented in memory as `Buffer`s rather than binary-encoded\n * strings. This is more efficient (when decoding/encoding from bytes, the\n * common use-case), idiomatic, and convenient.\n *\n * Note the coercion in `_copy`.\n *\n */\nfunction BytesType() { PrimitiveType.call(this); }\nutil.inherits(BytesType, PrimitiveType);\nBytesType.prototype._check = function (val, cb) {\n  var b = Buffer.isBuffer(val);\n  if (!b && cb) {\n    cb(PATH.slice(), val, this);\n  }\n  return b;\n};\nBytesType.prototype._read = function (tap) { return tap.readBytes(); };\nBytesType.prototype._skip = function (tap) { tap.skipBytes(); };\nBytesType.prototype._write = function (tap, val) {\n  if (!Buffer.isBuffer(val)) {\n    throwInvalidError(null, val, this);\n  }\n  tap.writeBytes(val);\n};\nBytesType.prototype._match = function (tap1, tap2) {\n  return tap1.matchBytes(tap2);\n};\nBytesType.prototype._updateResolver = StringType.prototype._updateResolver;\nBytesType.prototype._copy = function (obj, opts) {\n  var buf;\n  switch ((opts && opts.coerce) | 0) {\n    case 3: // Coerce buffers to strings.\n      this._check(obj, throwInvalidError);\n      return obj.toString('binary');\n    case 2: // Coerce strings to buffers.\n      if (typeof obj != 'string') {\n        throw new Error(f('cannot coerce to buffer: %j', obj));\n      }\n      buf = new Buffer(obj, 'binary');\n      this._check(buf, throwInvalidError);\n      return buf;\n    case 1: // Coerce buffer JSON representation to buffers.\n      if (!obj || obj.type !== 'Buffer' || !(obj.data instanceof Array)) {\n        throw new Error(f('cannot coerce to buffer: %j', obj));\n      }\n      buf = new Buffer(obj.data);\n      this._check(buf, throwInvalidError);\n      return buf;\n    default: // Copy buffer.\n      this._check(obj, throwInvalidError);\n      return new Buffer(obj);\n  }\n};\nBytesType.prototype.compare = Buffer.compare;\nBytesType.prototype.random = function () {\n  return RANDOM.nextBuffer(RANDOM.nextInt(32));\n};\nBytesType.prototype.toJSON = function () { return 'bytes'; };\n\n/**\n * Avro unions.\n *\n * Unions are represented in memory similarly to their JSON representation\n * (i.e. inside an object with single key the name of the contained type).\n *\n * This is not ideal, but is the most efficient way to unambiguously support\n * all unions. Here are a few reasons why the wrapping object is necessary:\n *\n * + Unions with multiple number types would have undefined behavior, unless\n *   numbers are wrapped (either everywhere, leading to large performance and\n *   convenience costs; or only when necessary inside unions, making it hard to\n *   understand when numbers are wrapped or not).\n * + Fixed types would have to be wrapped to be distinguished from bytes.\n * + Using record's constructor names would work (after a slight change to use\n *   the fully qualified name), but would mean that generic objects could no\n *   longer be valid records (making it inconvenient to do simple things like\n *   creating new records).\n *\n * Lore: In the past (until d304cab), there used to be an \"unwrapped union\n * type\" which directly exposed its values, without the wrapping object\n * (similarly to Avro's python implementation). It was removed to keep all\n * representations consistent and make this library simpler to understand\n * (conversions, e.g. for schema evolution, between representations were\n * particularly confusing). Encoding was also much slower (worst case\n * complexity linear in the number of types in the union).\n *\n */\nfunction UnionType(attrs, opts) {\n  if (!(attrs instanceof Array)) {\n    throw new Error(f('non-array union schema: %j', attrs));\n  }\n  if (!attrs.length) {\n    throw new Error('empty union');\n  }\n\n  opts = getOpts(attrs, opts);\n  Type.call(this);\n  this._types = attrs.map(function (obj) { return createType(obj, opts); });\n\n  this._indices = {};\n  this._types.forEach(function (type, i) {\n    if (type instanceof UnionType) {\n      throw new Error('unions cannot be directly nested');\n    }\n    var name = type._name || getTypeName(type);\n    if (this._indices[name] !== undefined) {\n      throw new Error(f('duplicate union name: %j', name));\n    }\n    this._indices[name] = i;\n  }, this);\n\n  this._constructors = this._types.map(function (type) {\n    // jshint -W054\n    var name = type._name || getTypeName(type);\n    if (name === 'null') {\n      return null;\n    }\n    var body;\n    if (~name.indexOf('.')) { // Qualified name.\n      body = 'this[\\'' + name + '\\'] = val;';\n    } else {\n      body = 'this.' + name + ' = val;';\n    }\n    return new Function('val', body);\n  });\n}\nutil.inherits(UnionType, Type);\n\nUnionType.prototype._check = function (val, cb) {\n  var b = false;\n  if (val === null) {\n    // Shortcut type lookup in this case.\n    b = this._indices['null'] !== undefined;\n  } else if (typeof val == 'object') {\n    var keys = Object.keys(val);\n    if (keys.length === 1) {\n      // We require a single key here to ensure that writes are correct and\n      // efficient as soon as a record passes this check.\n      var name = keys[0];\n      var index = this._indices[name];\n      if (index !== undefined) {\n        PATH.push(name);\n        b = this._types[index]._check(val[name], cb);\n        PATH.pop();\n        return b;\n      }\n    }\n  }\n  if (!b && cb) {\n    cb(PATH.slice(), val, this);\n  }\n  return b;\n};\n\nUnionType.prototype._read = function (tap) {\n  var index = tap.readLong();\n  var Class = this._constructors[index];\n  if (Class) {\n    return new Class(this._types[index]._read(tap));\n  } else if (Class === null) {\n    return null;\n  } else {\n    throw new Error(f('invalid union index: %s', index));\n  }\n};\n\nUnionType.prototype._skip = function (tap) {\n  this._types[tap.readLong()]._skip(tap);\n};\n\nUnionType.prototype._write = function (tap, val) {\n  var index, keys, name;\n  if (val === null) {\n    index = this._indices['null'];\n    if (index === undefined) {\n      throwInvalidError(null, val, this);\n    }\n    tap.writeLong(index);\n  } else {\n    keys = Object.keys(val);\n    if (keys.length === 1) {\n      name = keys[0];\n      index = this._indices[name];\n    }\n    if (index === undefined) {\n      throwInvalidError(null, val, this);\n    }\n    tap.writeLong(index);\n    this._types[index]._write(tap, val[name]);\n  }\n};\n\nUnionType.prototype._match = function (tap1, tap2) {\n  var n1 = tap1.readLong();\n  var n2 = tap2.readLong();\n  if (n1 === n2) {\n    return this._types[n1]._match(tap1, tap2);\n  } else {\n    return n1 < n2 ? -1 : 1;\n  }\n};\n\nUnionType.prototype._updateResolver = function (resolver, type, opts) {\n  // jshint -W083\n  // (The loop exits after the first function is created.)\n  var i, l, typeResolver, Class;\n  for (i = 0, l = this._types.length; i < l; i++) {\n    try {\n      typeResolver = this._types[i].createResolver(type, opts);\n    } catch (err) {\n      continue;\n    }\n    Class = this._constructors[i];\n    if (Class) {\n      resolver._read = function (tap) {\n        return new Class(typeResolver._read(tap));\n      };\n    } else {\n      resolver._read = function () { return null; };\n    }\n    return;\n  }\n};\n\nUnionType.prototype._copy = function (val, opts) {\n  var wrap = opts && opts.wrap | 0;\n  if (wrap === 2) {\n    // Promote into first type (used for schema defaults).\n    if (val === null && this._constructors[0] === null) {\n      return null;\n    }\n    return new this._constructors[0](this._types[0]._copy(val, opts));\n  }\n  if (val === null && this._indices['null'] !== undefined) {\n    return null;\n  }\n\n  var i, l, obj;\n  if (typeof val == 'object') {\n    var keys = Object.keys(val);\n    if (keys.length === 1) {\n      var name = keys[0];\n      i = this._indices[name];\n      if (i === undefined) {\n        // We are a bit more flexible than in `_check` here since we have\n        // to deal with other serializers being less strict, so we fall\n        // back to looking up unqualified names.\n        var j, type;\n        for (j = 0, l = this._types.length; j < l; j++) {\n          type = this._types[j];\n          if (type._name && name === unqualify(type._name)) {\n            i = j;\n            break;\n          }\n        }\n      }\n      if (i !== undefined) {\n        obj = this._types[i]._copy(val[name], opts);\n      }\n    }\n  }\n  if (wrap === 1 && obj === undefined) {\n    // Try promoting into first match (convenience, slow).\n    i = 0;\n    l = this._types.length;\n    while (i < l && obj === undefined) {\n      try {\n        obj = this._types[i]._copy(val, opts);\n      } catch (err) {\n        i++;\n      }\n    }\n  }\n  if (obj !== undefined) {\n    return new this._constructors[i](obj);\n  }\n  throwInvalidError(null, val, this);\n};\n\nUnionType.prototype.compare = function (val1, val2) {\n  var name1 = val1 === null ? 'null' : Object.keys(val1)[0];\n  var name2 = val2 === null ? 'null' : Object.keys(val2)[0];\n  var index = this._indices[name1];\n  if (name1 === name2) {\n    return name1 === 'null' ?\n      0 :\n      this._types[index].compare(val1[name1], val2[name1]);\n  } else {\n    return utils.compare(index, this._indices[name2]);\n  }\n};\n\nUnionType.prototype.getTypes = function () { return this._types.slice(); };\n\nUnionType.prototype.random = function () {\n  var index = RANDOM.nextInt(this._types.length);\n  var Class = this._constructors[index];\n  if (!Class) {\n    return null;\n  }\n  return new Class(this._types[index].random());\n};\n\nUnionType.prototype.toJSON = function () { return this._types; };\n\n/**\n * Avro enum type.\n *\n * Represented as strings (with allowed values from the set of symbols). Using\n * integers would be a reasonable option, but the performance boost is arguably\n * offset by the legibility cost and the extra deviation from the JSON encoding\n * convention.\n *\n * An integer representation can still be used (e.g. for compatibility with\n * TypeScript `enum`s) by overriding the `EnumType` with a `LongType` (e.g. via\n * `parse`'s registry).\n *\n */\nfunction EnumType(attrs, opts) {\n  if (!(attrs.symbols instanceof Array) || !attrs.symbols.length) {\n    throw new Error(f('invalid %j enum symbols: %j', attrs.name, attrs));\n  }\n\n  opts = getOpts(attrs, opts);\n  var resolutions = resolveNames(attrs, opts.namespace);\n  this._name = resolutions.name;\n  this._symbols = attrs.symbols;\n  this._aliases = resolutions.aliases;\n  Type.call(this, opts.registry);\n\n  this._indices = {};\n  this._symbols.forEach(function (symbol, i) {\n    if (!NAME_PATTERN.test(symbol)) {\n      throw new Error(f('invalid %s symbol: %j', this, symbol));\n    }\n    if (this._indices[symbol] !== undefined) {\n      throw new Error(f('duplicate %s symbol: %j', this, symbol));\n    }\n    this._indices[symbol] = i;\n  }, this);\n}\nutil.inherits(EnumType, Type);\n\nEnumType.prototype._check = function (val, cb) {\n  var b = this._indices[val] !== undefined;\n  if (!b && cb) {\n    cb(PATH.slice(), val, this);\n  }\n  return b;\n};\n\nEnumType.prototype._read = function (tap) {\n  var index = tap.readLong();\n  var symbol = this._symbols[index];\n  if (symbol === undefined) {\n    throw new Error(f('invalid %s enum index: %s', this._name, index));\n  }\n  return symbol;\n};\n\nEnumType.prototype._skip = function (tap) { tap.skipLong(); };\n\nEnumType.prototype._write = function (tap, val) {\n  var index = this._indices[val];\n  if (index === undefined) {\n    throwInvalidError(null, val, this);\n  }\n  tap.writeLong(index);\n};\n\nEnumType.prototype._match = function (tap1, tap2) {\n  return tap1.matchLong(tap2);\n};\n\nEnumType.prototype.compare = function (val1, val2) {\n  return utils.compare(this._indices[val1], this._indices[val2]);\n};\n\nEnumType.prototype._updateResolver = function (resolver, type) {\n  var symbols = this._symbols;\n  if (\n    type instanceof EnumType &&\n    ~getAliases(this).indexOf(type._name) &&\n    type._symbols.every(function (s) { return ~symbols.indexOf(s); })\n  ) {\n    resolver._symbols = type._symbols;\n    resolver._read = type._read;\n  }\n};\n\nEnumType.prototype._copy = function (val) {\n  this._check(val, throwInvalidError);\n  return val;\n};\n\nEnumType.prototype.getAliases = function () { return this._aliases; };\n\nEnumType.prototype.getSymbols = function () { return this._symbols.slice(); };\n\nEnumType.prototype.random = function () {\n  return RANDOM.choice(this._symbols);\n};\n\nEnumType.prototype.toJSON = function () {\n  return {name: this._name, type: 'enum', symbols: this._symbols};\n};\n\n/**\n * Avro fixed type.\n *\n * Represented simply as a `Buffer`.\n *\n */\nfunction FixedType(attrs, opts) {\n  if (attrs.size !== (attrs.size | 0) || attrs.size < 1) {\n    throw new Error(f('invalid %j fixed size: %j', attrs.name, attrs.size));\n  }\n\n  opts = getOpts(attrs, opts);\n  var resolutions = resolveNames(attrs, opts.namespace);\n  this._name = resolutions.name;\n  this._size = attrs.size | 0;\n  this._aliases = resolutions.aliases;\n  Type.call(this, opts.registry);\n}\nutil.inherits(FixedType, Type);\n\nFixedType.prototype._check = function (val, cb) {\n  var b = Buffer.isBuffer(val) && val.length === this._size;\n  if (!b && cb) {\n    cb(PATH.slice(), val, this);\n  }\n  return b;\n};\n\nFixedType.prototype._read = function (tap) {\n  return tap.readFixed(this._size);\n};\n\nFixedType.prototype._skip = function (tap) {\n  tap.skipFixed(this._size);\n};\n\nFixedType.prototype._write = function (tap, val) {\n  if (!Buffer.isBuffer(val) || val.length !== this._size) {\n    throwInvalidError(null, val, this);\n  }\n  tap.writeFixed(val, this._size);\n};\n\nFixedType.prototype._match = function (tap1, tap2) {\n  return tap1.matchFixed(tap2, this._size);\n};\n\nFixedType.prototype.compare = Buffer.compare;\n\nFixedType.prototype._updateResolver = function (resolver, type) {\n  if (\n    type instanceof FixedType &&\n    this._size === type._size &&\n    ~getAliases(this).indexOf(type._name)\n  ) {\n    resolver._size = this._size;\n    resolver._read = this._read;\n  }\n};\n\nFixedType.prototype._copy = BytesType.prototype._copy;\n\nFixedType.prototype.getAliases = function () { return this._aliases; };\n\nFixedType.prototype.getSize = function () { return this._size; };\n\nFixedType.prototype.random = function () {\n  return RANDOM.nextBuffer(this._size);\n};\n\nFixedType.prototype.toJSON = function () {\n  return {name: this._name, type: 'fixed', size: this._size};\n};\n\n/**\n * Avro map.\n *\n * Represented as vanilla objects.\n *\n */\nfunction MapType(attrs, opts) {\n  if (!attrs.values) {\n    throw new Error(f('missing map values: %j', attrs));\n  }\n\n  opts = getOpts(attrs, opts);\n  Type.call(this);\n  this._values = createType(attrs.values, opts);\n}\nutil.inherits(MapType, Type);\n\nMapType.prototype.getValuesType = function () { return this._values; };\n\nMapType.prototype._check = function (val, cb) {\n  if (!val || typeof val != 'object' || val instanceof Array) {\n    if (cb) {\n      cb(PATH.slice(), val, this);\n    }\n    return false;\n  }\n\n  var keys = Object.keys(val);\n  var b = true;\n  var i, l, j, key;\n  if (cb) {\n    // Slow path.\n    j = PATH.length;\n    PATH.push('');\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = PATH[j] = keys[i];\n      if (!this._values._check(val[key], cb)) {\n        b = false;\n      }\n    }\n    PATH.pop();\n  } else {\n    for (i = 0, l = keys.length; i < l; i++) {\n      if (!this._values._check(val[keys[i]], cb)) {\n        return false;\n      }\n    }\n  }\n  return b;\n};\n\nMapType.prototype._read = function (tap) {\n  var values = this._values;\n  var val = {};\n  var n;\n  while ((n = readArraySize(tap))) {\n    while (n--) {\n      var key = tap.readString();\n      val[key] = values._read(tap);\n    }\n  }\n  return val;\n};\n\nMapType.prototype._skip = function (tap) {\n  var values = this._values;\n  var len, n;\n  while ((n = tap.readLong())) {\n    if (n < 0) {\n      len = tap.readLong();\n      tap.pos += len;\n    } else {\n      while (n--) {\n        tap.skipString();\n        values._skip(tap);\n      }\n    }\n  }\n};\n\nMapType.prototype._write = function (tap, val) {\n  if (!val || typeof val != 'object' || val instanceof Array) {\n    throwInvalidError(null, val, this);\n  }\n\n  var values = this._values;\n  var keys = Object.keys(val);\n  var n = keys.length;\n  var i, key;\n  if (n) {\n    tap.writeLong(n);\n    for (i = 0; i < n; i++) {\n      key = keys[i];\n      tap.writeString(key);\n      values._write(tap, val[key]);\n    }\n  }\n  tap.writeLong(0);\n};\n\nMapType.prototype._match = function () {\n  throw new Error('maps cannot be compared');\n};\n\nMapType.prototype._updateResolver = function (resolver, type, opts) {\n  if (type instanceof MapType) {\n    resolver._values = this._values.createResolver(type._values, opts);\n    resolver._read = this._read;\n  }\n};\n\nMapType.prototype._copy = function (val, opts) {\n  if (val && typeof val == 'object' && !(val instanceof Array)) {\n    var values = this._values;\n    var keys = Object.keys(val);\n    var i, l, key;\n    var copy = {};\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      copy[key] = values._copy(val[key], opts);\n    }\n    return copy;\n  }\n  throwInvalidError(null, val, this);\n};\n\nMapType.prototype.compare = MapType.prototype._match;\n\nMapType.prototype.random = function () {\n  var val = {};\n  var i, l;\n  for (i = 0, l = RANDOM.nextInt(10); i < l; i++) {\n    val[RANDOM.nextString(RANDOM.nextInt(20))] = this._values.random();\n  }\n  return val;\n};\n\nMapType.prototype.toJSON = function () {\n  return {type: 'map', values: this._values};\n};\n\n/**\n * Avro array.\n *\n * Represented as vanilla arrays.\n *\n */\nfunction ArrayType(attrs, opts) {\n  if (!attrs.items) {\n    throw new Error(f('missing array items: %j', attrs));\n  }\n\n  opts = getOpts(attrs, opts);\n\n  this._items = createType(attrs.items, opts);\n  Type.call(this);\n}\nutil.inherits(ArrayType, Type);\n\nArrayType.prototype._check = function (val, cb) {\n  if (!(val instanceof Array)) {\n    if (cb) {\n      cb(PATH.slice(), val, this);\n    }\n    return false;\n  }\n\n  var b = true;\n  var i, l, j;\n  if (cb) {\n    // Slow path.\n    j = PATH.length;\n    PATH.push('');\n    for (i = 0, l = val.length; i < l; i++) {\n      PATH[j] = '' + i;\n      if (!this._items._check(val[i], cb)) {\n        b = false;\n      }\n    }\n    PATH.pop();\n  } else {\n    for (i = 0, l = val.length; i < l; i++) {\n      if (!this._items._check(val[i], cb)) {\n        return false;\n      }\n    }\n  }\n  return b;\n};\n\nArrayType.prototype._read = function (tap) {\n  var items = this._items;\n  var val = [];\n  var n;\n  while ((n = tap.readLong())) {\n    if (n < 0) {\n      n = -n;\n      tap.skipLong(); // Skip size.\n    }\n    while (n--) {\n      val.push(items._read(tap));\n    }\n  }\n  return val;\n};\n\nArrayType.prototype._skip = function (tap) {\n  var len, n;\n  while ((n = tap.readLong())) {\n    if (n < 0) {\n      len = tap.readLong();\n      tap.pos += len;\n    } else {\n      while (n--) {\n        this._items._skip(tap);\n      }\n    }\n  }\n};\n\nArrayType.prototype._write = function (tap, val) {\n  if (!(val instanceof Array)) {\n    throwInvalidError(null, val, this);\n  }\n\n  var n = val.length;\n  var i;\n  if (n) {\n    tap.writeLong(n);\n    for (i = 0; i < n; i++) {\n      this._items._write(tap, val[i]);\n    }\n  }\n  tap.writeLong(0);\n};\n\nArrayType.prototype._match = function (tap1, tap2) {\n  var n1 = tap1.readLong();\n  var n2 = tap2.readLong();\n  var f;\n  while (n1 && n2) {\n    f = this._items._match(tap1, tap2);\n    if (f) {\n      return f;\n    }\n    if (!--n1) {\n      n1 = readArraySize(tap1);\n    }\n    if (!--n2) {\n      n2 = readArraySize(tap2);\n    }\n  }\n  return utils.compare(n1, n2);\n};\n\nArrayType.prototype._updateResolver = function (resolver, type, opts) {\n  if (type instanceof ArrayType) {\n    resolver._items = this._items.createResolver(type._items, opts);\n    resolver._read = this._read;\n  }\n};\n\nArrayType.prototype._copy = function (val, opts) {\n  if (!(val instanceof Array)) {\n    throwInvalidError(null, val, this);\n  }\n  var items = [];\n  var i, l;\n  for (i = 0, l = val.length; i < l; i++) {\n    items.push(this._items._copy(val[i], opts));\n  }\n  return items;\n};\n\nArrayType.prototype.compare = function (val1, val2) {\n  var n1 = val1.length;\n  var n2 = val2.length;\n  var i, l, f;\n  for (i = 0, l = Math.min(n1, n2); i < l; i++) {\n    if ((f = this._items.compare(val1[i], val2[i]))) {\n      return f;\n    }\n  }\n  return utils.compare(n1, n2);\n};\n\nArrayType.prototype.getItemsType = function () { return this._items; };\n\nArrayType.prototype.random = function () {\n  var arr = [];\n  var i, l;\n  for (i = 0, l = RANDOM.nextInt(10); i < l; i++) {\n    arr.push(this._items.random());\n  }\n  return arr;\n};\n\nArrayType.prototype.toJSON = function () {\n  return {type: 'array', items: this._items};\n};\n\n/**\n * Avro record.\n *\n * Values are represented as instances of a programmatically generated\n * constructor (similar to a \"specific record\"), available via the\n * `getRecordConstructor` method. This \"specific record class\" gives\n * significant speedups over using generics objects.\n *\n * Note that vanilla objects are still accepted as valid as long as their\n * fields match (this makes it much more convenient to do simple things like\n * update nested records).\n *\n */\nfunction RecordType(attrs, opts) {\n  opts = getOpts(attrs, opts);\n\n  var resolutions = resolveNames(attrs, opts.namespace);\n  this._name = resolutions.name;\n  this._aliases = resolutions.aliases;\n  this._type = attrs.type;\n  // Requests shouldn't be registered since their name is only a placeholder.\n  Type.call(this, this._type === 'request' ? undefined : opts.registry);\n\n  if (!(attrs.fields instanceof Array)) {\n    throw new Error(f('non-array %s fields', this._name));\n  }\n  this._fields = attrs.fields.map(function (f) {\n    return new Field(f, opts);\n  });\n  if (utils.hasDuplicates(attrs.fields, function (f) { return f.name; })) {\n    throw new Error(f('duplicate %s field name', this._name));\n  }\n\n  var isError = attrs.type === 'error';\n  this._constructor = this._createConstructor(isError);\n  this._read = this._createReader();\n  this._skip = this._createSkipper();\n  this._write = this._createWriter();\n  this._check = this._createChecker();\n}\nutil.inherits(RecordType, Type);\n\nRecordType.prototype._createConstructor = function (isError) {\n  // jshint -W054\n  var outerArgs = [];\n  var innerArgs = [];\n  var ds = []; // Defaults.\n  var innerBody = isError ? '  Error.call(this);\\n' : '';\n  // Not calling `Error.captureStackTrace` because this wouldn't be compatible\n  // with browsers other than Chrome.\n  var i, l, field, name, getDefault;\n  for (i = 0, l = this._fields.length; i < l; i++) {\n    field = this._fields[i];\n    getDefault = field.getDefault;\n    name = field._name;\n    innerArgs.push('v' + i);\n    innerBody += '  ';\n    if (getDefault() === undefined) {\n      innerBody += 'this.' + name + ' = v' + i + ';\\n';\n    } else {\n      innerBody += 'if (v' + i + ' === undefined) { ';\n      innerBody += 'this.' + name + ' = d' + ds.length + '(); ';\n      innerBody += '} else { this.' + name + ' = v' + i + '; }\\n';\n      outerArgs.push('d' + ds.length);\n      ds.push(getDefault);\n    }\n  }\n  var outerBody = 'return function ' + unqualify(this._name) + '(';\n  outerBody += innerArgs.join() + ') {\\n' + innerBody + '};';\n  var Record = new Function(outerArgs.join(), outerBody).apply(undefined, ds);\n\n  var self = this;\n  Record.getType = function () { return self; };\n  Record.prototype = {\n    constructor: Record,\n    $clone: function (opts) { return self.clone(this, opts); },\n    $compare: function (val) { return self.compare(this, val); },\n    $getType: Record.getType,\n    $isValid: function (opts) { return self.isValid(this, opts); },\n    $toBuffer: function () { return self.toBuffer(this); },\n    $toString: function (noCheck) { return self.toString(this, noCheck); }\n  };\n  // The names of these properties added to the prototype are prefixed with `$`\n  // because it is an invalid property name in Avro but not in JavaScript.\n  // (This way we are guaranteed not to be stepped over!)\n  if (isError) {\n    util.inherits(Record, Error);\n    // Not setting the name on the prototype to be consistent with how object\n    // fields are mapped to (only if defined in the schema as a field).\n  }\n\n  return Record;\n};\n\nRecordType.prototype._createChecker = function () {\n  // jshint -W054\n  var names = ['t', 'P'];\n  var values = [this, PATH];\n  var body = 'return function check' + unqualify(this._name) + '(val, cb) {\\n';\n  body += '  if (val === null || typeof val != \\'object\\') {\\n';\n  body += '    if (cb) { cb(P.slice(), val, t); }\\n';\n  body += '    return false;\\n';\n  body += '  }\\n';\n  if (!this._fields.length) {\n    // Special case, empty record. We handle this directly.\n    body += '  return true;\\n';\n  } else {\n    for (i = 0, l = this._fields.length; i < l; i++) {\n      field = this._fields[i];\n      names.push('t' + i);\n      values.push(field._type);\n      if (field.getDefault() !== undefined) {\n        body += '  var v' + i + ' = val.' + field._name + ';\\n';\n      }\n    }\n    body += '  if (cb) {\\n';\n    body += '    var b = 1;\\n';\n    body += '    var j = P.length;\\n';\n    body += '    P.push(\\'\\');\\n';\n    var i, l, field;\n    for (i = 0, l = this._fields.length; i < l; i++) {\n      field = this._fields[i];\n      body += '    P[j] = \\'' + field._name + '\\';\\n';\n      if (field.getDefault() === undefined) {\n        body += '    b &= t' + i + '._check(val.' + field._name + ', cb);\\n';\n      } else {\n        body += '    b &= v' + i + ' === undefined || ';\n        body += 't' + i + '._check(v' + i + ', cb);\\n';\n      }\n    }\n    body += '    P.pop();\\n';\n    body += '    return !!b;\\n';\n    body += '  } else {\\n    return (\\n      ';\n    body += this._fields.map(function (field, i) {\n      if (field.getDefault() === undefined) {\n        return 't' + i + '._check(val.' + field._name + ')';\n      } else {\n        return '(v' + i + ' === undefined || t' + i + '._check(v' + i + '))';\n      }\n    }).join(' &&\\n      ');\n    body += '\\n    );\\n  }\\n';\n  }\n  body += '};';\n  return new Function(names.join(), body).apply(undefined, values);\n};\n\nRecordType.prototype._createReader = function () {\n  // jshint -W054\n  var uname = unqualify(this._name);\n  var names = [];\n  var values = [this._constructor];\n  var i, l;\n  for (i = 0, l = this._fields.length; i < l; i++) {\n    names.push('t' + i);\n    values.push(this._fields[i]._type);\n  }\n  var body = 'return function read' + uname + '(tap) {\\n';\n  body += '  return new ' + uname + '(';\n  body += names.map(function (t) { return t + '._read(tap)'; }).join();\n  body += ');\\n};';\n  names.unshift(uname);\n  // We can do this since the JS spec guarantees that function arguments are\n  // evaluated from left to right.\n  return new Function(names.join(), body).apply(undefined, values);\n};\n\nRecordType.prototype._createSkipper = function () {\n  // jshint -W054\n  var args = [];\n  var body = 'return function skip' + unqualify(this._name) + '(tap) {\\n';\n  var values = [];\n  var i, l;\n  for (i = 0, l = this._fields.length; i < l; i++) {\n    args.push('t' + i);\n    values.push(this._fields[i]._type);\n    body += '  t' + i + '._skip(tap);\\n';\n  }\n  body += '}';\n  return new Function(args.join(), body).apply(undefined, values);\n};\n\nRecordType.prototype._createWriter = function () {\n  // jshint -W054\n  // We still do default handling here, in case a normal JS object is passed.\n  var args = [];\n  var body = 'return function write' + unqualify(this._name) + '(tap, val) {\\n';\n  var values = [];\n  var i, l, field, value;\n  for (i = 0, l = this._fields.length; i < l; i++) {\n    field = this._fields[i];\n    args.push('t' + i);\n    values.push(field._type);\n    body += '  ';\n    if (field.getDefault() === undefined) {\n      body += 't' + i + '._write(tap, val.' + field._name + ');\\n';\n    } else {\n      value = field._type.toBuffer(field.getDefault()).toString('binary');\n      // Convert the default value to a binary string ahead of time. We aren't\n      // converting it to a buffer to avoid retaining too much memory. If we\n      // had our own buffer pool, this could be an idea in the future.\n      args.push('d' + i);\n      values.push(value);\n      body += 'var v' + i + ' = val.' + field._name + '; ';\n      body += 'if (v' + i + ' === undefined) { ';\n      body += 'tap.writeBinary(d' + i + ', ' + value.length + ');';\n      body += ' } else { t' + i + '._write(tap, v' + i + '); }\\n';\n    }\n  }\n  body += '}';\n  return new Function(args.join(), body).apply(undefined, values);\n};\n\nRecordType.prototype._updateResolver = function (resolver, type, opts) {\n  // jshint -W054\n  if (!~getAliases(this).indexOf(type._name)) {\n    throw new Error(f('no alias for %s in %s', type._name, this._name));\n  }\n\n  var rFields = this._fields;\n  var wFields = type._fields;\n  var wFieldsMap = utils.toMap(wFields, function (f) { return f._name; });\n\n  var innerArgs = []; // Arguments for reader constructor.\n  var resolvers = {}; // Resolvers keyed by writer field name.\n  var i, j, field, name, names, matches;\n  for (i = 0; i < rFields.length; i++) {\n    field = rFields[i];\n    names = getAliases(field);\n    matches = [];\n    for (j = 0; j < names.length; j++) {\n      name = names[j];\n      if (wFieldsMap[name]) {\n        matches.push(name);\n      }\n    }\n    if (matches.length > 1) {\n      throw new Error(f('multiple matches for %s', field.name));\n    }\n    if (!matches.length) {\n      if (field.getDefault() === undefined) {\n        throw new Error(f('no match for default-less %s', field.name));\n      }\n      innerArgs.push('undefined');\n    } else {\n      name = matches[0];\n      resolvers[name] = {\n        resolver: field._type.createResolver(wFieldsMap[name]._type, opts),\n        name: field._name // Reader field name.\n      };\n      innerArgs.push(field._name);\n    }\n  }\n\n  // See if we can add a bypass for unused fields at the end of the record.\n  var lazyIndex = -1;\n  i = wFields.length;\n  while (i && resolvers[wFields[--i]._name] === undefined) {\n    lazyIndex = i;\n  }\n\n  var uname = unqualify(this._name);\n  var args = [uname];\n  var values = [this._constructor];\n  var body = '  return function read' + uname + '(tap,lazy) {\\n';\n  for (i = 0; i < wFields.length; i++) {\n    if (i === lazyIndex) {\n      body += '  if (!lazy) {\\n';\n    }\n    field = type._fields[i];\n    name = field._name;\n    body += (~lazyIndex && i >= lazyIndex) ? '    ' : '  ';\n    if (resolvers[name] === undefined) {\n      args.push('t' + i);\n      values.push(field._type);\n      body += 't' + i + '._skip(tap);\\n';\n    } else {\n      args.push('t' + i);\n      values.push(resolvers[name].resolver);\n      body += 'var ' + resolvers[name].name + ' = ';\n      body += 't' + i + '._read(tap);\\n';\n    }\n  }\n  if (~lazyIndex) {\n    body += '  }\\n';\n  }\n  body +=  '  return new ' + uname + '(' + innerArgs.join() + ');\\n};';\n\n  resolver._read = new Function(args.join(), body).apply(undefined, values);\n};\n\nRecordType.prototype._match = function (tap1, tap2) {\n  var fields = this._fields;\n  var i, l, field, order, type;\n  for (i = 0, l = fields.length; i < l; i++) {\n    field = fields[i];\n    order = field._order;\n    type = field._type;\n    if (order) {\n      order *= type._match(tap1, tap2);\n      if (order) {\n        return order;\n      }\n    } else {\n      type._skip(tap1);\n      type._skip(tap2);\n    }\n  }\n  return 0;\n};\n\nRecordType.prototype._copy = function (val, opts) {\n  // jshint -W058\n  var hook = opts && opts.fieldHook;\n  var values = [undefined];\n  var i, l, field, value;\n  for (i = 0, l = this._fields.length; i < l; i++) {\n    field = this._fields[i];\n    value = field._type._copy(typeof val[field._name] == 'undefined' ? field.getDefault() : val[field._name], opts);\n    if (hook) {\n      value = hook(field, value, this);\n    }\n    values.push(value);\n  }\n  return new (this._constructor.bind.apply(this._constructor, values));\n};\n\nRecordType.prototype.compare = function (val1, val2) {\n  var fields = this._fields;\n  var i, l, field, name, order, type;\n  for (i = 0, l = fields.length; i < l; i++) {\n    field = fields[i];\n    name = field._name;\n    order = field._order;\n    type = field._type;\n    if (order) {\n      order *= type.compare(val1[name], val2[name]);\n      if (order) {\n        return order;\n      }\n    }\n  }\n  return 0;\n};\n\nRecordType.prototype.random = function () {\n  // jshint -W058\n  var fields = this._fields.map(function (f) { return f._type.random(); });\n  fields.unshift(undefined);\n  return new (this._constructor.bind.apply(this._constructor, fields));\n};\n\nRecordType.prototype.getAliases = function () { return this._aliases; };\n\nRecordType.prototype.getFields = function () { return this._fields.slice(); };\n\nRecordType.prototype.getRecordConstructor = function () {\n  return this._constructor;\n};\n\nRecordType.prototype.toJSON = function () {\n  return {name: this._name, type: 'record', fields: this._fields};\n};\n\n/**\n * Derived type abstract class.\n *\n */\nfunction LogicalType(attrs, opts, Types) {\n  Type.call(this);\n  LOGICAL_TYPE = this;\n  this._underlyingType = createType(attrs, opts);\n\n  // Convenience type check.\n  if (Types && !~Types.indexOf(this._underlyingType.constructor)) {\n    var lType = attrs.logicalType;\n    var uType = this._underlyingType;\n    throw new Error(f('invalid underlying type for %s: %s', lType, uType));\n  }\n}\nutil.inherits(LogicalType, Type);\n\nLogicalType.prototype.getUnderlyingType = function () {\n  return this._underlyingType;\n};\n\nLogicalType.prototype._read = function (tap) {\n  return this._fromValue(this._underlyingType._read(tap));\n};\n\nLogicalType.prototype._write = function (tap, any) {\n  this._underlyingType._write(tap, this._toValue(any));\n};\n\nLogicalType.prototype._check = function (any, cb) {\n  var val;\n  try {\n    val = this._toValue(any);\n  } catch (err) {\n    if (cb) {\n      cb(PATH.slice(), any, this);\n    }\n    return false;\n  }\n  return this._underlyingType._check(val, cb);\n};\n\nLogicalType.prototype._copy = function (any, opts) {\n  var type = this._underlyingType;\n  switch (opts && opts.coerce) {\n    case 3: // To string.\n      return type._copy(this._toValue(any), opts);\n    case 2: // From string.\n      return this._fromValue(type._copy(any, opts));\n    default: // Normal copy.\n      return this._fromValue(type._copy(this._toValue(any), opts));\n  }\n};\n\nLogicalType.prototype._updateResolver = function (resolver, type, opts) {\n  var _fromValue = this._resolve(type, opts);\n  if (_fromValue) {\n    resolver._read = function (tap) { return _fromValue(type._read(tap)); };\n  }\n};\n\nLogicalType.prototype.random = function () {\n  return this._fromValue(this._underlyingType.random());\n};\n\nLogicalType.prototype.compare = function (obj1, obj2) {\n  var val1 = this._toValue(obj1);\n  var val2 = this._toValue(obj2);\n  return this._underlyingType.compare(val1, val2);\n};\n\nLogicalType.prototype.toJSON = function () {\n  return this._underlyingType.toJSON();\n};\n\n// Methods to be implemented.\nLogicalType.prototype._fromValue = utils.abstractFunction;\nLogicalType.prototype._toValue = utils.abstractFunction;\nLogicalType.prototype._resolve = utils.abstractFunction;\n\n\n// General helpers.\n\n/**\n * Customizable long.\n *\n * This allows support of arbitrarily large long (e.g. larger than\n * `Number.MAX_SAFE_INTEGER`). See `LongType.using` method above.\n *\n */\nfunction AbstractLongType(noUnpack) {\n  LongType.call(this);\n  this._noUnpack = !!noUnpack;\n}\nutil.inherits(AbstractLongType, LongType);\n\nAbstractLongType.prototype._check = function (val, cb) {\n  var b = this._isValid(val);\n  if (!b && cb) {\n    cb(PATH.slice(), val, this);\n  }\n  return b;\n};\n\nAbstractLongType.prototype._read = function (tap) {\n  var buf, pos;\n  if (this._noUnpack) {\n    pos = tap.pos;\n    tap.skipLong();\n    buf = tap.buf.slice(pos, tap.pos);\n  } else {\n    buf = tap.unpackLongBytes(tap);\n  }\n  if (tap.isValid()) {\n    return this._fromBuffer(buf);\n  }\n};\n\nAbstractLongType.prototype._write = function (tap, val) {\n  if (!this._isValid(val)) {\n    throwInvalidError(null, val, this);\n  }\n  var buf = this._toBuffer(val);\n  if (this._noUnpack) {\n    tap.writeFixed(buf);\n  } else {\n    tap.packLongBytes(buf);\n  }\n};\n\nAbstractLongType.prototype._copy = function (val, opts) {\n  switch (opts && opts.coerce) {\n    case 3: // To string.\n      return this._toJSON(val);\n    case 2: // From string.\n      return this._fromJSON(val);\n    default: // Normal copy.\n      // Slow but guarantees most consistent results. Faster alternatives would\n      // require assumptions on the long class used (e.g. immutability).\n      return this._fromJSON(JSON.parse(JSON.stringify(this._toJSON(val))));\n  }\n};\n\nAbstractLongType.prototype.random = function () {\n  return this._fromJSON(LongType.prototype.random());\n};\n\n// Methods to be implemented by the user.\nAbstractLongType.prototype._fromBuffer = utils.abstractFunction;\nAbstractLongType.prototype._toBuffer = utils.abstractFunction;\nAbstractLongType.prototype._fromJSON = utils.abstractFunction;\nAbstractLongType.prototype._toJSON = utils.abstractFunction;\nAbstractLongType.prototype._isValid = utils.abstractFunction;\nAbstractLongType.prototype.compare = utils.abstractFunction;\n\n/**\n * Field.\n *\n * @param attrs {Object} The field's schema.\n * @para opts {Object} Schema parsing options (the same as `Type`s').\n *\n */\nfunction Field(attrs, opts) {\n  var name = attrs.name;\n  if (typeof name != 'string' || !NAME_PATTERN.test(name)) {\n    throw new Error(f('invalid field name: %s', name));\n  }\n\n  this._name = name;\n  this._type = createType(attrs.type, opts);\n  this._aliases = attrs.aliases || [];\n\n  this._order = (function (order) {\n    switch (order) {\n      case 'ascending':\n        return 1;\n      case 'descending':\n        return -1;\n      case 'ignore':\n        return 0;\n      default:\n        throw new Error(f('invalid order: %j', order));\n    }\n  })(attrs.order === undefined ? 'ascending' : attrs.order);\n\n  var value = attrs['default'];\n  if (value !== undefined) {\n    // We need to convert defaults back to a valid format (unions are\n    // disallowed in default definitions, only the first type of each union is\n    // allowed instead).\n    // http://apache-avro.679487.n3.nabble.com/field-union-default-in-Java-td1175327.html\n    var type = this._type;\n    var val = type._copy(value, {coerce: 2, wrap: 2});\n    // The clone call above will throw an error if the default is invalid.\n    if (type instanceof PrimitiveType && !(type instanceof BytesType)) {\n      // These are immutable.\n      this.getDefault = function () { return val; };\n    } else {\n      this.getDefault = function () { return type._copy(val); };\n    }\n  }\n}\n\nField.prototype.getAliases = function () { return this._aliases; };\n\nField.prototype.getDefault = function () {}; // Undefined default.\n\nField.prototype.getName = function () { return this._name; };\n\nField.prototype.getOrder = function () {\n  return ['descending', 'ignore', 'ascending'][this._order + 1];\n};\n\nField.prototype.getType = function () { return this._type; };\n\nField.prototype.inspect = function () { return f('<Field %j>', this._name); };\n\n/**\n * Resolver to read a writer's schema as a new schema.\n *\n * @param readerType {Type} The type to convert to.\n *\n */\nfunction Resolver(readerType) {\n  // Add all fields here so that all resolvers share the same hidden class.\n  this._readerType = readerType;\n  this._items = null;\n  this._read = null;\n  this._size = 0;\n  this._symbols = null;\n  this._values = null;\n}\n\nResolver.prototype.inspect = function () { return '<Resolver>'; };\n\n/**\n * Read a value from a tap.\n *\n * @param type {Type} The type to decode.\n * @param tap {Tap} The tap to read from. No checks are performed here.\n * @param resolver {Resolver} Optional resolver. It must match the input type.\n * @param lazy {Boolean} Skip trailing fields when using a resolver.\n *\n */\nfunction readValue(type, tap, resolver, lazy) {\n  if (resolver) {\n    if (resolver._readerType !== type) {\n      throw new Error('invalid resolver');\n    }\n    return resolver._read(tap, lazy);\n  } else {\n    return type._read(tap);\n  }\n}\n\n/**\n * Create default parsing options.\n *\n * @param attrs {Object} Schema to populate options with.\n * @param opts {Object} Base options.\n *\n */\nfunction getOpts(attrs, opts) {\n  if (attrs === null) {\n    // Let's be helpful for this common error.\n    throw new Error('invalid type: null (did you mean \"null\"?)');\n  }\n  opts = opts || {};\n  opts.registry = opts.registry || {};\n  opts.namespace = attrs.namespace || opts.namespace;\n  opts.logicalTypes = opts.logicalTypes || {};\n  return opts;\n}\n\n/**\n * Resolve a schema's name and aliases.\n *\n * @param attrs {Object} True schema (can't be a string).\n * @param namespace {String} Optional parent namespace.\n * @param key {String} Key where the name should be looked up (defaults to\n * `name`).\n *\n */\nfunction resolveNames(attrs, namespace, key) {\n  namespace = attrs.namespace || namespace;\n  key = key || 'name';\n\n  var name = attrs[key];\n  if (!name) {\n    throw new Error(f('missing %s property in schema: %j', key, attrs));\n  }\n  return {\n    name: qualify(name),\n    aliases: attrs.aliases ? attrs.aliases.map(qualify) : []\n  };\n\n  function qualify(name) {\n    if (!~name.indexOf('.') && namespace) {\n      name = namespace + '.' + name;\n    }\n    var tail = unqualify(name);\n    if (isPrimitive(tail)) {\n      // Primitive types cannot be defined in any namespace.\n      throw new Error(f('cannot rename primitive type: %j', tail));\n    }\n    name.split('.').forEach(function (part) {\n      if (!NAME_PATTERN.test(part)) {\n        throw new Error(f('invalid name: %j', name));\n      }\n    });\n    return name;\n  }\n}\n\n/**\n * Remove namespace from a name.\n *\n * @param name {String} Full or short name.\n *\n */\nfunction unqualify(name) {\n  var parts = name.split('.');\n  return parts[parts.length - 1];\n}\n\n/**\n * Get all aliases for a type (including its name).\n *\n * @param obj {Type|Object} Typically a type or a field. Its aliases property\n * must exist and be an array.\n *\n */\nfunction getAliases(obj) {\n  var names = [obj._name];\n  var aliases = obj._aliases;\n  var i, l;\n  for (i = 0, l = aliases.length; i < l; i++) {\n    names.push(aliases[i]);\n  }\n  return names;\n}\n\n/**\n * Get a type's \"type\" (as a string, e.g. `'record'`, `'string'`).\n *\n * @param type {Type} Any type.\n *\n */\nfunction getTypeName(type) {\n  var obj = type.toJSON();\n  return typeof obj == 'string' ? obj : obj.type;\n}\n\n/**\n * Check whether a type's name is a primitive.\n *\n * @param name {String} Type name (e.g. `'string'`, `'array'`).\n *\n */\nfunction isPrimitive(name) {\n  var type = TYPES[name];\n  return type !== undefined && type.prototype instanceof PrimitiveType;\n}\n\n/**\n * Get the number of elements in an array block.\n *\n * @param tap {Tap} A tap positioned at the beginning of an array block.\n *\n */\nfunction readArraySize(tap) {\n  var n = tap.readLong();\n  if (n < 0) {\n    n = -n;\n    tap.skipLong(); // Skip size.\n  }\n  return n;\n}\n\n/**\n * Correctly stringify an object which contains types.\n *\n * @param obj {Object} The object to stringify. Typically, a type itself or an\n * object containing types. Any types inside will be expanded only once then\n * referenced by name.\n * @param noDeref {Boolean} Always reference types by name when possible,\n * rather than expand it the first time it is encountered.\n *\n */\nfunction stringify(obj, noDeref) {\n  // Since JS objects are unordered, this implementation (unfortunately)\n  // relies on engines returning properties in the same order that they are\n  // inserted in. This is not in the JS spec, but can be \"somewhat\" safely\n  // assumed (more here: https://stackoverflow.com/q/5525795/1062617).\n  return (function (registry) {\n    return JSON.stringify(obj, function (key, value) {\n      if (value instanceof Field) {\n        return {name: value._name, type: value._type};\n      } else if (value && value.name) {\n        var name = value.name;\n        if (noDeref || registry[name]) {\n          return name;\n        }\n        registry[name] = true;\n      }\n      return value;\n    });\n  })({});\n}\n\n/**\n * Check whether a long can be represented without precision loss.\n *\n * @param n {Number} The number.\n *\n * Two things to note:\n *\n * + We are not using the `Number` constants for compatibility with older\n *   browsers.\n * + We must remove one from each bound because of rounding errors.\n *\n */\nfunction isSafeLong(n) {\n  return n >= -9007199254740990 && n <= 9007199254740990;\n}\n\n/**\n * Throw a somewhat helpful error on invalid object.\n *\n * @param path {Array} Passed from hook, but unused (because empty where this\n * function is used, since we aren't keeping track of it for effiency).\n * @param val {...} The object to reject.\n * @param type {Type} The type to check against.\n *\n * This method is mostly used from `_write` to signal an invalid object for a\n * given type. Note that this provides less information than calling `isValid`\n * with a hook since the path is not propagated (for efficiency reasons).\n *\n */\nfunction throwInvalidError(path, val, type) {\n  throw new Error(f('invalid %s: %j', type, val));\n}\n\n\nmodule.exports = {\n  createType: createType,\n  resolveNames: resolveNames, // Protocols use the same name resolution logic.\n  stringify: stringify,\n  types: (function () {\n    // Export the base types along with all concrete implementations.\n    var obj = {Type: Type, LogicalType: LogicalType};\n    var types = Object.keys(TYPES);\n    var i, l, Class;\n    for (i = 0, l = types.length; i < l; i++) {\n      Class = TYPES[types[i]];\n      obj[Class.name] = Class;\n    }\n    return obj;\n  })()\n};\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "// Licensed to the Apache Software Foundation (ASF) under one or more\n// contributor license agreements.  See the NOTICE file distributed with\n// this work for additional information regarding copyright ownership.\n// The ASF licenses this file to You under the Apache License, Version 2.0\n// (the \"License\"); you may not use this file except in compliance with\n// the License.  You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _ = require(\"underscore\"),\n    util = require('util');\n\nvar WARNING = 'Validator API is deprecated. Please use the type API instead.';\nValidator = util.deprecate(Validator, WARNING);\nProtocolValidator = util.deprecate(ProtocolValidator, WARNING);\n\nvar AvroSpec = {\n  PrimitiveTypes: ['null', 'boolean', 'int', 'long', 'float', 'double', 'bytes', 'string'],\n  ComplexTypes: ['record', 'enum', 'array', 'map', 'union', 'fixed']\n};\nAvroSpec.Types = AvroSpec.PrimitiveTypes.concat(AvroSpec.ComplexTypes);\n\nvar InvalidSchemaError = function(msg) { return new Error('InvalidSchemaError: ' + msg); };\nvar InvalidProtocolError = function(msg) { return new Error('InvalidProtocolError: ' + msg); };\nvar ValidationError = function(msg) { return new Error('ValidationError: ' + msg); };\nvar ProtocolValidationError = function(msg) { return new Error('ProtocolValidationError: ' + msg); };\n\n\nfunction Record(name, namespace, fields) {\n  function validateArgs(name, namespace, fields) {\n    if (!_.isString(name)) {\n      throw new InvalidSchemaError('Record name must be string');\n    }\n\n    if (!_.isNull(namespace) && !_.isUndefined(namespace) && !_.isString(namespace)) {\n      throw new InvalidSchemaError('Record namespace must be string or null');\n    }\n\n    if (!_.isArray(fields)) {\n      throw new InvalidSchemaError('Record name must be string');\n    }\n  }\n\n  validateArgs(name, namespace, fields);\n\n  this.name = name;\n  this.namespace = namespace;\n  this.fields = fields;\n}\n\nfunction makeFullyQualifiedTypeName(schema, namespace) {\n  var typeName = null;\n  if (_.isString(schema)) {\n    typeName = schema;\n  } else if (_.isObject(schema)) {\n    if (_.isString(schema.namespace)) {\n      namespace = schema.namespace;\n    }\n    if (_.isString(schema.name)) {\n      typeName = schema.name;\n    } else if (_.isString(schema.type)) {\n      typeName = schema.type;\n    }\n  } else {\n    throw new InvalidSchemaError('unable to determine fully qualified type name from schema ' + JSON.stringify(schema) + ' in namespace ' + namespace);\n  }\n\n  if (!_.isString(typeName)) {\n    throw new InvalidSchemaError('unable to determine type name from schema ' + JSON.stringify(schema) + ' in namespace ' + namespace);\n  }\n\n  if (typeName.indexOf('.') !== -1) {\n    return typeName;\n  } else if (_.contains(AvroSpec.PrimitiveTypes, typeName)) {\n    return typeName;\n  } else if (_.isString(namespace)) {\n    return namespace + '.' + typeName;\n  } else {\n    return typeName;\n  }\n}\n\nfunction Union(typeSchemas, namespace) {\n  this.branchNames = function() {\n    return _.map(typeSchemas, function(typeSchema) { return makeFullyQualifiedTypeName(typeSchema, namespace); });\n  };\n\n  function validateArgs(typeSchemas) {\n    if (!_.isArray(typeSchemas) || _.isEmpty(typeSchemas)) {\n      throw new InvalidSchemaError('Union must have at least 1 branch');\n    }\n  }\n\n  validateArgs(typeSchemas);\n\n  this.typeSchemas = typeSchemas;\n  this.namespace = namespace;\n}\n\nfunction Enum(symbols) {\n\n  function validateArgs(symbols) {\n    if (!_.isArray(symbols)) {\n      throw new InvalidSchemaError('Enum must have array of symbols, got ' + JSON.stringify(symbols));\n    }\n    if (!_.all(symbols, function(symbol) { return _.isString(symbol); })) {\n      throw new InvalidSchemaError('Enum symbols must be strings, got ' + JSON.stringify(symbols));\n    }\n  }\n\n  validateArgs(symbols);\n\n  this.symbols = symbols;\n}\n\nfunction AvroArray(itemSchema) {\n\n  function validateArgs(itemSchema) {\n    if (_.isNull(itemSchema) || _.isUndefined(itemSchema)) {\n      throw new InvalidSchemaError('Array \"items\" schema should not be null or undefined');\n    }\n  }\n\n  validateArgs(itemSchema);\n\n  this.itemSchema = itemSchema;\n}\n\nfunction Map(valueSchema) {\n\n  function validateArgs(valueSchema) {\n    if (_.isNull(valueSchema) || _.isUndefined(valueSchema)) {\n      throw new InvalidSchemaError('Map \"values\" schema should not be null or undefined');\n    }\n  }\n\n  validateArgs(valueSchema);\n\n  this.valueSchema = valueSchema;\n}\n\nfunction Field(name, schema) {\n  function validateArgs(name, schema) {\n    if (!_.isString(name)) {\n      throw new InvalidSchemaError('Field name must be string');\n    }\n  }\n\n  this.name = name;\n  this.schema = schema;\n}\n\nfunction Primitive(type) {\n  function validateArgs(type) {\n    if (!_.isString(type)) {\n      throw new InvalidSchemaError('Primitive type name must be a string');\n    }\n\n    if (!_.contains(AvroSpec.PrimitiveTypes, type)) {\n      throw new InvalidSchemaError('Primitive type must be one of: ' + JSON.stringify(AvroSpec.PrimitiveTypes) + '; got ' + type);\n    }\n  }\n\n  validateArgs(type);\n\n  this.type = type;\n}\n\nfunction Validator(schema, namespace, namedTypes) {\n  this.validate = function(obj) {\n    return _validate(this.schema, obj);\n  };\n\n  var _validate = function(schema, obj) {\n    if (schema instanceof Record) {\n      return _validateRecord(schema, obj);\n    } else if (schema instanceof Union) {\n      return _validateUnion(schema, obj);\n    } else if (schema instanceof Enum) {\n      return _validateEnum(schema, obj);\n    } else if (schema instanceof AvroArray) {\n      return _validateArray(schema, obj);\n    } else if (schema instanceof Map) {\n      return _validateMap(schema, obj);\n    } else if (schema instanceof Primitive) {\n      return _validatePrimitive(schema, obj);\n    } else {\n      throw new InvalidSchemaError('validation not yet implemented: ' + JSON.stringify(schema));\n    }\n  };\n\n  var _validateRecord = function(schema, obj) {\n    if (!_.isObject(obj) || _.isArray(obj)) {\n      throw new ValidationError('Expected record Javascript type to be non-array object, got ' + JSON.stringify(obj));\n    }\n\n    var schemaFieldNames = _.pluck(schema.fields, 'name').sort();\n    var objFieldNames = _.keys(obj).sort();\n    if (!_.isEqual(schemaFieldNames, objFieldNames)) {\n      throw new ValidationError('Expected record fields ' + JSON.stringify(schemaFieldNames) + '; got ' + JSON.stringify(objFieldNames));\n    }\n\n    return _.all(schema.fields, function(field) {\n      return _validate(field.schema, obj[field.name]);\n    });\n  };\n\n  var _validateUnion = function(schema, obj) {\n    if (_.isObject(obj)) {\n      if (_.isArray(obj)) {\n        throw new ValidationError('Expected union Javascript type to be non-array object (or null), got ' + JSON.stringify(obj));\n      } else if (_.size(obj) !== 1) {\n        throw new ValidationError('Expected union Javascript object to be object with exactly 1 key (or null), got ' + JSON.stringify(obj));\n      } else {\n        var unionBranch = _.keys(obj)[0];\n        if (unionBranch === \"\") {\n          throw new ValidationError('Expected union Javascript object to contain non-empty string branch, got ' + JSON.stringify(obj));\n        }\n        if (_.contains(schema.branchNames(), unionBranch)) {\n          return true;\n        } else {\n          throw new ValidationError('Expected union branch to be one of ' + JSON.stringify(schema.branchNames()) + '; got ' + JSON.stringify(unionBranch));\n        }\n      }\n    } else if (_.isNull(obj)) {\n      if (_.contains(schema.branchNames(), 'null')) {\n        return true;\n      } else {\n        throw new ValidationError('Expected union branch to be one of ' + JSON.stringify(schema.branchNames()) + '; got ' + JSON.stringify(obj));\n      }\n    } else {\n      throw new ValidationError('Expected union Javascript object to be non-array object of size 1 or null, got ' + JSON.stringify(obj));\n    }\n  };\n\n  var _validateEnum = function(schema, obj) {\n    if (_.isString(obj)) {\n      if (_.contains(schema.symbols, obj)) {\n        return true;\n      } else {\n        throw new ValidationError('Expected enum value to be one of ' + JSON.stringify(schema.symbols) + '; got ' + JSON.stringify(obj));\n      }\n    } else {\n      throw new ValidationError('Expected enum Javascript object to be string, got ' + JSON.stringify(obj));\n    }\n  };\n\n  var _validateArray = function(schema, obj) {\n    if (_.isArray(obj)) {\n      return _.all(obj, function(member) { return _validate(schema.itemSchema, member); });\n    } else {\n      throw new ValidationError('Expected array Javascript object to be array, got ' + JSON.stringify(obj));\n    }\n  };\n\n  var _validateMap = function(schema, obj) {\n    if (_.isObject(obj) && !_.isArray(obj)) {\n      return _.all(obj, function(value) { return _validate(schema.valueSchema, value); });\n    } else if (_.isArray(obj)) {\n      throw new ValidationError('Expected map Javascript object to be non-array object, got array ' + JSON.stringify(obj));\n    } else {\n      throw new ValidationError('Expected map Javascript object to be non-array object, got ' + JSON.stringify(obj));\n    }\n  };\n\n  var _validatePrimitive = function(schema, obj) {\n    switch (schema.type) {\n      case 'null':\n        if (_.isNull(obj) || _.isUndefined(obj)) {\n          return true;\n        } else {\n          throw new ValidationError('Expected Javascript null or undefined for Avro null, got ' + JSON.stringify(obj));\n        }\n        break;\n      case 'boolean':\n        if (_.isBoolean(obj)) {\n          return true;\n        } else {\n          throw new ValidationError('Expected Javascript boolean for Avro boolean, got ' + JSON.stringify(obj));\n        }\n        break;\n      case 'int':\n        if (_.isNumber(obj) && Math.floor(obj) === obj && Math.abs(obj) <= Math.pow(2, 31)) {\n          return true;\n        } else {\n          throw new ValidationError('Expected Javascript int32 number for Avro int, got ' + JSON.stringify(obj));\n        }\n        break;\n      case 'long':\n        if (_.isNumber(obj) && Math.floor(obj) === obj && Math.abs(obj) <= Math.pow(2, 63)) {\n          return true;\n        } else {\n          throw new ValidationError('Expected Javascript int64 number for Avro long, got ' + JSON.stringify(obj));\n        }\n        break;\n      case 'float':\n        if (_.isNumber(obj)) { // TODO: handle NaN?\n          return true;\n        } else {\n          throw new ValidationError('Expected Javascript float number for Avro float, got ' + JSON.stringify(obj));\n        }\n        break;\n      case 'double':\n        if (_.isNumber(obj)) { // TODO: handle NaN?\n          return true;\n        } else {\n          throw new ValidationError('Expected Javascript double number for Avro double, got ' + JSON.stringify(obj));\n        }\n        break;\n      case 'bytes':\n        throw new InvalidSchemaError('not yet implemented: ' + schema.type);\n      case 'string':\n        if (_.isString(obj)) { // TODO: handle NaN?\n          return true;\n        } else {\n          throw new ValidationError('Expected Javascript string for Avro string, got ' + JSON.stringify(obj));\n        }\n        break;\n      default:\n        throw new InvalidSchemaError('unrecognized primitive type: ' + schema.type);\n    }\n  };\n\n  // TODO: namespace handling is rudimentary. multiple namespaces within a certain nested schema definition\n  // are probably buggy.\n  var _namedTypes = namedTypes || {};\n  var _saveNamedType = function(fullyQualifiedTypeName, schema) {\n    if (_.has(_namedTypes, fullyQualifiedTypeName)) {\n      if (!_.isEqual(_namedTypes[fullyQualifiedTypeName], schema)) {\n        throw new InvalidSchemaError('conflicting definitions for type ' + fullyQualifiedTypeName + ': ' + JSON.stringify(_namedTypes[fullyQualifiedTypeName]) + ' and ' + JSON.stringify(schema));\n      }\n    } else {\n      _namedTypes[fullyQualifiedTypeName] = schema;\n    }\n  };\n\n  var _lookupTypeByFullyQualifiedName = function(fullyQualifiedTypeName) {\n    if (_.has(_namedTypes, fullyQualifiedTypeName)) {\n      return _namedTypes[fullyQualifiedTypeName];\n    } else {\n      return null;\n    }\n  };\n\n  var _parseNamedType = function(schema, namespace) {\n    if (_.contains(AvroSpec.PrimitiveTypes, schema)) {\n      return new Primitive(schema);\n    } else if (!_.isNull(_lookupTypeByFullyQualifiedName(makeFullyQualifiedTypeName(schema, namespace)))) {\n      return _lookupTypeByFullyQualifiedName(makeFullyQualifiedTypeName(schema, namespace));\n    } else {\n      throw new InvalidSchemaError('unknown type name: ' + JSON.stringify(schema) + '; known type names are ' + JSON.stringify(_.keys(_namedTypes)));\n    }\n  };\n\n  var _parseSchema = function(schema, parentSchema, namespace) {\n    if (_.isNull(schema) || _.isUndefined(schema)) {\n      throw new InvalidSchemaError('schema is null, in parentSchema: ' + JSON.stringify(parentSchema));\n    } else if (_.isString(schema)) {\n      return _parseNamedType(schema, namespace);\n    } else if (_.isObject(schema) && !_.isArray(schema)) {\n      if (schema.type === 'record') {\n        var newRecord = new Record(schema.name, schema.namespace, _.map(schema.fields, function(field) {\n          return new Field(field.name, _parseSchema(field.type, schema, schema.namespace || namespace));\n        }));\n        _saveNamedType(makeFullyQualifiedTypeName(schema, namespace), newRecord);\n        return newRecord;\n      } else if (schema.type === 'enum') {\n        if (_.has(schema, 'symbols')) {\n          var newEnum = new Enum(schema.symbols);\n          _saveNamedType(makeFullyQualifiedTypeName(schema, namespace), newEnum);\n          return newEnum;\n        } else {\n          throw new InvalidSchemaError('enum must specify symbols, got ' + JSON.stringify(schema));\n        }\n      } else if (schema.type === 'array') {\n        if (_.has(schema, 'items')) {\n          return new AvroArray(_parseSchema(schema.items, schema, namespace));\n        } else {\n          throw new InvalidSchemaError('array must specify \"items\" schema, got ' + JSON.stringify(schema));\n        }\n      } else if (schema.type === 'map') {\n        if (_.has(schema, 'values')) {\n          return new Map(_parseSchema(schema.values, schema, namespace));\n        } else {\n          throw new InvalidSchemaError('map must specify \"values\" schema, got ' + JSON.stringify(schema));\n        }\n      } else if (_.has(schema, 'type') && _.contains(AvroSpec.PrimitiveTypes, schema.type)) {\n        return _parseNamedType(schema.type, namespace);\n      } else {\n        throw new InvalidSchemaError('not yet implemented: ' + schema.type);\n      }\n    } else if (_.isArray(schema)) {\n      if (_.isEmpty(schema)) {\n        throw new InvalidSchemaError('unions must have at least 1 branch');\n      }\n      var branchTypes = _.map(schema, function(branchType) { return _parseSchema(branchType, schema, namespace); });\n      return new Union(branchTypes, namespace);\n    } else {\n      throw new InvalidSchemaError('unexpected Javascript type for schema: ' + (typeof schema));\n    }\n  };\n\n  this.rawSchema = schema;\n  this.schema = _parseSchema(schema, null, namespace);\n}\n\nValidator.validate = function(schema, obj) {\n  return (new Validator(schema)).validate(obj);\n}\n\nfunction ProtocolValidator(protocol) {\n  this.validate = function(typeName, obj) {\n    var fullyQualifiedTypeName = makeFullyQualifiedTypeName(typeName, protocol.namespace);\n    if (!_.has(_typeSchemaValidators, fullyQualifiedTypeName)) {\n      throw new ProtocolValidationError('Protocol does not contain definition for type ' + JSON.stringify(fullyQualifiedTypeName) + ' (fully qualified from input \"' + typeName + '\"); known types are ' + JSON.stringify(_.keys(_typeSchemaValidators)));\n    }\n    return _typeSchemaValidators[fullyQualifiedTypeName].validate(obj);\n  };\n\n  var _typeSchemaValidators = {};\n  var _initSchemaValidators = function(protocol) {\n    var namedTypes = {};\n    if (!_.has(protocol, 'protocol') || !_.isString(protocol.protocol)) {\n      throw new InvalidProtocolError('Protocol must contain a \"protocol\" attribute with a string value');\n    }\n    if (_.isArray(protocol.types)) {\n      _.each(protocol.types, function(typeSchema) {\n        var schemaValidator = new Validator(typeSchema, protocol.namespace, namedTypes);\n        var fullyQualifiedTypeName = makeFullyQualifiedTypeName(typeSchema, protocol.namespace);\n        _typeSchemaValidators[fullyQualifiedTypeName] = schemaValidator;\n      });\n    }\n  };\n\n  _initSchemaValidators(protocol);\n}\n\nProtocolValidator.validate = function(protocol, typeName, obj) {\n  return (new ProtocolValidator(protocol)).validate(typeName, obj);\n};\n\nif (typeof exports !== 'undefined') {\n  exports['Validator'] = Validator;\n  exports['ProtocolValidator'] = ProtocolValidator;\n}\n", "/* jshint browserify: true */\n\n/**\n *  Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *\n *  https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\n'use strict';\n\n/**\n * Shim entry point used when `avro` is `require`d from browserify.\n *\n * It doesn't expose any of the filesystem methods and patches a few others.\n *\n */\n\nvar Tap = require('../../lib/utils').Tap,\n    schemas = require('../../lib/schemas'),\n    deprecated = require('../deprecated/validator');\n\n\nfunction parse(schema, opts) {\n  var obj;\n  if (typeof schema == 'string') {\n    try {\n      obj = JSON.parse(schema);\n    } catch (err) {\n      // Pass. No file reading from the browser.\n    }\n  }\n  if (obj === undefined) {\n    obj = schema;\n  }\n  return schemas.createType(obj, opts);\n}\n\n// No utf8 and binary functions on browserify's `Buffer`, we must patch in the\n// generic slice and write equivalents.\n\nTap.prototype.readString = function () {\n  var len = this.readLong();\n  var pos = this.pos;\n  var buf = this.buf;\n  this.pos += len;\n  if (this.pos > buf.length) {\n    return;\n  }\n  return this.buf.slice(pos, pos + len).toString();\n};\n\nTap.prototype.writeString = function (s) {\n  var len = Buffer.byteLength(s);\n  this.writeLong(len);\n  var pos = this.pos;\n  this.pos += len;\n  if (this.pos > this.buf.length) {\n    return;\n  }\n  this.buf.write(s, pos);\n};\n\nTap.prototype.writeBinary = function (s, len) {\n  var pos = this.pos;\n  this.pos += len;\n  if (this.pos > this.buf.length) {\n    return;\n  }\n  this.buf.write(s, pos, len, 'binary');\n};\n\n\nmodule.exports = {\n  parse: parse,\n  types: schemas.types,\n  Validator: deprecated.Validator,\n  ProtocolValidator: deprecated.ProtocolValidator\n};\n", "import React, { useCallback, useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PageContext, PAGE_QUERY_ARG } from \"./page\";\nimport { pageNames, Pages, toPageName, DEFAULT_PAGE } from \"./pages\";\n\nconst APP_ID = \"app\";\n\nconst appEl = document.getElementById(APP_ID);\n\nif (!appEl) {\n  throw new Error(`Unable to find #${APP_ID}!`);\n}\n\nfunction getWindowSearch(): URLSearchParams {\n  return new URLSearchParams(window.location.search);\n}\n\n/**\n * Call the given handler whenever a `popstate` event\n * occurs.\n *\n * Return a function that wraps `window.history.pushState()`;\n * the given handler will be called immediately afterwards.\n */\nfunction usePushState(onPushOrPopState: () => void) {\n  useEffect(() => {\n    window.addEventListener(\"popstate\", onPushOrPopState);\n    return () => {\n      window.removeEventListener(\"popstate\", onPushOrPopState);\n    };\n  }, [onPushOrPopState]);\n\n  return useCallback(\n    function pushState(href: string) {\n      window.history.pushState(null, \"\", href);\n      onPushOrPopState();\n    },\n    [onPushOrPopState]\n  );\n}\n\nconst App: React.FC<{}> = (props) => {\n  const [search, setSearch] = useState(getWindowSearch());\n  const updateSearchFromWindow = useCallback(\n    () => setSearch(getWindowSearch()),\n    []\n  );\n  const currPage = toPageName(search.get(PAGE_QUERY_ARG) || \"\", DEFAULT_PAGE);\n  const PageComponent = Pages[currPage];\n  const pushState = usePushState(updateSearchFromWindow);\n  const ctx: PageContext = {\n    search,\n    currPage,\n    allPages: pageNames,\n    pushState,\n  };\n\n  return (\n    <PageContext.Provider value={ctx}>\n      <PageComponent />\n    </PageContext.Provider>\n  );\n};\n\nReactDOM.render(<App />, appEl);\n", "import React, { MouseEvent, useContext } from \"react\";\nimport type { PageName } from \"./pages\";\n\nexport type PageContext = {\n  currPage: PageName;\n  allPages: PageName[];\n  pushState: (href: string) => void;\n  search: URLSearchParams;\n};\n\nexport const PageContext = React.createContext<PageContext>({\n  currPage: \"vocabulary\",\n  allPages: [],\n  search: new URLSearchParams(),\n  pushState: () => {\n    throw new Error(\"No page context is defined!\");\n  },\n});\n\nexport const PAGE_QUERY_ARG = \"p\";\n\nfunction isNormalLinkClick(e: MouseEvent): boolean {\n  return !e.shiftKey && !e.altKey && !e.metaKey && !e.ctrlKey && e.button === 0;\n}\n\nconst PageLink: React.FC<{ page: PageName }> = ({ page }) => {\n  const href = `?${PAGE_QUERY_ARG}=${encodeURIComponent(page)}`;\n  const { pushState } = useContext(PageContext);\n  const handleClick = (e: MouseEvent) => {\n    if (isNormalLinkClick(e)) {\n      pushState(href);\n      e.preventDefault();\n    }\n  };\n\n  return (\n    <a href={href} onClick={handleClick}>\n      {page}\n    </a>\n  );\n};\n\nconst Navbar: React.FC<{}> = (props) => {\n  const pc = useContext(PageContext);\n\n  return (\n    <nav>\n      <ul className=\"navbar\">\n        {pc.allPages.map((pageName) => (\n          <li key={pageName}>\n            {pc.currPage === pageName ? pageName : <PageLink page={pageName} />}\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport type PageProps = {\n  title: string;\n  children?: any;\n};\n\nexport const Page: React.FC<PageProps> = ({ title, children }) => {\n  return (\n    <div className=\"page\">\n      <header>\n        <h1>Mystic Symbolic {title}</h1>\n        <Navbar />\n      </header>\n      {children}\n      <footer>\n        <p>\n          For more details about this project, see its{\" \"}\n          <a href=\"https://github.com/toolness/mystic-symbolic\" target=\"_blank\">\n            GitHub repository\n          </a>\n          .\n        </p>\n      </footer>\n    </div>\n  );\n};\n", "import { WavesPage } from \"./waves-page\";\nimport { CloudsPage } from \"./clouds-page\";\nimport { VocabularyPage } from \"./vocabulary-page\";\nimport { CreaturePage } from \"./creature-page\";\nimport { MandalaPage } from \"./mandala-page\";\nimport { DebugPage } from \"./debug-page\";\n\nexport const Pages = {\n  vocabulary: VocabularyPage,\n  creature: CreaturePage,\n  waves: WavesPage,\n  clouds: CloudsPage,\n  mandala: MandalaPage,\n  debug: DebugPage,\n};\n\nexport type PageName = keyof typeof Pages;\n\nexport const pageNames = Object.keys(Pages) as PageName[];\n\nexport const DEFAULT_PAGE: PageName = \"mandala\";\n\nexport function isPageName(page: string): page is PageName {\n  return pageNames.includes(page as any);\n}\n\nexport function toPageName(page: string, defaultValue: PageName): PageName {\n  if (isPageName(page)) return page;\n  return defaultValue;\n}\n", "import React, { useState } from \"react\";\nimport { Checkbox } from \"../checkbox\";\nimport { ColorWidget } from \"../color-widget\";\nimport { NumericSlider } from \"../numeric-slider\";\nimport { Page } from \"../page\";\n\nconst WAVE_STROKE = \"#79beda\";\nconst WAVE_FILL = \"#2b7c9e\";\n\nconst Wave: React.FC<{\n  stroke: string;\n  fill: string;\n}> = ({ stroke, fill }) => (\n  <>\n    {/* Generator: Moho 13.0.3 build 635 */}\n    <path\n      fill={fill}\n      fillRule=\"evenodd\"\n      stroke={stroke}\n      strokeWidth=\"4\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M 1272.978 220.566 C 1272.852 220.566 12.696 217.473 12.570 217.473 C 12.570 217.454 12.307 27.724 12.307 27.705 C 12.311 27.706 35.916 41.496 51.663 41.496 C 67.409 41.496 75.272 27.705 91.018 27.705 C 106.764 27.705 114.627 41.496 130.373 41.496 C 146.120 41.496 153.982 27.705 169.729 27.705 C 185.475 27.705 193.338 41.496 209.085 41.496 C 224.831 41.496 232.694 27.705 248.440 27.705 C 264.186 27.705 272.049 41.496 287.795 41.496 C 303.542 41.496 311.405 27.705 327.151 27.705 C 342.898 27.705 350.760 41.496 366.507 41.496 C 382.253 41.496 390.116 27.705 405.862 27.705 C 421.609 27.705 429.471 41.496 445.218 41.496 C 460.964 41.496 468.827 27.705 484.573 27.705 C 500.320 27.705 508.182 41.496 523.929 41.496 C 539.675 41.496 547.538 27.705 563.284 27.705 C 579.031 27.705 586.893 41.496 602.640 41.496 C 618.386 41.496 626.249 27.705 641.995 27.705 C 657.742 27.705 665.604 41.496 681.351 41.496 C 697.097 41.496 704.960 27.705 720.707 27.705 C 736.453 27.705 744.316 41.496 760.062 41.496 C 775.808 41.496 783.671 27.705 799.417 27.705 C 815.164 27.705 823.026 41.496 838.773 41.496 C 854.519 41.496 862.382 27.705 878.129 27.705 C 893.875 27.705 901.738 41.496 917.484 41.496 C 933.230 41.496 941.093 27.705 956.839 27.705 C 972.586 27.705 980.449 41.496 996.195 41.496 C 1011.942 41.496 1019.804 27.705 1035.551 27.705 C 1051.297 27.705 1059.160 41.496 1074.906 41.496 C 1090.652 41.496 1098.515 27.705 1114.261 27.705 C 1130.008 27.705 1137.871 41.496 1153.617 41.496 C 1169.364 41.496 1177.226 27.705 1192.973 27.705 C 1208.719 27.705 1216.582 41.496 1232.328 41.496 C 1248.075 41.496 1271.680 27.706 1271.684 27.705 C 1271.684 27.724 1272.978 220.547 1272.978 220.566 Z\"\n    />\n    <path\n      fill=\"none\"\n      stroke={stroke}\n      strokeWidth=\"4\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M 12.307 37.713 C 12.311 37.714 35.916 51.504 51.663 51.504 C 67.409 51.504 75.272 37.713 91.018 37.713 C 106.764 37.713 114.627 51.504 130.373 51.504 C 146.120 51.504 153.982 37.713 169.729 37.713 C 185.475 37.713 193.338 51.504 209.085 51.504 C 224.831 51.504 232.694 37.713 248.440 37.713 C 264.186 37.713 272.049 51.504 287.795 51.504 C 303.542 51.504 311.405 37.713 327.151 37.713 C 342.898 37.713 350.760 51.504 366.507 51.504 C 382.253 51.504 390.116 37.713 405.862 37.713 C 421.609 37.713 429.471 51.504 445.218 51.504 C 460.964 51.504 468.827 37.713 484.573 37.713 C 500.320 37.713 508.182 51.504 523.929 51.504 C 539.675 51.504 547.538 37.713 563.284 37.713 C 579.031 37.713 586.893 51.504 602.640 51.504 C 618.386 51.504 626.249 37.713 641.995 37.713 C 657.742 37.713 665.604 51.504 681.351 51.504 C 697.097 51.504 704.960 37.713 720.707 37.713 C 736.453 37.713 744.316 51.504 760.062 51.504 C 775.808 51.504 783.671 37.713 799.417 37.713 C 815.164 37.713 823.026 51.504 838.773 51.504 C 854.519 51.504 862.382 37.713 878.129 37.713 C 893.875 37.713 901.738 51.504 917.484 51.504 C 933.230 51.504 941.093 37.713 956.839 37.713 C 972.586 37.713 980.449 51.504 996.195 51.504 C 1011.942 51.504 1019.804 37.713 1035.551 37.713 C 1051.297 37.713 1059.160 51.504 1074.906 51.504 C 1090.652 51.504 1098.515 37.713 1114.261 37.713 C 1130.008 37.713 1137.871 51.504 1153.617 51.504 C 1169.364 51.504 1177.226 37.713 1192.973 37.713 C 1208.719 37.713 1216.582 51.504 1232.328 51.504 C 1248.075 51.504 1271.680 37.714 1271.684 37.713 \"\n    />\n    <path\n      fill=\"none\"\n      stroke={stroke}\n      strokeWidth=\"4\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M 12.307 47.544 C 12.311 47.546 35.916 61.335 51.663 61.335 C 67.409 61.335 75.272 47.544 91.018 47.544 C 106.764 47.544 114.627 61.335 130.373 61.335 C 146.120 61.335 153.982 47.544 169.729 47.544 C 185.475 47.544 193.338 61.335 209.085 61.335 C 224.831 61.335 232.694 47.544 248.440 47.544 C 264.186 47.544 272.049 61.335 287.795 61.335 C 303.542 61.335 311.405 47.544 327.151 47.544 C 342.898 47.544 350.760 61.335 366.507 61.335 C 382.253 61.335 390.116 47.544 405.862 47.544 C 421.609 47.544 429.471 61.335 445.218 61.335 C 460.964 61.335 468.827 47.544 484.573 47.544 C 500.320 47.544 508.182 61.335 523.929 61.335 C 539.675 61.335 547.538 47.544 563.284 47.544 C 579.031 47.544 586.893 61.335 602.640 61.335 C 618.386 61.335 626.249 47.544 641.995 47.544 C 657.742 47.544 665.604 61.335 681.351 61.335 C 697.097 61.335 704.960 47.544 720.707 47.544 C 736.453 47.544 744.316 61.335 760.062 61.335 C 775.808 61.335 783.671 47.544 799.417 47.544 C 815.164 47.544 823.026 61.335 838.773 61.335 C 854.519 61.335 862.382 47.544 878.129 47.544 C 893.875 47.544 901.738 61.335 917.484 61.335 C 933.230 61.335 941.093 47.544 956.839 47.544 C 972.586 47.544 980.449 61.335 996.195 61.335 C 1011.942 61.335 1019.804 47.544 1035.551 47.544 C 1051.297 47.544 1059.160 61.335 1074.906 61.335 C 1090.652 61.335 1098.515 47.544 1114.261 47.544 C 1130.008 47.544 1137.871 61.335 1153.617 61.335 C 1169.364 61.335 1177.226 47.544 1192.973 47.544 C 1208.719 47.544 1216.582 61.335 1232.328 61.335 C 1248.075 61.335 1271.680 47.546 1271.684 47.544 \"\n    />\n    <path\n      fill=\"none\"\n      stroke={stroke}\n      strokeWidth=\"4\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M 12.307 57.012 C 12.311 57.014 35.916 70.804 51.663 70.804 C 67.409 70.804 75.272 57.012 91.018 57.012 C 106.764 57.012 114.627 70.804 130.373 70.804 C 146.120 70.804 153.982 57.013 169.729 57.012 C 185.475 57.012 193.338 70.804 209.085 70.804 C 224.831 70.804 232.694 57.012 248.440 57.012 C 264.186 57.012 272.049 70.804 287.795 70.804 C 303.542 70.804 311.405 57.012 327.151 57.012 C 342.898 57.013 350.760 70.804 366.507 70.804 C 382.253 70.804 390.116 57.013 405.862 57.012 C 421.609 57.012 429.471 70.804 445.218 70.804 C 460.964 70.804 468.827 57.012 484.573 57.012 C 500.320 57.012 508.182 70.804 523.929 70.804 C 539.675 70.804 547.538 57.013 563.284 57.012 C 579.031 57.012 586.893 70.804 602.640 70.804 C 618.386 70.804 626.249 57.012 641.995 57.012 C 657.742 57.012 665.604 70.804 681.351 70.804 C 697.097 70.804 704.960 57.012 720.707 57.012 C 736.453 57.013 744.316 70.804 760.062 70.804 C 775.808 70.804 783.671 57.012 799.417 57.012 C 815.164 57.012 823.026 70.804 838.773 70.804 C 854.519 70.804 862.382 57.012 878.129 57.012 C 893.875 57.013 901.738 70.804 917.484 70.804 C 933.230 70.804 941.093 57.013 956.839 57.012 C 972.586 57.012 980.449 70.804 996.195 70.804 C 1011.942 70.804 1019.804 57.012 1035.551 57.012 C 1051.297 57.012 1059.160 70.804 1074.906 70.804 C 1090.652 70.804 1098.515 57.013 1114.261 57.012 C 1130.008 57.012 1137.871 70.804 1153.617 70.804 C 1169.364 70.804 1177.226 57.012 1192.973 57.012 C 1208.719 57.012 1216.582 70.804 1232.328 70.804 C 1248.075 70.804 1271.680 57.014 1271.684 57.012 \"\n    />\n    <path\n      fill=\"none\"\n      stroke={stroke}\n      strokeWidth=\"4\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M 12.307 66.844 C 12.311 66.845 35.916 80.635 51.663 80.635 C 67.409 80.635 75.272 66.844 91.018 66.844 C 106.764 66.844 114.627 80.635 130.373 80.635 C 146.120 80.635 153.982 66.844 169.729 66.844 C 185.475 66.844 193.338 80.635 209.085 80.635 C 224.831 80.635 232.694 66.844 248.440 66.844 C 264.186 66.844 272.049 80.635 287.795 80.635 C 303.542 80.635 311.405 66.844 327.151 66.844 C 342.898 66.844 350.760 80.635 366.507 80.635 C 382.253 80.635 390.116 66.844 405.862 66.844 C 421.609 66.844 429.471 80.635 445.218 80.635 C 460.964 80.635 468.827 66.844 484.573 66.844 C 500.320 66.844 508.182 80.635 523.929 80.635 C 539.675 80.635 547.538 66.844 563.284 66.844 C 579.031 66.844 586.893 80.635 602.640 80.635 C 618.386 80.635 626.249 66.844 641.995 66.844 C 657.742 66.844 665.604 80.635 681.351 80.635 C 697.097 80.635 704.960 66.844 720.707 66.844 C 736.453 66.844 744.316 80.635 760.062 80.635 C 775.808 80.635 783.671 66.844 799.417 66.844 C 815.164 66.844 823.026 80.635 838.773 80.635 C 854.519 80.635 862.382 66.844 878.129 66.844 C 893.875 66.844 901.738 80.635 917.484 80.635 C 933.230 80.635 941.093 66.844 956.839 66.844 C 972.586 66.844 980.449 80.635 996.195 80.635 C 1011.942 80.635 1019.804 66.844 1035.551 66.844 C 1051.297 66.844 1059.160 80.635 1074.906 80.635 C 1090.652 80.635 1098.515 66.844 1114.261 66.844 C 1130.008 66.844 1137.871 80.635 1153.617 80.635 C 1169.364 80.635 1177.226 66.844 1192.973 66.844 C 1208.719 66.844 1216.582 80.635 1232.328 80.635 C 1248.075 80.635 1271.680 66.845 1271.684 66.844 \"\n    />\n  </>\n);\n\nconst NUM_WAVES = 8;\nconst WAVE_DURATION = 1;\nconst WAVE_PARALLAX_SCALE_START = 1.2;\nconst WAVE_PARALLAX_TRANSLATE_START = 10;\nconst WAVE_PARALLAX_SCALE_VELOCITY = 1.25;\nconst WAVE_PARALLAX_TRANSLATE_VELOCITY = 30;\nconst WAVE_PARALLAX_TRANSLATE_ACCEL = 10;\n\nconst Waves: React.FC<{}> = () => {\n  const [stroke, setStroke] = useState(WAVE_STROKE);\n  const [fill, setFill] = useState(WAVE_FILL);\n  const [numWaves, setNumWaves] = useState(NUM_WAVES);\n  const [duration, setDuration] = useState(WAVE_DURATION);\n  const [initialYVel, setInitialYVel] = useState(\n    WAVE_PARALLAX_TRANSLATE_VELOCITY\n  );\n  const [yAccel, setYAccel] = useState(WAVE_PARALLAX_TRANSLATE_ACCEL);\n  const [scaleVel, setScaleVel] = useState(WAVE_PARALLAX_SCALE_VELOCITY);\n  const [useMask, setUseMask] = useState(false);\n\n  let scale = WAVE_PARALLAX_SCALE_START;\n  let y = WAVE_PARALLAX_TRANSLATE_START;\n  let yVel = initialYVel;\n  let waves: JSX.Element[] = [];\n\n  for (let i = 0; i < numWaves; i++) {\n    waves.push(\n      <g key={i} transform={`translate(0 ${y}) scale(${scale} ${scale})`}>\n        <g>\n          <Wave fill={fill} stroke={stroke} />\n          <animateTransform\n            attributeName=\"transform\"\n            type=\"translate\"\n            from=\"-179 0\"\n            to=\"-100 0\"\n            dur={`${duration}s`}\n            begin=\"0s\"\n            fill=\"freeze\"\n            repeatCount=\"indefinite\"\n          />\n        </g>\n      </g>\n    );\n    y += yVel;\n    scale *= scaleVel;\n    yVel += yAccel;\n  }\n\n  return (\n    <>\n      <div className=\"canvas\">\n        <svg width=\"1280px\" height=\"720px\" viewBox=\"0 0 1280 720\">\n          {useMask ? (\n            <>\n              <mask id=\"circle-mask\">\n                <circle cx=\"640\" cy=\"360\" r=\"300\" fill=\"white\" />\n              </mask>\n              <g mask=\"url(#circle-mask)\">{waves}</g>\n            </>\n          ) : (\n            waves\n          )}\n        </svg>\n      </div>\n      <div className=\"sidebar\">\n        <div className=\"thingy\">\n          <ColorWidget value={stroke} onChange={setStroke} label=\"Stroke\" />{\" \"}\n          <ColorWidget value={fill} onChange={setFill} label=\"Fill\" />\n        </div>\n        <NumericSlider\n          label=\"Number of waves\"\n          min={1}\n          max={NUM_WAVES * 2}\n          value={numWaves}\n          step={1}\n          onChange={setNumWaves}\n        />\n        <NumericSlider\n          label=\"Cycle duration\"\n          min={0.1}\n          max={3}\n          value={duration}\n          step={0.1}\n          onChange={setDuration}\n          valueSuffix=\"s\"\n        />\n        <NumericSlider\n          label=\"Initial y-velocity\"\n          min={1}\n          max={WAVE_PARALLAX_TRANSLATE_VELOCITY * 4}\n          value={initialYVel}\n          step={1}\n          onChange={setInitialYVel}\n        />\n        <NumericSlider\n          label=\"Y-acceleration\"\n          min={1}\n          max={WAVE_PARALLAX_TRANSLATE_ACCEL * 2}\n          value={yAccel}\n          step={1}\n          onChange={setYAccel}\n        />\n        <NumericSlider\n          label=\"Scale velocity\"\n          min={1.0}\n          max={2}\n          value={scaleVel}\n          step={0.025}\n          onChange={setScaleVel}\n        />\n        <Checkbox\n          label=\"Mask with circle\"\n          value={useMask}\n          onChange={setUseMask}\n        />\n      </div>\n    </>\n  );\n};\n\nexport const WavesPage: React.FC<{}> = () => (\n  <Page title=\"Waves!\">\n    <Waves />\n  </Page>\n);\n", "import classNames from \"classnames\";\nimport React from \"react\";\n\ntype CheckboxProps = {\n  label: string;\n  onChange: (value: boolean) => void;\n  value: boolean;\n  disabled?: boolean;\n};\n\nexport const Checkbox: React.FC<CheckboxProps> = (props) => {\n  return (\n    <label className={classNames(\"checkbox\", { disabled: props.disabled })}>\n      <input\n        type=\"checkbox\"\n        checked={props.value}\n        disabled={props.disabled}\n        onChange={(e) => props.onChange(e.target.checked)}\n      />{\" \"}\n      {props.label}\n    </label>\n  );\n};\n", "import React from \"react\";\nimport { slugify } from \"./util\";\n\ntype ColorWidgetProps = {\n  label: string;\n  value: string;\n  onChange: (value: string) => void;\n  id?: string;\n};\n\nexport const ColorWidget: React.FC<ColorWidgetProps> = (props) => {\n  const id = props.id || slugify(props.label);\n\n  return (\n    <span className=\"color-widget\">\n      <label htmlFor={id}>{props.label}: </label>\n      <input\n        id={id}\n        type=\"color\"\n        value={props.value}\n        onChange={(e) => props.onChange(e.target.value)}\n      />\n    </span>\n  );\n};\n", "export function float(value: string | number | undefined): number {\n  if (typeof value === \"number\") return value;\n  if (value === undefined) value = \"\";\n\n  const float = parseFloat(value);\n\n  if (isNaN(float)) {\n    throw new Error(`Expected '${value}' to be a float!`);\n  }\n\n  return float;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n  const result: T[] = [];\n\n  for (let subarr of arr) {\n    result.push(...subarr);\n  }\n\n  return result;\n}\n\n/**\n * Convert radians to degrees.\n */\nexport function rad2deg(radians: number): number {\n  return (radians * 180) / Math.PI;\n}\n\nexport type NumericInterval = {\n  min: number;\n  max: number;\n};\n\nexport type NumericRange = NumericInterval & {\n  step: number;\n};\n\nexport type GaussianDist = {\n  mean: number;\n  stddev: number;\n};\n\n/**\n * Return numbers within the given range, inclusive.\n */\nexport function inclusiveRange({ min, max, step }: NumericRange): number[] {\n  const result: number[] = [];\n\n  for (let i = min; i <= max; i += step) {\n    result.push(i);\n  }\n\n  return result;\n}\n\n/**\n * Clamp a number between min and max\n */\nexport function clamp(x: number, min: number, max: number) {\n  return Math.max(min, Math.min(x, max));\n}\n\n/**\n * Return an array containing the numbers from 0 to one\n * less than the given value, increasing.\n */\nexport function range(count: number): number[] {\n  return inclusiveRange({ min: 0, max: count - 1, step: 1 });\n}\n\n/**\n * Slugify the given string.\n *\n * Taken from: https://gist.github.com/mathewbyrne/1280286\n */\nexport function slugify(text: string) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\") // Replace spaces with -\n    .replace(/[^\\w\\-]+/g, \"\") // Remove all non-word chars\n    .replace(/\\-\\-+/g, \"-\") // Replace multiple - with single -\n    .replace(/^-+/, \"\") // Trim - from start of text\n    .replace(/-+$/, \"\"); // Trim - from end of text\n}\n\n/** Returns whether the given number is even (as opposed to odd). */\nexport function isEvenNumber(value: number) {\n  return value % 2 === 0;\n}\n\n/**\n * Convert the given number of seconds (float) to milliseconds (integer).\n */\nexport function secsToMsecs(secs: number): number {\n  return Math.floor(secs * 1000);\n}\n\n/**\n * Returns the given number to a \"friendly-looking\" human\n * representation that is not ridiculously long.  For example,\n * it will return \"1.85\" instead of \"1.850000000143\".\n */\nexport function toFriendlyDecimal(value: number, maxDecimalDigits = 2): string {\n  const str = value.toString();\n  const fixedStr = value.toFixed(maxDecimalDigits);\n\n  return str.length < fixedStr.length ? str : fixedStr;\n}\n\n/**\n * Given an array consisting of a nullable type, filter out all the nulls.\n */\nexport function withoutNulls<T>(arr: (T | null)[]): T[] {\n  const result: T[] = [];\n\n  for (let item of arr) {\n    if (item !== null) {\n      result.push(item);\n    }\n  }\n\n  return result;\n}\n", "import classNames from \"classnames\";\nimport React from \"react\";\nimport { float, NumericRange, slugify, toFriendlyDecimal } from \"./util\";\n\nexport type NumericSliderProps = NumericRange & {\n  id?: string;\n  label: string;\n  onChange: (value: number) => void;\n  value: number;\n  valueSuffix?: string;\n  disabled?: boolean;\n};\n\nexport const NumericSlider: React.FC<NumericSliderProps> = (props) => {\n  const id = props.id || slugify(props.label);\n\n  return (\n    <div\n      className={classNames(\"thingy\", \"numeric-slider\", {\n        disabled: props.disabled,\n      })}\n    >\n      <label htmlFor={id}>{props.label}: </label>\n      <span className=\"slider\">\n        <input\n          type=\"range\"\n          id={id}\n          min={props.min}\n          max={props.max}\n          value={props.value}\n          step={props.step}\n          disabled={props.disabled}\n          onChange={(e) => props.onChange(float(e.target.value))}\n        />\n        <span className=\"slider-value\">\n          {\" \"}\n          {toFriendlyDecimal(props.value)}\n          {props.valueSuffix}\n        </span>\n      </span>\n    </div>\n  );\n};\n", "/* 2021-05-31 Dave Weaver, @webaissance - based on waves-page.tsx */\n/* IMPORTS */\nimport React, { useState } from \"react\";\nimport { Page } from \"../page\";\nimport {\n  CompositionContextWidget,\n  createSvgCompositionContext,\n} from \"../svg-composition-context\";\nimport { Checkbox } from \"../checkbox\";\nimport { ColorWidget } from \"../color-widget\";\nimport { RandomizerWidget } from \"../randomizer-widget\";\nimport { VocabularyWidget } from \"../vocabulary-widget\";\nimport { SvgVocabulary, SvgVocabularyWithBlank } from \"../svg-vocabulary\";\nimport {\n  EMPTY_SVG_SYMBOL_DATA,\n  noFillIfShowingSpecs,\n  SvgSymbolData,\n} from \"../svg-symbol\";\nimport {\n  CompositionContextWidget,\n  createSvgCompositionContext,\n} from \"../svg-composition-context\";\n\n/* TO DO: Get symbols randomly or from a pulldown */\n/* CLOUD SVG */\nconst Cloud: React.FC<{\n  stroke: string;\n  fill: string;\n\tstrokewidth: string; \n}> = ({ stroke, fill, strokewidth}) => (\n  <>\n<path fill={fill} fillRule=\"evenodd\" stroke=\"none\" d=\"M 360.000 596.177 C 500.811 596.177 614.404 482.584 614.404 341.774 C 614.404 200.963 500.811 87.370 360.000 87.370 C 219.189 87.370 105.596 200.963 105.596 341.774 C 105.596 482.584 219.189 596.177 360.000 596.177 Z\"/>\n<path fill=\"none\" stroke={stroke} strokeWidth={strokewidth} strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M 604.098 371.149 C 602.507 412.416 597.237 433.275 575.983 476.189 M 530.256 180.457 C 583.769 228.655 607.192 290.877 604.098 371.149 M 212.437 216.472 C 280.858 106.327 437.914 97.287 530.256 180.457 M 208.196 406.565 C 175.078 346.560 176.784 273.866 212.437 216.472 M 437.019 451.501 C 365.701 513.810 255.178 491.691 208.196 406.565 M 479.177 353.518 C 480.210 390.509 464.892 427.148 437.019 451.501 M 383.232 252.404 C 437.329 252.139 477.731 301.781 479.177 353.518 M 315.724 293.646 C 329.002 268.221 355.037 252.543 383.232 252.404 M 324.498 355.831 C 305.359 339.494 306.332 311.630 315.724 293.646 M 347.839 363.173 C 337.678 362.940 332.207 362.412 324.498 355.831 M 366.134 334.409 C 377.849 347.389 363.196 363.525 347.839 363.173 M 354.460 336.520 C 354.806 332.878 362.306 330.168 366.134 334.409 M 105.596 341.774 C 105.596 482.584 219.189 596.177 360.000 596.177 C 500.811 596.177 614.404 482.584 614.404 341.774 C 614.404 200.963 500.811 87.370 360.000 87.370 C 219.189 87.370 105.596 200.963 105.596 341.774 \"/>\n  </>\n);\n\n\n/* INITIAL VALUES */\nconst CLOUD_STROKE = \"#79beda\";\nconst CLOUD_FILL = \"#2b7c9e\";\nconst CLOUD_STROKEWIDTH = 30;\nconst NUM_ELEMENTS = 7;\nconst NUM_CLOUDS = 12;\nconst MAX_CLOUDS = 12;\nconst CLOUD_DISTANCE = 5;\nconst NUM_ROWS = 3;\nconst ROW_DISTANCE = 5;\nconst CLOUD_SPEED = 3;\nconst PARALLAX_SPEED = 2;\nconst PARALLAX_SIZE = 1;\nconst ROTATION_SPEED = 6;\nconst CLOUD_SPACING = 0.5;\nconst CLOUD_SCALE = 0.8;\nconst CLOUD_PULSEMIN = 0.8;\nconst CLOUD_PULSE = 1.7;\nconst PULSE_DURATION = 2.6;\nconst BG_COLOR = \"#FFFFFF\";\nconst SCREEN_WIDTH = 12000;\nconst MASK_RADIUS = 2000;\nconst MASK_X = 4500;\nconst MASK_Y = 3000;\n\nconst NumericSlider: React.FC<{\n  id: string;\n  label: string;\n  onChange: (value: number) => void;\n  value: number;\n  min: number;\n  max: number;\n  step: number;\n  valueSuffix?: string;\n}> = (props) => {\n  return (\n    <p>\n      <label htmlFor={props.id}>{props.label}</label>\n      <input\n        type=\"range\"\n        id={props.id}\n        min={props.min}\n        max={props.max}\n        value={props.value}\n        step={props.step}\n        onChange={(e) => props.onChange(parseFloat(e.target.value))}\n      />\n      <span>\n        {\" \"}\n        {props.value}\n        {props.valueSuffix}\n      </span>\n    </p>\n  );\n};\n\n/* SETTERS AND VARIABLES */\nconst Clouds: React.FC<{}> = () => {\n  const [stroke, setStroke] = useState(CLOUD_STROKE);\n  let [strokewidth, setStrokewidth] = useState(CLOUD_STROKEWIDTH);\n  const [fill, setFill] = useState(CLOUD_FILL);\n  const [numElements, setnumElements] = useState(NUM_ELEMENTS);\n  let [numClouds, setnumClouds] = useState(NUM_CLOUDS);\n  const [cloudDistance, setcloudDistance] = useState(CLOUD_DISTANCE);\n  let [numRows, setnumRows] = useState(NUM_ROWS);\n  const [rowDistance, setrowDistance] = useState(ROW_DISTANCE);\n  const [cloudSpeed, setcloudSpeed] = useState(CLOUD_SPEED);\n  const [parallaxSpeed, setparallaxSpeed] = useState(PARALLAX_SPEED);\n  const [parallaxSize, setparallaxSize] = useState(PARALLAX_SIZE);\n  const [rotationSpeed, setRotationSpeed] = useState(ROTATION_SPEED);\n  const [pulseDuration, setPulseDuration] = useState(PULSE_DURATION);\n  let [spacing, setSpacing] = useState(CLOUD_SPACING);\n  let [scaleValue, setScaleValue] = useState(CLOUD_SCALE); \n  const [pulseValue, setPulseValue] = useState(CLOUD_PULSE); \n  const [pulseminValue, setPulseminValue] = useState(CLOUD_PULSEMIN); \n  const [compCtx, setCompCtx] = useState(createSvgCompositionContext());\n  const [useMask, setUseMask] = useState(false);\n\tlet [maskRadius, setMaskRadius] = useState(MASK_RADIUS); \n\tlet [maskX, setMaskX] = useState(MASK_X); \n\tlet [maskY, setMaskY] = useState(MASK_Y); \n\n \n\tlet rotationDuration = 0; //default to 0\n\tif (rotationSpeed>0) {\n\t\trotationDuration = 8.5 - rotationSpeed; \n\t} else if (rotationSpeed<0) {\n\t\trotationDuration = 8.5 - (rotationSpeed * -1); // if rotationSpeed is negative then reverse direction\n\t} \n\tlet rotationAngle = -360;\n\tif (rotationSpeed<0) {\n   rotationAngle = 360;\n\t}\n\n\tlet screenWidth = SCREEN_WIDTH;\n\n\t/* set default colors upon init */\n\tif ((compCtx.background==\"#858585\") && (compCtx.stroke==\"#000000\") && (compCtx.fill==\"#ffffff\")) {\n\tcompCtx.background = BG_COLOR;\n\tcompCtx.stroke = CLOUD_STROKE;\n\tcompCtx.strokewidth = CLOUD_STROKEWIDTH;\n\tcompCtx.fill = CLOUD_FILL;\n\t}\n\nconst newRandomSeed = () => setRandomSeed(Date.now());\nfunction getDownloadBasename(randomSeed: number) {\n  return `mystic-symbolic-creature-${randomSeed}`;\n}\n  const [alwaysInclude, setAlwaysInclude] = useState<SvgSymbolData>(\n    EMPTY_SVG_SYMBOL_DATA\n  );\n\n/* CLOUD ELEMENTS: create an array for the position of each element */\n\tconst cloudposx = [-400, 400, -900,   0,  900,  -400,    400, -1200, 1200, -900,   0,   900, -400,  400  ];\n\tconst cloudposy = [   400,   400,  1000, 1000,  1000,   1600,  1600,  1600, 1600, 2200, 2200, 2200, 2800, 2800  ];\n\n/* SET MORE VARIABLES */\n\n  let clouds: JSX.Element[] = [];\n\tlet maxClouds = MAX_CLOUDS; // max number of clouds\n\tlet xpos = 0; // set x position of elements\n\tlet xposbase = 0; // base for x pos\n\tlet ypos = 0; // set y position of elements\n\tlet thisscaleValue = scaleValue;\n\tlet thisspacing = spacing;\n\tlet speedindex = 500; // this is the basis for the cloud speed - the higher the number the slower\n\tlet invertedcloudspeed = 0;  // this is for speed\n\tlet loopfactor = 1.1;\n\tlet keynum = 0; // to keep track of keys - to give each element a unique ID\n\tlet keynumA = 0; \n\tlet keynumB = 0;\n\tlet keynumC = 0;\n  let adjustedY = 1200; // pushes down clouds on page\n  let cloudW = 360;  // cloud width\n  let cloudH = 360;  // cloud height\n\tlet loopfromvalue = 0; // loop from value - where loop starts\n\tlet looptovalue = 0; // loop to value - where the loop ends\n\tlet thiscloudSpeed = 0; // thiscloudspeed is so that clouds can go in both directions. this is the absolute value of cloudspeed\n\n\tlet showbackground = compCtx.background;\nif (useMask) { showbackground = \"#fff\"; }  /* use white background when using mask - need to get mask bg working ... */\n\n\n/* prevent overloading - maximum number of elements */\n\twhile ((numElements * numRows * numClouds) > 430) {\n\t\tnumRows--;\n\t\tnumClouds--;\n\t}\n\t\t\n\n\n\n/* BUILD THE CLOUDS */\n\n\t// cloud rows\n  for (let k = 0; k < numRows; k++) {\n\t// clouds\n  for (let j = 0; j < numClouds; j++) {\n\t// cloud elements\n  for (let i = 0; i < numElements; i++) {\n\n\tkeynum++; // keep track of the keys for unique elements\n\tkeynumA = keynum + \"A\";\n\tkeynumB = keynum + \"B\";\n\tkeynumC = keynum + \"C\";\n\n\t// clouds get bigger with each row\n  thisscaleValue = scaleValue + (k * .6 * parallaxSize) ;\n  thisspacing = spacing + (k * .3 * parallaxSize) ;\n\n\tthiscloudSpeed = Math.abs(cloudSpeed);\n\n\n\n\t// clouds get faster with each row\n\tif (cloudSpeed == 0) {\n\t\t invertedcloudspeed = 2000;\n\t} else {\n\t\tinvertedcloudspeed = speedindex / ((thiscloudSpeed +3) * (thiscloudSpeed +3) * ((k * parallaxSpeed * .2) + 1)); // the greater the speed the smaller the inverted cloud speed\n\t}\n\n\n  let starttime = ((pulseDuration / numElements) * i) - 10; // creates the rhythmic pulsing effect\n\n\n\t// get negative values for cloud size - for offsets\n\tlet cloudWneg = cloudW * -1;\n\tlet cloudHneg = cloudH * -1;\n\n/* LOCATIONS OF CLOUDS */\n  xposbase  = 500 * thisscaleValue * cloudDistance; // basis for xpos\n  let xpos = (cloudposx[i] * thisspacing) + (j * xposbase )  - cloudW;\n  let ypos = (cloudposy[i] * thisspacing)  + (k * rowDistance * 100 * thisscaleValue) + adjustedY - cloudH;\n\n\t  // CALCULATE LOOPING\n\t// the fewer clouds the larger the loop value. \n\t// this is tricky to make smooth without skipping...  this also affects the speed\n\t// make the calculations for the first cloud of each row - since that will determine the looping start and end points\nif (j==0) {\n\tloopfromvalue =Math.round(xposbase * -1) ; // start of the loop is 2 clouds to the left\n\tlooptovalue = 0; \n\t//looptovalue = Math.round(xposbase * 5 * (Math.floor(maxClouds / numClouds / 2 )-1)) ; // end of loop - a bit tricky - some logic - some trial and error\n\tif (cloudSpeed<0) { // reverse direction\n\t  let newlooptovalue = loopfromvalue * -1;\n\t  let newloopfromvalue = looptovalue * -1;\n\t\t// these are tricky for some reason. add values to make it work right\n\t\tloopfromvalue = newlooptovalue - screenWidth + 600;  \n\t\tlooptovalue = newloopfromvalue - screenWidth +600;\n\t} else if (cloudSpeed==0) { // if not moving then start on the screen (not off)\n\t\tloopfromvalue = Math.round(xposbase * 5 * -1) + 600;\n\t\tlooptovalue = loopfromvalue;\n\t}\n\tif (cloudSpeed != 0) {\n\t//console.log('loopfromvalue:'+loopfromvalue);\n  //console.log('looptovalue:'+looptovalue);\n\t}\n}\n\n\n\n\n  clouds.push(\n\n<g key={`${keynumA}`} transform={`translate(${cloudWneg},${cloudHneg})`} >\n\n\t\t\t/* move */\n\t\t\t<animateTransform\n\t\t\t\tattributeName=\"transform\"\n\t\t\t\ttype=\"translate\"\n\t\t\t\tfrom={`${loopfromvalue} 0`}\n\t\t\t\tto={`${looptovalue} 0`}\n\t\t\t\tbegin = \"0s\"\n\t\t\t\tdur={`${invertedcloudspeed}s`}\n\t\t\t\trepeatCount=\"indefinite\"  \n\t\t\t\tadditive=\"sum\" \n\t\t\t\tfill=\"freeze\"\n\t\t\t/>\n\n\n    <g key={`${keynumB}`} transform={`translate(${xpos} ${ypos}) scale(${thisscaleValue} ${thisscaleValue})`}> \n\n   \n\n       <g key={`${keynumC}`}  transform={`translate(${cloudWneg},${cloudHneg})`}>\n\t\t<Cloud fill={compCtx.fill} stroke={compCtx.stroke} strokewidth={strokewidth}  />\n\t\t   /* rotate */\n\t\t\t<animateTransform\n\t\t\t\tattributeName=\"transform\"\n\t\t\t\ttype=\"rotate\"\n\t\t\t\tfrom={`0 ${cloudW} ${cloudH}`}\n\t\t\t\tto={`${rotationAngle} ${cloudW} ${cloudH}`}\n\t\t\t\tdur={`${rotationDuration}s`}\n\t\t\t\trepeatCount=\"indefinite\"  \n\t\t\t\tadditive=\"sum\" \n\t\t\t/>\n\n\t\t</g>\n\n\t\t/* pulse */\n\t\t\t<animateTransform\n\t\t\t\tattributeName=\"transform\"\n\t\t\t\ttype=\"scale\"\n\t\t\t\tdur={`${pulseDuration}s`}\n\t\t\t\tvalues = {`${pulseminValue};${pulseValue};${pulseminValue};`}\n\t\t\t\tbegin={`${starttime}s`}\n\t\t\t\trepeatCount=\"indefinite\"\n\t\t\t\tadditive=\"sum\"\n\t\t\t/>\n\n\t\t</g>\t\n\n\t\t</g>\t\n\n\t);\n}\n\n}\n\n}\n\n\n  return (\n    <> \n \n\t<div className=\"canvas clouds\" style={{ backgroundColor: showbackground }}>\n      <svg  viewBox={`-3000 -1000 ${screenWidth} 9000`}  >\n\t\t\t    {useMask ? (\n\t\t\t\t\t\n            <>   \n\t\t\t\t\t\t  <circle stroke=\"2\" cx={`${maskX-2000}`} cy={`${maskY}`} r={`${maskRadius}`}  fill={`${compCtx.background}`}></circle>\n              <clipPath id=\"cloud-circle-mask\" style={{ backgroundColor: compCtx.background }}>\n              <circle cx={`${maskX-2000}`} cy={`${maskY}`} r={`${maskRadius}`}  />\n              </clipPath>\n              <g clipPath=\"url(#cloud-circle-mask)\">{clouds}</g>\n\t\t\t\t\t\t\t\n            </>\n\t\t\t\t\t\t\n          ) : (\n            clouds\n          )}\n      </svg>\n\t    </div>\n\n     <div className=\"sidebar clouds\">\n\n\t <CompositionContextWidget ctx={compCtx} onChange={setCompCtx} />\n\n\t\t<RandomizerWidget\n          onColorsChange={(colors) => setCompCtx({ ...compCtx, ...colors })}\n          /* onSymbolsChange={newRandomSeed} */\n        >\n        </RandomizerWidget>\n      <NumericSlider\n        id=\"numElements\"\n        label=\"Number of elements\"\n        min={1}\n        max={14}\n        value={numElements}\n        step={1}\n        onChange={setnumElements}\n      />\n\n      <NumericSlider\n        id=\"cloudDistance\"\n        label=\"Distance between clouds\"\n        min={3}\n        max={14}\n        value={cloudDistance}\n        step={1}\n        onChange={setcloudDistance}\n      />\n      <NumericSlider\n        id=\"numRows\"\n        label=\"Number of rows\"\n        min={1}\n        max={5}\n        value={numRows}\n        step={1}\n        onChange={setnumRows}\n      />\n      <NumericSlider\n        id=\"rowDistance\"\n        label=\"Distance between Rows\"\n        min={0}\n        max={20}\n        value={rowDistance}\n        step={1}\n        onChange={setrowDistance}\n      />\n      <NumericSlider\n        id=\"cloudSpeed\"\n        label=\"Cloud speed\"\n        min={-20}\n        max={20}\n        value={cloudSpeed}\n        step={1}\n        onChange={setcloudSpeed}\n      />\n      <NumericSlider\n        id=\"parallaxSpeed\"\n        label=\"Parallax speed\"\n        min={0.5}\n        max={5}\n        value={parallaxSpeed}\n        step={0.1}\n        onChange={setparallaxSpeed}\n      />\n      <NumericSlider\n        id=\"parallaxSize\"\n        label=\"Parallax size\"\n        min={0.3}\n        max={2}\n        value={parallaxSize}\n        step={0.1}\n        onChange={setparallaxSize}\n      />\n      <NumericSlider\n        id=\"rotationSpeed\"\n        label=\"Rotation speed\"\n        min={-8}\n        max={8}\n        value={rotationSpeed}\n        step={0.5}\n        onChange={setRotationSpeed}\n        valueSuffix=\"s\"\n      />\n      <NumericSlider\n        id=\"spacing\"\n        label=\"Spacing\"\n        min={.2}\n        max={1}\n        value={spacing}\n        step={.1}\n        onChange={setSpacing}\n      />\n      <NumericSlider\n        id=\"scaleValue\"\n        label=\"Scale\"\n        min={.3}\n        max={1.5}\n        value={scaleValue}\n        step={0.1}\n        onChange={setScaleValue}\n      />\n      <NumericSlider\n        id=\"strokewidth\"\n        label=\"Stroke width\"\n        min={1}\n        max={100}\n        value={strokewidth}\n        step={1}\n        onChange={setStrokewidth}\n      />\n      <NumericSlider\n        id=\"pulseminValue\"\n        label=\"Pulse Size Min\"\n        min={0.5}\n        max={1}\n        value={pulseminValue}\n        step={0.1}\n        onChange={setPulseminValue}\n      />\n      <NumericSlider\n        id=\"pulseValue\"\n        label=\"Pulse Size Max\"\n        min={1}\n        max={2.5}\n        value={pulseValue}\n        step={0.1}\n        onChange={setPulseValue}\n      />\n      <NumericSlider\n        id=\"pulseDuration\"\n        label=\"Pulse duration\"\n        min={0.8}\n        max={8}\n        value={pulseDuration}\n        step={0.2}\n        onChange={setPulseDuration}\n        valueSuffix=\"s\"\n      />\n        <Checkbox\n          label=\"Mask with circle\"\n          value={useMask}\n          onChange={setUseMask}\n        />\n      <NumericSlider\n        id=\"maskRadius\"\n        label=\"Mask Radius\"\n        min={500}\n        max={5000}\n        value={maskRadius}\n        step={500}\n        onChange={setMaskRadius}\n      />\n      <NumericSlider\n        id=\"maskY\"\n        label=\"Mask Top\"\n        min={-1000}\n        max={7000}\n        value={maskY}\n        step={500}\n        onChange={setMaskY}\n      />\n      <NumericSlider\n        id=\"maskX\"\n        label=\"Mask Left\"\n        min={-2000}\n        max={screenWidth}\n        value={maskX}\n        step={500}\n        onChange={setMaskX}\n      />\n\n      </div>\n\n\n    </>\n  );\n};\n\nexport const CloudsPage: React.FC<{}> = () => {\n\n  const [randomSeed, setRandomSeed] = useState<number>(Date.now());\n  const [compCtx, setCompCtx] = useState(createSvgCompositionContext());\n\n  return (\n  <Page title=\"Clouds\">\n    <Clouds />\n  </Page>\n  );\n};\n", "import React, { useState } from \"react\";\nimport { PaletteAlgorithmWidget } from \"./palette-algorithm-widget\";\nimport { Random } from \"./random\";\nimport {\n  createRandomColorPalette,\n  DEFAULT_RANDOM_PALETTE_ALGORITHM,\n  RandomPaletteAlgorithm,\n} from \"./random-colors\";\nimport { SvgCompositionContext } from \"./svg-composition-context\";\n\ntype SvgCompositionColors = Pick<\n  SvgCompositionContext,\n  \"background\" | \"fill\" | \"stroke\"\n>;\n\nfunction createRandomCompositionColors(\n  alg: RandomPaletteAlgorithm\n): SvgCompositionColors {\n  const [background, stroke, fill] = createRandomColorPalette(\n    3,\n    undefined,\n    alg\n  );\n  return { background, stroke, fill };\n}\n\nexport type RandomizerWidgetProps = {\n  onColorsChange: (changes: SvgCompositionColors) => void;\n  onSymbolsChange: (rng: Random) => void;\n};\n\nexport const RandomizerWidget: React.FC<RandomizerWidgetProps> = (props) => {\n  type RandType = \"colors\" | \"symbols\" | \"colors and symbols\";\n  const [paletteAlg, setPaletteAlg] = useState<RandomPaletteAlgorithm>(\n    DEFAULT_RANDOM_PALETTE_ALGORITHM\n  );\n  const [randType, setRandType] = useState<RandType>(\"colors and symbols\");\n  const randomize = () => {\n    if (randType === \"colors\" || randType === \"colors and symbols\") {\n      props.onColorsChange(createRandomCompositionColors(paletteAlg));\n    }\n    if (randType === \"symbols\" || randType === \"colors and symbols\") {\n      props.onSymbolsChange(new Random(Date.now()));\n    }\n  };\n  const makeRadio = (kind: RandType) => (\n    <label className=\"checkbox\">\n      <input\n        type=\"radio\"\n        name=\"randomize_type\"\n        value={kind}\n        checked={randType === kind}\n        onChange={(e) => setRandType(e.target.value as RandType)}\n      />{\" \"}\n      Randomize {kind}\n    </label>\n  );\n\n  return (\n    <fieldset>\n      <legend>Randomizer</legend>\n      {makeRadio(\"colors\")}\n      {makeRadio(\"symbols\")}\n      {makeRadio(\"colors and symbols\")}\n      {randType !== \"symbols\" && (\n        <PaletteAlgorithmWidget value={paletteAlg} onChange={setPaletteAlg} />\n      )}\n      {props.children}\n      <button accessKey=\"r\" onClick={randomize}>\n        <u>R</u>andomize!\n      </button>\n    </fieldset>\n  );\n};\n", "import React from \"react\";\nimport {\n  RandomPaletteAlgorithm,\n  RANDOM_PALETTE_ALGORITHMS,\n} from \"./random-colors\";\n\nexport type PaletteAlgorithmWidgetProps = {\n  value: RandomPaletteAlgorithm;\n  onChange: (value: RandomPaletteAlgorithm) => void;\n};\n\nexport const PaletteAlgorithmWidget: React.FC<PaletteAlgorithmWidgetProps> = ({\n  value,\n  onChange,\n}) => {\n  const id = \"algorithm\";\n\n  return (\n    <div className=\"flex-widget thingy\">\n      <label htmlFor={id}>Palette algorithm: </label>\n      <select\n        id={id}\n        onChange={(e) => onChange(e.target.value as RandomPaletteAlgorithm)}\n        value={value}\n      >\n        {RANDOM_PALETTE_ALGORITHMS.map((choice) => (\n          <option key={choice} value={choice}>\n            {choice}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n", "import { Random } from \"./random\";\nimport { range, clamp } from \"./util\";\nimport * as colorspaces from \"colorspaces\";\nimport { ColorTuple, hsluvToHex } from \"hsluv\";\nimport { clampedBytesToRGBColor } from \"./color-util\";\n\ntype RandomPaletteGenerator = (numEntries: number, rng: Random) => string[];\n//type ColorFunction = (rng: Random) => string[];\n\nexport type RandomPaletteAlgorithm = \"RGB\" | \"CIELUV\" | \"threevals\";\n//  | \"randgrey\"\n//  | \"threev15\"\n//  | \"threev30\"\n//  | \"threev45\"\n//  | \"threev60\"\n//  | \"threev75\"\n//  | \"threev90\";\n\nexport const DEFAULT_RANDOM_PALETTE_ALGORITHM: RandomPaletteAlgorithm =\n  \"threevals\";\n\nfunction createRandomRGBColor(rng: Random): string {\n  const rgb = range(3).map(() => rng.inRange({ min: 0, max: 255, step: 1 }));\n  return clampedBytesToRGBColor(rgb);\n}\n\nfunction createRandomCIELUVColor(rng: Random): string {\n  const max_luv_samples = 100;\n  let luvSampleFailed = true;\n  let randColorHex: string = \"#000000\";\n\n  //See if we can pull out a sample inside the LUV solid\n  for (let i = 0; i < max_luv_samples; i++) {\n    //bounds from https://docs.opencv.org/2.4/modules/imgproc/doc/miscellaneous_transformations.html#cvtcolor\n    let L = rng.inInterval({ min: 0, max: 100 });\n    let u = rng.inInterval({ min: -134, max: 220 });\n    let v = rng.inInterval({ min: -140, max: 122 });\n    let randColor = colorspaces.make_color(\"CIELUV\", [L, u, v]);\n\n    if (randColor.is_displayable() && !(L == 0.0 && (u != 0 || v != 0))) {\n      randColorHex = randColor.as(\"hex\");\n      luvSampleFailed = false;\n      break;\n    }\n  }\n\n  //just sample sRGB if I couldn't sample a random LUV color\n  if (luvSampleFailed) {\n    let rgb = [0, 0, 0].map(\n      () => rng.inRange({ min: 0, max: 255, step: 1 }) / 255.0\n    );\n    let randColor = colorspaces.make_color(\"sRGB\", rgb);\n    randColorHex = randColor.as(\"hex\");\n  }\n\n  return randColorHex;\n}\n\n/*\nfunction createRandGrey(rng: Random): string[] {\n  let L1 = rng.inInterval({ min: 0, max: 100 });\n  let L2 = rng.inInterval({ min: 0, max: 100 });\n  let L3 = rng.inInterval({ min: 0, max: 100 });\n\n  let Ls = [L1, L2, L3];\n\n  let h = 0;\n  let Hs = [h, h, h];\n\n  let S = 0;\n  let Ss = [S, S, S];\n\n  //zip\n  let hsls = Ls.map((k, i) => [Hs[i], Ss[i], k]);\n  let hexcolors = hsls.map((x) => hsluvToHex(x as ColorTuple));\n\n  //scramble order\n  hexcolors = rng.uniqueChoices(hexcolors, hexcolors.length);\n  return hexcolors;\n}\n*/\n\n/*\nfunction create3V180(angle1: number): ColorFunction {\n  return (rng: Random): string[] => {\n    let Ls = [25, 50, 75];\n\n    //Now we have 3 lightness values, pick a random hue and sat\n    let h1 = rng.inInterval({ min: 0, max: 360 }),\n      h2 = 360 * (((h1 + angle1) / 360) % 1),\n      h3 = 360 * (((h1 + 180) / 360) % 1);\n\n    let Hs = [h1, h2, h3];\n\n    let Ss = [\n      rng.fromGaussian({ mean: 100, stddev: 40 }),\n      rng.fromGaussian({ mean: 100, stddev: 40 }),\n      rng.fromGaussian({ mean: 100, stddev: 40 }),\n    ];\n    Ss = Ss.map((x) => clamp(x, 0, 100));\n\n    //zip\n    let hsls = Ls.map((k, i) => [Hs[i], Ss[i], k]);\n    let hexcolors = hsls.map((x) => hsluvToHex(x as ColorTuple));\n\n    //scramble order\n    hexcolors = rng.uniqueChoices(hexcolors, hexcolors.length);\n    return hexcolors;\n  };\n}\n*/\n\nfunction threeVColor(rng: Random): string[] {\n  let L1 = rng.inInterval({ min: 10, max: 25 });\n  let L2 = rng.inInterval({ min: L1 + 25, max: 60 });\n  let L3 = rng.inInterval({ min: L2 + 25, max: 85 });\n\n  let Ls = [L1, L2, L3];\n\n  let angleI = rng.inInterval({ min: 0, max: 120 });\n\n  //Now we have 3 lightness values, pick a random hue and sat\n  let h1 = rng.inInterval({ min: 0, max: 360 }),\n    h2 = h1 + angleI,\n    h3 = 360 * ((((h1 + h2) / 2 + 180) / 360) % 1);\n\n  h2 = 360 * ((h2 / 360) % 1);\n\n  let Hs = [h1, h2, h3];\n\n  let Ss = [\n    rng.fromGaussian({ mean: 100, stddev: 40 }),\n    rng.fromGaussian({ mean: 100, stddev: 40 }),\n    rng.fromGaussian({ mean: 100, stddev: 40 }),\n  ];\n  Ss = Ss.map((x) => clamp(x, 0, 100));\n\n  //zip\n  let hsls = Ls.map((k, i) => [Hs[i], Ss[i], k]);\n  let hexcolors = hsls.map((x) => hsluvToHex(x as ColorTuple));\n\n  //scramble order\n  hexcolors = rng.uniqueChoices(hexcolors, hexcolors.length);\n  return hexcolors;\n}\n\n/*\nfunction threeVColor(rng: Random): string[] {\n  let lowL_Mean = 20.0,\n    medL_Mean = 40.0,\n    hiL_Mean = 70,\n    lowL_SD = 30.0,\n    medL_SD = lowL_SD,\n    hiL_SD = lowL_SD;\n\n  let Ls = [\n    rng.fromGaussian({ mean: lowL_Mean, stddev: lowL_SD }),\n    rng.fromGaussian({ mean: medL_Mean, stddev: medL_SD }),\n    rng.fromGaussian({ mean: hiL_Mean, stddev: hiL_SD }),\n  ];\n\n  Ls = Ls.map((x) => clamp(x, 0, 100));\n\n  //Now we have 3 lightness values, pick a random hue and sat\n\n  let h1 = rng.inInterval({ min: 0, max: 360 }),\n    h2 = 360 * (((h1 + 60 * Number(rng.bool(0.5))) / 360) % 1),\n    h3 = 360 * (((h1 + 180 * Number(rng.bool(0.5))) / 360) % 1);\n\n  let Hs = [h1, h2, h3];\n\n  let Ss = [\n    rng.fromGaussian({ mean: 100, stddev: 40 }),\n    rng.fromGaussian({ mean: 100, stddev: 40 }),\n    rng.fromGaussian({ mean: 100, stddev: 40 }),\n  ];\n  Ss = Ss.map((x) => clamp(x, 0, 100));\n\n  //zip\n  let hsls = Ls.map((k, i) => [Hs[i], Ss[i], k]);\n  let hexcolors = hsls.map((x) => hsluvToHex(x as ColorTuple));\n\n  //scramble order\n  hexcolors = rng.uniqueChoices(hexcolors, hexcolors.length);\n  return hexcolors;\n}\n*/\n\n/**\n * Factory function to take a function that generates a random color\n * and return a palette generator that just calls it once for every\n * color in the palette.\n */\nfunction createSimplePaletteGenerator(\n  createColor: (rng: Random) => string\n): RandomPaletteGenerator {\n  return (numEntries: number, rng: Random) =>\n    range(numEntries).map(() => createColor(rng));\n}\n\n/**\n * Factory function to make a random palette generator for a triad generator\n */\n\nfunction createTriadPaletteGenerator(\n  createTriad: (rng: Random) => string[]\n): RandomPaletteGenerator {\n  return (numEntries: number, rng: Random): string[] => {\n    let colors: string[] = [];\n    let n = Math.floor(numEntries / 3) + 1;\n\n    if (numEntries == 3) {\n      colors = colors.concat(createTriad(rng));\n    } else {\n      for (let i = 0; i < n; i++) colors = colors.concat(createTriad(rng));\n      colors = colors.slice(0, numEntries);\n    }\n\n    return colors;\n  };\n}\n\nconst PALETTE_GENERATORS: {\n  [key in RandomPaletteAlgorithm]: RandomPaletteGenerator;\n} = {\n  RGB: createSimplePaletteGenerator(createRandomRGBColor),\n  CIELUV: createSimplePaletteGenerator(createRandomCIELUVColor),\n  threevals: createTriadPaletteGenerator(threeVColor),\n  //randgrey: createTriadPaletteGenerator(createRandGrey),\n  //threev15: createTriadPaletteGenerator(create3V180(15)),\n  //threev30: createTriadPaletteGenerator(create3V180(15)),\n  //threev45: createTriadPaletteGenerator(create3V180(45)),\n  //threev60: createTriadPaletteGenerator(create3V180(60)),\n  //threev75: createTriadPaletteGenerator(create3V180(75)),\n  //threev90: createTriadPaletteGenerator(create3V180(90)),\n};\n\nexport const RANDOM_PALETTE_ALGORITHMS = Object.keys(\n  PALETTE_GENERATORS\n) as RandomPaletteAlgorithm[];\n\n/**\n * Create a random color palette with the given number of entries,\n * optionally using the given random number generator and the\n * given algorithm.\n *\n * The return value is an Array of strings, where each string is\n * a color hex hash (e.g. `#ff0000`).\n */\nexport function createRandomColorPalette(\n  numEntries: number,\n  rng: Random = new Random(),\n  algorithm: RandomPaletteAlgorithm = DEFAULT_RANDOM_PALETTE_ALGORITHM\n): string[] {\n  return PALETTE_GENERATORS[algorithm](numEntries, rng);\n}\n", "import {\n  inclusiveRange,\n  NumericInterval,\n  NumericRange,\n  GaussianDist,\n} from \"./util\";\n\nexport type RandomParameters = {\n  modulus: number;\n  multiplier: number;\n  increment: number;\n};\n\nconst NUMERICAL_RECIPES_PARAMETERS: RandomParameters = {\n  modulus: Math.pow(2, 32),\n  multiplier: 1664525,\n  increment: 1013904223,\n};\n\n/**\n * A simple linear congruential random number generator, as described in\n * https://en.wikipedia.org/wiki/Linear_congruential_generator.\n */\nexport class Random {\n  private latestSeed: number;\n\n  constructor(\n    readonly seed: number = Date.now(),\n    readonly params: RandomParameters = NUMERICAL_RECIPES_PARAMETERS\n  ) {\n    this.latestSeed = seed;\n  }\n\n  /**\n   * Create an exact replica of this instance.\n   */\n  clone(): Random {\n    return new Random(this.latestSeed, this.params);\n  }\n\n  /**\n   * Return a random number that is greater than or equal to zero, and less\n   * than one.\n   */\n  next(): number {\n    this.latestSeed =\n      (this.params.multiplier * this.latestSeed + this.params.increment) %\n      this.params.modulus;\n    return this.latestSeed / this.params.modulus;\n  }\n\n  /**\n   * Return a random boolean with the given probability of being true.\n   */\n  bool(trueProbability: number = 0.5): boolean {\n    return this.next() < trueProbability;\n  }\n\n  /**\n   * Return a number in the given range, inclusive.\n   */\n  inRange(range: NumericRange): number {\n    return this.choice(inclusiveRange(range));\n  }\n\n  /**\n   * Return a number in the interval, second argument is really supremum which return value is always less than\n   */\n  inInterval({ min, max }: NumericInterval): number {\n    return this.next() * (max - min) + min;\n  }\n\n  /**\n   * Return a number from the specified gaussian distribution\n   * from: https://stackoverflow.com/questions/25582882/javascript-math-random-normal-distribution-gaussian-bell-curve\n   */\n  fromGaussian({ mean, stddev }: GaussianDist, nsamples = 6) {\n    let runtotal = 0;\n    for (var i = 0; i < nsamples; i++) {\n      runtotal += this.next();\n    }\n\n    return (stddev * (runtotal - nsamples / 2)) / (nsamples / 2) + mean;\n  }\n\n  /**\n   * Return a random item from the given array. If the array is\n   * empty, an exception is thrown.\n   */\n  choice<T>(array: T[]): T {\n    if (array.length === 0) {\n      throw new Error(\"Cannot choose randomly from an empty array!\");\n    }\n    const idx = Math.floor(this.next() * array.length);\n    return array[idx];\n  }\n\n  /**\n   * Attempt to randomly choose *at most* the given number of unique items from\n   * the array. If the array is too small, fewer items are returned.\n   */\n  uniqueChoices<T>(array: T[], howMany: number): T[] {\n    let choicesLeft = [...array];\n    const result: T[] = [];\n\n    for (let i = 0; i < howMany; i++) {\n      if (choicesLeft.length === 0) {\n        break;\n      }\n      const choice = this.choice(choicesLeft);\n      choicesLeft = choicesLeft.filter((item) => item !== choice);\n      result.push(choice);\n    }\n\n    return result;\n  }\n}\n", "/**\n * Clamp the given number to be between 0 and 255, then\n * convert it to hexadecimal.\n */\nexport function clampedByteToHex(value: number): string {\n  if (value < 0) {\n    value = 0;\n  } else if (value > 255) {\n    value = 255;\n  }\n  let hex = value.toString(16);\n  if (hex.length === 1) {\n    hex = \"0\" + hex;\n  }\n  return hex;\n}\n\n/**\n * Convert the given array of numbers to an RGB hex value.\n */\nexport function clampedBytesToRGBColor(values: number[]): string {\n  return \"#\" + values.map(clampedByteToHex).join(\"\");\n}\n", "import React, { useMemo } from \"react\";\nimport { SVGProps } from \"react\";\nimport { BBox } from \"../vendor/bezier-js\";\nimport { FILL_REPLACEMENT_COLOR, STROKE_REPLACEMENT_COLOR } from \"./colors\";\nimport { AttachmentPointType, PointWithNormal, Specs } from \"./specs\";\nimport type { SvgSymbolMetadata } from \"./svg-symbol-metadata\";\nimport { UniqueIdMap, useUniqueIdMap } from \"./unique-id\";\nimport { VisibleSpecs } from \"./visible-specs\";\n\nconst DEFAULT_UNIFORM_STROKE_WIDTH = 1;\n\nexport type SvgSymbolData = {\n  name: string;\n  bbox: BBox;\n  layers: SvgSymbolElement[];\n  defs?: SvgSymbolDef[];\n  meta?: SvgSymbolMetadata;\n  specs?: Specs;\n};\n\nexport type SvgSymbolGradientStop = {\n  offset: string;\n  color: string;\n};\n\n/**\n * This represents a definition that will be referenced\n * from elsewhere in an SVG, such as a radial gradient.\n */\nexport type SvgSymbolDef =\n  | {\n      type: \"radialGradient\";\n      id: string;\n      cx: string;\n      cy: string;\n      r: string;\n      stops: SvgSymbolGradientStop[];\n    }\n  | {\n      type: \"linearGradient\";\n      id: string;\n      x1: string;\n      y1: string;\n      x2: string;\n      y2: string;\n      stops: SvgSymbolGradientStop[];\n    };\n\nexport const EMPTY_SVG_SYMBOL_DATA: SvgSymbolData = {\n  name: \"\",\n  bbox: {\n    x: { min: 0, max: 0 },\n    y: { min: 0, max: 0 },\n  },\n  layers: [],\n};\n\nexport type SvgSymbolElement = (\n  | {\n      tagName: \"g\";\n      props: SVGProps<SVGGElement>;\n    }\n  | {\n      tagName: \"path\";\n      props: SVGProps<SVGPathElement>;\n    }\n) & {\n  children: SvgSymbolElement[];\n};\n\nexport type SvgSymbolContext = {\n  /** The stroke color of the symbol, as a hex hash (e.g. '#ff0000'). */\n  stroke: string;\n\n  /** The fill color of the symbol, as a hex hash (e.g. '#ff0000'). */\n  fill: string;\n\n  /**\n   * Whether or not to visibly show the specifications for the symbol,\n   * e.g. its attachment points, nesting boxes, and so on.\n   */\n  showSpecs: boolean;\n\n  /**\n   * Whether or not to forcibly apply a uniform stroke width to all\n   * the shapes in the symbol.  If defined, the stroke width will\n   * *not* vary as the symbol is scaled.\n   */\n  uniformStrokeWidth?: number;\n};\n\nconst DEFAULT_CONTEXT: SvgSymbolContext = {\n  stroke: \"#000000\",\n  fill: \"#ffffff\",\n  showSpecs: false,\n  uniformStrokeWidth: DEFAULT_UNIFORM_STROKE_WIDTH,\n};\n\n/**\n * If the given symbol context is visibly showing its specifications,\n * return one with its fill color set to \"none\" so that the specs can\n * be seen more easily.\n */\nexport function noFillIfShowingSpecs<T extends SvgSymbolContext>(ctx: T): T {\n  return {\n    ...ctx,\n    fill: ctx.showSpecs ? \"none\" : ctx.fill,\n  };\n}\n\n/**\n * Return a symbol context with the stroke and fill colors swapped.\n */\nexport function swapColors<T extends SvgSymbolContext>(ctx: T): T {\n  return {\n    ...ctx,\n    fill: ctx.stroke,\n    stroke: ctx.fill,\n  };\n}\n\nexport function createSvgSymbolContext(\n  ctx: Partial<SvgSymbolContext> = {}\n): SvgSymbolContext {\n  return {\n    ...DEFAULT_CONTEXT,\n    ...ctx,\n  };\n}\n\nfunction getColor(\n  ctx: SvgSymbolContext,\n  color: string | undefined\n): string | undefined {\n  switch (color) {\n    case STROKE_REPLACEMENT_COLOR:\n      return ctx.stroke;\n    case FILL_REPLACEMENT_COLOR:\n      return ctx.fill;\n  }\n  return color;\n}\n\nfunction reactifySvgSymbolElement(\n  ctx: SvgSymbolContext,\n  uidMap: UniqueIdMap,\n  el: SvgSymbolElement,\n  key: number\n): JSX.Element {\n  let { fill, stroke, strokeWidth } = el.props;\n  let vectorEffect;\n  fill = getColor(ctx, fill);\n  stroke = getColor(ctx, stroke);\n  if (fill) {\n    fill = uidMap.rewriteUrl(fill);\n  }\n  if (strokeWidth !== undefined && typeof ctx.uniformStrokeWidth === \"number\") {\n    strokeWidth = ctx.uniformStrokeWidth;\n    vectorEffect = \"non-scaling-stroke\";\n  }\n  const props: typeof el.props = {\n    ...el.props,\n    id: undefined,\n    vectorEffect,\n    strokeWidth,\n    fill,\n    stroke,\n    key,\n  };\n  return React.createElement(\n    el.tagName,\n    props,\n    el.children.map(reactifySvgSymbolElement.bind(null, ctx, uidMap))\n  );\n}\n\nconst SvgSymbolDef: React.FC<\n  { def: SvgSymbolDef; uidMap: UniqueIdMap } & SvgSymbolContext\n> = ({ def, uidMap, ...ctx }) => {\n  const id = uidMap.getStrict(def.id);\n  const stops = def.stops.map((stop, i) => (\n    <stop key={i} offset={stop.offset} stopColor={getColor(ctx, stop.color)} />\n  ));\n  switch (def.type) {\n    case \"radialGradient\":\n      return (\n        <radialGradient id={id} cx={def.cx} cy={def.cy} r={def.r}>\n          {stops}\n        </radialGradient>\n      );\n    case \"linearGradient\":\n      return (\n        <linearGradient id={id} x1={def.x1} y1={def.y1} x2={def.x2} y2={def.y2}>\n          {stops}\n        </linearGradient>\n      );\n  }\n};\n\nexport const SvgSymbolContent: React.FC<\n  { data: SvgSymbolData } & SvgSymbolContext\n> = (props) => {\n  const d = props.data;\n  const origIds = useMemo(() => d.defs?.map((def) => def.id) ?? [], [d.defs]);\n  const uidMap = useUniqueIdMap(origIds);\n\n  return (\n    <g data-symbol-name={d.name}>\n      {d.defs &&\n        d.defs.map((def, i) => (\n          <SvgSymbolDef key={i} {...props} def={def} uidMap={uidMap} />\n        ))}\n      {props.data.layers.map(\n        reactifySvgSymbolElement.bind(null, props, uidMap)\n      )}\n      {props.showSpecs && d.specs && <VisibleSpecs specs={d.specs} />}\n    </g>\n  );\n};\n\nexport class AttachmentPointError extends Error {}\n\nexport function getAttachmentPoint(\n  s: SvgSymbolData,\n  type: AttachmentPointType,\n  idx: number = 0\n): PointWithNormal {\n  const { specs } = s;\n  if (!specs) {\n    throw new AttachmentPointError(`Symbol ${s.name} has no specs.`);\n  }\n  const points = specs[type];\n  if (!(points && points.length > idx)) {\n    throw new AttachmentPointError(\n      `Expected symbol ${s.name} to have at least ${\n        idx + 1\n      } ${type} attachment point(s).`\n    );\n  }\n\n  return points[idx];\n}\n\nexport function safeGetAttachmentPoint(\n  s: SvgSymbolData,\n  type: AttachmentPointType,\n  idx: number = 0\n): PointWithNormal | null {\n  try {\n    return getAttachmentPoint(s, type, idx);\n  } catch (e) {\n    if (e instanceof AttachmentPointError) {\n      console.log(e.message);\n    } else {\n      throw e;\n    }\n  }\n\n  return null;\n}\n", "import type { AttachmentPointType } from \"./specs\";\n\nexport const DEFAULT_BG_COLOR = \"#858585\";\nexport const STROKE_REPLACEMENT_COLOR = \"#000000\";\nexport const FILL_REPLACEMENT_COLOR = \"#ffffff\";\n\nexport const ATTACHMENT_POINT_COLORS: {\n  [key in AttachmentPointType]: string;\n} = {\n  anchor: \"#ff0000\",\n  tail: \"#be0027\",\n  leg: \"#ffff00\",\n  arm: \"#00ff00\",\n  horn: \"#00ffff\",\n  crown: \"#0000ff\",\n};\n\nexport const NESTING_BOUNDING_BOX_COLOR = \"#ff00ff\";\n", "import React, { useContext, useMemo } from \"react\";\n\ntype UniqueIdContextType = {\n  prefix: string;\n  counter: number;\n};\n\nconst UniqueIdContext = React.createContext<UniqueIdContextType>({\n  prefix: \"uid_\",\n  counter: 0,\n});\n\nfunction useUniqueIds(count: number): string[] {\n  const ctx = useContext(UniqueIdContext);\n  const result = useMemo<string[]>(() => {\n    const result: string[] = [];\n\n    for (let i = 0; i < count; i++) {\n      result.push(`${ctx.prefix}${ctx.counter}`);\n      ctx.counter += 1;\n    }\n\n    return result;\n  }, [count, ctx]);\n\n  return result;\n}\n\nexport class UniqueIdMap extends Map<string, string> {\n  /**\n   * Returns the globally-unique identifier for the given\n   * locally-unique one, raising an exception if one\n   * doesn't exist.\n   */\n  getStrict(key: string): string {\n    const uid = this.get(key);\n\n    if (!uid) {\n      throw new Error(`Unable to find a unique ID for \"${key}\"`);\n    }\n\n    return uid;\n  }\n\n  /**\n   * If the given string is of the form `url(#id)`, where `id` is a\n   * locally-unique identifier, then this will replace `id` with\n   * its globally-unique analogue.  If it does not have a\n   * globally-unique identifier for it, however, an error will be\n   * raised.\n   *\n   * If the string is *not* of the aforementioned form, however,\n   * it will be returned unmodified.\n   *\n   * This can be used to e.g. rewrite references in SVG attributes\n   * that may refer to locally-unique identifiers.\n   */\n  rewriteUrl(value: string): string {\n    const match = value.match(/^url\\(\\#(.+)\\)$/);\n\n    if (!match) {\n      return value;\n    }\n\n    const uid = this.getStrict(match[1]);\n\n    return `url(#${uid})`;\n  }\n}\n\n/**\n * We sometimes need to take locally-unique identifiers and make them\n * globally-unique within some larger context; for example, an individual\n * SVG may have defined a `<radialGradient id=\"boop\">` where `#boop` is\n * unique to the SVG, but if we want to inline the SVG into an HTML page,\n * it may no longer be unique.\n *\n * This React Hook takes an array of locally-unique identifiers and returns\n * a mapping between them and globally-unique ones.\n */\nexport function useUniqueIdMap(originalIds: string[]): UniqueIdMap {\n  const uniqueIds = useUniqueIds(originalIds.length);\n\n  return useMemo(\n    () => new UniqueIdMap(originalIds.map((id, i) => [id, uniqueIds[i]])),\n    [originalIds, uniqueIds]\n  );\n}\n", "import React from \"react\";\nimport { BBox } from \"../vendor/bezier-js\";\nimport { getBoundingBoxSize } from \"./bounding-box\";\nimport * as colors from \"./colors\";\nimport { AttachmentPoint, iterAttachmentPoints, Specs } from \"./specs\";\n\nconst ATTACHMENT_POINT_RADIUS = 20;\n\nconst ATTACHMENT_POINT_NORMAL_LENGTH = 50;\n\nconst ATTACHMENT_POINT_NORMAL_STROKE = 4;\n\nconst SPEC_OPACITY = 0.66;\n\nconst VisibleAttachmentPoint: React.FC<{\n  point: AttachmentPoint;\n}> = ({ point: ap }) => {\n  const { x, y } = ap.point;\n  const x2 = x + ap.normal.x * ATTACHMENT_POINT_NORMAL_LENGTH;\n  const y2 = y + ap.normal.y * ATTACHMENT_POINT_NORMAL_LENGTH;\n  const color = colors.ATTACHMENT_POINT_COLORS[ap.type];\n\n  return (\n    <g data-spec-type={ap.type} data-spec-index={ap.index}>\n      <circle\n        fill={color}\n        r={ATTACHMENT_POINT_RADIUS}\n        cx={x}\n        cy={y}\n        opacity={SPEC_OPACITY}\n      />\n      <line\n        opacity={SPEC_OPACITY}\n        x1={x}\n        y1={y}\n        x2={x2}\n        y2={y2}\n        stroke={color}\n        strokeWidth={ATTACHMENT_POINT_NORMAL_STROKE}\n      />\n    </g>\n  );\n};\n\nconst BoundingBoxes: React.FC<{ fill: string; bboxes: BBox[] }> = (props) => (\n  <>\n    {props.bboxes.map((b, i) => {\n      const [width, height] = getBoundingBoxSize(b);\n      return (\n        <rect\n          data-spec-type=\"nesting\"\n          data-spec-index={i}\n          opacity={SPEC_OPACITY}\n          key={i}\n          x={b.x.min}\n          y={b.y.min}\n          width={width}\n          height={height}\n          fill={props.fill}\n        />\n      );\n    })}\n  </>\n);\n\nexport const VisibleSpecs: React.FC<{ specs: Specs }> = ({ specs }) => {\n  return (\n    <>\n      {Array.from(iterAttachmentPoints(specs)).map((point, i) => (\n        <VisibleAttachmentPoint key={i} point={point} />\n      ))}\n      {specs.nesting && (\n        <BoundingBoxes\n          fill={colors.NESTING_BOUNDING_BOX_COLOR}\n          bboxes={specs.nesting}\n        />\n      )}\n    </>\n  );\n};\n", "import { Bezier, Point, BBox, MinMax } from \"../vendor/bezier-js\";\nimport { SVGProps } from \"react\";\n\nimport type { SvgSymbolElement } from \"./svg-symbol\";\nimport { flatten, float } from \"./util\";\nimport { pathToShapes } from \"./path\";\n\nexport function getBoundingBoxSize(bbox: BBox): [number, number] {\n  const width = bbox.x.max - bbox.x.min;\n  const height = bbox.y.max - bbox.y.min;\n\n  return [width, height];\n}\n\nexport function getBoundingBoxCenter(bbox: BBox): Point {\n  const [width, height] = getBoundingBoxSize(bbox);\n\n  return {\n    x: bbox.x.min + width / 2,\n    y: bbox.y.min + height / 2,\n  };\n}\n\nfunction dilateMinMax(minmax: MinMax, amount: number): MinMax {\n  return {\n    min: minmax.min - amount,\n    max: minmax.max + amount,\n  };\n}\n\nexport function dilateBoundingBox(bbox: BBox, amount: number): BBox {\n  return {\n    x: dilateMinMax(bbox.x, amount),\n    y: dilateMinMax(bbox.y, amount),\n  };\n}\n\nexport function coalesceBoundingBoxes(bboxes: BBox[]): BBox {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n\n  if (bboxes.length === 0) {\n    throw new Error(`Must have at least one bounding box!`);\n  }\n\n  for (let bbox of bboxes) {\n    if (bbox.x.min < minX) {\n      minX = bbox.x.min;\n    }\n    if (bbox.x.max > maxX) {\n      maxX = bbox.x.max;\n    }\n    if (bbox.y.min < minY) {\n      minY = bbox.y.min;\n    }\n    if (bbox.y.max > maxY) {\n      maxY = bbox.y.max;\n    }\n  }\n\n  return { x: { min: minX, max: maxX }, y: { min: minY, max: maxY } };\n}\n\nexport function getBoundingBoxForBeziers(beziers: Bezier[]): BBox {\n  return coalesceBoundingBoxes(beziers.map((b) => b.bbox()));\n}\n\nfunction getPathBoundingBox(props: SVGProps<SVGPathElement>): BBox {\n  if (!props.d) {\n    throw new Error(`SVG path has no 'd' attribute value!`);\n  }\n  const beziers = flatten(pathToShapes(props.d));\n  const bbox = getBoundingBoxForBeziers(beziers);\n  return props.strokeWidth\n    ? dilateBoundingBox(bbox, float(props.strokeWidth) / 2)\n    : bbox;\n}\n\nexport function getSvgBoundingBox(\n  element: SvgSymbolElement | SvgSymbolElement[]\n): BBox {\n  if (Array.isArray(element)) {\n    return coalesceBoundingBoxes(element.map(getSvgBoundingBox));\n  }\n  switch (element.tagName) {\n    case \"g\":\n      return getSvgBoundingBox(element.children);\n    case \"path\":\n      return getPathBoundingBox(element.props);\n  }\n}\n\n/**\n * Assuming the origins of the giving boxes are aligned and\n * the transform origin is set to their center, return the maximum\n * amount the child needs to be scaled to fit within the parent.\n */\nexport function uniformlyScaleToFit(parent: BBox, child: BBox): number {\n  const [pWidth, pHeight] = getBoundingBoxSize(parent);\n  const [cWidth, cHeight] = getBoundingBoxSize(child);\n\n  const widthScale = pWidth / cWidth;\n  const heightScale = pHeight / cHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n", "import { Bezier } from \"../vendor/bezier-js\";\nimport { float } from \"./util\";\n\nexport function pathToShapes(path: string): Bezier[][] {\n  const parts = path.trim().split(\" \");\n  let x = 0;\n  let y = 0;\n  let i = 0;\n  const shapes: Bezier[][] = [];\n  let currShape: Bezier[] = [];\n\n  const chomp = () => {\n    if (i >= parts.length) {\n      throw new Error(`Ran out of path parts!`);\n    }\n    const val = parts[i];\n    i++;\n    return val;\n  };\n\n  const finishCurrShape = () => {\n    if (currShape.length) {\n      shapes.push(currShape);\n      currShape = [];\n    }\n  };\n\n  while (i < parts.length) {\n    const command = chomp();\n    switch (command) {\n      case \"M\":\n        finishCurrShape();\n        x = float(chomp());\n        y = float(chomp());\n        break;\n      case \"C\":\n        const x1 = float(chomp());\n        const y1 = float(chomp());\n        const x2 = float(chomp());\n        const y2 = float(chomp());\n        const endX = float(chomp());\n        const endY = float(chomp());\n        currShape.push(new Bezier(x, y, x1, y1, x2, y2, endX, endY));\n        x = endX;\n        y = endY;\n        break;\n      case \"Z\":\n        finishCurrShape();\n        break;\n      default:\n        throw new Error(`Unknown SVG path command: '${command}'`);\n    }\n  }\n\n  finishCurrShape();\n\n  return shapes;\n}\n", "import { Point, BBox } from \"../vendor/bezier-js\";\nimport { getBoundingBoxForBeziers } from \"./bounding-box\";\nimport * as colors from \"./colors\";\nimport { pathToShapes } from \"./path\";\nimport { normalizePoint, subtractPoints } from \"./point\";\nimport type { SvgSymbolElement } from \"./svg-symbol\";\n\nconst SPEC_LAYER_ID_RE = /^specs.*/i;\n\nexport type PointWithNormal = {\n  point: Point;\n  normal: Point;\n};\n\ntype AttachmentPointSpecs = {\n  anchor: PointWithNormal[];\n  tail: PointWithNormal[];\n  leg: PointWithNormal[];\n  arm: PointWithNormal[];\n  horn: PointWithNormal[];\n  crown: PointWithNormal[];\n};\n\ntype FullSpecs = AttachmentPointSpecs & {\n  nesting: BBox[];\n};\n\nexport type Specs = Partial<FullSpecs>;\n\nexport type AttachmentPointType = keyof AttachmentPointSpecs;\n\nexport type AttachmentPoint = PointWithNormal & {\n  type: AttachmentPointType;\n  index: number;\n};\n\nexport const ATTACHMENT_POINT_TYPES: AttachmentPointType[] = [\n  \"anchor\",\n  \"tail\",\n  \"leg\",\n  \"arm\",\n  \"horn\",\n  \"crown\",\n];\n\nconst ATTACHMENT_POINT_SET = new Set(ATTACHMENT_POINT_TYPES);\n\nexport function isAttachmentPointType(\n  value: any\n): value is AttachmentPointType {\n  return ATTACHMENT_POINT_SET.has(value);\n}\n\nexport function* iterAttachmentPoints(specs: Specs): Iterable<AttachmentPoint> {\n  for (let type of ATTACHMENT_POINT_TYPES) {\n    const points = specs[type];\n    if (points) {\n      let index = 0;\n      for (let point of points) {\n        yield { ...point, type, index };\n        index += 1;\n      }\n    }\n  }\n}\n\nconst NUM_ARROW_POINTS = 4;\nconst ARROW_TOP_POINT_IDX = 0;\nconst ARROW_BOTTOM_POINT_IDX = 2;\n\nfunction getArrowPoints(path: string): PointWithNormal[] {\n  const shapes = pathToShapes(path);\n  const points: PointWithNormal[] = [];\n\n  for (let shape of shapes) {\n    if (shape.length !== NUM_ARROW_POINTS) {\n      throw new Error(\n        `Expected arrow to have ${NUM_ARROW_POINTS} points, not ${shape.length}!`\n      );\n    }\n    const point = shape[ARROW_BOTTOM_POINT_IDX].get(0.0);\n    const normal = normalizePoint(\n      subtractPoints(shape[ARROW_TOP_POINT_IDX].get(0.0), point)\n    );\n    points.push({\n      point,\n      normal,\n    });\n  }\n\n  return points;\n}\n\nfunction getBoundingBoxes(path: string): BBox[] {\n  const shapes = pathToShapes(path);\n  const bboxes: BBox[] = [];\n\n  for (let shape of shapes) {\n    bboxes.push(getBoundingBoxForBeziers(shape));\n  }\n\n  return bboxes;\n}\n\n/**\n * Sort points from top to bottom, left to right.\n */\nfunction sortPoints(a: PointWithNormal, b: PointWithNormal): number {\n  if (a.point.y < b.point.y) return -1;\n  if (a.point.y > b.point.y) return 1;\n  if (a.point.x < b.point.x) return -1;\n  if (a.point.x > b.point.x) return 1;\n  return 0;\n}\n\nfunction sortedPoints(points: PointWithNormal[]): PointWithNormal[] {\n  const copy = [...points];\n  copy.sort(sortPoints);\n  return copy;\n}\n\nfunction concat<T>(first: T[] | undefined, second: T[]): T[] {\n  return first ? [...first, ...second] : second;\n}\n\nconst ATTACHMENT_COLOR_MAP = new Map(\n  ATTACHMENT_POINT_TYPES.map((type) => [\n    colors.ATTACHMENT_POINT_COLORS[type],\n    type,\n  ])\n);\n\nfunction updateSpecs(fill: string, path: string, specs: Specs): Specs {\n  const attachmentType = ATTACHMENT_COLOR_MAP.get(fill);\n\n  if (attachmentType) {\n    return {\n      ...specs,\n      [attachmentType]: sortedPoints(\n        concat(specs[attachmentType], getArrowPoints(path))\n      ),\n    };\n  }\n\n  if (fill === colors.NESTING_BOUNDING_BOX_COLOR) {\n    return {\n      ...specs,\n      nesting: concat(specs.nesting, getBoundingBoxes(path)),\n    };\n  }\n\n  console.log(\n    `Not sure what to do with specs path with fill \"${fill}\", ignoring it.`\n  );\n\n  return specs;\n}\n\nfunction getSpecs(layers: SvgSymbolElement[]): Specs {\n  let specs: Specs = {};\n\n  for (let layer of layers) {\n    if (layer.tagName !== \"path\") {\n      throw new Error(\n        `Found an unexpected <${layer.tagName}> in the specs layer!`\n      );\n    }\n    const { fill, d } = layer.props;\n    if (!(fill && d)) {\n      throw new Error(\n        `Specs layer does not contain 'fill' and/or 'd' attributes!`\n      );\n    }\n    specs = updateSpecs(fill, d, specs);\n  }\n\n  return specs;\n}\n\nexport function extractSpecs(\n  layers: SvgSymbolElement[]\n): [Specs | undefined, SvgSymbolElement[]] {\n  const layersWithoutSpecs: SvgSymbolElement[] = [];\n  let specs: Specs | undefined = undefined;\n\n  const setSpecs = (s: Specs | undefined) => {\n    if (s) {\n      if (specs) {\n        throw new Error(\"Duplicate specs layers found!\");\n      }\n      specs = s;\n    }\n  };\n\n  for (let layer of layers) {\n    switch (layer.tagName) {\n      case \"g\":\n        const { id } = layer.props;\n        if (id && SPEC_LAYER_ID_RE.test(id)) {\n          setSpecs(getSpecs(layer.children));\n        } else {\n          let [s, children] = extractSpecs(layer.children);\n          setSpecs(s);\n          layersWithoutSpecs.push({\n            ...layer,\n            children,\n          });\n        }\n        break;\n      case \"path\":\n        layersWithoutSpecs.push(layer);\n        break;\n    }\n  }\n\n  return [specs, layersWithoutSpecs];\n}\n", "import { Point } from \"../vendor/bezier-js\";\n\n/** Return the \"reverse\" of the given point/vector, i.e. scale it by -1. */\nexport function reversePoint(p: Point): Point {\n  return { x: -p.x, y: -p.y };\n}\n\nexport function scalePointXY(p: Point, xScale: number, yScale: number): Point {\n  return {\n    x: p.x * xScale,\n    y: p.y * yScale,\n  };\n}\n\nexport function subtractPoints(p1: Point, p2: Point): Point {\n  return {\n    x: p1.x - p2.x,\n    y: p1.y - p2.y,\n  };\n}\n\nexport function normalizePoint(p: Point): Point {\n  const len = Math.sqrt(Math.pow(p.x, 2) + Math.pow(p.y, 2));\n  if (len === 0) {\n    throw new Error(`Unable to normalize point with length 0`);\n  }\n  return {\n    x: p.x / len,\n    y: p.y / len,\n  };\n}\n\nexport function normalizedPoint2rad(p: Point): number {\n  let result = Math.acos(p.x);\n  if (p.y < 0) {\n    result += (Math.PI - result) * 2;\n  }\n  return result;\n}\n", "import React from \"react\";\nimport { ColorWidget } from \"./color-widget\";\nimport { DEFAULT_BG_COLOR } from \"./colors\";\nimport { createSvgSymbolContext, SvgSymbolContext } from \"./svg-symbol\";\nimport {\n  SymbolContextWidget,\n  SymbolContextWidgetProps,\n} from \"./symbol-context-widget\";\n\nconst DEFAULT_CONTEXT: SvgCompositionContext = {\n  background: DEFAULT_BG_COLOR,\n  ...createSvgSymbolContext(),\n};\n\nexport type SvgCompositionContext = SvgSymbolContext & {\n  /** The background color of the composition, as a hex hash (e.g. '#ff0000'). */\n  background: string;\n};\n\nexport function createSvgCompositionContext(\n  ctx: Partial<SvgCompositionContext> = {}\n): SvgCompositionContext {\n  return {\n    ...DEFAULT_CONTEXT,\n    ...ctx,\n  };\n}\n\nexport type CompositionContextWidgetProps<\n  T extends SvgCompositionContext\n> = SymbolContextWidgetProps<T>;\n\nexport function CompositionContextWidget<T extends SvgCompositionContext>({\n  ctx,\n  onChange,\n  children,\n}: CompositionContextWidgetProps<T>): JSX.Element {\n  return (\n    <SymbolContextWidget ctx={ctx} onChange={onChange}>\n      {children}\n      <ColorWidget\n        label=\"Background\"\n        value={ctx.background}\n        onChange={(background) => onChange({ ...ctx, background })}\n      />{\" \"}\n    </SymbolContextWidget>\n  );\n}\n", "import React from \"react\";\nimport { Checkbox } from \"./checkbox\";\nimport { ColorWidget } from \"./color-widget\";\nimport { NumericSlider } from \"./numeric-slider\";\nimport { SvgSymbolContext, swapColors } from \"./svg-symbol\";\n\nexport type SymbolContextWidgetProps<T extends SvgSymbolContext> = {\n  ctx: T;\n  onChange: (value: T) => void;\n  children?: any;\n  extraButtons?: JSX.Element;\n};\n\nexport function SymbolContextWidget<T extends SvgSymbolContext>({\n  ctx,\n  children,\n  onChange,\n  extraButtons,\n}: SymbolContextWidgetProps<T>): JSX.Element {\n  const updateCtx = (updates: Partial<SvgSymbolContext>) => {\n    onChange({ ...ctx, ...updates });\n  };\n\n  return (\n    <div className=\"thingy\">\n      {children}\n      <ColorWidget\n        label=\"Stroke\"\n        value={ctx.stroke}\n        onChange={(stroke) => updateCtx({ stroke })}\n      />{\" \"}\n      <ColorWidget\n        label=\"Fill\"\n        value={ctx.fill}\n        onChange={(fill) => updateCtx({ fill })}\n      />{\" \"}\n      <button onClick={() => updateCtx(swapColors(ctx))}>\n        Swap stroke/fill\n      </button>{\" \"}\n      {extraButtons}\n      <Checkbox\n        label=\"Show specs\"\n        value={ctx.showSpecs}\n        onChange={(showSpecs) => updateCtx({ showSpecs })}\n      />\n      {ctx.uniformStrokeWidth !== undefined && (\n        <div className=\"thingy\">\n          <NumericSlider\n            label=\"Stroke width\"\n            min={0}\n            max={3}\n            step={0.1}\n            value={ctx.uniformStrokeWidth}\n            onChange={(uniformStrokeWidth) => updateCtx({ uniformStrokeWidth })}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n", "import React, { useMemo, useState } from \"react\";\nimport { dilateBoundingBox, getBoundingBoxSize } from \"../bounding-box\";\nimport {\n  createSvgSymbolContext,\n  SvgSymbolContent,\n  SvgSymbolData,\n} from \"../svg-symbol\";\nimport { SvgVocabulary } from \"../svg-vocabulary\";\nimport { SvgSymbolContext } from \"../svg-symbol\";\nimport { SymbolContextWidget } from \"../symbol-context-widget\";\nimport { HoverDebugHelper } from \"../hover-debug-helper\";\nimport { Page } from \"../page\";\n\ntype SvgSymbolProps = {\n  data: SvgSymbolData;\n  scale?: number;\n} & SvgSymbolContext;\n\nconst px = (value: number) => `${value}px`;\n\nconst BBOX_DILATION = 100;\n\nconst SvgSymbol: React.FC<SvgSymbolProps> = (props) => {\n  const d = props.data;\n  const bbox = dilateBoundingBox(d.bbox, BBOX_DILATION);\n  const scale = props.scale || 1;\n  const [width, height] = getBoundingBoxSize(bbox);\n\n  return (\n    <svg\n      viewBox={`${bbox.x.min} ${bbox.y.min} ${width} ${height}`}\n      width={px(width * scale)}\n      height={px(height * scale)}\n    >\n      <SvgSymbolContent {...props} />\n    </svg>\n  );\n};\n\nexport const VocabularyPage: React.FC<{}> = () => {\n  const [ctx, setCtx] = useState(createSvgSymbolContext());\n  const [filter, setFilter] = useState(\"\");\n  const finalFilter = filter.toLowerCase().replace(/ /g, \"_\");\n  const items = useMemo(\n    () =>\n      SvgVocabulary.items.filter((item) =>\n        item.name.toLowerCase().includes(finalFilter)\n      ),\n    [finalFilter]\n  );\n\n  return (\n    <Page title=\"Vocabulary!\">\n      <div className=\"sidebar\">\n        <div className=\"flex-widget\">\n          <label htmlFor=\"filter\">Search for symbols: </label>\n          <input\n            type=\"text\"\n            id=\"filter\"\n            value={filter}\n            onChange={(e) => setFilter(e.target.value)}\n            placeholder=\"\uD83D\uDD0E\"\n          />\n        </div>\n        <SymbolContextWidget ctx={ctx} onChange={setCtx} />\n      </div>\n      <div className=\"canvas scrollable\">\n        <HoverDebugHelper>\n          {items.map((symbolData) => (\n            <div\n              key={symbolData.name}\n              style={{\n                display: \"inline-block\",\n                border: \"1px solid black\",\n                margin: \"4px\",\n              }}\n            >\n              <div\n                style={{\n                  backgroundColor: \"black\",\n                  color: \"white\",\n                  padding: \"4px\",\n                }}\n              >\n                {symbolData.name}\n              </div>\n              <div className=\"checkerboard-bg\" style={{ lineHeight: 0 }}>\n                <SvgSymbol data={symbolData} scale={0.25} {...ctx} />\n              </div>\n            </div>\n          ))}\n        </HoverDebugHelper>\n      </div>\n    </Page>\n  );\n};\n", "import { EMPTY_SVG_SYMBOL_DATA, SvgSymbolData } from \"./svg-symbol\";\nimport { Vocabulary } from \"./vocabulary\";\nimport _SvgVocabulary from \"./_svg-vocabulary\";\n\nexport const SvgVocabulary = new Vocabulary<SvgSymbolData>(_SvgVocabulary);\n\nexport const SvgVocabularyWithBlank = new Vocabulary<SvgSymbolData>([\n  EMPTY_SVG_SYMBOL_DATA,\n  ..._SvgVocabulary,\n]);\n", "export type VocabularyType = {\n  name: string;\n};\n\nexport class Vocabulary<T extends VocabularyType> {\n  readonly itemMap: Map<string, T>;\n\n  constructor(readonly items: T[]) {\n    this.itemMap = new Map(items.map((item) => [item.name, item]));\n  }\n\n  get(name: string): T {\n    const item = this.itemMap.get(name);\n    if (!item) {\n      throw new Error(`Unable to find the item \"${name}\"!`);\n    }\n    return item;\n  }\n}\n", "// This file is auto-generated, please do not modify it.\nimport type { SvgSymbolData } from \"./svg-symbol\";\nconst _SvgVocabulary: SvgSymbolData[] = JSON.parse(\"[{\\\"name\\\":\\\"antler\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":99.548,\\\"max\\\":611.604},\\\"y\\\":{\\\"min\\\":62.852999999999994,\\\"max\\\":661.1165076882879}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"antler\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"antler\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#E4110397-12FB-4665-A616-C21CA561BCA1_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 101.548 613.672 C 101.555 613.662 126.259 554.400 166.826 512.025 C 195.044 482.548 219.865 465.586 238.695 448.219 C 263.166 425.649 298.626 355.713 285.075 300.093 C 267.194 226.705 203.274 206.090 203.266 206.081 C 203.278 206.090 286.407 193.851 321.111 299.116 C 338.351 351.406 315.503 412.346 315.503 412.357 C 315.512 412.353 376.858 382.006 407.121 366.189 C 446.096 345.819 478.175 323.433 511.967 269.697 C 566.517 182.951 473.148 64.862 473.144 64.853 C 473.151 64.860 606.472 158.517 555.534 286.796 C 520.715 374.480 430.610 411.051 430.598 411.063 C 430.605 411.067 462.508 448.721 501.526 448.810 C 564.956 448.955 609.593 402.332 609.604 402.328 C 609.594 402.336 598.065 472.537 506.850 487.464 C 443.041 497.906 383.873 436.466 383.861 436.460 C 383.847 436.469 301.005 450.027 239.473 525.429 C 191.040 584.778 188.303 658.921 188.305 658.930 C 188.300 658.929 154.651 661.149 131.834 650.297 C 115.742 642.644 101.551 613.675 101.548 613.672 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":154.077,\\\"y\\\":611.427,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.34446700518242285,\\\"y\\\":-0.9387984247646843}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":482.684,\\\"y\\\":75.203,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6078981001361489,\\\"y\\\":-0.7940150501412808}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":215.088,\\\"y\\\":208.776,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9645378730549103,\\\"y\\\":-0.26394448553191957}},{\\\"point\\\":{\\\"x\\\":604.389,\\\"y\\\":409.427,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5894612331329582,\\\"y\\\":-0.807796666639181}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":168.442,\\\"y\\\":512.287,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.1299027415137425,\\\"y\\\":-0.9915267408129818}},{\\\"point\\\":{\\\"x\\\":225.512,\\\"y\\\":545.696,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9982169563192287,\\\"y\\\":0.05969010065978366}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":526.891,\\\"y\\\":230.222,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8779210449390165,\\\"y\\\":-0.4788054290139007}},{\\\"point\\\":{\\\"x\\\":566.764,\\\"y\\\":230.631,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9444698176941224,\\\"y\\\":-0.3285981793388864}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":139.923,\\\"y\\\":647.015,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.33755718459447215,\\\"y\\\":0.9413050234268663}}]},\\\"defs\\\":[{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"E4110397-12FB-4665-A616-C21CA561BCA1_0\\\",\\\"x1\\\":\\\"50.68%\\\",\\\"y1\\\":\\\"64.83%\\\",\\\"x2\\\":\\\"51.16%\\\",\\\"y2\\\":\\\"-24.03%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"arm\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":198.93802969970034,\\\"max\\\":520.8196456430253},\\\"y\\\":{\\\"min\\\":15.929735848490623,\\\"max\\\":702.5885640037496}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"arm\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"arm\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#B911D2BC-8E8A-48E2-9815-65D839A0D108_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 348.644 370.742 C 328.154 368.547 295.980 355.907 285.022 344.724 C 266.329 325.647 248.362 293.652 245.008 284.913 C 242.125 277.401 229.324 235.342 224.156 221.366 C 218.440 205.909 198.492 180.561 201.187 172.653 C 203.194 166.764 219.145 165.463 225.316 169.324 C 234.552 175.104 243.292 187.831 245.626 190.477 C 254.808 200.884 270.931 247.165 278.788 246.811 C 287.855 246.404 295.023 231.894 299.224 223.974 C 302.676 217.467 308.862 170.966 309.566 163.634 C 310.361 155.347 310.790 100.787 310.940 94.455 C 311.070 88.958 309.251 40.831 312.580 34.417 C 313.667 32.322 318.309 20.825 327.221 21.358 C 334.786 21.810 337.897 29.688 338.784 31.294 C 342.444 37.918 341.015 88.397 341.484 94.136 C 341.958 99.938 342.675 153.131 349.112 157.266 C 350.074 157.884 357.651 157.531 358.608 156.907 C 364.882 152.817 371.652 101.879 372.793 96.296 C 374.103 89.886 379.664 32.582 385.062 25.888 C 386.270 24.390 391.225 16.621 399.041 18.121 C 405.889 19.436 408.784 27.659 409.462 29.375 C 412.550 37.187 402.256 92.393 401.720 98.762 C 401.224 104.668 392.897 157.544 398.035 163.400 C 398.922 164.411 407.457 167.073 408.732 166.646 C 415.536 164.367 428.995 116.398 430.839 111.259 C 432.570 106.436 443.102 62.664 447.907 57.945 C 449.288 56.588 456.083 48.970 462.761 51.765 C 469.022 54.386 470.927 66.714 471.225 69.005 C 472.087 75.614 457.624 117.456 456.393 122.375 C 454.772 128.854 437.448 185.425 440.627 193.606 C 441.075 194.759 446.713 200.761 447.948 200.819 C 454.998 201.150 475.130 154.967 477.593 150.195 C 479.653 146.202 493.364 110.333 497.819 105.481 C 499.033 104.158 506.948 99.233 512.352 102.085 C 517.469 104.785 518.697 115.376 518.813 117.369 C 519.257 124.985 497.312 170.811 495.314 176.261 C 491.608 186.371 464.607 275.232 458.366 287.934 C 453.874 297.077 437.634 342.878 411.599 358.522 C 387.396 373.065 363.592 372.343 348.644 370.742 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#B911D2BC-8E8A-48E2-9815-65D839A0D108_1)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 377.062 363.701 C 355.241 365.505 328.857 357.075 304.755 353.763 C 303.090 377.237 298.149 616.903 299.178 672.900 C 299.848 709.387 418.943 710.019 420.822 673.573 C 422.358 643.770 418.216 374.241 419.521 351.455 C 419.517 351.456 390.274 362.608 377.062 363.701 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 419.521 351.455 C 418.216 374.241 422.358 643.770 420.822 673.573 C 418.943 710.019 299.848 709.387 299.178 672.900 C 298.149 616.903 303.090 377.237 304.755 353.763 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":280.658,\\\"max\\\":450.629},\\\"y\\\":{\\\"min\\\":171.09,\\\"max\\\":341.062}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":359.571,\\\"y\\\":634.122,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":325.944,\\\"y\\\":20.848,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":426.355,\\\"y\\\":413.287,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9646496187554472,\\\"y\\\":-0.26353579080453293}},{\\\"point\\\":{\\\"x\\\":294.135,\\\"y\\\":414.507,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9845151298089959,\\\"y\\\":-0.17529962685977366}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":416.532,\\\"y\\\":679.511,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5860192164472157,\\\"y\\\":0.8102971541074245}},{\\\"point\\\":{\\\"x\\\":303.468,\\\"y\\\":680.013,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5860192164472157,\\\"y\\\":0.8102971541074245}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":697.873,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"B911D2BC-8E8A-48E2-9815-65D839A0D108_0\\\",\\\"cx\\\":\\\"49.68%\\\",\\\"cy\\\":\\\"74.98%\\\",\\\"r\\\":\\\"248.87%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"6.67%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"B911D2BC-8E8A-48E2-9815-65D839A0D108_1\\\",\\\"x1\\\":\\\"50.12%\\\",\\\"y1\\\":\\\"51.35%\\\",\\\"x2\\\":\\\"-216.12%\\\",\\\"y2\\\":\\\"54.62%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"6.27%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"arm_claw\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":198.07260349713425,\\\"max\\\":588.416},\\\"y\\\":{\\\"min\\\":112.361,\\\"max\\\":706.2196786512706}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"arm_claw\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"arm_claw\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#3A469B28-8343-41B4-97D4-1167FB6CBCE9_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 307.704 690.871 C 307.706 690.840 328.606 380.508 328.608 380.477 C 328.601 380.473 279.624 355.869 262.187 340.472 C 223.395 306.219 203.275 271.339 199.883 234.657 C 195.975 192.393 230.260 135.596 230.263 135.587 C 230.263 135.594 221.435 177.449 227.299 213.750 C 238.646 283.985 292.756 300.695 343.415 306.786 C 364.949 309.376 431.187 288.628 464.135 222.617 C 487.320 176.166 468.349 132.352 465.064 113.861 C 479.993 123.540 513.639 181.702 491.971 232.157 C 467.329 289.538 445.988 298.039 434.273 307.515 C 451.063 302.816 473.821 295.325 491.100 281.450 C 552.970 231.769 550.442 197.350 557.425 173.225 C 561.235 192.192 578.234 254.178 507.050 305.525 C 474.009 329.358 440.990 342.199 440.983 342.203 C 440.988 342.202 476.981 339.140 491.759 334.834 C 549.853 317.908 569.128 298.560 586.916 267.187 C 581.303 308.606 563.398 345.223 481.928 372.307 C 446.607 384.049 390.109 381.470 390.100 381.471 C 390.102 381.502 412.293 688.247 412.296 688.278 C 412.290 688.280 387.391 704.084 360.000 704.701 C 332.969 705.309 307.710 690.872 307.704 690.871 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":663.748,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":252.711,\\\"y\\\":481.528,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872777856662,\\\"y\\\":0.005044231042771671}},{\\\"point\\\":{\\\"x\\\":456.828,\\\"y\\\":481.528,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872777856662,\\\"y\\\":0.005044231042771667}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":407.946,\\\"y\\\":681.421,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129270126595157,\\\"y\\\":0.7012382438375553}},{\\\"point\\\":{\\\"x\\\":315.602,\\\"y\\\":681.461,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987081433846051,\\\"y\\\":0.7154068285724131}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":700.823,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":229.737,\\\"max\\\":464.923},\\\"y\\\":{\\\"min\\\":6.469,\\\"max\\\":241.655}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"3A469B28-8343-41B4-97D4-1167FB6CBCE9_0\\\",\\\"cx\\\":\\\"40.66%\\\",\\\"cy\\\":\\\"41.71%\\\",\\\"r\\\":\\\"114.46%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"21.18%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"arm_hold_up\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":75.45661142703472,\\\"max\\\":529.6},\\\"y\\\":{\\\"min\\\":319.661,\\\"max\\\":686.6036376719986}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"arm_hold_up\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"arm_hold_up\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#07515F9F-04AB-4D12-9C8E-1A2FAC7A53CB_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.305 323.204 C 369.578 322.409 484.024 321.661 484.036 321.661 C 484.988 321.661 498.947 321.661 498.948 321.661 C 503.612 321.661 512.939 321.661 512.941 321.661 C 517.827 321.728 527.598 321.863 527.600 321.863 C 527.599 321.864 523.210 330.543 520.393 334.397 C 488.379 378.202 382.925 352.722 396.259 384.638 C 471.846 565.566 449.084 585.612 463.763 620.377 C 477.330 652.509 454.010 667.685 440.934 668.121 C 402.057 669.418 350.818 685.111 280.332 684.591 C 210.202 684.074 187.016 673.295 157.440 681.855 C 118.509 693.123 75.672 654.516 77.514 607.449 C 79.329 561.041 108.291 532.237 150.437 531.803 C 202.416 531.266 211.968 562.067 221.926 561.066 C 227.570 560.498 258.245 552.200 296.164 552.648 C 338.587 553.148 379.094 576.196 375.428 566.172 C 343.278 478.254 346.580 383.766 341.781 342.528 C 340.570 332.121 350.810 324.018 360.305 323.204 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 498.948 321.661 C 498.947 321.663 495.800 329.203 484.897 334.252 C 461.111 345.268 431.234 344.190 431.228 344.191 M 469.528 330.204 C 453.036 333.653 439.595 334.074 415.838 333.333 M 484.036 321.661 C 484.035 321.662 479.421 328.136 469.528 330.204 M 505.548 333.287 C 491.560 347.493 449.102 351.673 449.097 351.675 M 512.941 321.661 C 512.940 321.662 509.328 329.448 505.548 333.287 M 360.305 323.204 C 369.578 322.409 484.024 321.661 484.036 321.661 C 484.988 321.661 498.947 321.661 498.948 321.661 C 503.612 321.661 512.939 321.661 512.941 321.661 C 517.827 321.728 527.598 321.863 527.600 321.863 C 527.599 321.864 523.210 330.543 520.393 334.397 C 488.379 378.202 382.925 352.722 396.259 384.638 C 471.846 565.566 449.084 585.612 463.763 620.377 C 477.330 652.509 454.010 667.685 440.934 668.121 C 402.057 669.418 350.818 685.111 280.332 684.591 C 210.202 684.074 187.016 673.295 157.440 681.855 C 118.509 693.123 75.672 654.516 77.514 607.449 C 79.329 561.041 108.291 532.237 150.437 531.803 C 202.416 531.266 211.968 562.067 221.926 561.066 C 227.570 560.498 258.245 552.200 296.164 552.648 C 338.587 553.148 379.094 576.196 375.428 566.172 C 343.278 478.254 346.580 383.766 341.781 342.528 C 340.570 332.121 350.810 324.018 360.305 323.204 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":285.507,\\\"max\\\":606.079},\\\"y\\\":{\\\"min\\\":3.492,\\\"max\\\":321.822}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":156.501,\\\"y\\\":608.303,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":151.812,\\\"y\\\":531.934,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":353.504,\\\"y\\\":479.099,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871629800537,\\\"y\\\":0.005066939421728501}},{\\\"point\\\":{\\\"x\\\":434.324,\\\"y\\\":479.099,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871629800537,\\\"y\\\":0.0050669394217285205}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":384.942,\\\"y\\\":673.536,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129226801161813,\\\"y\\\":0.7012426485717772}},{\\\"point\\\":{\\\"x\\\":178.799,\\\"y\\\":673.616,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986828690273882,\\\"y\\\":0.7154315121153509}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":81.942,\\\"y\\\":610.26,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"07515F9F-04AB-4D12-9C8E-1A2FAC7A53CB_0\\\",\\\"cx\\\":\\\"47.51%\\\",\\\"cy\\\":\\\"78.02%\\\",\\\"r\\\":\\\"166.47%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"13.73%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"arm_power_fist\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":223.2618022332433,\\\"max\\\":491.8576857123526},\\\"y\\\":{\\\"min\\\":17.470761155279487,\\\"max\\\":695.4100079554754}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"arm_power_fist\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"arm_power_fist_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 428.280 208.943 C 419.423 208.496 396.673 199.244 395.106 181.538 C 408.365 174.296 460.526 120.303 460.493 116.151 C 486.455 127.209 491.731 145.931 489.340 152.210 C 487.551 156.908 468.041 181.301 468.039 181.304 C 468.035 181.307 438.247 209.446 428.280 208.943 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 460.493 116.151 C 460.526 120.303 408.365 174.296 395.106 181.538 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 355.320 158.215 C 392.349 155.961 404.235 125.519 386.743 120.533 C 392.397 114.256 409.728 101.055 418.664 77.688 C 435.978 76.484 460.291 90.458 460.493 116.151 C 460.526 120.303 408.365 174.296 395.106 181.538 C 379.921 184.057 356.490 181.056 351.354 159.903 C 351.372 159.856 352.877 159.493 355.320 158.215 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 418.664 77.688 C 409.728 101.055 392.397 114.256 386.743 120.533 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 386.743 120.533 C 361.654 113.380 346.657 101.559 340.413 96.436 C 355.723 79.795 370.461 48.943 373.116 44.261 C 393.056 41.685 416.126 52.988 418.664 77.688 C 409.728 101.055 392.397 114.256 386.743 120.533 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 373.116 44.261 C 370.461 48.943 355.723 79.795 340.413 96.436 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 340.413 96.436 C 336.106 92.901 317.484 77.807 297.384 72.215 C 297.894 64.607 316.014 25.792 330.349 20.450 C 342.702 15.847 372.842 28.088 373.116 44.261 C 370.461 48.943 355.723 79.795 340.413 96.436 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 468.039 181.304 C 468.035 181.307 438.247 209.446 428.280 208.943 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 428.280 208.943 C 419.423 208.496 396.673 199.244 395.106 181.538 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 395.106 181.538 C 379.921 184.057 356.490 181.056 351.354 159.903 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 351.354 159.903 C 351.372 159.856 352.877 159.493 355.320 158.215 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 355.320 158.215 C 392.349 155.961 404.235 125.519 386.743 120.533 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 386.743 120.533 C 361.654 113.380 346.657 101.559 340.413 96.436 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 340.413 96.436 C 336.106 92.901 317.484 77.807 297.384 72.215 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 424.111 291.635 C 451.622 270.676 473.281 228.939 468.039 181.304 C 468.035 181.307 438.247 209.446 428.280 208.943 C 419.423 208.496 396.673 199.244 395.106 181.538 C 379.921 184.057 356.490 181.056 351.354 159.903 C 351.372 159.856 352.877 159.493 355.320 158.215 C 392.349 155.961 404.235 125.519 386.743 120.533 C 361.654 113.380 346.657 101.559 340.413 96.436 C 336.106 92.901 317.484 77.807 297.384 72.215 C 276.788 66.486 265.056 115.279 230.660 149.662 C 202.214 178.097 295.432 260.669 295.889 276.441 C 296.408 294.367 281.964 662.853 281.962 662.892 C 281.970 662.895 295.896 693.428 360.000 693.410 C 424.119 693.391 438.030 662.843 438.038 662.839 C 438.036 662.802 423.962 300.868 424.111 291.635 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 424.111 291.635 C 451.622 270.676 473.281 228.939 468.039 181.304 C 468.035 181.307 438.247 209.446 428.280 208.943 C 419.423 208.496 396.673 199.244 395.106 181.538 C 379.921 184.057 356.490 181.056 351.354 159.903 C 351.372 159.856 352.877 159.493 355.320 158.215 C 392.349 155.961 404.235 125.519 386.743 120.533 C 361.654 113.380 346.657 101.559 340.413 96.436 C 336.106 92.901 317.484 77.807 297.384 72.215 C 276.788 66.486 265.056 115.279 230.660 149.662 C 202.214 178.097 295.432 260.669 295.889 276.441 C 296.408 294.367 281.964 662.853 281.962 662.892 C 281.970 662.895 295.896 693.428 360.000 693.410 C 424.119 693.391 438.030 662.843 438.038 662.839 C 438.036 662.802 423.962 300.868 424.111 291.635 M 310.029 136.285 C 331.977 164.714 345.990 158.782 355.320 158.215 M 300.075 151.679 C 298.182 151.300 305.955 151.137 310.029 136.285 M 378.038 241.383 C 374.417 202.668 333.956 158.460 300.075 151.679 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":300.004,\\\"max\\\":419.997},\\\"y\\\":{\\\"min\\\":334.607,\\\"max\\\":454.6}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":644.612,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":336.583,\\\"y\\\":20.484,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":286.401,\\\"y\\\":397.58,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999875308372899,\\\"y\\\":0.00499381316634068}},{\\\"point\\\":{\\\"x\\\":433.599,\\\"y\\\":397.58,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999875308372899,\\\"y\\\":0.00499381316634068}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":482.825,\\\"y\\\":140.718,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314397565914096,\\\"y\\\":-0.7754249375637732}},{\\\"point\\\":{\\\"x\\\":237.948,\\\"y\\\":140.808,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817477608447311,\\\"y\\\":-0.7315873089270996}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":692.799,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"arms_strong\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":12.970921300814208,\\\"max\\\":707.029013464231},\\\"y\\\":{\\\"min\\\":205.53500000000003,\\\"max\\\":681.9018141019094}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"arms_strong\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"arms_baby\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#135527EE-8F56-4229-8D56-A03B965BC0E5_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 240.298 409.357 C 223.226 412.982 184.156 442.206 133.119 448.437 C 130.772 448.724 162.772 518.800 173.709 606.162 C 174.134 609.557 191.861 611.823 199.839 614.453 C 224.060 622.437 244.251 646.921 222.048 648.776 C 204.296 650.260 204.442 638.774 196.298 637.072 C 186.895 635.108 181.020 632.857 170.548 637.072 C 162.951 640.130 177.826 679.068 154.162 680.379 C 132.891 681.557 147.160 636.707 145.383 640.583 C 134.432 664.471 140.231 681.199 108.893 679.649 C 93.024 678.863 123.203 641.317 124.900 638.242 C 126.467 635.402 95.902 675.671 71.524 670.900 C 52.162 667.111 83.779 644.473 104.417 635.901 C 109.810 633.661 67.875 655.058 51.421 643.569 C 42.616 637.422 73.280 627.223 84.758 623.039 C 97.345 618.451 122.786 613.798 121.954 612.449 C 94.966 568.661 10.559 458.699 14.612 371.439 C 16.932 321.492 147.172 243.227 212.395 227.240 C 237.249 200.300 482.752 200.300 507.606 227.240 C 572.828 243.226 703.068 321.492 705.388 371.438 C 709.440 458.699 625.035 568.661 598.046 612.449 C 597.214 613.798 622.655 618.451 635.242 623.039 C 646.720 627.223 677.384 637.421 668.579 643.569 C 652.125 655.058 610.190 633.661 615.583 635.901 C 636.222 644.473 667.839 667.112 648.476 670.900 C 624.098 675.671 593.533 635.402 595.101 638.242 C 596.797 641.317 626.976 678.863 611.107 679.649 C 579.769 681.199 585.568 664.471 574.618 640.583 C 572.841 636.707 587.109 681.557 565.839 680.378 C 542.174 679.068 557.049 640.130 549.452 637.072 C 538.980 632.857 533.105 635.107 523.702 637.072 C 515.558 638.773 515.704 650.259 497.952 648.776 C 475.749 646.921 495.940 622.437 520.161 614.453 C 528.139 611.823 545.866 609.556 546.291 606.162 C 557.227 518.800 589.228 448.724 586.882 448.437 C 535.844 442.206 496.986 411.777 479.702 409.357 C 424.191 423.542 295.807 423.544 240.298 409.357 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":130.546,\\\"max\\\":589.454},\\\"y\\\":{\\\"min\\\":66.4,\\\"max\\\":525.307}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":696.448,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":109.354,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":18.715,\\\"y\\\":372.262,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872228235881,\\\"y\\\":0.005055115188358927}},{\\\"point\\\":{\\\"x\\\":701.285,\\\"y\\\":372.262,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872228235881,\\\"y\\\":0.0050551151883589}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":592.023,\\\"y\\\":261.612,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314148519102514,\\\"y\\\":-0.7754452171411952}},{\\\"point\\\":{\\\"x\\\":128.754,\\\"y\\\":261.691,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6816957656371982,\\\"y\\\":-0.7316357584975696}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":139.965,\\\"y\\\":659.751,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}},{\\\"point\\\":{\\\"x\\\":580.035,\\\"y\\\":659.751,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"135527EE-8F56-4229-8D56-A03B965BC0E5_0\\\",\\\"cx\\\":\\\"49.34%\\\",\\\"cy\\\":\\\"18.90%\\\",\\\"r\\\":\\\"158.49%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"27.06%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"atlas\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":65.422,\\\"max\\\":665.0480641240902},\\\"y\\\":{\\\"min\\\":36.254,\\\"max\\\":707.0986927702287}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"atlas\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"atlas\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#047E7A57-68CF-4124-AE23-0BA138A4E1BC_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 193.023 151.219 C 192.579 155.728 192.407 163.307 194.434 169.120 C 177.216 170.739 162.317 180.697 163.627 176.844 C 182.244 122.120 170.491 72.637 172.447 49.238 C 172.945 43.280 167.293 38.677 161.875 38.213 C 156.584 37.761 91.285 37.345 91.278 37.345 C 90.735 37.345 82.771 37.346 82.770 37.346 C 80.109 37.347 74.787 37.347 74.786 37.347 C 71.998 37.387 66.423 37.465 66.422 37.465 C 66.423 37.465 68.927 42.416 70.534 44.615 C 88.804 69.607 151.017 56.054 141.367 73.270 C 87.238 169.837 92.882 187.639 82.671 207.785 C 73.214 226.444 87.890 235.983 95.701 236.727 C 117.214 238.774 144.100 254.633 183.223 256.341 C 226.437 258.229 255.164 244.758 257.286 248.642 C 268.601 269.351 277.147 287.467 303.159 299.799 C 340.204 317.363 371.227 359.573 362.657 399.853 C 346.875 400.564 335.382 399.621 323.112 403.064 C 219.823 432.046 215.925 467.413 173.839 489.797 C 157.553 498.459 162.515 532.406 174.098 538.502 C 193.307 548.612 209.507 572.666 237.755 594.160 C 263.781 613.965 298.342 631.253 302.771 637.089 C 308.997 645.292 282.230 648.388 271.853 651.265 C 268.732 652.130 258.347 654.050 256.050 654.491 C 247.248 656.182 248.241 659.084 245.094 658.444 C 238.945 657.194 227.937 665.960 230.121 665.061 C 225.721 667.430 233.375 668.696 234.582 668.193 C 238.041 666.754 243.273 668.019 243.274 668.019 C 243.272 668.019 223.991 667.299 225.172 671.415 C 225.738 673.389 229.035 672.924 229.982 672.871 C 235.643 672.555 244.015 672.741 244.017 672.741 C 244.015 672.741 225.939 672.148 222.077 675.097 C 211.155 683.437 235.807 676.451 242.054 679.294 C 242.677 679.388 205.271 678.380 212.256 687.935 C 217.602 695.247 234.097 692.926 237.889 690.602 C 245.432 685.979 253.550 693.493 277.128 686.605 C 293.328 681.872 306.545 686.414 313.171 687.020 C 324.849 688.088 339.361 687.871 354.331 684.909 C 368.713 682.064 364.963 670.386 361.671 659.676 C 360.308 655.242 351.825 645.671 347.975 637.632 C 333.443 607.290 329.422 587.301 298.925 550.173 C 286.770 535.376 250.970 528.336 250.965 528.334 C 250.975 528.331 300.035 520.730 343.919 496.692 C 369.903 502.864 383.605 506.363 397.659 500.222 C 381.665 556.484 391.272 578.180 379.234 615.733 C 374.103 631.741 398.946 651.224 410.268 647.469 C 431.309 640.490 459.076 639.552 495.796 635.558 C 540.671 630.678 591.510 624.886 601.479 624.146 C 611.684 623.389 605.749 652.290 604.468 657.811 C 603.825 660.584 602.389 679.366 600.147 682.167 C 587.991 697.349 581.617 689.355 578.830 695.742 C 575.854 702.562 594.644 706.864 597.150 702.157 C 599.466 705.739 606.139 702.361 607.426 700.207 C 610.431 695.182 612.206 693.449 612.206 693.448 C 612.206 693.449 604.338 704.453 606.721 705.568 C 611.548 707.827 616.602 702.276 617.103 700.123 C 618.086 695.899 621.224 692.441 621.224 692.440 C 621.224 692.441 615.614 703.371 618.477 703.895 C 623.228 704.765 625.394 702.003 626.076 699.347 C 627.620 693.330 629.848 691.784 629.848 691.783 C 629.848 691.784 623.907 703.050 628.045 702.893 C 630.240 702.810 633.034 700.670 633.388 699.651 C 634.503 696.439 639.322 692.903 643.481 688.340 C 661.043 669.068 653.968 656.690 655.110 634.786 C 655.775 622.050 665.330 608.323 663.903 592.334 C 662.529 576.935 652.260 574.792 645.615 574.333 C 632.814 573.448 623.042 581.188 613.539 579.216 C 583.842 573.056 573.048 562.026 531.205 554.901 C 512.262 551.675 480.572 570.139 480.567 570.141 C 480.571 570.133 514.385 540.181 522.616 498.788 C 579.947 469.577 543.996 395.868 531.966 382.866 C 531.035 352.611 533.273 318.431 510.950 280.572 C 507.349 274.465 503.687 259.491 495.514 245.147 C 505.843 242.589 518.817 250.251 535.155 251.026 C 575.180 252.926 604.052 239.777 626.155 239.113 C 634.670 238.856 651.818 228.553 641.562 208.289 C 631.074 187.569 631.663 152.490 574.314 73.198 C 562.748 57.207 626.874 69.517 645.137 44.520 C 646.744 42.321 649.248 37.369 649.248 37.368 C 649.247 37.368 643.672 37.292 640.885 37.254 C 640.884 37.254 635.562 37.254 632.900 37.255 C 632.900 37.255 624.935 37.256 624.392 37.256 C 624.385 37.256 559.085 37.694 553.794 38.148 C 548.376 38.614 543.276 43.198 543.227 49.176 C 543.065 68.966 538.869 97.765 556.150 161.226 C 557.049 164.529 545.432 154.557 532.067 152.010 C 512.035 148.192 495.627 150.007 491.903 150.940 C 485.674 152.500 486.136 146.883 456.103 138.575 C 412.279 126.451 375.142 143.702 365.585 142.102 C 355.972 140.493 352.910 138.430 346.844 133.929 C 327.011 119.213 307.071 96.979 289.363 90.496 C 268.738 82.945 233.669 84.782 215.261 100.462 C 199.615 113.788 193.993 141.387 193.023 151.219 M 607.071 689.070 C 607.070 689.071 594.715 698.391 597.150 702.157 C 601.426 694.124 607.070 689.071 607.071 689.070 M 242.054 679.294 C 242.845 679.654 242.680 679.387 242.680 679.387 M 242.837 663.022 C 242.836 663.022 234.225 662.852 230.121 665.061 C 236.908 662.270 242.836 663.022 242.837 663.022 M 194.434 169.120 C 194.434 169.120 194.434 169.120 194.434 169.120 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 354.360 215.918 C 354.362 215.914 351.951 194.271 373.632 173.741 C 391.197 157.108 404.375 158.435 419.747 150.782 M 357.966 301.173 C 336.902 306.552 323.124 307.216 305.153 301.023 M 385.703 300.259 C 385.707 300.259 411.061 303.306 426.592 300.708 C 447.349 297.235 463.324 276.763 463.328 276.761 M 585.480 43.923 C 599.035 44.343 606.704 44.101 616.114 42.132 C 621.759 40.951 624.391 37.257 624.392 37.256 C 624.385 37.256 559.085 37.694 553.794 38.148 C 548.376 38.614 543.276 43.198 543.227 49.176 C 543.065 68.966 538.869 97.765 556.150 161.226 C 557.049 164.529 545.432 154.557 532.067 152.010 C 512.035 148.192 495.627 150.007 491.903 150.940 C 485.674 152.500 486.136 146.883 456.103 138.575 C 412.279 126.451 375.142 143.702 365.585 142.102 C 355.972 140.493 352.910 138.430 346.844 133.929 C 327.011 119.213 307.071 96.979 289.363 90.496 C 268.738 82.945 233.669 84.782 215.261 100.462 C 199.615 113.788 193.993 141.387 193.023 151.219 C 192.579 155.728 192.407 163.307 194.434 169.120 C 200.359 186.114 228.868 221.231 228.871 221.236 C 228.872 221.235 237.574 208.820 237.575 208.819 C 237.579 208.821 265.814 229.629 276.786 226.988 C 289.943 223.820 295.080 209.446 299.336 201.097 C 303.463 204.851 315.133 215.801 323.032 223.153 M 362.657 399.853 C 371.227 359.573 340.204 317.363 303.159 299.799 C 277.147 287.467 268.601 269.351 257.286 248.642 C 255.164 244.758 226.437 258.229 183.223 256.341 C 144.100 254.633 117.214 238.774 95.701 236.727 C 87.890 235.983 73.214 226.444 82.671 207.785 C 92.882 187.639 87.238 169.837 141.367 73.270 C 151.017 56.054 88.804 69.607 70.534 44.615 C 68.927 42.416 66.423 37.465 66.422 37.465 C 66.423 37.465 71.998 37.387 74.786 37.347 C 74.787 37.347 80.109 37.347 82.770 37.346 C 82.771 37.346 90.735 37.345 91.278 37.345 C 91.285 37.345 156.584 37.761 161.875 38.213 C 167.293 38.677 172.945 43.280 172.447 49.238 C 170.491 72.637 182.244 122.120 163.627 176.844 C 162.317 180.697 177.216 170.739 194.434 169.120 C 194.434 169.120 194.434 169.120 194.434 169.120 M 431.935 422.067 C 427.619 429.303 423.649 436.104 420.295 442.687 C 411.645 460.066 406.977 476.176 401.629 490.020 C 400.218 493.717 398.571 497.015 397.659 500.222 C 381.665 556.484 391.272 578.180 379.234 615.733 C 374.103 631.741 398.946 651.224 410.268 647.469 C 431.309 640.490 459.076 639.552 495.796 635.558 C 540.671 630.678 591.510 624.886 601.479 624.146 C 611.684 623.389 605.749 652.290 604.468 657.811 C 603.825 660.584 602.389 679.366 600.147 682.167 C 587.991 697.349 581.617 689.355 578.830 695.742 C 575.854 702.562 594.644 706.864 597.150 702.157 C 601.426 694.124 607.070 689.071 607.071 689.070 C 607.070 689.071 594.715 698.391 597.150 702.157 C 599.466 705.739 606.139 702.361 607.426 700.207 C 610.431 695.182 612.206 693.449 612.206 693.448 C 612.206 693.449 604.338 704.453 606.721 705.568 C 611.548 707.827 616.602 702.276 617.103 700.123 C 618.086 695.899 621.224 692.441 621.224 692.440 C 621.224 692.441 615.614 703.371 618.477 703.895 C 623.228 704.765 625.394 702.003 626.076 699.347 C 627.620 693.330 629.848 691.784 629.848 691.783 C 629.848 691.784 623.907 703.050 628.045 702.893 C 630.240 702.810 633.034 700.670 633.388 699.651 C 634.503 696.439 639.322 692.903 643.481 688.340 C 661.043 669.068 653.968 656.690 655.110 634.786 C 655.775 622.050 665.330 608.323 663.903 592.334 C 662.529 576.935 652.260 574.792 645.615 574.333 C 632.814 573.448 623.042 581.188 613.539 579.216 C 583.842 573.056 573.048 562.026 531.205 554.901 C 512.262 551.675 480.572 570.139 480.567 570.141 C 480.571 570.133 514.385 540.181 522.616 498.788 C 579.947 469.577 543.996 395.868 531.966 382.866 C 531.035 352.611 533.273 318.431 510.950 280.572 C 507.349 274.465 503.687 259.491 495.514 245.147 C 505.843 242.589 518.817 250.251 535.155 251.026 C 575.180 252.926 604.052 239.777 626.155 239.113 C 634.670 238.856 651.818 228.553 641.562 208.289 C 631.074 187.569 631.663 152.490 574.314 73.198 C 562.748 57.207 626.874 69.517 645.137 44.520 C 646.744 42.321 649.248 37.369 649.248 37.368 C 649.247 37.368 643.672 37.292 640.885 37.254 C 640.884 37.254 635.562 37.254 632.900 37.255 C 632.900 37.255 624.935 37.256 624.392 37.256 M 362.657 399.853 C 346.875 400.564 335.382 399.621 323.112 403.064 C 219.823 432.046 215.925 467.413 173.839 489.797 C 157.553 498.459 162.515 532.406 174.098 538.502 C 193.307 548.612 209.507 572.666 237.755 594.160 C 263.781 613.965 298.342 631.253 302.771 637.089 C 308.997 645.292 282.230 648.388 271.853 651.265 C 268.732 652.130 258.347 654.050 256.050 654.491 C 247.248 656.182 248.241 659.084 245.094 658.444 C 238.945 657.194 227.937 665.960 230.121 665.061 C 236.908 662.270 242.836 663.022 242.837 663.022 C 242.836 663.022 234.225 662.852 230.121 665.061 C 225.721 667.430 233.375 668.696 234.582 668.193 C 238.041 666.754 243.273 668.019 243.274 668.019 C 243.272 668.019 223.991 667.299 225.172 671.415 C 225.738 673.389 229.035 672.924 229.982 672.871 C 235.643 672.555 244.015 672.741 244.017 672.741 C 244.015 672.741 225.939 672.148 222.077 675.097 C 211.155 683.437 235.807 676.451 242.054 679.294 C 242.845 679.654 242.680 679.387 242.680 679.387 C 242.677 679.388 205.271 678.380 212.256 687.935 C 217.602 695.247 234.097 692.926 237.889 690.602 C 245.432 685.979 253.550 693.493 277.128 686.605 C 293.328 681.872 306.545 686.414 313.171 687.020 C 324.849 688.088 339.361 687.871 354.331 684.909 C 368.713 682.064 364.963 670.386 361.671 659.676 C 360.308 655.242 351.825 645.671 347.975 637.632 C 333.443 607.290 329.422 587.301 298.925 550.173 C 286.770 535.376 250.970 528.336 250.965 528.334 C 250.975 528.331 300.035 520.730 343.919 496.692 C 369.903 502.864 383.605 506.363 397.659 500.222 M 401.629 490.020 C 365.987 468.845 360.022 435.873 364.342 410.069 M 91.278 37.345 C 91.279 37.345 93.912 41.039 99.556 42.218 C 108.967 44.184 116.636 44.423 130.191 43.998 M 74.786 37.347 C 74.787 37.348 76.914 41.728 79.006 43.980 C 84.338 49.722 100.487 53.092 100.489 53.093 M 82.770 37.346 C 82.770 37.347 84.592 41.595 90.788 44.529 C 100.489 49.123 112.606 49.371 112.608 49.371 M 495.514 245.147 C 491.699 246.092 474.721 256.266 456.331 252.226 M 640.885 37.254 C 640.884 37.254 638.746 41.624 636.667 43.888 C 631.874 49.105 617.389 52.457 617.387 52.458 M 632.900 37.255 C 632.900 37.256 631.046 41.435 624.884 44.440 C 615.182 49.172 603.067 49.840 603.065 49.841 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":44.897,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":125.477,\\\"y\\\":38.324,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}},{\\\"point\\\":{\\\"x\\\":594.523,\\\"y\\\":38.325,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":84.133,\\\"y\\\":219.239,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871687978005,\\\"y\\\":0.005065791128662006}},{\\\"point\\\":{\\\"x\\\":640.381,\\\"y\\\":219.239,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.999987167667295,\\\"y\\\":0.00506601428553955}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":645.664,\\\"y\\\":675.867,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712907644402357,\\\"y\\\":0.701257934395528}},{\\\"point\\\":{\\\"x\\\":263.578,\\\"y\\\":676.023,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986953819094688,\\\"y\\\":0.715419291952895}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":168.167,\\\"y\\\":505.315,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817193319961091,\\\"y\\\":-0.731613800022101}},{\\\"point\\\":{\\\"x\\\":655.684,\\\"y\\\":572.489,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.631447108164269,\\\"y\\\":-0.775418951013568}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":542.272,\\\"y\\\":464.61,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7071067811865475,\\\"y\\\":0.7071067811865475}}],\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":213.117,\\\"max\\\":309.928},\\\"y\\\":{\\\"min\\\":103.247,\\\"max\\\":196.96}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"047E7A57-68CF-4124-AE23-0BA138A4E1BC_0\\\",\\\"cx\\\":\\\"33.87%\\\",\\\"cy\\\":\\\"49.25%\\\",\\\"r\\\":\\\"111.17%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"22.35%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"atom\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":142.52980793121316,\\\"max\\\":577.1379043744664},\\\"y\\\":{\\\"min\\\":76.604,\\\"max\\\":575.1}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"atom_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"atom\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 463.630 325.914 C 460.287 328.229 456.901 330.543 453.605 332.762 C 536.066 388.184 567.714 427.131 559.599 441.186 C 551.433 455.331 501.303 447.207 412.526 403.496 C 408.908 401.714 405.236 399.880 401.579 398.026 C 392.153 393.249 382.395 388.134 372.144 382.561 C 368.064 384.841 363.959 387.104 359.866 389.330 C 374.456 397.302 388.192 404.370 400.811 410.506 C 404.573 412.336 408.105 414.021 411.545 415.633 C 510.610 462.040 566.806 465.861 575.689 450.476 C 584.606 435.030 552.917 387.966 463.630 325.914 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 411.545 415.633 C 408.105 414.021 404.573 412.336 400.811 410.506 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 411.545 415.633 C 408.105 414.021 404.573 412.336 400.811 410.506 C 394.422 508.447 376.269 556.521 359.834 556.521 C 343.502 556.521 325.473 509.045 318.854 410.504 C 318.601 406.448 318.365 402.324 318.104 398.016 C 317.575 387.500 317.150 376.511 316.859 364.851 C 312.999 362.548 309.114 360.203 305.002 357.694 C 305.238 374.240 305.938 389.667 306.810 403.659 C 307.177 408.041 307.460 411.977 307.757 415.804 C 317.279 524.522 342.068 575.100 359.834 575.100 C 377.502 575.100 402.117 525.074 411.545 415.633 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 306.810 403.659 C 307.177 408.041 307.460 411.977 307.757 415.804 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 307.757 415.804 C 209.058 462.040 152.861 465.861 143.979 450.476 C 135.003 434.929 167.167 387.348 256.037 325.790 C 259.380 323.475 262.766 321.161 266.062 318.942 C 278.388 310.641 291.210 302.419 304.998 294.011 C 304.761 298.681 304.660 303.365 304.585 308.125 C 294.485 314.338 284.949 320.388 276.594 325.847 C 272.804 328.323 269.351 330.612 266.125 332.785 C 183.341 388.504 151.987 427.189 160.069 441.186 C 168.235 455.331 218.365 447.207 306.810 403.659 C 307.177 408.041 307.460 411.977 307.757 415.804 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 266.062 318.942 C 262.766 321.161 259.380 323.475 256.037 325.790 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 256.037 325.790 C 166.750 263.738 135.061 216.674 143.979 201.228 C 152.861 185.843 209.058 189.663 308.122 236.071 C 311.562 237.682 315.094 239.368 318.856 241.198 C 331.475 247.334 345.211 254.402 359.801 262.374 C 355.709 264.600 351.604 266.863 347.524 269.143 C 337.273 263.570 327.514 258.455 318.089 253.677 C 314.432 251.824 310.760 249.989 307.141 248.208 C 218.365 204.496 168.235 196.373 160.069 210.518 C 151.954 224.573 183.601 263.520 266.062 318.942 C 262.766 321.161 259.380 323.475 256.037 325.790 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 318.856 241.198 C 315.094 239.368 311.562 237.682 308.122 236.071 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 308.122 236.071 C 317.550 126.629 342.166 76.604 359.834 76.604 C 377.599 76.604 402.388 127.182 411.910 235.899 C 412.208 239.726 412.491 243.663 412.858 248.045 C 413.729 262.037 414.429 277.464 414.666 294.009 C 410.553 291.501 406.668 289.156 402.809 286.852 C 402.517 275.193 402.092 264.203 401.563 253.688 C 401.302 249.380 401.066 245.256 400.814 241.200 C 394.196 142.658 376.166 95.183 359.834 95.183 C 343.399 95.183 325.246 143.256 318.856 241.198 C 315.094 239.368 311.562 237.682 308.122 236.071 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 411.910 235.899 C 412.208 239.726 412.491 243.663 412.858 248.045 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 453.605 332.762 C 456.901 330.543 460.287 328.229 463.630 325.914 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 411.910 235.899 C 412.208 239.726 412.491 243.663 412.858 248.045 C 501.303 204.497 551.433 196.373 559.599 210.518 C 567.680 224.515 536.326 263.199 453.542 318.919 C 450.316 321.091 446.863 323.381 443.074 325.856 C 434.718 331.316 425.183 337.366 415.082 343.578 C 415.007 348.339 414.906 353.022 414.669 357.692 C 428.458 349.284 441.280 341.062 453.605 332.762 C 456.901 330.543 460.287 328.229 463.630 325.914 C 552.500 264.356 584.664 216.775 575.689 201.228 C 566.806 185.843 510.609 189.663 411.910 235.899 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 304.585 308.125 C 304.660 303.365 304.761 298.681 304.998 294.011 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 307.141 248.208 C 310.760 249.989 314.432 251.824 318.089 253.677 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 316.534 350.831 C 312.274 348.276 308.305 345.866 304.588 343.580 C 304.487 337.833 304.445 331.900 304.445 325.852 C 304.445 319.043 304.498 312.380 304.585 308.125 C 304.660 303.365 304.761 298.681 304.998 294.011 C 305.434 277.635 306.187 262.230 307.141 248.208 C 310.760 249.989 314.432 251.824 318.089 253.677 C 317.538 264.236 317.112 275.287 316.831 286.869 C 316.740 292.577 316.661 296.673 316.599 300.834 C 316.409 310.409 316.351 318.027 316.351 325.852 C 316.351 334.464 316.421 342.828 316.534 350.831 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 316.859 364.851 C 312.999 362.548 309.114 360.203 305.002 357.694 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 266.125 332.785 C 269.351 330.612 272.804 328.323 276.594 325.847 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 304.588 343.580 C 308.305 345.866 312.274 348.276 316.534 350.831 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 359.849 375.818 C 355.636 378.157 351.568 380.389 347.583 382.548 C 342.536 379.774 337.377 376.844 332.139 373.820 C 327.009 370.858 321.995 367.917 316.859 364.851 C 312.999 362.548 309.114 360.203 305.002 357.694 C 291.112 349.225 278.203 340.944 266.125 332.785 C 269.351 330.612 272.804 328.323 276.594 325.847 C 285.161 331.450 294.598 337.436 304.588 343.580 C 308.305 345.866 312.274 348.276 316.534 350.831 C 323.226 354.843 330.530 359.143 338.092 363.509 C 345.551 367.815 352.829 371.936 359.849 375.818 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 372.144 382.561 C 368.064 384.841 363.959 387.104 359.866 389.330 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 318.854 410.504 C 318.601 406.448 318.365 402.324 318.104 398.016 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 347.583 382.548 C 351.568 380.389 355.636 378.157 359.849 375.818 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 403.068 350.869 C 403.007 355.030 402.927 359.127 402.837 364.835 C 397.672 367.917 392.658 370.858 387.528 373.820 C 382.352 376.808 377.253 379.705 372.144 382.561 C 368.064 384.841 363.959 387.104 359.866 389.330 C 345.582 397.100 331.814 404.189 318.854 410.504 C 318.601 406.448 318.365 402.324 318.104 398.016 C 327.522 393.243 337.277 388.131 347.583 382.548 C 351.568 380.389 355.636 378.157 359.849 375.818 C 366.839 371.936 374.116 367.815 381.575 363.509 C 389.137 359.143 396.442 354.843 403.068 350.869 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 415.082 343.578 C 415.007 348.339 414.906 353.022 414.669 357.692 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 412.526 403.496 C 408.908 401.714 405.236 399.880 401.579 398.026 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 402.837 364.835 C 402.927 359.127 403.007 355.030 403.068 350.869 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 403.133 300.873 C 407.394 303.428 411.362 305.838 415.079 308.124 C 415.180 313.871 415.222 319.804 415.222 325.852 C 415.222 332.661 415.169 339.324 415.082 343.578 C 415.007 348.339 414.906 353.022 414.669 357.692 C 414.234 374.069 413.481 389.473 412.526 403.496 C 408.908 401.714 405.236 399.880 401.579 398.026 C 402.129 387.467 402.555 376.417 402.837 364.835 C 402.927 359.127 403.007 355.030 403.068 350.869 C 403.259 341.295 403.316 333.676 403.316 325.852 C 403.316 317.239 403.246 308.876 403.133 300.873 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 443.074 325.856 C 446.863 323.381 450.316 321.091 453.542 318.919 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 414.666 294.009 C 410.553 291.501 406.668 289.156 402.809 286.852 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 403.133 300.873 C 407.394 303.428 411.362 305.838 415.079 308.124 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 415.079 308.124 C 425.069 314.268 434.506 320.254 443.074 325.856 C 446.863 323.381 450.316 321.091 453.542 318.919 C 441.465 310.760 428.556 302.479 414.666 294.009 C 410.553 291.501 406.668 289.156 402.809 286.852 C 397.672 283.787 392.658 280.846 387.528 277.884 C 382.290 274.860 377.131 271.930 372.084 269.156 C 368.100 271.315 364.031 273.547 359.819 275.886 C 366.839 279.767 374.116 283.889 381.575 288.195 C 389.137 292.561 396.442 296.861 403.133 300.873 C 407.394 303.428 411.362 305.838 415.079 308.124 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 316.599 300.834 C 316.661 296.673 316.740 292.577 316.831 286.869 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 347.524 269.143 C 351.604 266.863 355.709 264.600 359.801 262.374 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 400.814 241.200 C 401.066 245.256 401.302 249.380 401.563 253.688 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 372.084 269.156 C 368.100 271.315 364.031 273.547 359.819 275.886 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 316.599 300.834 C 316.661 296.673 316.740 292.577 316.831 286.869 C 321.995 283.787 327.009 280.846 332.139 277.884 C 337.315 274.896 342.415 271.999 347.524 269.143 C 351.604 266.863 355.709 264.600 359.801 262.374 C 374.085 254.604 387.853 247.515 400.814 241.200 C 401.066 245.256 401.302 249.380 401.563 253.688 C 392.145 258.460 382.390 263.573 372.084 269.156 C 368.100 271.315 364.031 273.547 359.819 275.886 C 352.829 279.767 345.551 283.889 338.092 288.195 C 330.530 292.561 323.226 296.861 316.599 300.834 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"starburst_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 372.203 C 360.000 372.201 363.044 355.453 363.045 355.451 C 363.045 355.453 369.350 371.262 369.351 371.264 C 369.351 371.262 368.852 354.273 368.851 354.271 C 368.852 354.273 378.053 368.569 378.054 368.571 C 378.053 368.569 374.183 352.026 374.183 352.024 C 374.184 352.025 385.921 364.306 385.922 364.307 C 385.922 364.305 378.921 348.830 378.920 348.829 C 378.922 348.830 392.773 358.656 392.774 358.657 C 392.773 358.656 382.947 344.805 382.946 344.803 C 382.948 344.804 398.423 351.805 398.424 351.806 C 398.423 351.804 386.143 340.067 386.141 340.066 C 386.143 340.066 402.686 343.936 402.688 343.936 C 402.686 343.935 388.390 334.735 388.388 334.734 C 388.390 334.734 405.379 335.234 405.381 335.234 C 405.380 335.233 389.570 328.928 389.568 328.928 C 389.570 328.927 406.318 325.883 406.320 325.883 C 406.318 325.883 389.570 322.838 389.568 322.838 C 389.570 322.837 405.380 316.533 405.381 316.532 C 405.379 316.532 388.390 317.031 388.388 317.031 C 388.390 317.030 402.686 307.830 402.688 307.829 C 402.686 307.830 386.143 311.699 386.141 311.700 C 386.143 311.699 398.423 299.962 398.424 299.960 C 398.423 299.961 382.948 306.962 382.946 306.962 C 382.947 306.961 392.773 293.110 392.774 293.109 C 392.773 293.110 378.922 302.936 378.920 302.937 C 378.921 302.935 385.922 287.460 385.923 287.459 C 385.922 287.460 374.184 299.740 374.183 299.741 C 374.183 299.740 378.053 283.197 378.054 283.195 C 378.053 283.196 368.852 297.493 368.851 297.494 C 368.852 297.493 369.351 280.503 369.351 280.502 C 369.350 280.503 363.045 296.313 363.045 296.314 C 363.044 296.313 360.000 279.564 360.000 279.563 C 360.000 279.564 356.956 296.313 356.955 296.314 C 356.955 296.313 350.650 280.503 350.649 280.502 C 350.649 280.503 351.149 297.493 351.149 297.494 C 351.148 297.493 341.947 283.196 341.946 283.195 C 341.947 283.197 345.817 299.740 345.817 299.741 C 345.816 299.740 334.079 287.460 334.078 287.459 C 334.078 287.460 341.079 302.935 341.080 302.937 C 341.078 302.936 327.227 293.110 327.226 293.109 C 327.227 293.110 337.053 306.961 337.054 306.962 C 337.052 306.962 321.577 299.961 321.576 299.960 C 321.577 299.961 333.857 311.699 333.859 311.700 C 333.857 311.699 317.314 307.830 317.312 307.829 C 317.314 307.830 331.610 317.030 331.612 317.031 C 331.610 317.031 314.621 316.532 314.619 316.532 C 314.620 316.533 330.430 322.837 330.432 322.838 C 330.430 322.838 313.682 325.883 313.680 325.883 C 313.682 325.883 330.430 328.927 330.432 328.928 C 330.430 328.928 314.620 335.233 314.619 335.234 C 314.621 335.234 331.610 334.734 331.612 334.734 C 331.610 334.735 317.314 343.935 317.312 343.936 C 317.314 343.936 333.857 340.066 333.859 340.066 C 333.857 340.067 321.577 351.804 321.576 351.805 C 321.577 351.804 337.052 344.804 337.054 344.803 C 337.053 344.805 327.227 358.656 327.226 358.657 C 327.227 358.656 341.078 348.830 341.080 348.829 C 341.079 348.830 334.078 364.305 334.077 364.307 C 334.078 364.306 345.816 352.025 345.817 352.024 C 345.817 352.026 341.947 368.569 341.946 368.571 C 341.947 368.569 351.148 354.273 351.149 354.271 C 351.149 354.273 350.649 371.262 350.649 371.264 C 350.650 371.262 356.955 355.453 356.955 355.451 C 356.956 355.453 360.000 372.201 360.000 372.203 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 493.611 234.427 C 493.611 234.426 495.183 225.778 495.183 225.777 C 495.184 225.778 498.439 233.941 498.439 233.942 C 498.439 233.941 498.181 225.169 498.181 225.168 C 498.182 225.169 502.932 232.551 502.933 232.551 C 502.932 232.550 500.934 224.009 500.934 224.008 C 500.935 224.009 506.995 230.349 506.996 230.350 C 506.995 230.349 503.381 222.359 503.380 222.358 C 503.381 222.358 510.533 227.432 510.533 227.433 C 510.533 227.432 505.459 220.280 505.459 220.279 C 505.460 220.280 513.450 223.895 513.451 223.895 C 513.450 223.894 507.109 217.834 507.108 217.833 C 507.109 217.834 515.651 219.832 515.652 219.832 C 515.651 219.832 508.270 215.081 508.269 215.081 C 508.270 215.081 517.042 215.338 517.043 215.338 C 517.042 215.338 508.879 212.083 508.878 212.082 C 508.879 212.082 517.527 210.510 517.527 210.510 C 517.527 210.510 508.879 208.938 508.878 208.938 C 508.879 208.938 517.042 205.682 517.043 205.682 C 517.042 205.682 508.270 205.940 508.269 205.940 C 508.270 205.939 515.651 201.189 515.652 201.189 C 515.651 201.189 507.109 203.187 507.108 203.187 C 507.109 203.187 513.450 197.126 513.451 197.126 C 513.450 197.126 505.460 200.741 505.459 200.741 C 505.459 200.740 510.533 193.588 510.533 193.588 C 510.533 193.588 503.381 198.662 503.380 198.662 C 503.381 198.661 506.995 190.671 506.996 190.671 C 506.995 190.671 500.935 197.012 500.934 197.013 C 500.934 197.012 502.932 188.470 502.933 188.469 C 502.932 188.470 498.182 195.852 498.181 195.852 C 498.181 195.851 498.439 187.079 498.439 187.078 C 498.439 187.079 495.184 195.242 495.183 195.243 C 495.183 195.242 493.611 186.595 493.611 186.594 C 493.611 186.595 492.039 195.242 492.039 195.243 C 492.038 195.242 488.783 187.079 488.783 187.078 C 488.783 187.079 489.041 195.851 489.041 195.852 C 489.040 195.852 484.290 188.470 484.289 188.469 C 484.289 188.470 486.288 197.012 486.288 197.013 C 486.287 197.012 480.227 190.671 480.226 190.671 C 480.227 190.671 483.841 198.661 483.842 198.662 C 483.841 198.662 476.689 193.588 476.689 193.588 C 476.689 193.588 481.763 200.740 481.763 200.741 C 481.762 200.741 473.772 197.126 473.771 197.125 C 473.772 197.126 480.113 203.187 480.113 203.187 C 480.112 203.187 471.571 201.189 471.570 201.189 C 471.571 201.189 478.952 205.939 478.953 205.940 C 478.952 205.940 470.180 205.682 470.179 205.682 C 470.180 205.682 478.343 208.938 478.344 208.938 C 478.343 208.938 469.695 210.510 469.694 210.510 C 469.695 210.510 478.343 212.082 478.344 212.082 C 478.343 212.083 470.180 215.338 470.179 215.338 C 470.180 215.338 478.952 215.081 478.953 215.081 C 478.952 215.081 471.571 219.832 471.570 219.832 C 471.571 219.832 480.112 217.834 480.113 217.833 C 480.113 217.834 473.772 223.894 473.771 223.895 C 473.772 223.894 481.762 220.280 481.763 220.279 C 481.763 220.280 476.689 227.432 476.689 227.433 C 476.689 227.432 483.841 222.358 483.842 222.358 C 483.841 222.359 480.227 230.349 480.226 230.350 C 480.227 230.349 486.287 224.009 486.288 224.008 C 486.288 224.009 484.289 232.550 484.289 232.551 C 484.290 232.551 489.040 225.169 489.041 225.168 C 489.041 225.169 488.783 233.941 488.783 233.942 C 488.783 233.941 492.038 225.778 492.039 225.777 C 492.039 225.778 493.611 234.426 493.611 234.427 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 225.324 322.485 C 225.324 322.484 226.896 313.836 226.896 313.835 C 226.897 313.836 230.152 321.999 230.152 322.000 C 230.152 321.999 229.894 313.227 229.894 313.226 C 229.895 313.227 234.645 320.608 234.646 320.609 C 234.646 320.608 232.647 312.067 232.647 312.066 C 232.648 312.066 238.708 318.407 238.709 318.408 C 238.708 318.407 235.094 310.417 235.093 310.416 C 235.094 310.416 242.246 315.490 242.247 315.490 C 242.246 315.490 237.173 308.338 237.172 308.337 C 237.173 308.337 245.163 311.952 245.164 311.953 C 245.163 311.952 238.822 305.892 238.822 305.891 C 238.823 305.891 247.365 307.890 247.365 307.890 C 247.365 307.889 239.983 303.139 239.982 303.138 C 239.983 303.138 248.755 303.396 248.756 303.396 C 248.755 303.396 240.592 300.140 240.591 300.140 C 240.592 300.140 249.240 298.568 249.241 298.568 C 249.240 298.568 240.592 296.996 240.591 296.996 C 240.592 296.995 248.755 293.740 248.756 293.740 C 248.755 293.740 239.983 293.997 239.982 293.998 C 239.983 293.997 247.365 289.247 247.365 289.246 C 247.365 289.247 238.823 291.245 238.822 291.245 C 238.822 291.244 245.163 285.184 245.164 285.183 C 245.163 285.184 237.173 288.798 237.172 288.799 C 237.173 288.798 242.246 281.646 242.247 281.646 C 242.246 281.646 235.094 286.720 235.093 286.720 C 235.094 286.719 238.709 278.729 238.709 278.728 C 238.708 278.729 232.648 285.070 232.647 285.070 C 232.647 285.070 234.646 276.528 234.646 276.527 C 234.645 276.528 229.895 283.909 229.894 283.910 C 229.894 283.909 230.152 275.137 230.152 275.136 C 230.152 275.137 226.897 283.300 226.896 283.301 C 226.896 283.300 225.324 274.652 225.324 274.651 C 225.324 274.652 223.752 283.300 223.752 283.301 C 223.752 283.300 220.496 275.137 220.496 275.136 C 220.496 275.137 220.754 283.909 220.754 283.910 C 220.753 283.909 216.003 276.528 216.002 276.527 C 216.003 276.528 218.001 285.070 218.001 285.070 C 218.000 285.070 211.940 278.729 211.939 278.728 C 211.940 278.729 215.555 286.719 215.555 286.720 C 215.554 286.720 208.403 281.646 208.402 281.646 C 208.402 281.646 213.476 288.798 213.476 288.799 C 213.476 288.798 205.485 285.183 205.484 285.183 C 205.485 285.184 211.826 291.244 211.826 291.245 C 211.826 291.245 203.284 289.247 203.283 289.246 C 203.284 289.247 210.666 293.997 210.666 293.998 C 210.665 293.997 201.893 293.740 201.892 293.740 C 201.893 293.740 210.056 296.995 210.057 296.996 C 210.056 296.996 201.408 298.568 201.407 298.568 C 201.408 298.568 210.056 300.140 210.057 300.140 C 210.056 300.140 201.893 303.396 201.892 303.396 C 201.893 303.396 210.665 303.138 210.666 303.138 C 210.666 303.139 203.284 307.889 203.283 307.890 C 203.284 307.890 211.826 305.891 211.826 305.891 C 211.826 305.892 205.485 311.952 205.484 311.952 C 205.485 311.952 213.476 308.337 213.476 308.337 C 213.476 308.338 208.402 315.490 208.402 315.490 C 208.403 315.490 215.554 310.416 215.555 310.416 C 215.555 310.417 211.940 318.407 211.939 318.408 C 211.940 318.407 218.000 312.066 218.001 312.066 C 218.001 312.067 216.003 320.608 216.002 320.609 C 216.003 320.608 220.753 313.227 220.754 313.226 C 220.754 313.227 220.496 321.999 220.496 322.000 C 220.496 321.999 223.752 313.836 223.752 313.835 C 223.752 313.836 225.324 322.484 225.324 322.485 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 335.743 560.202 C 335.743 560.201 337.315 551.554 337.315 551.553 C 337.315 551.553 340.570 559.717 340.571 559.717 C 340.571 559.716 340.313 550.944 340.313 550.943 C 340.313 550.944 345.064 558.326 345.064 558.327 C 345.064 558.326 343.066 549.784 343.066 549.783 C 343.066 549.784 349.127 556.124 349.127 556.125 C 349.127 556.124 345.512 548.134 345.512 548.133 C 345.513 548.134 352.664 553.207 352.665 553.208 C 352.665 553.207 347.591 546.055 347.591 546.055 C 347.591 546.055 355.582 549.670 355.582 549.670 C 355.582 549.670 349.241 543.609 349.240 543.609 C 349.241 543.609 357.783 545.607 357.784 545.607 C 357.783 545.607 350.401 540.856 350.401 540.856 C 350.401 540.856 359.173 541.114 359.174 541.114 C 359.174 541.113 351.011 537.858 351.010 537.858 C 351.011 537.857 359.658 536.286 359.659 536.285 C 359.658 536.285 351.011 534.713 351.010 534.713 C 351.011 534.713 359.174 531.457 359.174 531.457 C 359.173 531.457 350.401 531.715 350.401 531.715 C 350.401 531.715 357.783 526.964 357.784 526.964 C 357.783 526.964 349.241 528.962 349.240 528.962 C 349.241 528.962 355.582 522.901 355.582 522.901 C 355.582 522.901 347.591 526.516 347.591 526.516 C 347.591 526.516 352.665 519.364 352.665 519.363 C 352.664 519.364 345.513 524.437 345.512 524.438 C 345.512 524.437 349.127 516.447 349.128 516.446 C 349.127 516.446 343.066 522.787 343.066 522.788 C 343.066 522.787 345.064 514.245 345.064 514.244 C 345.064 514.245 340.313 521.627 340.313 521.628 C 340.313 521.627 340.571 512.854 340.571 512.853 C 340.570 512.854 337.315 521.017 337.315 521.018 C 337.315 521.017 335.743 512.370 335.743 512.369 C 335.743 512.370 334.171 521.017 334.171 521.018 C 334.170 521.017 330.915 512.854 330.914 512.853 C 330.914 512.854 331.172 521.627 331.172 521.628 C 331.172 521.627 326.421 514.245 326.421 514.244 C 326.421 514.245 328.419 522.787 328.419 522.788 C 328.419 522.787 322.358 516.446 322.358 516.446 C 322.358 516.447 325.973 524.437 325.974 524.438 C 325.973 524.437 318.821 519.364 318.820 519.363 C 318.821 519.364 323.894 526.516 323.895 526.516 C 323.894 526.516 315.904 522.901 315.903 522.901 C 315.903 522.901 322.244 528.962 322.245 528.962 C 322.244 528.962 313.702 526.964 313.702 526.964 C 313.702 526.964 321.084 531.715 321.085 531.715 C 321.084 531.715 312.312 531.457 312.311 531.457 C 312.312 531.457 320.475 534.713 320.475 534.713 C 320.475 534.713 311.827 536.285 311.826 536.285 C 311.827 536.286 320.475 537.857 320.475 537.858 C 320.475 537.858 312.312 541.113 312.311 541.114 C 312.312 541.114 321.084 540.856 321.085 540.856 C 321.084 540.856 313.702 545.607 313.702 545.607 C 313.702 545.607 322.244 543.609 322.245 543.609 C 322.244 543.609 315.903 549.669 315.903 549.670 C 315.904 549.670 323.894 546.055 323.895 546.055 C 323.894 546.055 318.821 553.207 318.820 553.208 C 318.821 553.207 325.973 548.134 325.974 548.133 C 325.973 548.134 322.358 556.124 322.358 556.125 C 322.358 556.124 328.419 549.784 328.419 549.783 C 328.419 549.784 326.421 558.326 326.421 558.327 C 326.421 558.326 331.172 550.944 331.172 550.943 C 331.172 550.944 330.914 559.716 330.914 559.717 C 330.915 559.717 334.170 551.553 334.171 551.553 C 334.171 551.554 335.743 560.201 335.743 560.202 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"Layer_3\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 353.411 C 375.237 353.411 387.528 341.120 387.528 325.883 C 387.528 310.646 375.237 298.354 360.000 298.354 C 344.763 298.354 332.472 310.646 332.472 325.883 C 332.472 341.120 344.763 353.411 360.000 353.411 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 493.632 225.205 C 501.809 225.205 508.404 218.609 508.404 210.433 C 508.404 202.257 501.809 195.661 493.632 195.661 C 485.456 195.661 478.860 202.257 478.860 210.433 C 478.860 218.609 485.456 225.205 493.632 225.205 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 225.184 312.880 C 233.361 312.880 239.957 306.284 239.957 298.108 C 239.957 289.932 233.361 283.336 225.184 283.336 C 217.008 283.336 210.412 289.932 210.412 298.108 C 210.412 306.284 217.008 312.880 225.184 312.880 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 335.456 550.597 C 343.632 550.597 350.228 544.001 350.228 535.825 C 350.228 527.648 343.632 521.053 335.456 521.053 C 327.280 521.053 320.684 527.648 320.684 535.825 C 320.684 544.001 327.280 550.597 335.456 550.597 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":271.166,\\\"max\\\":448.834},\\\"y\\\":{\\\"min\\\":237.049,\\\"max\\\":414.717}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":687.3,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":31.522,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":66.199,\\\"y\\\":326.72,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.99998727385282,\\\"y\\\":0.005045010644694454}},{\\\"point\\\":{\\\"x\\\":653.801,\\\"y\\\":326.72,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.99998727385282,\\\"y\\\":0.005045010644694451}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":568.349,\\\"y\\\":535.234,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128727398644766,\\\"y\\\":0.7012934170218014}},{\\\"point\\\":{\\\"x\\\":151.479,\\\"y\\\":535.277,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986617533348272,\\\"y\\\":0.7154521328692124}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":568.495,\\\"y\\\":118.302,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314391307129583,\\\"y\\\":-0.77542544722524}},{\\\"point\\\":{\\\"x\\\":152.213,\\\"y\\\":118.373,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817316356842618,\\\"y\\\":-0.7316023352254016}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":628.17,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"baby\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":136.29395694453225,\\\"max\\\":583.1590242633404},\\\"y\\\":{\\\"min\\\":7.768899256439873,\\\"max\\\":591.6958889135697}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"baby\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"baby\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#FE871690-C5E8-45FE-997D-9DF946B26D0F_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 438.903 476.114 C 446.970 479.497 459.124 483.308 463.176 484.579 C 454.501 501.418 458.345 529.951 452.610 536.784 C 432.483 560.764 506.208 580.313 506.214 580.317 C 506.216 580.318 523.012 592.228 527.300 588.063 C 537.562 578.098 515.375 577.944 518.402 573.191 C 521.165 568.854 530.233 577.804 532.848 573.253 C 535.312 568.964 519.393 568.353 521.200 564.143 C 523.440 558.925 533.198 570.776 535.203 565.790 C 537.151 560.946 522.993 557.839 524.072 555.227 C 525.537 551.682 533.770 560.690 536.440 554.644 C 537.350 552.583 523.045 548.175 516.260 542.064 C 515.144 541.059 503.254 533.637 503.254 533.637 C 503.254 533.637 522.381 484.361 518.836 464.123 C 526.591 433.822 459.670 396.942 458.027 395.614 C 463.639 378.084 453.635 302.412 451.647 295.318 C 468.100 291.591 513.454 278.606 522.547 260.596 C 539.519 246.648 550.395 213.413 549.627 204.224 C 556.979 200.472 561.833 192.176 565.713 183.238 C 571.185 174.017 587.526 159.786 578.486 155.203 C 575.960 153.922 568.026 169.158 563.160 166.308 C 559.114 163.938 576.185 147.365 569.176 143.538 C 562.662 139.982 557.103 161.617 553.473 159.945 C 547.956 157.403 560.969 135.499 551.929 134.123 C 544.713 133.024 546.140 156.673 542.633 156.181 C 534.316 155.015 539.956 134.180 532.076 134.484 C 520.899 134.914 535.529 162.132 525.572 166.826 C 519.874 169.512 512.516 155.661 507.926 160.122 C 503.096 164.815 513.449 172.409 515.577 179.260 C 516.857 183.381 519.144 189.155 519.907 191.080 C 519.907 191.080 497.047 221.924 496.077 224.268 C 477.282 224.324 468.358 227.340 453.966 232.074 C 442.217 232.184 430.907 235.925 421.684 241.917 C 403.723 227.910 382.518 220.169 360.429 220.169 C 337.781 219.951 316.535 227.779 298.316 241.917 C 289.108 235.903 277.783 232.184 266.034 232.074 C 251.642 227.340 242.718 224.324 223.923 224.268 C 222.953 221.924 200.093 191.080 200.093 191.080 C 200.856 189.155 203.144 183.381 204.423 179.260 C 206.551 172.409 216.904 164.815 212.074 160.122 C 207.484 155.661 200.126 169.512 194.428 166.826 C 184.471 162.132 199.104 134.137 187.924 134.484 C 181.948 134.669 184.526 157.847 180.066 158.214 C 175.292 158.608 176.724 133.604 168.720 134.629 C 160.636 135.664 172.919 159.773 169.008 161.574 C 163.538 164.092 158.097 140.835 152.530 143.363 C 144.467 147.025 160.861 164.873 156.301 167.616 C 152.629 169.825 143.741 153.608 140.499 154.822 C 132.460 157.834 148.562 173.854 154.288 183.238 C 158.276 192.128 163.021 200.472 170.373 204.224 C 169.605 213.413 180.481 246.648 197.453 260.596 C 206.546 278.606 251.900 291.591 268.353 295.318 C 266.365 302.412 256.361 378.084 261.973 395.614 C 260.330 396.942 193.409 433.822 201.164 464.123 C 197.619 484.361 211.981 525.025 216.746 533.637 C 208.996 537.785 204.217 542.335 203.331 543.698 C 198.921 550.487 180.023 550.845 181.275 555.513 C 183.246 562.866 194.848 550.721 196.321 555.144 C 198.154 560.650 180.441 559.755 181.968 565.217 C 183.773 571.669 196.393 560.909 198.495 565.969 C 199.512 568.416 181.820 569.690 186.097 575.694 C 188.828 579.526 199.027 568.147 202.436 572.959 C 205.939 577.905 179.933 577.961 192.023 588.420 C 198.269 593.823 213.784 580.318 213.786 580.317 C 213.792 580.313 287.517 560.764 267.390 536.784 C 261.655 529.951 265.499 501.418 256.825 484.579 C 260.876 483.308 273.030 479.497 281.097 476.114 C 295.680 470.000 309.661 462.535 319.335 453.819 C 331.071 457.726 346.077 458.464 360.445 458.609 C 374.271 458.624 389.189 457.672 400.665 453.819 C 410.339 462.535 424.320 470.000 438.903 476.114 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#FE871690-C5E8-45FE-997D-9DF946B26D0F_1)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 269.608 175.423 C 263.623 109.845 286.990 57.479 360.429 57.681 C 433.610 57.882 457.547 110.999 450.392 175.423 C 468.674 174.444 457.676 214.797 442.002 215.740 C 437.158 227.862 430.425 238.539 422.286 247.388 C 406.008 265.085 384.105 275.468 360.429 275.468 C 336.223 275.537 314.217 265.254 297.714 247.388 C 289.557 238.557 282.842 227.862 277.998 215.740 C 262.324 214.797 251.328 174.407 269.608 175.423 M 338.728 188.489 C 338.729 177.800 330.106 169.177 319.417 169.177 C 308.728 169.177 300.105 177.800 300.106 188.489 C 300.106 199.177 308.728 207.799 319.417 207.799 C 330.106 207.800 338.728 199.177 338.728 188.489 M 381.472 188.489 C 381.471 177.800 390.094 169.177 400.783 169.177 C 411.472 169.177 420.095 177.800 420.095 188.489 C 420.094 199.177 411.472 207.799 400.783 207.799 C 390.095 207.800 381.472 199.177 381.472 188.489 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 343.145 241.235 C 343.946 236.967 354.026 240.207 361.042 240.207 C 368.059 240.207 378.139 236.967 378.940 241.235 C 379.796 245.799 368.545 248.100 361.042 248.100 C 353.540 248.100 342.288 245.799 343.145 241.235 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 364.021 76.070 C 366.496 52.934 336.788 48.757 340.947 28.479 C 345.579 5.890 369.009 5.503 375.680 18.034 C 382.586 31.006 367.715 44.706 360.814 32.755 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":282.345,\\\"max\\\":437.655},\\\"y\\\":{\\\"min\\\":284.245,\\\"max\\\":439.555}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":702.755,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":58.499,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":261.063,\\\"y\\\":342.622,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872546185516,\\\"y\\\":0.005048821689449995}},{\\\"point\\\":{\\\"x\\\":458.937,\\\"y\\\":342.622,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872546185516,\\\"y\\\":0.0050488216894499826}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":539.086,\\\"y\\\":574.582,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129515251405757,\\\"y\\\":0.7012133218926513}},{\\\"point\\\":{\\\"x\\\":180.766,\\\"y\\\":574.619,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987349433206016,\\\"y\\\":0.7153806532069173}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":572.652,\\\"y\\\":129.724,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314256466697843,\\\"y\\\":-0.7754364272637988}},{\\\"point\\\":{\\\"x\\\":148.075,\\\"y\\\":129.796,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817315179272352,\\\"y\\\":-0.7316024449553375}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":462.148,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"FE871690-C5E8-45FE-997D-9DF946B26D0F_0\\\",\\\"cx\\\":\\\"49.80%\\\",\\\"cy\\\":\\\"49.58%\\\",\\\"r\\\":\\\"151.83%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"16.86%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"FE871690-C5E8-45FE-997D-9DF946B26D0F_1\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"49.97%\\\",\\\"r\\\":\\\"147.77%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"16.86%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"band\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":27.696,\\\"max\\\":692.305},\\\"y\\\":{\\\"min\\\":50.717,\\\"max\\\":432.005}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"band\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"band\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#DD4BD7ED-FF4A-4AFC-AB8E-63D70820EC9D_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 337.463 C 194.301 337.463 94.503 287.104 52.692 241.436 C 37.228 258.382 29.696 274.707 29.696 287.632 C 29.696 335.506 133.015 430.005 360.000 430.005 C 586.985 430.005 690.305 335.506 690.305 287.632 C 690.305 274.707 682.772 258.382 667.307 241.434 C 625.497 287.104 525.699 337.463 360.000 337.463 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 29.696 287.632 C 29.696 274.707 37.228 258.382 52.692 241.436 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 667.307 241.434 C 682.772 258.382 690.305 274.707 690.305 287.632 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#DD4BD7ED-FF4A-4AFC-AB8E-63D70820EC9D_1)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 29.696 195.090 C 29.696 225.937 29.696 256.785 29.696 287.632 C 29.696 274.707 37.228 258.382 52.692 241.436 C 94.503 195.618 194.301 145.260 360.000 145.260 C 525.699 145.260 625.496 195.618 667.307 241.434 C 682.772 258.382 690.305 274.707 690.305 287.632 C 690.305 256.785 690.305 225.937 690.305 195.090 C 690.304 140.066 586.985 52.717 360.000 52.717 C 133.015 52.717 29.696 146.135 29.696 195.090 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":234.786,\\\"max\\\":485.214},\\\"y\\\":{\\\"min\\\":157.884,\\\"max\\\":594.55}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":616.667,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":55.312,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":32.423,\\\"y\\\":242.298,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873200064072,\\\"y\\\":0.005035854088754184}},{\\\"point\\\":{\\\"x\\\":688.623,\\\"y\\\":242.298,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873200064072,\\\"y\\\":0.00503585408875421}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":593.334,\\\"y\\\":386.379,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129699922269517,\\\"y\\\":0.7011945451755173}},{\\\"point\\\":{\\\"x\\\":127.799,\\\"y\\\":386.427,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987254201015096,\\\"y\\\":0.7153899547127908}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":592.835,\\\"y\\\":98.323,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314454286031296,\\\"y\\\":-0.7754203187279851}},{\\\"point\\\":{\\\"x\\\":127.956,\\\"y\\\":98.402,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817850569385171,\\\"y\\\":-0.7315525518616848}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":430.423,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"DD4BD7ED-FF4A-4AFC-AB8E-63D70820EC9D_0\\\",\\\"x1\\\":\\\"50.00%\\\",\\\"y1\\\":\\\"50.00%\\\",\\\"x2\\\":\\\"134.74%\\\",\\\"y2\\\":\\\"49.39%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"36.08%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"DD4BD7ED-FF4A-4AFC-AB8E-63D70820EC9D_1\\\",\\\"x1\\\":\\\"50.00%\\\",\\\"y1\\\":\\\"50.00%\\\",\\\"x2\\\":\\\"137.01%\\\",\\\"y2\\\":\\\"50.00%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"20.39%\\\",\\\"color\\\":\\\"#000000\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#ffffff\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"banner\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":13.068,\\\"max\\\":706.932},\\\"y\\\":{\\\"min\\\":244.09142636476506,\\\"max\\\":496.77192438053817}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"banner\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"banner_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#4077CAD8-5260-4682-8C93-030F4898BB73_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 449.383 488.619 C 454.881 474.810 563.688 484.749 566.022 474.569 C 566.022 474.569 566.022 474.569 566.022 474.569 C 566.022 474.569 566.022 474.569 566.022 474.569 C 566.021 474.554 560.635 373.051 560.326 323.105 C 623.666 328.109 704.917 322.039 704.932 322.039 C 704.920 322.048 588.074 412.860 588.062 412.869 C 588.074 412.876 702.681 488.077 702.692 488.085 C 702.667 488.085 449.086 499.661 449.383 488.619 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#4077CAD8-5260-4682-8C93-030F4898BB73_1)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 153.979 474.569 C 153.979 474.554 159.366 373.051 159.674 323.105 C 96.334 328.109 15.083 322.039 15.068 322.039 C 15.080 322.048 131.926 412.859 131.938 412.868 C 131.927 412.876 17.320 488.077 17.308 488.085 C 17.334 488.085 267.529 502.768 270.617 488.619 C 264.204 474.890 154.482 484.909 153.979 474.569 C 153.979 474.569 153.979 474.569 153.979 474.569 C 153.979 474.569 153.979 474.569 153.979 474.569 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 560.326 323.105 C 560.635 373.051 566.021 474.554 566.022 474.569 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 153.979 474.569 C 153.979 474.554 159.366 373.051 159.674 323.105 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 153.979 474.569 C 153.979 474.569 153.979 474.569 153.979 474.569 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 153.979 474.569 C 153.979 474.569 153.979 474.569 153.979 474.569 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 566.022 474.569 C 566.022 474.569 566.022 474.569 566.022 474.569 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 566.022 474.569 C 566.022 474.569 566.022 474.569 566.022 474.569 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#4077CAD8-5260-4682-8C93-030F4898BB73_2)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 560.326 323.105 C 560.635 373.051 566.021 474.554 566.022 474.569 C 564.036 463.222 492.639 465.247 451.911 467.303 C 416.488 469.092 400.430 466.588 360.518 467.226 C 320.949 467.858 303.913 469.079 268.089 467.303 C 227.360 465.284 158.685 463.467 153.979 474.569 C 153.979 474.554 159.366 373.051 159.674 323.105 C 160.244 299.833 158.824 279.546 158.992 258.450 C 165.435 242.321 218.002 247.102 361.304 248.726 C 502.890 247.282 555.836 239.979 561.009 258.451 C 559.104 288.930 559.756 299.833 560.326 323.105 M 153.979 474.569 C 153.979 474.569 153.979 474.569 153.979 474.569 C 153.979 474.569 153.979 474.569 153.979 474.569 M 566.022 474.569 C 566.022 474.569 566.022 474.569 566.022 474.569 C 566.022 474.569 566.022 474.569 566.022 474.569 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 268.089 467.303 C 227.360 465.284 158.685 463.467 153.979 474.569 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 153.979 474.569 C 153.979 474.569 153.979 474.569 153.979 474.569 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 153.979 474.569 C 153.979 474.569 153.979 474.569 153.979 474.569 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 153.979 474.569 C 154.482 484.909 264.204 474.890 270.617 488.619 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 268.089 467.303 C 227.360 465.284 158.685 463.467 153.979 474.569 C 153.979 474.569 153.979 474.569 153.979 474.569 C 153.979 474.569 153.979 474.569 153.979 474.569 C 154.482 484.909 264.204 474.890 270.617 488.619 C 270.006 480.647 268.944 474.510 268.089 467.303 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 566.022 474.569 C 564.036 463.222 492.639 465.247 451.911 467.303 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 449.383 488.619 C 454.881 474.810 563.688 484.749 566.022 474.569 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 566.022 474.569 C 566.022 474.569 566.022 474.569 566.022 474.569 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 566.022 474.569 C 566.022 474.569 566.022 474.569 566.022 474.569 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 566.022 474.569 C 564.036 463.222 492.639 465.247 451.911 467.303 C 451.056 474.510 449.994 480.647 449.383 488.619 C 454.881 474.810 563.688 484.749 566.022 474.569 C 566.022 474.569 566.022 474.569 566.022 474.569 C 566.022 474.569 566.022 474.569 566.022 474.569 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":184.293,\\\"max\\\":535.707},\\\"y\\\":{\\\"min\\\":265.333,\\\"max\\\":451.135}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":561.033,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":250.802,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":127.587,\\\"y\\\":489.023,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7129128799164904,\\\"y\\\":0.7012526118662059}},{\\\"point\\\":{\\\"x\\\":592.414,\\\"y\\\":489.023,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128625761887064,\\\"y\\\":0.7013037483641458}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":121.275,\\\"y\\\":410.903,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873200064072,\\\"y\\\":0.005035854088752079}},{\\\"point\\\":{\\\"x\\\":598.725,\\\"y\\\":410.903,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873200064072,\\\"y\\\":0.005035854088752106}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":166.047,\\\"y\\\":254.771,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6314816929755948,\\\"y\\\":-0.7753907862727522}},{\\\"point\\\":{\\\"x\\\":553.954,\\\"y\\\":254.771,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314201926397299,\\\"y\\\":-0.7754408683625117}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":459.833,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"4077CAD8-5260-4682-8C93-030F4898BB73_0\\\",\\\"x1\\\":\\\"82.74%\\\",\\\"y1\\\":\\\"51.83%\\\",\\\"x2\\\":\\\"-35.45%\\\",\\\"y2\\\":\\\"50.73%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"9.80%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"4077CAD8-5260-4682-8C93-030F4898BB73_1\\\",\\\"x1\\\":\\\"11.45%\\\",\\\"y1\\\":\\\"48.91%\\\",\\\"x2\\\":\\\"134.62%\\\",\\\"y2\\\":\\\"50.72%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"9.80%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"4077CAD8-5260-4682-8C93-030F4898BB73_2\\\",\\\"x1\\\":\\\"50.00%\\\",\\\"y1\\\":\\\"48.66%\\\",\\\"x2\\\":\\\"164.20%\\\",\\\"y2\\\":\\\"46.61%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"27.06%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"banner_vertical\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":244.09142636476506,\\\"max\\\":496.77192438053817},\\\"y\\\":{\\\"min\\\":13.068,\\\"max\\\":706.932}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"banner_vertical\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"banner_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#6C72C134-4E0E-498D-9C46-F15A1C3B2DD9_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 488.619 449.383 C 474.810 454.881 484.749 563.688 474.569 566.022 C 474.569 566.022 474.569 566.022 474.569 566.022 C 474.569 566.022 474.569 566.022 474.569 566.022 C 474.554 566.021 373.051 560.635 323.105 560.326 C 328.110 623.666 322.039 704.917 322.039 704.932 C 322.048 704.920 412.860 588.074 412.869 588.062 C 412.876 588.074 488.078 702.681 488.085 702.692 C 488.085 702.667 499.661 449.086 488.619 449.383 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#6C72C134-4E0E-498D-9C46-F15A1C3B2DD9_1)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 474.569 153.978 C 474.554 153.979 373.051 159.366 323.105 159.674 C 328.109 96.334 322.039 15.083 322.039 15.068 C 322.048 15.080 412.859 131.926 412.868 131.938 C 412.876 131.927 488.077 17.320 488.085 17.308 C 488.085 17.334 502.768 267.529 488.619 270.617 C 474.890 264.204 484.909 154.482 474.569 153.978 C 474.569 153.978 474.569 153.978 474.569 153.978 C 474.569 153.978 474.569 153.978 474.569 153.978 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 323.105 560.326 C 373.051 560.635 474.554 566.021 474.569 566.022 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 474.569 153.978 C 474.554 153.979 373.051 159.366 323.105 159.674 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 474.569 153.978 C 474.569 153.978 474.569 153.978 474.569 153.978 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 474.569 153.978 C 474.569 153.978 474.569 153.978 474.569 153.978 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 474.569 566.022 C 474.569 566.022 474.569 566.022 474.569 566.022 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 474.569 566.022 C 474.569 566.022 474.569 566.022 474.569 566.022 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#6C72C134-4E0E-498D-9C46-F15A1C3B2DD9_2)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 323.105 560.326 C 373.051 560.635 474.554 566.021 474.569 566.022 C 463.222 564.036 465.247 492.639 467.303 451.911 C 469.092 416.488 466.588 400.430 467.226 360.518 C 467.858 320.949 469.079 303.913 467.303 268.089 C 465.284 227.360 463.466 158.685 474.569 153.978 C 474.554 153.979 373.051 159.366 323.105 159.674 C 299.833 160.244 279.546 158.824 258.450 158.992 C 242.321 165.435 247.102 218.002 248.726 361.305 C 247.282 502.890 239.979 555.836 258.451 561.009 C 288.931 559.104 299.833 559.756 323.105 560.326 M 474.569 153.978 C 474.569 153.978 474.569 153.978 474.569 153.978 C 474.569 153.978 474.569 153.978 474.569 153.978 M 474.569 566.022 C 474.569 566.022 474.569 566.022 474.569 566.022 C 474.569 566.022 474.569 566.022 474.569 566.022 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 467.303 268.089 C 465.284 227.360 463.466 158.685 474.569 153.978 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 474.569 153.978 C 474.569 153.978 474.569 153.978 474.569 153.978 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 474.569 153.978 C 474.569 153.978 474.569 153.978 474.569 153.978 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 474.569 153.978 C 484.909 154.482 474.890 264.204 488.619 270.617 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 467.303 268.089 C 465.284 227.360 463.466 158.685 474.569 153.978 C 474.569 153.978 474.569 153.978 474.569 153.978 C 474.569 153.978 474.569 153.978 474.569 153.978 C 484.909 154.482 474.890 264.204 488.619 270.617 C 480.647 270.006 474.510 268.944 467.303 268.089 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 474.569 566.022 C 463.222 564.036 465.247 492.639 467.303 451.911 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 488.619 449.383 C 474.810 454.881 484.749 563.688 474.569 566.022 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 474.569 566.022 C 474.569 566.022 474.569 566.022 474.569 566.022 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 474.569 566.022 C 474.569 566.022 474.569 566.022 474.569 566.022 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 474.569 566.022 C 463.222 564.036 465.247 492.639 467.303 451.911 C 474.510 451.056 480.647 449.994 488.619 449.383 C 474.810 454.881 484.749 563.688 474.569 566.022 C 474.569 566.022 474.569 566.022 474.569 566.022 C 474.569 566.022 474.569 566.022 474.569 566.022 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":264.577,\\\"max\\\":450.379},\\\"y\\\":{\\\"min\\\":184.293,\\\"max\\\":535.707}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":561.033,\\\"y\\\":360,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":250.802,\\\"y\\\":360,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":489.023,\\\"y\\\":127.587,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7012526118662059,\\\"y\\\":-0.7129128799164904}},{\\\"point\\\":{\\\"x\\\":489.023,\\\"y\\\":592.414,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7013037483641458,\\\"y\\\":0.7128625761887064}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":410.903,\\\"y\\\":121.275,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005035854088752079,\\\"y\\\":-0.9999873200064072}},{\\\"point\\\":{\\\"x\\\":410.903,\\\"y\\\":598.725,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005035854088752106,\\\"y\\\":0.9999873200064072}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":254.771,\\\"y\\\":166.047,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7753907862727522,\\\"y\\\":-0.6314816929755948}},{\\\"point\\\":{\\\"x\\\":254.771,\\\"y\\\":553.954,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7754408683625117,\\\"y\\\":0.6314201926397299}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":460.816,\\\"y\\\":360,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}]},\\\"defs\\\":[{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"6C72C134-4E0E-498D-9C46-F15A1C3B2DD9_0\\\",\\\"x1\\\":\\\"50.97%\\\",\\\"y1\\\":\\\"88.49%\\\",\\\"x2\\\":\\\"44.34%\\\",\\\"y2\\\":\\\"-36.22%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"14.12%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"6C72C134-4E0E-498D-9C46-F15A1C3B2DD9_1\\\",\\\"x1\\\":\\\"52.31%\\\",\\\"y1\\\":\\\"8.57%\\\",\\\"x2\\\":\\\"43.70%\\\",\\\"y2\\\":\\\"132.82%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"14.12%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"6C72C134-4E0E-498D-9C46-F15A1C3B2DD9_2\\\",\\\"x1\\\":\\\"48.66%\\\",\\\"y1\\\":\\\"50.00%\\\",\\\"x2\\\":\\\"49.58%\\\",\\\"y2\\\":\\\"210.88%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"14.12%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"beaker\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":157.751,\\\"max\\\":562.249},\\\"y\\\":{\\\"min\\\":32.657250000000005,\\\"max\\\":612.373}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"beaker\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"beaker\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#C2B122F1-4633-453F-B94C-C344338ECD11_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 400.050 69.701 C 400.050 69.723 400.050 289.953 400.050 289.975 C 400.066 290.003 560.249 473.456 560.249 570.323 C 560.249 590.348 540.226 610.369 540.224 610.373 C 540.206 610.373 179.794 610.373 179.776 610.373 C 179.774 610.369 159.751 590.348 159.751 570.323 C 159.751 473.456 319.934 290.003 319.950 289.975 C 319.950 289.953 319.950 69.723 319.950 69.701 C 319.948 69.699 299.925 69.701 299.926 49.676 C 299.926 29.651 420.075 29.651 420.075 49.676 C 420.075 69.701 400.052 69.699 400.050 69.701 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 237.419 441.248 C 271.608 441.239 400.082 441.215 482.371 441.015 C 510.354 483.603 531.815 526.212 534.918 561.721 C 536.158 575.906 523.853 591.573 523.852 591.576 C 523.835 591.577 196.165 591.577 196.148 591.576 C 196.147 591.573 183.838 575.906 185.082 561.721 C 188.198 526.178 209.727 483.543 237.419 441.248 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":247.105,\\\"max\\\":472.895},\\\"y\\\":{\\\"min\\\":445.17,\\\"max\\\":586.06}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":692.828,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":33.839,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":297.883,\\\"y\\\":278.888,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.999987314871472,\\\"y\\\":0.005036873647774573}},{\\\"point\\\":{\\\"x\\\":422.117,\\\"y\\\":278.888,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.999987314871472,\\\"y\\\":0.005036873647774573}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":538.245,\\\"y\\\":610.441,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129318389237843,\\\"y\\\":0.7012333370916924}},{\\\"point\\\":{\\\"x\\\":181.608,\\\"y\\\":610.477,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986946485335824,\\\"y\\\":0.7154200081843768}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":613.976,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"C2B122F1-4633-453F-B94C-C344338ECD11_0\\\",\\\"x1\\\":\\\"51.84%\\\",\\\"y1\\\":\\\"83.53%\\\",\\\"x2\\\":\\\"138.88%\\\",\\\"y2\\\":\\\"55.43%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"22.35%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"bed\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":85.535,\\\"max\\\":697.116},\\\"y\\\":{\\\"min\\\":71.744,\\\"max\\\":648.579}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"bed\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"bed\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#7339E8A5-3494-49F7-88A4-842C9FC4DC2E_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 152.879 441.544 C 152.879 441.540 152.565 407.464 152.565 407.461 C 142.283 401.580 121.722 389.819 121.719 389.818 C 121.409 413.235 120.790 460.063 120.790 460.070 C 131.486 453.895 152.875 441.546 152.879 441.544 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 439.133 201.437 C 354.460 251.078 185.139 350.346 185.114 350.361 C 185.108 350.357 121.243 313.404 121.237 313.401 C 121.262 313.386 376.507 165.628 376.533 165.613 C 376.539 165.617 439.127 201.433 439.133 201.437 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 439.133 201.437 C 354.460 251.078 185.139 350.346 185.114 350.361 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 248.630 387.112 C 248.655 387.098 419.100 289.357 504.336 240.480 C 504.329 240.476 439.140 201.441 439.133 201.437 C 354.460 251.078 185.139 350.346 185.114 350.361 C 185.120 350.364 248.623 387.109 248.630 387.112 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 248.630 387.112 C 248.655 387.098 419.100 289.357 504.336 240.480 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 504.336 240.480 C 504.355 240.491 695.097 352.310 695.116 352.322 C 610.164 400.536 440.283 496.951 440.258 496.965 C 440.239 496.954 248.649 387.123 248.630 387.112 C 248.655 387.098 419.100 289.357 504.336 240.480 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 440.258 496.965 C 440.239 496.954 248.649 387.123 248.630 387.112 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 405.025 583.042 C 405.029 583.045 440.456 604.449 440.459 604.451 C 440.459 604.441 440.325 532.794 440.258 496.965 C 440.239 496.954 248.649 387.123 248.630 387.112 C 248.629 387.123 247.511 457.458 246.952 492.631 C 246.968 492.640 405.009 583.033 405.025 583.042 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 152.565 407.461 C 142.283 401.580 121.722 389.819 121.719 389.818 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 121.237 313.401 C 121.243 313.404 185.108 350.357 185.114 350.361 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 185.114 350.361 C 185.114 350.368 183.107 426.080 183.107 426.088 C 172.926 419.879 152.568 407.463 152.565 407.461 C 142.283 401.580 121.722 389.819 121.719 389.818 C 121.719 389.817 121.237 313.408 121.237 313.401 C 121.243 313.404 185.108 350.357 185.114 350.361 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 121.237 313.401 C 121.237 313.408 121.719 389.817 121.719 389.818 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 121.719 389.818 C 121.409 413.235 120.790 460.063 120.790 460.070 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 121.237 313.401 C 121.237 313.408 121.719 389.817 121.719 389.818 C 121.409 413.235 120.790 460.063 120.790 460.070 C 120.786 460.068 87.538 441.137 87.535 441.135 C 87.535 441.113 89.047 219.849 89.047 219.827 C 89.051 219.828 110.567 231.927 121.327 237.977 C 121.327 237.984 121.237 313.393 121.237 313.401 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 405.025 583.042 C 405.029 583.045 440.456 604.449 440.459 604.451 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 405.033 624.028 C 405.033 624.024 405.028 596.704 405.025 583.042 C 405.029 583.045 440.456 604.449 440.459 604.451 C 440.459 604.456 440.426 646.575 440.426 646.579 C 440.422 646.577 405.036 624.030 405.033 624.028 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 631.304 500.747 C 631.304 500.746 631.273 496.225 631.258 493.964 C 631.261 493.962 664.941 474.274 664.944 474.272 C 664.944 488.773 664.945 517.769 664.945 517.773 C 653.731 512.098 631.307 500.748 631.304 500.747 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 440.459 604.451 C 440.459 604.441 440.325 532.794 440.258 496.965 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 440.258 496.965 C 440.283 496.951 610.164 400.536 695.116 352.322 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 664.944 474.272 C 664.941 474.274 631.261 493.962 631.258 493.964 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#7339E8A5-3494-49F7-88A4-842C9FC4DC2E_9)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 440.459 604.451 C 440.459 604.441 440.325 532.794 440.258 496.965 C 440.283 496.951 610.164 400.536 695.116 352.322 C 695.116 352.332 694.507 455.195 694.507 455.205 C 694.504 455.207 664.947 474.270 664.944 474.272 C 664.941 474.274 631.261 493.962 631.258 493.964 C 631.242 493.973 477.091 584.121 477.076 584.130 C 477.072 584.132 440.463 604.449 440.459 604.451 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 440.426 646.579 C 440.426 646.575 440.459 604.456 440.459 604.451 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 440.459 604.451 C 440.463 604.449 477.072 584.132 477.076 584.130 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#7339E8A5-3494-49F7-88A4-842C9FC4DC2E_10)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 477.076 584.130 C 477.057 597.924 477.018 625.508 477.018 625.512 C 477.015 625.514 452.623 639.557 440.426 646.579 C 440.426 646.575 440.459 604.456 440.459 604.451 C 440.463 604.449 477.072 584.132 477.076 584.130 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 664.945 517.773 C 664.945 517.769 664.944 488.773 664.944 474.272 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 664.944 474.272 C 664.947 474.270 694.504 455.207 694.507 455.205 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#7339E8A5-3494-49F7-88A4-842C9FC4DC2E_11)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 664.945 517.773 C 664.945 517.769 664.944 488.773 664.944 474.272 C 664.947 474.270 694.504 455.207 694.507 455.205 C 694.556 469.604 694.655 498.397 694.655 498.401 C 694.652 498.403 664.948 517.771 664.945 517.773 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 121.327 237.977 C 110.567 231.927 89.051 219.828 89.047 219.827 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 376.927 90.121 C 376.902 90.135 121.353 237.962 121.327 237.977 C 110.567 231.927 89.051 219.828 89.047 219.827 C 173.324 171.132 341.851 73.758 341.876 73.744 C 341.880 73.745 365.244 84.662 376.927 90.121 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 121.327 237.977 C 121.327 237.984 121.237 313.393 121.237 313.401 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 121.237 313.401 C 121.262 313.386 376.507 165.628 376.533 165.613 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 376.927 90.121 C 376.902 90.135 121.353 237.962 121.327 237.977 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#7339E8A5-3494-49F7-88A4-842C9FC4DC2E_13)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 121.327 237.977 C 121.327 237.984 121.237 313.393 121.237 313.401 C 121.262 313.386 376.507 165.628 376.533 165.613 C 376.664 140.449 376.927 90.128 376.927 90.121 C 376.902 90.135 121.353 237.962 121.327 237.977 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 246.952 492.631 C 247.511 457.458 248.629 387.123 248.630 387.112 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 248.630 387.112 C 248.623 387.109 185.120 350.364 185.114 350.361 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 185.114 350.361 C 185.114 350.368 183.107 426.080 183.107 426.088 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 246.952 492.631 C 247.511 457.458 248.629 387.123 248.630 387.112 C 248.623 387.109 185.120 350.364 185.114 350.361 C 185.114 350.368 183.107 426.080 183.107 426.088 C 183.107 426.091 182.463 446.270 182.142 456.361 C 203.745 468.451 246.945 492.627 246.952 492.631 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#7339E8A5-3494-49F7-88A4-842C9FC4DC2E_15)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 258.057 215.918 C 259.478 201.060 364.249 147.665 375.921 150.117 C 405.684 156.368 434.511 172.860 450.201 206.678 C 455.517 218.136 340.702 281.146 327.050 279.279 C 318.105 278.055 256.983 227.153 258.057 215.918 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 258.057 215.918 C 292.051 221.297 323.666 263.716 327.050 279.279 C 318.105 278.055 257.185 227.170 258.057 215.918 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#7339E8A5-3494-49F7-88A4-842C9FC4DC2E_17)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 127.354 293.306 C 124.995 277.676 237.876 220.555 250.505 220.705 C 281.368 221.072 319.258 259.935 319.498 284.066 C 319.616 295.838 220.486 353.074 205.412 352.889 C 187.172 352.666 130.551 314.484 127.354 293.306 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 127.354 293.306 C 161.610 295.063 201.452 333.609 205.151 352.782 C 180.358 350.888 132.832 313.898 127.354 293.306 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":220.668,\\\"y\\\":142.92,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":88.355,\\\"y\\\":354.102,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872906762893,\\\"y\\\":0.005041674909603199}},{\\\"point\\\":{\\\"x\\\":693.173,\\\"y\\\":354.102,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872906762896,\\\"y\\\":0.005041674909603181}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":247.593,\\\"y\\\":491.292,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5071357034537672,\\\"y\\\":0.8618662183207164}},{\\\"point\\\":{\\\"x\\\":576.808,\\\"y\\\":526.098,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5071104320054739,\\\"y\\\":0.8618810879414988}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":440.726,\\\"y\\\":642.928,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":39.372,\\\"y\\\":322.356,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":299.127,\\\"max\\\":584.327},\\\"y\\\":{\\\"min\\\":128.118,\\\"max\\\":413.318}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":345.34,\\\"y\\\":86.521,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}},{\\\"point\\\":{\\\"x\\\":112.817,\\\"y\\\":220.098,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"7339E8A5-3494-49F7-88A4-842C9FC4DC2E_0\\\",\\\"x1\\\":\\\"54.58%\\\",\\\"y1\\\":\\\"68.84%\\\",\\\"x2\\\":\\\"6.74%\\\",\\\"y2\\\":\\\"-22.16%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"7.06%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"7339E8A5-3494-49F7-88A4-842C9FC4DC2E_9\\\",\\\"x1\\\":\\\"55.19%\\\",\\\"y1\\\":\\\"63.41%\\\",\\\"x2\\\":\\\"-1.22%\\\",\\\"y2\\\":\\\"-31.64%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"7.06%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"7339E8A5-3494-49F7-88A4-842C9FC4DC2E_10\\\",\\\"x1\\\":\\\"50.00%\\\",\\\"y1\\\":\\\"50.00%\\\",\\\"x2\\\":\\\"5.43%\\\",\\\"y2\\\":\\\"-49.46%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"7.06%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"7339E8A5-3494-49F7-88A4-842C9FC4DC2E_11\\\",\\\"x1\\\":\\\"50.00%\\\",\\\"y1\\\":\\\"50.00%\\\",\\\"x2\\\":\\\"22.69%\\\",\\\"y2\\\":\\\"-48.61%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"7.06%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"7339E8A5-3494-49F7-88A4-842C9FC4DC2E_13\\\",\\\"x1\\\":\\\"52.88%\\\",\\\"y1\\\":\\\"56.59%\\\",\\\"x2\\\":\\\"26.77%\\\",\\\"y2\\\":\\\"5.80%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"7.06%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"7339E8A5-3494-49F7-88A4-842C9FC4DC2E_15\\\",\\\"x1\\\":\\\"51.06%\\\",\\\"y1\\\":\\\"47.52%\\\",\\\"x2\\\":\\\"91.55%\\\",\\\"y2\\\":\\\"133.56%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"7.06%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"7339E8A5-3494-49F7-88A4-842C9FC4DC2E_17\\\",\\\"x1\\\":\\\"54.02%\\\",\\\"y1\\\":\\\"43.34%\\\",\\\"x2\\\":\\\"95.35%\\\",\\\"y2\\\":\\\"125.82%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"7.06%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"bicycle\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":27.213,\\\"max\\\":692.787},\\\"y\\\":{\\\"min\\\":93.941,\\\"max\\\":558.531}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"bicycle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"bicycle_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 50.891 424.217 C 50.891 363.169 100.138 313.922 161.186 313.921 C 222.234 313.921 271.482 363.169 271.482 424.217 C 271.482 485.264 222.234 534.512 161.186 534.511 C 100.139 534.511 50.891 485.264 50.891 424.217 M 448.596 424.217 C 448.596 363.401 497.656 314.340 558.472 314.340 C 619.288 314.340 668.349 363.401 668.349 424.217 C 668.349 485.033 619.288 534.093 558.472 534.093 C 497.656 534.092 448.596 485.032 448.596 424.217 M 29.213 424.217 C 29.213 350.981 88.293 291.902 161.528 291.902 C 234.763 291.902 293.842 350.982 293.842 424.217 C 293.842 497.452 234.763 556.531 161.528 556.531 C 88.293 556.531 29.213 497.452 29.213 424.217 M 426.158 424.217 C 426.158 350.982 485.237 291.902 558.472 291.902 C 631.707 291.902 690.787 350.981 690.787 424.217 C 690.787 497.452 631.707 556.531 558.472 556.531 C 485.237 556.531 426.158 497.452 426.158 424.217 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 476.249 260.413 C 476.240 260.428 411.407 358.002 379.005 406.767 C 382.628 408.733 361.157 424.045 361.156 424.044 C 294.613 423.825 216.691 424.889 161.528 423.387 C 161.535 423.371 234.465 249.819 234.473 249.801 C 221.608 229.846 208.743 209.890 195.879 189.935 C 195.876 189.935 166.648 191.024 166.645 191.025 C 145.182 195.369 146.512 170.558 157.592 169.212 C 190.355 165.232 277.931 172.266 270.278 184.742 C 266.642 190.670 216.528 190.300 216.523 190.300 C 216.526 190.304 244.001 231.985 244.003 231.989 C 244.025 231.989 462.919 231.989 462.941 231.989 C 462.937 231.980 423.902 139.400 423.898 139.390 C 423.903 139.390 475.324 138.988 475.329 138.988 C 475.330 138.987 488.755 139.905 488.643 126.421 C 488.548 114.905 472.983 113.759 472.982 113.758 C 472.972 113.758 375.433 114.689 375.424 114.689 C 375.423 114.688 371.288 109.986 371.317 105.417 C 371.347 100.715 375.687 95.942 375.688 95.941 C 375.697 95.941 473.431 96.368 473.441 96.368 C 473.444 96.372 505.322 97.163 505.126 129.856 C 504.982 153.928 476.576 155.091 476.573 155.093 C 476.570 155.093 458.484 155.132 449.440 155.151 C 460.071 180.763 481.332 231.981 481.332 231.989 C 481.345 232.003 565.099 422.539 565.109 422.558 C 559.539 423.932 548.456 425.725 548.454 425.726 C 548.447 425.709 476.257 260.430 476.249 260.413 M 353.687 399.930 C 356.651 398.969 363.317 399.739 363.318 399.739 C 396.547 349.500 462.996 249.037 463.006 249.022 C 462.985 249.022 324.317 249.216 254.972 249.313 C 254.982 249.328 320.874 349.866 353.687 399.930 M 338.566 408.304 C 338.566 408.305 185.936 408.305 185.920 408.304 C 185.927 408.290 246.475 265.628 246.481 265.614 C 246.490 265.628 338.557 408.290 338.566 408.304 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 324.440 424.216 C 324.440 403.914 340.817 387.537 361.119 387.536 C 381.421 387.536 397.799 403.914 397.799 424.216 C 397.799 444.519 381.421 460.896 361.119 460.896 C 340.817 460.896 324.440 444.518 324.440 424.216 M 137.247 424.216 C 137.247 410.966 147.936 400.277 161.186 400.277 C 174.437 400.277 185.126 410.966 185.126 424.216 C 185.126 437.467 174.437 448.156 161.186 448.156 C 147.936 448.156 137.247 437.467 137.247 424.216 M 536.533 424.216 C 536.533 412.073 546.329 402.276 558.472 402.276 C 570.616 402.276 580.412 412.073 580.412 424.216 C 580.412 436.360 570.616 446.157 558.472 446.157 C 546.329 446.156 536.533 436.360 536.533 424.216 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":81.737,\\\"max\\\":328.849},\\\"y\\\":{\\\"min\\\":20.423,\\\"max\\\":177.958}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":588.06,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":189.727,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":29.231,\\\"y\\\":418.179,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999875314247056,\\\"y\\\":0.0049936955377043735}},{\\\"point\\\":{\\\"x\\\":690.998,\\\"y\\\":418.179,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999875314247056,\\\"y\\\":0.004993695537704388}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":618.005,\\\"y\\\":540.7,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7472698983953847,\\\"y\\\":0.6645206535181216}},{\\\"point\\\":{\\\"x\\\":103.108,\\\"y\\\":540.748,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7338671430809914,\\\"y\\\":0.6792930268346228}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":543.479,\\\"y\\\":159.662,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314487440282395,\\\"y\\\":-0.775417618877182}},{\\\"point\\\":{\\\"x\\\":153.134,\\\"y\\\":171.341,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817606012080393,\\\"y\\\":-0.7315753431058573}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":363.318,\\\"y\\\":458.68,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"bird\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":21.977563146717912,\\\"max\\\":699.2969936609318},\\\"y\\\":{\\\"min\\\":152.13617573340332,\\\"max\\\":569.349258887938}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"bird\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"bird\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#35A1622C-BC14-421B-9EAC-C28EAC897FE8_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 430.786 427.519 C 398.773 416.491 402.622 398.877 398.210 372.631 C 393.451 408.420 379.892 422.784 382.060 430.053 C 400.332 491.314 428.570 561.865 399.987 549.978 C 385.754 544.060 372.795 474.138 372.792 474.131 C 372.791 474.140 385.120 567.487 360.000 567.848 C 332.253 568.246 347.209 474.140 347.208 474.131 C 347.205 474.138 335.423 541.538 320.013 549.978 C 286.468 568.353 318.877 492.412 338.147 430.180 C 340.150 423.713 325.737 408.767 322.289 373.711 C 322.302 391.683 323.087 418.593 292.734 427.519 C 271.683 433.709 303.073 341.938 303.074 341.930 C 303.068 341.937 283.677 409.765 239.446 414.390 C 220.935 416.325 274.851 322.086 274.855 322.077 C 274.847 322.084 234.835 393.718 193.108 391.993 C 173.991 391.203 242.530 303.187 242.535 303.178 C 242.526 303.184 192.128 370.455 152.176 361.101 C 133.472 356.722 217.043 282.334 217.049 282.327 C 217.039 282.331 151.134 344.994 118.195 326.347 C 102.706 317.579 187.695 262.253 187.702 262.247 C 187.690 262.250 119.202 312.615 75.718 290.822 C 57.730 281.807 164.524 231.361 164.533 231.355 C 164.521 231.355 90.767 261.168 51.005 229.038 C 35.182 216.253 153.831 195.832 153.841 195.829 C 153.828 195.826 75.187 204.864 26.291 164.165 C 2.072 144.005 140.701 157.245 193.661 167.162 C 219.342 171.971 236.245 226.545 254.499 255.802 C 278.525 294.311 315.652 315.984 321.890 307.778 C 326.921 301.160 324.285 288.622 325.626 278.177 C 327.377 264.542 331.832 250.771 342.698 244.192 C 347.169 241.486 359.998 195.519 360.000 195.514 C 360.002 195.519 373.067 242.579 377.302 244.192 C 389.172 248.715 392.840 264.516 394.374 278.177 C 395.564 288.785 392.669 301.502 398.306 307.778 C 404.500 314.673 435.636 295.478 461.210 257.434 C 479.200 230.670 502.183 170.642 527.607 167.162 C 580.990 159.855 719.196 144.005 694.976 164.165 C 646.081 204.864 567.439 195.826 567.427 195.829 C 567.437 195.832 686.086 216.253 670.263 229.038 C 630.501 261.168 556.746 231.355 556.735 231.355 C 556.744 231.361 663.537 281.807 645.549 290.822 C 602.066 312.615 533.577 262.250 533.566 262.247 C 533.573 262.253 618.562 317.579 603.073 326.347 C 570.134 344.994 504.229 282.331 504.219 282.327 C 504.225 282.334 587.796 356.722 569.092 361.101 C 529.140 370.455 478.742 303.184 478.733 303.178 C 478.738 303.187 547.277 391.203 528.160 391.993 C 486.432 393.718 446.421 322.084 446.413 322.077 C 446.417 322.086 500.333 416.325 481.822 414.390 C 437.591 409.765 418.200 341.937 418.194 341.930 C 418.195 341.938 448.357 433.572 430.786 427.519 M 345.845 271.049 C 345.845 263.217 352.163 256.899 359.995 256.899 C 367.827 256.899 374.145 263.217 374.145 271.049 C 374.146 278.882 367.827 285.200 359.995 285.200 C 352.163 285.200 345.845 278.882 345.845 271.049 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":274.104,\\\"max\\\":445.896},\\\"y\\\":{\\\"min\\\":291.18,\\\"max\\\":452.671}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":625.921,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":195.825,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":247.01,\\\"y\\\":445.703,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873199813663,\\\"y\\\":0.005035859061211275}},{\\\"point\\\":{\\\"x\\\":473.131,\\\"y\\\":445.703,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873199813663,\\\"y\\\":0.005035859061211275}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":415.234,\\\"y\\\":558.871,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128698179547035,\\\"y\\\":0.7012963871639636}},{\\\"point\\\":{\\\"x\\\":303.418,\\\"y\\\":558.924,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986949354152362,\\\"y\\\":0.7154197280094385}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":597.593,\\\"y\\\":143.999,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.10180240040638461,\\\"y\\\":-0.9948046397516943}},{\\\"point\\\":{\\\"x\\\":123.126,\\\"y\\\":144.416,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.03526448233130761,\\\"y\\\":-0.9993780147101021}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":571.672,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"35A1622C-BC14-421B-9EAC-C28EAC897FE8_0\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"46.06%\\\",\\\"r\\\":\\\"100.05%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"10.59%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"bitey_half\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":107.953,\\\"max\\\":678.954},\\\"y\\\":{\\\"min\\\":56.39476310497844,\\\"max\\\":656.1838181235288}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"bitey_half\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"bitey_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 491.573 447.262 C 491.566 447.264 423.953 464.765 423.946 464.767 C 423.946 464.758 420.634 368.165 420.633 368.155 C 420.640 368.163 491.566 447.254 491.573 447.262 M 376.286 498.308 C 376.280 498.310 308.666 515.812 308.659 515.814 C 308.658 515.804 295.840 415.138 295.839 415.128 C 295.847 415.136 376.278 498.300 376.286 498.308 M 235.045 550.447 C 235.038 550.449 167.232 573.414 167.225 573.416 C 167.225 573.405 159.840 463.232 159.839 463.221 C 159.847 463.229 235.037 550.438 235.045 550.447 M 472.366 265.797 C 472.360 265.795 406.365 242.930 406.359 242.928 C 406.359 242.939 405.061 353.364 405.061 353.375 C 405.068 353.366 472.359 265.806 472.366 265.797 M 353.773 216.561 C 353.767 216.559 287.772 193.696 287.766 193.694 C 287.766 193.705 286.468 304.128 286.467 304.139 C 286.474 304.130 353.766 216.570 353.773 216.561 M 225.528 166.336 C 225.521 166.334 159.527 143.470 159.520 143.468 C 159.520 143.479 158.222 253.903 158.221 253.914 C 158.228 253.906 225.521 166.345 225.528 166.336 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 676.727 60.303 C 676.655 236.297 676.633 467.196 676.954 654.183 C 328.353 654.487 144.620 569.969 144.567 569.960 C 144.612 569.939 594.754 360.021 594.799 360.000 C 594.750 359.979 110.001 150.061 109.953 150.040 C 110.009 150.031 302.892 42.919 676.727 60.303 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 324.997 167.456 C 325.012 167.449 386.368 93.646 477.717 96.046 C 569.066 98.446 626.461 175.370 626.476 175.378 C 626.461 175.385 565.105 249.186 473.756 246.786 C 382.407 244.386 325.012 167.464 324.997 167.456 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 477.301 111.897 C 510.244 112.763 536.122 140.036 535.257 172.979 C 534.391 205.923 507.117 231.801 474.173 230.935 C 441.229 230.069 415.352 202.795 416.218 169.852 C 417.084 136.908 444.358 111.032 477.301 111.897 Z\\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":35.846,\\\"max\\\":284.941},\\\"y\\\":{\\\"min\\\":248.808,\\\"max\\\":471.192}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":677.038,\\\"y\\\":360,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":486.997,\\\"y\\\":58.596,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005032371897174836,\\\"y\\\":-0.9999873375363753}},{\\\"point\\\":{\\\"x\\\":486.997,\\\"y\\\":647.649,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.0050325697521896254,\\\"y\\\":0.9999873365406631}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":677.053,\\\"y\\\":360,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"bob\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":147.7893156988312,\\\"max\\\":572.3587333062902},\\\"y\\\":{\\\"min\\\":20.726902607406853,\\\"max\\\":650.7703650366988}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"bob\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"Bob\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 271.651 539.207 C 271.647 539.211 238.635 573.116 238.631 573.119 C 238.628 573.115 214.605 536.942 206.058 536.530 C 190.161 535.764 157.057 551.757 149.836 584.720 C 148.954 588.745 160.467 628.864 193.118 647.636 C 199.130 651.092 220.325 645.792 225.245 643.174 C 240.420 635.099 285.477 563.311 285.483 563.303 C 285.486 563.306 305.666 590.568 313.148 594.091 C 333.314 603.584 379.969 608.619 405.067 605.692 C 438.767 601.762 467.583 565.074 473.783 557.948 C 483.025 547.325 518.806 477.414 527.774 445.504 C 532.589 428.372 535.805 379.025 535.806 379.019 C 535.807 379.019 544.221 384.677 550.084 381.695 C 561.635 375.823 558.131 343.878 561.240 330.382 C 567.744 302.142 561.869 276.755 570.164 264.343 C 571.470 262.389 566.085 251.733 557.670 242.033 C 556.366 240.530 564.215 232.224 564.363 231.770 C 565.595 227.998 564.143 141.748 559.455 130.034 C 548.811 103.443 505.469 79.172 505.464 79.167 C 505.463 79.164 507.390 65.482 493.416 51.502 C 486.124 44.206 464.027 29.591 452.365 29.638 C 416.516 29.782 407.131 17.685 338.582 25.176 C 332.135 25.880 285.355 25.539 265.404 34.546 C 230.119 50.474 203.329 85.610 191.333 112.186 C 175.685 146.854 181.964 251.835 181.963 251.849 C 181.961 251.851 169.401 263.588 168.576 268.359 C 167.480 274.701 176.940 279.651 178.839 294.685 C 180.607 308.674 180.286 369.262 191.333 383.481 C 193.426 386.175 206.057 391.958 206.058 391.959 C 206.060 391.964 213.155 423.482 220.337 447.288 C 228.820 475.409 271.645 539.198 271.651 539.207 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 192.213 572.790 C 185.637 576.043 170.087 581.010 167.655 577.124 C 165.389 573.503 172.056 562.612 180.657 557.863 C 183.252 556.430 197.500 549.895 200.400 553.047 C 205.291 558.365 198.882 569.492 192.213 572.790 M 175.360 554.010 C 167.412 560.623 151.866 575.622 157.543 585.792 C 163.738 596.888 185.766 587.859 187.398 588.681 C 206.916 598.504 200.784 632.671 212.438 633.464 C 216.436 633.736 221.268 623.057 221.588 619.499 C 222.581 608.451 203.290 580.017 203.289 580.013 C 203.290 580.011 223.246 561.579 209.549 545.343 C 203.142 537.748 189.308 542.404 175.360 554.010 M 390.342 394.636 C 387.218 386.603 388.386 381.821 384.541 379.019 C 383.952 378.589 391.657 369.648 391.681 369.648 C 391.727 369.649 400.616 391.046 400.605 391.066 C 400.600 391.075 393.913 393.743 390.342 394.636 M 501.002 264.789 C 501.001 264.785 491.620 230.469 492.970 221.061 C 494.055 213.502 508.682 187.259 508.587 188.934 C 505.401 245.193 515.455 268.117 515.726 273.267 C 515.913 276.826 517.313 331.324 517.065 331.721 C 517.024 331.786 509.136 337.101 509.034 337.075 C 508.539 336.949 508.587 290.674 508.587 290.669 C 508.586 290.670 500.627 295.481 492.970 296.916 C 491.242 297.240 490.721 292.613 490.739 292.454 C 490.782 292.063 499.609 284.983 499.663 283.976 C 499.818 281.107 483.219 265.413 471.552 263.005 C 456.034 259.801 433.850 268.932 426.485 275.052 C 422.681 278.213 452.812 274.918 472.890 280.407 C 484.726 283.642 494.394 305.163 489.401 315.211 C 488.717 316.586 465.753 315.211 465.751 315.211 C 465.752 315.210 474.114 309.122 473.337 304.948 C 472.423 300.042 460.398 297.363 460.396 297.363 C 460.397 297.364 467.468 299.833 464.859 309.856 C 463.998 313.162 456.828 316.103 456.827 316.104 C 456.826 316.104 446.565 316.104 446.564 316.104 C 446.564 316.105 444.642 324.193 447.010 328.151 C 450.852 334.572 464.476 336.296 464.413 337.075 C 464.372 337.576 453.796 342.842 453.257 342.876 C 451.905 342.961 429.236 335.142 424.700 329.490 C 422.365 326.579 419.599 314.811 420.238 313.872 C 421.028 312.710 440.315 312.980 440.317 312.980 C 440.317 312.979 437.517 308.980 437.194 307.179 C 436.773 304.833 438.532 298.702 438.532 298.701 C 438.529 298.702 410.424 310.748 410.422 310.749 C 410.422 310.748 413.732 300.414 412.652 299.147 C 411.003 297.213 395.805 300.970 394.804 301.824 C 393.346 303.070 388.112 327.256 388.111 327.258 C 388.111 327.256 383.478 301.762 384.988 299.594 C 398.820 279.714 419.581 252.933 432.732 249.618 C 460.308 242.667 481.104 247.881 486.723 250.511 C 488.824 251.494 501.000 264.788 501.002 264.789 M 281.467 312.533 C 280.950 313.366 261.523 314.247 261.388 309.410 C 261.162 301.284 280.127 299.149 280.129 299.147 C 280.128 299.148 277.532 305.054 277.898 307.179 C 278.180 308.820 279.499 314.172 281.467 312.533 M 306.901 291.562 C 299.415 290.279 278.165 290.699 270.759 293.793 C 270.536 293.886 272.376 286.370 272.543 286.207 C 273.147 285.619 298.655 284.417 300.654 285.315 C 301.282 285.597 307.969 290.064 306.901 291.562 M 268.527 265.235 C 261.153 265.105 248.638 272.446 248.002 275.052 C 247.542 276.937 255.748 288.652 256.926 288.885 C 258.228 289.142 267.048 279.286 271.651 278.176 C 277.437 276.781 303.328 280.406 303.331 280.407 C 303.328 280.405 302.964 265.844 268.527 265.235 M 552.316 363.848 C 550.084 348.673 542.500 325.031 542.499 325.028 C 542.499 325.032 539.680 369.553 541.160 370.094 C 541.580 370.248 549.637 374.557 552.316 363.848 M 245.324 298.255 C 239.968 296.469 229.765 293.316 229.707 293.346 C 229.435 293.490 228.575 343.798 236.846 370.094 C 242.804 389.035 259.918 417.758 263.619 418.731 C 268.240 419.946 300.713 400.930 320.734 379.465 C 321.508 378.635 328.307 382.990 329.658 382.142 C 329.711 382.108 321.053 387.859 320.287 390.620 C 319.167 394.660 320.668 404.737 326.534 408.022 C 331.422 410.759 339.179 404.964 341.706 405.345 C 351.455 406.816 357.842 420.383 373.386 419.623 C 382.880 419.159 388.325 408.850 393.912 407.576 C 404.931 405.063 413.708 397.176 416.668 381.695 C 417.262 378.589 431.615 382.861 434.516 383.927 C 448.113 388.919 459.892 411.779 465.751 410.700 C 470.859 409.758 480.029 390.622 480.030 390.620 C 480.032 390.621 489.487 406.198 496.093 405.345 C 500.343 404.796 512.241 381.465 513.942 381.695 C 517.221 382.140 513.008 441.176 514.388 438.811 C 526.990 417.211 532.359 291.856 532.236 290.669 C 532.187 290.199 515.818 239.648 515.280 234.001 C 514.587 226.714 526.356 172.011 523.758 158.146 C 521.979 148.648 502.704 127.325 500.556 111.293 C 499.512 103.506 424.585 155.505 371.601 160.376 C 338.474 163.423 310.001 145.104 286.376 146.990 C 273.115 148.049 239.841 158.408 239.970 160.823 C 241.653 192.357 237.574 261.158 239.524 261.666 C 240.055 261.804 258.459 246.587 261.834 245.602 C 268.221 243.738 300.581 244.095 313.594 250.957 C 328.253 258.686 345.926 281.945 351.076 296.024 C 355.546 308.243 352.411 343.259 351.968 346.892 C 351.530 350.485 341.358 395.134 339.028 395.528 C 335.431 396.137 344.081 321.128 336.351 317.888 C 331.781 315.972 305.724 341.395 297.531 342.430 C 290.706 343.291 260.797 332.719 260.942 331.274 C 261.095 329.740 292.805 334.672 301.546 330.382 C 306.922 327.744 319.108 318.775 318.056 311.641 C 317.034 304.711 297.533 298.702 297.531 298.701 C 297.531 298.702 302.945 302.983 302.885 310.302 C 302.872 311.884 298.497 315.448 297.084 316.104 C 289.089 319.814 255.436 318.392 250.679 314.318 C 248.944 312.833 250.746 300.063 245.324 298.255 M 312.702 398.651 C 310.295 398.650 281.686 422.803 281.467 424.532 C 281.360 425.383 289.064 441.537 291.284 441.934 C 295.512 442.690 307.047 417.059 315.379 412.484 C 315.860 412.220 315.379 398.653 312.702 398.651 M 184.194 263.451 C 179.022 264.076 177.972 268.233 177.501 271.482 C 176.930 275.414 193.351 297.115 196.687 296.916 C 198.011 296.837 205.987 291.078 205.166 287.546 C 204.145 283.156 191.378 265.796 184.194 263.451 M 231.938 428.102 C 228.812 428.988 210.395 369.611 210.074 366.971 C 209.794 364.675 215.389 310.186 215.428 310.749 C 219.106 362.769 227.920 407.118 231.938 428.102 M 379.187 450.858 C 375.169 450.411 363.571 439.704 363.570 439.703 C 363.572 439.702 383.201 428.103 383.203 428.102 C 383.203 428.101 389.231 420.375 389.896 420.070 C 409.253 411.179 429.158 395.085 429.162 395.082 C 429.164 395.086 455.040 433.898 455.042 433.902 C 455.036 433.903 399.849 440.605 394.804 442.380 C 393.330 442.899 384.989 447.287 379.187 450.858 M 406.852 532.068 C 387.965 535.426 355.838 530.551 350.630 535.192 C 346.089 539.237 324.366 583.482 341.259 583.382 C 365.694 583.237 389.861 596.760 402.836 593.198 C 416.805 589.364 450.190 555.329 454.150 549.916 C 460.914 540.669 503.898 448.126 495.201 442.826 C 494.559 442.435 483.780 455.228 481.368 454.874 C 478.763 454.491 473.871 438.528 471.106 437.918 C 464.058 436.363 441.299 471.864 436.748 474.953 C 434.694 476.348 417.350 486.357 415.776 483.877 C 414.976 482.618 421.748 474.674 421.130 473.615 C 420.144 471.923 404.106 477.971 402.836 476.292 C 400.370 473.030 434.455 463.908 433.178 457.105 C 432.610 454.080 420.315 450.204 418.899 449.966 C 415.152 449.334 382.249 457.695 377.402 457.997 C 370.629 458.420 324.638 447.404 318.502 453.535 C 317.466 454.571 315.197 462.727 316.718 463.352 C 324.434 466.522 344.072 473.092 348.398 473.615 C 349.907 473.797 357.989 472.819 360.000 473.169 C 361.493 473.428 366.414 476.236 368.032 476.292 C 370.150 476.364 377.200 472.843 378.741 472.722 C 380.783 472.562 390.280 475.700 393.466 475.399 C 394.667 475.286 396.839 471.554 398.820 473.615 C 401.272 476.165 396.624 479.253 395.697 479.861 C 393.143 481.538 379.696 478.005 376.510 478.523 C 374.848 478.793 369.436 481.810 367.139 482.093 C 363.526 482.538 355.057 477.950 351.522 479.861 C 348.928 481.264 346.078 489.861 346.167 490.124 C 346.639 491.512 399.630 488.185 407.298 489.232 C 409.485 489.530 396.119 501.593 391.234 501.279 C 367.686 499.769 348.625 495.210 345.275 501.279 C 341.452 508.205 351.761 512.411 353.753 513.773 C 358.956 517.330 388.768 510.188 414.883 518.682 C 419.132 520.063 409.059 530.252 406.852 532.068 M 316.272 553.932 C 316.270 553.931 301.994 544.116 301.993 544.115 C 301.995 544.112 325.640 512.438 325.642 512.435 C 325.643 512.436 337.688 526.712 337.689 526.714 C 337.687 526.716 316.274 553.929 316.272 553.932 M 312.702 503.064 C 312.699 503.066 289.947 523.588 289.945 523.590 C 289.943 523.581 254.250 442.738 267.635 438.364 C 271.339 437.154 285.511 446.782 287.714 452.197 C 296.358 473.451 312.699 503.059 312.702 503.064 M 284.591 529.391 C 255.138 482.085 247.549 441.624 248.002 452.197 C 250.022 499.330 277.448 536.075 277.451 536.084 C 277.452 536.083 280.574 533.853 284.591 529.391 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 204.727 376.941 C 200.787 352.571 195.425 334.564 195.424 334.560 C 195.424 334.564 192.600 362.456 195.940 376.941 C 197.993 385.843 205.148 379.544 204.727 376.941 M 540.678 128.338 C 540.676 128.337 530.341 120.586 530.340 120.585 C 530.339 120.586 518.454 130.405 518.453 130.406 C 518.454 130.407 530.791 134.202 532.408 138.158 C 533.933 141.888 528.273 152.629 528.273 152.630 C 528.274 152.631 537.575 157.798 537.576 157.799 C 537.576 157.801 532.409 179.504 532.408 179.506 C 532.409 179.507 539.643 191.392 539.644 191.393 C 539.643 191.395 531.892 205.864 531.891 205.865 C 531.892 205.867 540.430 221.353 541.194 229.123 C 541.899 236.293 537.060 251.862 537.060 251.864 C 537.061 251.866 550.496 265.301 550.497 265.302 C 550.496 265.305 535.881 286.230 539.127 289.077 C 542.955 292.436 562.091 269.360 561.868 267.887 C 561.784 267.328 552.566 260.652 552.565 260.651 C 552.565 260.650 553.082 249.281 553.082 249.280 C 553.081 249.279 544.813 238.944 544.812 238.943 C 544.813 238.940 550.413 204.159 549.981 202.764 C 549.850 202.342 543.263 193.979 543.262 193.978 C 543.263 193.976 551.983 180.850 552.048 176.922 C 552.120 172.567 542.746 157.800 542.745 157.799 C 542.746 157.798 550.015 152.605 549.981 151.596 C 549.930 150.076 537.577 144.361 537.576 144.360 C 537.576 144.359 540.677 128.340 540.678 128.338 M 338.615 71.077 C 347.935 67.122 335.319 46.570 336.930 47.286 C 359.616 57.362 363.091 72.366 363.108 66.319 C 363.139 54.940 359.268 45.900 359.652 46.171 C 380.042 60.547 385.270 81.965 387.111 78.090 C 394.252 63.055 377.262 44.793 378.841 45.604 C 407.215 60.176 408.179 82.419 410.071 80.571 C 421.685 69.238 393.430 46.428 393.759 46.510 C 411.587 50.958 419.682 71.585 422.949 68.132 C 426.011 64.894 402.677 40.061 403.357 40.280 C 427.600 48.105 426.403 59.010 429.358 56.705 C 430.952 55.461 428.042 40.173 428.042 40.171 C 428.045 40.175 452.667 52.045 458.816 73.085 C 461.421 82.003 456.345 116.272 455.679 101.550 C 454.379 72.791 439.323 64.393 441.550 69.570 C 453.146 96.530 441.885 121.658 441.872 120.738 C 441.605 101.724 431.820 67.171 424.058 80.504 C 422.863 82.556 425.827 90.309 420.597 107.914 C 420.489 108.278 418.091 95.006 412.019 91.930 C 408.144 89.968 410.252 100.710 404.306 117.292 C 404.176 117.657 397.018 83.364 388.943 81.700 C 387.357 81.373 381.807 102.404 381.807 102.406 C 381.804 102.403 363.812 67.674 355.580 72.549 C 347.887 77.106 362.280 85.306 366.099 108.164 C 367.151 114.463 348.953 81.301 326.553 78.885 C 323.191 78.522 330.216 103.693 330.216 103.696 C 330.214 103.694 307.570 80.924 304.174 83.122 C 302.952 83.914 303.038 95.014 303.038 95.016 C 303.036 95.014 287.912 78.092 284.172 80.113 C 282.381 81.081 282.427 91.491 282.427 91.492 C 282.425 91.491 260.568 81.773 260.566 81.772 C 260.567 81.771 269.657 68.549 271.381 68.284 C 272.830 68.061 283.094 76.332 283.703 75.992 C 284.533 75.529 280.995 56.354 280.994 56.352 C 280.996 56.354 294.032 62.923 298.102 70.729 C 308.533 90.740 301.911 59.841 302.211 59.873 C 318.833 61.667 323.678 77.294 324.092 72.694 C 325.712 54.693 310.534 49.328 311.835 49.492 C 334.715 52.371 326.198 58.641 338.615 71.077 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 456.708 298.419 C 458.270 298.419 459.531 299.679 459.531 301.241 C 459.531 302.803 458.270 304.063 456.708 304.063 C 455.146 304.063 453.886 302.803 453.886 301.241 C 453.886 299.679 455.146 298.419 456.708 298.419 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 293.006 298.419 C 294.568 298.419 295.828 299.679 295.828 301.241 C 295.828 302.803 294.568 304.063 293.006 304.063 C 291.444 304.063 290.184 302.803 290.184 301.241 C 290.184 299.679 291.444 298.419 293.006 298.419 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":135.766,\\\"max\\\":219.517},\\\"y\\\":{\\\"min\\\":486.121,\\\"max\\\":569.872}},{\\\"x\\\":{\\\"min\\\":80.371,\\\"max\\\":164.122},\\\"y\\\":{\\\"min\\\":423.544,\\\"max\\\":507.296}},{\\\"x\\\":{\\\"min\\\":109.095,\\\"max\\\":192.846},\\\"y\\\":{\\\"min\\\":356.865,\\\"max\\\":440.616}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":386.672,\\\"y\\\":684.905,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":367.181,\\\"y\\\":22.451,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":180.029,\\\"y\\\":337.34,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872880189178,\\\"y\\\":0.005042201956497622}},{\\\"point\\\":{\\\"x\\\":562.54,\\\"y\\\":337.34,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872861335325,\\\"y\\\":0.005042575858889182}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":447.043,\\\"y\\\":586.369,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128848469533575,\\\"y\\\":0.701281109815663}},{\\\"point\\\":{\\\"x\\\":303.418,\\\"y\\\":586.448,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987045947950982,\\\"y\\\":0.7154102943152396}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":541.254,\\\"y\\\":105.906,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314269801987523,\\\"y\\\":-0.7754353413902958}},{\\\"point\\\":{\\\"x\\\":196.976,\\\"y\\\":105.985,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817526600083252,\\\"y\\\":-0.7315827434894654}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":386.672,\\\"y\\\":608.989,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"bone\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":10.228,\\\"max\\\":709.772},\\\"y\\\":{\\\"min\\\":277.113,\\\"max\\\":442.887}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"bone\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"bone\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#0E75CA65-5E98-40E3-9519-2E5F252842DC_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 707.772 327.640 C 707.772 339.995 703.188 351.252 695.473 360.028 C 703.188 368.749 707.772 380.006 707.772 392.361 C 707.772 419.220 686.105 440.887 659.246 440.887 C 638.027 440.887 620.049 427.364 613.484 408.586 C 453.466 408.509 236.278 408.497 106.541 408.514 C 99.951 427.364 81.973 440.887 60.755 440.887 C 33.896 440.887 12.228 419.220 12.228 392.361 C 12.228 380.005 21.452 365.022 24.527 360.028 C 24.527 360.028 12.228 339.995 12.228 327.640 C 12.228 300.781 33.895 279.113 60.755 279.113 C 81.973 279.113 101.185 298.008 106.516 311.414 C 106.293 311.352 506.282 311.445 613.459 311.486 C 620.049 292.636 638.027 279.113 659.246 279.113 C 686.105 279.113 707.772 300.781 707.772 327.640 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 106.516 311.414 C 107.798 314.910 109.383 319.653 109.689 324.640 M 613.484 408.586 C 611.675 403.413 610.719 398.001 610.719 392.361 M 707.772 327.640 C 707.772 339.995 703.188 351.252 695.473 360.028 C 703.188 368.749 707.772 380.006 707.772 392.361 C 707.772 419.220 686.105 440.887 659.246 440.887 C 638.027 440.887 620.049 427.364 613.484 408.586 C 453.466 408.509 236.278 408.497 106.541 408.514 C 108.325 403.413 109.281 398.001 109.281 392.361 M 659.246 279.113 C 686.105 279.113 707.772 300.781 707.772 327.640 M 613.459 311.486 C 620.049 292.636 638.027 279.113 659.246 279.113 M 610.719 327.640 C 610.719 321.999 611.675 316.588 613.459 311.486 C 506.282 311.445 106.293 311.352 106.516 311.414 C 101.185 298.008 81.973 279.113 60.755 279.113 C 33.895 279.113 12.228 300.781 12.228 327.640 C 12.228 339.995 24.527 360.028 24.527 360.028 C 21.452 365.022 12.228 380.005 12.228 392.361 C 12.228 419.220 33.896 440.887 60.755 440.887 C 81.973 440.887 99.951 427.364 106.541 408.514 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":463.363,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360.028,\\\"y\\\":310.444,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":22.878,\\\"y\\\":360.022,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871108245132,\\\"y\\\":0.005077222158086315}},{\\\"point\\\":{\\\"x\\\":697.122,\\\"y\\\":360.022,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871108245132,\\\"y\\\":0.005077222158086283}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":207.62,\\\"y\\\":408.811,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.41188905377791835,\\\"y\\\":0.9112340025360833}},{\\\"point\\\":{\\\"x\\\":513.085,\\\"y\\\":408.995,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.4300255588472731,\\\"y\\\":0.9028167138118848}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":207.701,\\\"y\\\":311.272,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.3903614561876011,\\\"y\\\":-0.9206616824453463}},{\\\"point\\\":{\\\"x\\\":512.858,\\\"y\\\":311.376,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.32811797393886555,\\\"y\\\":-0.9446367530316898}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":407.318,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"0E75CA65-5E98-40E3-9519-2E5F252842DC_0\\\",\\\"x1\\\":\\\"50.00%\\\",\\\"y1\\\":\\\"50.00%\\\",\\\"x2\\\":\\\"50.00%\\\",\\\"y2\\\":\\\"-49.73%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"17.65%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"bone_vertical\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":279.785,\\\"max\\\":440.215},\\\"y\\\":{\\\"min\\\":8.422,\\\"max\\\":684.992}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"bone_vertical\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"bone\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 328.709 10.422 C 340.656 10.422 351.541 14.855 360.027 22.315 C 368.460 14.855 379.345 10.422 391.292 10.422 C 417.264 10.422 438.215 31.374 438.215 57.345 C 438.215 77.863 425.139 95.248 406.982 101.596 C 406.907 256.328 406.895 466.342 406.912 591.794 C 425.139 598.166 438.215 615.551 438.215 636.068 C 438.215 662.040 417.264 682.992 391.292 682.992 C 379.345 682.992 364.856 674.072 360.027 671.099 C 360.027 671.099 340.656 682.992 328.709 682.992 C 302.737 682.992 281.785 662.040 281.785 636.068 C 281.785 615.550 300.055 596.974 313.019 591.818 C 312.959 592.034 313.048 205.256 313.088 101.620 C 294.861 95.248 281.785 77.863 281.785 57.345 C 281.785 31.373 302.737 10.422 328.709 10.422 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 313.019 591.818 C 316.399 590.579 320.985 589.046 325.808 588.750 M 406.982 101.596 C 401.979 103.345 396.746 104.269 391.292 104.269 M 328.709 10.422 C 340.656 10.422 351.541 14.855 360.027 22.315 C 368.460 14.855 379.345 10.422 391.292 10.422 C 417.264 10.422 438.215 31.374 438.215 57.345 C 438.215 77.863 425.139 95.248 406.982 101.596 C 406.907 256.328 406.895 466.342 406.912 591.794 C 401.979 590.069 396.746 589.145 391.292 589.145 M 281.785 57.345 C 281.785 31.373 302.737 10.422 328.709 10.422 M 313.088 101.620 C 294.861 95.248 281.785 77.863 281.785 57.345 M 328.709 104.269 C 323.255 104.269 318.022 103.345 313.088 101.620 C 313.048 205.256 312.959 592.034 313.019 591.818 C 300.055 596.974 281.785 615.550 281.785 636.068 C 281.785 662.040 302.737 682.992 328.709 682.992 C 340.656 682.992 360.027 671.099 360.027 671.099 C 364.856 674.072 379.345 682.992 391.292 682.992 C 417.264 682.992 438.215 662.040 438.215 636.068 C 438.215 615.551 425.139 598.166 406.912 591.794 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":703.811,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":10.703,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":312.186,\\\"y\\\":347.301,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999874096318919,\\\"y\\\":0.005018025278816422}},{\\\"point\\\":{\\\"x\\\":407.814,\\\"y\\\":347.301,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999874096318919,\\\"y\\\":0.005018025278816422}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":296.421,\\\"y\\\":671.926,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.688666645561968,\\\"y\\\":0.7250781001315838}},{\\\"point\\\":{\\\"x\\\":423.579,\\\"y\\\":671.926,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6887279935967978,\\\"y\\\":0.725019827891713}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":292.463,\\\"y\\\":24.854,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6826591107310991,\\\"y\\\":-0.7307369831449788}},{\\\"point\\\":{\\\"x\\\":427.537,\\\"y\\\":24.854,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6826591107310991,\\\"y\\\":-0.7307369831449788}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.973,\\\"y\\\":670.187,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"book_open\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":17.606,\\\"max\\\":702.394},\\\"y\\\":{\\\"min\\\":124.70077104436253,\\\"max\\\":551.511}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"book_open\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"book\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 643.669 176.090 C 643.675 176.127 700.388 546.638 700.394 546.675 C 700.362 546.675 379.946 549.511 379.914 549.511 C 379.912 549.510 370.858 540.264 360.885 540.058 C 350.161 539.836 340.088 549.510 340.086 549.511 C 340.054 549.511 19.638 546.675 19.606 546.675 C 19.611 546.638 76.325 176.127 76.331 176.090 C 76.387 176.090 453.244 177.691 643.669 176.090 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 534.420 151.937 C 573.272 156.401 607.467 151.026 607.474 151.026 C 615.414 158.088 631.290 172.210 631.293 172.213 C 631.293 172.214 681.570 534.740 681.575 534.775 C 681.563 534.775 613.660 540.116 568.238 539.432 C 523.730 538.762 501.880 531.588 457.366 531.551 C 428.702 531.528 385.943 536.093 385.936 536.093 C 385.935 536.092 379.835 524.827 374.293 521.135 C 370.207 518.414 360.886 517.202 360.885 517.202 C 360.883 517.202 350.329 518.140 345.707 521.135 C 340.119 524.757 334.065 536.092 334.064 536.093 C 334.057 536.093 291.298 531.528 262.634 531.551 C 218.120 531.588 196.270 538.762 151.762 539.432 C 106.340 540.116 38.437 534.775 38.425 534.775 C 38.430 534.740 86.829 185.760 86.833 185.725 C 86.834 185.724 88.707 172.214 88.707 172.213 C 88.710 172.210 104.586 158.088 112.526 151.026 C 112.526 151.026 146.728 156.401 185.580 151.937 C 239.241 145.771 235.271 124.113 283.356 127.001 C 322.792 129.371 360.877 155.945 360.885 155.948 C 360.892 155.945 398.007 129.499 436.644 127.001 C 484.716 123.895 480.759 145.771 534.420 151.937 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 651.329 504.339 C 651.325 504.304 607.479 151.061 607.474 151.026 C 607.467 151.026 573.272 156.401 534.420 151.937 C 480.759 145.771 484.716 123.895 436.644 127.001 C 398.007 129.499 360.892 155.945 360.885 155.948 C 360.885 155.984 360.885 517.166 360.885 517.202 C 360.894 517.199 406.754 492.507 452.141 490.047 C 506.975 487.075 525.998 510.288 565.096 511.787 C 611.394 513.562 651.321 504.340 651.329 504.339 M 68.671 504.339 C 68.675 504.304 112.521 151.061 112.526 151.026 C 112.533 151.026 146.728 156.401 185.580 151.937 C 239.241 145.771 235.271 124.113 283.356 127.001 C 322.792 129.371 360.877 155.945 360.885 155.948 C 360.885 155.984 360.885 517.166 360.885 517.202 C 360.875 517.199 314.062 492.409 267.859 490.047 C 213.016 487.244 194.002 510.288 154.904 511.787 C 108.606 513.562 68.679 504.340 68.671 504.339 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 68.671 504.339 C 58.589 514.484 48.507 524.629 38.425 534.775 M 651.329 504.339 C 661.411 514.484 671.493 524.629 681.575 534.775 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":121.499,\\\"max\\\":598.246},\\\"y\\\":{\\\"min\\\":172.021,\\\"max\\\":471.71}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":568.18,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":106.397,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":51.203,\\\"y\\\":342.156,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.999987318128134,\\\"y\\\":0.005036227050266385}},{\\\"point\\\":{\\\"x\\\":669.843,\\\"y\\\":342.156,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873181281341,\\\"y\\\":0.005036227050266362}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":593.334,\\\"y\\\":546.348,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129329685826609,\\\"y\\\":0.7012321885851466}},{\\\"point\\\":{\\\"x\\\":127.799,\\\"y\\\":546.396,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987254201015096,\\\"y\\\":0.7153899547127908}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":489.047,\\\"y\\\":138.07,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314899567256504,\\\"y\\\":-0.7753840561648375}},{\\\"point\\\":{\\\"x\\\":232.731,\\\"y\\\":138.149,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817057769918454,\\\"y\\\":-0.7316264303699971}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.957,\\\"y\\\":535.551,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"bottle\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":268.468,\\\"max\\\":451.532},\\\"y\\\":{\\\"min\\\":32.073,\\\"max\\\":627.004}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"bottle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"bottle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 336.103 34.073 C 336.108 34.073 383.892 34.073 383.897 34.073 C 383.897 34.077 380.786 79.561 380.786 79.565 C 380.782 79.565 339.218 79.565 339.214 79.565 C 339.214 79.561 336.103 34.077 336.103 34.073 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 379.066 60.598 C 379.067 60.599 391.189 59.004 393.541 71.676 C 396.403 87.094 383.381 91.385 383.380 91.387 C 383.380 91.399 384.555 186.566 384.963 209.372 C 385.361 231.609 449.532 270.218 449.532 328.957 C 449.532 436.396 449.532 485.095 449.532 597.554 C 449.532 616.070 384.588 625.004 360.000 625.004 C 335.412 625.004 270.468 616.070 270.468 597.554 C 270.468 485.095 270.468 436.396 270.468 328.957 C 270.468 270.218 334.942 231.847 335.037 209.372 C 335.129 187.481 336.620 91.399 336.620 91.387 C 336.619 91.385 323.597 87.094 326.459 71.676 C 328.811 59.004 340.934 60.598 340.934 60.598 C 337.169 60.408 359.998 60.598 360.000 60.598 C 360.000 60.598 379.064 60.598 379.066 60.598 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 288.374 346.864 C 288.382 346.864 332.889 351.755 360.000 351.755 C 387.111 351.755 431.618 346.864 431.626 346.864 C 431.626 346.885 431.626 561.719 431.626 561.740 C 431.618 561.741 404.646 570.103 360.000 570.103 C 315.354 570.103 288.382 561.741 288.374 561.740 C 288.374 561.719 288.374 346.885 288.374 346.864 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":296.855,\\\"max\\\":423.145},\\\"y\\\":{\\\"min\\\":359.3,\\\"max\\\":555.5}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":702.17,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":35.038,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":270.072,\\\"y\\\":454.052,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872379918523,\\\"y\\\":0.005052113758280732}},{\\\"point\\\":{\\\"x\\\":449.928,\\\"y\\\":454.052,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872379918523,\\\"y\\\":0.005052113758280732}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":444.025,\\\"y\\\":605.064,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129029137746393,\\\"y\\\":0.7012627435787739}},{\\\"point\\\":{\\\"x\\\":275.667,\\\"y\\\":605.141,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987302151607616,\\\"y\\\":0.7153852713198643}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":386.798,\\\"y\\\":218.127,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314679360681299,\\\"y\\\":-0.7754019897561886}},{\\\"point\\\":{\\\"x\\\":333.732,\\\"y\\\":218.189,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6816955694711679,\\\"y\\\":-0.7316359412736502}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":621.343,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"box\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":78,\\\"max\\\":642},\\\"y\\\":{\\\"min\\\":336.569,\\\"max\\\":600.551}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"box\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"box\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 160.000 398.551 C 160.006 398.545 220.031 338.575 220.037 338.569 C 220.037 338.575 220.037 378.532 220.037 398.514 C 220.031 398.514 160.006 398.551 160.000 398.551 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 500.000 338.569 C 500.000 338.575 500.000 378.531 500.000 398.512 C 500.006 398.512 559.994 398.551 560.000 398.551 C 559.994 398.545 500.006 338.575 500.000 338.569 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 500.000 338.569 C 500.000 338.575 500.000 378.531 500.000 398.512 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 220.037 398.514 C 220.037 378.532 220.037 338.575 220.037 338.569 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 500.000 338.569 C 500.000 338.575 500.000 378.531 500.000 398.512 C 499.972 398.512 220.065 398.514 220.037 398.514 C 220.037 378.532 220.037 338.575 220.037 338.569 C 220.065 338.569 499.972 338.569 500.000 338.569 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 160.000 398.551 C 160.006 398.551 220.031 398.514 220.037 398.514 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 220.037 398.514 C 220.065 398.514 499.972 398.512 500.000 398.512 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 500.000 398.512 C 500.006 398.512 559.994 398.551 560.000 398.551 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 160.000 398.551 C 160.006 398.551 220.031 398.514 220.037 398.514 C 220.065 398.514 499.972 398.512 500.000 398.512 C 500.006 398.512 559.994 398.551 560.000 398.551 C 560.000 398.571 560.000 598.531 560.000 598.551 C 559.960 598.551 160.040 598.551 160.000 598.551 C 160.000 598.531 160.000 398.571 160.000 398.551 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 560.000 398.551 C 559.994 398.551 500.006 398.512 500.000 398.512 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 500.000 398.512 C 499.972 398.512 220.065 398.514 220.037 398.514 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 220.037 398.514 C 220.031 398.514 160.006 398.551 160.000 398.551 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 601.501 460.116 C 601.496 460.110 573.834 419.072 560.000 398.551 C 559.994 398.551 500.006 398.512 500.000 398.512 C 499.972 398.512 220.065 398.514 220.037 398.514 C 220.031 398.514 160.006 398.551 160.000 398.551 C 146.166 419.072 118.503 460.110 118.499 460.116 C 118.547 460.116 601.452 460.116 601.501 460.116 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 160.000 398.551 C 160.006 398.545 220.031 338.575 220.037 338.569 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 80.000 418.551 C 80.008 418.549 159.992 398.553 160.000 398.551 C 160.006 398.545 220.031 338.575 220.037 338.569 C 220.031 338.571 160.006 358.549 160.000 358.551 C 159.992 358.557 80.008 418.545 80.000 418.551 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 560.000 398.551 C 559.994 398.545 500.006 338.575 500.000 338.569 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 560.000 398.551 C 559.994 398.545 500.006 338.575 500.000 338.569 C 500.006 338.571 559.994 358.549 560.000 358.551 C 560.008 358.557 639.992 418.545 640.000 418.551 C 639.992 418.549 560.008 398.553 560.000 398.551 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":180,\\\"max\\\":540},\\\"y\\\":{\\\"min\\\":38.551,\\\"max\\\":398.551}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":687.048,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":156.497,\\\"y\\\":500.212,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872299502236,\\\"y\\\":0.005053705222761464}},{\\\"point\\\":{\\\"x\\\":563.503,\\\"y\\\":500.212,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872299502236,\\\"y\\\":0.00505370522276149}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":557.646,\\\"y\\\":597.586,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129241487442751,\\\"y\\\":0.7012411554788057}},{\\\"point\\\":{\\\"x\\\":162.191,\\\"y\\\":597.627,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986865973196579,\\\"y\\\":0.7154278710854634}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":592.546,\\\"y\\\":380.416,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314269801987528,\\\"y\\\":-0.7754353413902952}},{\\\"point\\\":{\\\"x\\\":128.244,\\\"y\\\":380.495,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817129699095086,\\\"y\\\":-0.7316197281765695}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"branch\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":39.754,\\\"max\\\":679.831},\\\"y\\\":{\\\"min\\\":28.466,\\\"max\\\":696.7303443967297}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"branch\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"branch\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 187.080 144.552 C 187.075 144.544 181.262 90.846 138.707 65.872 C 94.006 39.638 41.764 62.322 41.754 62.322 C 41.760 62.329 52.085 110.969 93.097 135.060 C 136.610 160.619 187.071 144.551 187.080 144.552 M 266.621 189.854 C 266.624 189.845 307.709 150.891 300.095 100.475 C 293.083 54.054 246.983 30.473 246.978 30.466 C 246.975 30.476 212.652 75.897 223.566 128.766 C 231.638 167.868 266.617 189.848 266.621 189.854 M 353.985 260.465 C 353.991 260.456 408.976 228.769 414.595 171.562 C 419.739 119.188 376.870 80.575 376.867 80.566 C 376.861 80.575 329.352 119.182 325.423 177.835 C 322.301 224.437 353.982 260.456 353.985 260.465 M 431.030 356.886 C 431.038 356.878 492.045 331.223 510.521 271.839 C 527.409 217.560 495.698 166.482 495.696 166.471 C 495.689 166.480 438.996 192.557 420.308 249.467 C 402.316 304.261 431.029 356.876 431.030 356.886 M 492.937 475.057 C 492.946 475.051 557.133 462.115 586.030 408.096 C 613.008 357.662 590.508 301.139 590.508 301.129 C 590.499 301.135 532.363 314.388 503.817 363.951 C 474.051 415.633 492.938 475.046 492.937 475.057 M 526.061 594.397 C 526.072 594.393 590.316 599.784 635.516 557.867 C 677.721 518.727 677.827 458.791 677.831 458.781 C 677.821 458.784 617.715 449.754 573.858 487.034 C 526.021 527.697 526.066 594.386 526.061 594.397 M 281.716 224.163 C 281.705 224.159 236.064 180.427 176.201 185.340 C 124.946 189.547 91.834 231.676 91.826 231.681 C 91.835 231.684 129.077 269.298 180.504 269.134 C 239.672 268.945 281.706 224.167 281.716 224.163 M 366.991 314.138 C 366.980 314.134 320.884 269.998 259.896 273.926 C 205.066 277.458 168.605 321.264 168.596 321.269 C 168.605 321.273 207.412 363.717 262.355 363.533 C 324.170 363.326 366.980 314.143 366.991 314.138 M 446.947 454.994 C 446.937 454.987 411.672 397.863 349.278 388.699 C 289.607 379.935 241.452 422.100 241.441 422.103 C 241.450 422.109 275.057 475.913 334.521 485.984 C 395.948 496.387 446.936 454.997 446.947 454.994 M 486.574 601.762 C 486.565 601.755 452.950 545.275 391.272 532.057 C 331.981 519.350 280.174 555.244 280.163 555.247 C 280.171 555.254 308.407 613.420 367.259 628.029 C 430.605 643.754 486.562 601.765 486.574 601.762 M 492.298 677.310 C 492.348 695.136 531.934 702.957 531.283 682.829 C 529.633 631.863 530.631 499.466 411.216 329.319 C 321.646 201.696 184.452 143.894 184.429 143.875 C 184.452 143.899 334.947 244.579 410.357 375.933 C 497.039 526.921 492.193 639.409 492.298 677.310 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":510.746,\\\"y\\\":656.161,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.17586359561967413,\\\"y\\\":-0.9844145446587631}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":45.308,\\\"y\\\":63.349,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8827318966586274,\\\"y\\\":-0.4698770037163581}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":587.918,\\\"y\\\":304.546,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.3511153254832721,\\\"y\\\":-0.9363322210683428}},{\\\"point\\\":{\\\"x\\\":244.571,\\\"y\\\":422.989,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9758916622988211,\\\"y\\\":-0.21825550040180844}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":647.067,\\\"y\\\":537.269,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129335762692849,\\\"y\\\":0.7012315707581112}},{\\\"point\\\":{\\\"x\\\":354.676,\\\"y\\\":614.33,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987263029800354,\\\"y\\\":0.7153890923992705}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":249.127,\\\"y\\\":34.671,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.16263332021561844,\\\"y\\\":-0.9866865779748116}},{\\\"point\\\":{\\\"x\\\":95.703,\\\"y\\\":232.221,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9993784194337887,\\\"y\\\":-0.03525301079372184}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":513.536,\\\"y\\\":692.018,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"branch_curly\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":40.081,\\\"max\\\":682.252},\\\"y\\\":{\\\"min\\\":34.547,\\\"max\\\":701.2745628300994}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"branch_curly\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"branch_curly\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 563.410 239.584 C 563.410 225.009 575.168 213.251 589.743 213.251 C 604.318 213.251 616.075 225.009 616.075 239.584 C 616.075 254.158 604.317 265.916 589.743 265.916 C 575.168 265.916 563.410 254.158 563.410 239.584 M 144.484 197.092 C 144.484 179.536 158.647 165.374 176.203 165.374 C 193.759 165.374 207.921 179.536 207.921 197.092 C 207.921 214.648 193.759 228.811 176.203 228.811 C 158.647 228.811 144.484 214.648 144.484 197.092 M 465.262 592.678 C 465.262 575.454 479.157 561.558 496.382 561.558 C 513.607 561.558 527.502 575.454 527.502 592.678 C 527.502 609.903 513.607 623.799 496.382 623.799 C 479.157 623.798 465.262 609.903 465.262 592.678 M 170.816 534.627 C 170.816 518.396 183.910 505.302 200.141 505.302 C 216.372 505.302 229.466 518.396 229.466 534.627 C 229.466 550.858 216.372 563.952 200.141 563.952 C 183.910 563.952 170.817 550.858 170.816 534.627 M 450.898 283.271 C 450.898 267.703 463.458 255.143 479.026 255.143 C 494.595 255.143 507.154 267.703 507.154 283.271 C 507.154 298.840 494.595 311.399 479.026 311.399 C 463.458 311.399 450.898 298.840 450.898 283.271 M 423.352 596.105 C 423.348 596.102 405.128 568.857 374.068 563.892 C 344.209 559.119 319.352 578.353 319.346 578.354 C 319.351 578.358 334.937 606.581 364.626 612.312 C 396.583 618.482 423.347 596.107 423.352 596.105 M 447.324 562.186 C 447.324 562.180 458.877 531.509 444.839 503.360 C 431.344 476.301 401.237 467.280 401.233 467.276 C 401.233 467.282 387.351 496.382 399.968 523.861 C 413.548 553.439 447.319 562.183 447.324 562.186 M 502.266 538.192 C 502.268 538.186 522.998 512.800 518.669 481.645 C 514.508 451.694 488.850 433.543 488.847 433.538 C 488.845 433.544 466.409 456.698 469.604 486.766 C 473.043 519.130 502.263 538.186 502.266 538.192 M 549.663 555.999 C 549.666 555.995 575.888 541.648 582.910 513.834 C 589.661 487.097 574.200 462.961 574.199 462.956 C 574.195 462.960 547.297 474.836 539.689 501.342 C 531.500 529.872 549.662 555.993 549.663 555.999 M 604.152 491.581 C 604.156 491.585 632.968 499.542 646.176 525.007 C 658.873 549.487 649.353 576.523 649.353 576.528 C 649.349 576.525 620.445 571.127 606.967 547.070 C 592.459 521.175 604.152 491.587 604.152 491.581 M 584.869 451.848 C 584.873 451.845 602.391 427.626 630.865 424.142 C 658.237 420.793 680.247 439.155 680.252 439.156 C 680.247 439.159 665.096 464.359 637.846 468.588 C 608.515 473.139 584.874 451.849 584.869 451.848 M 525.473 416.260 C 525.476 416.255 531.234 384.497 557.336 367.818 C 582.428 351.785 612.428 359.396 612.433 359.396 C 612.430 359.400 609.435 391.009 584.872 407.841 C 558.434 425.959 525.479 416.259 525.473 416.260 M 446.149 412.421 C 446.151 412.416 443.090 380.286 463.697 357.159 C 483.506 334.928 514.446 334.126 514.451 334.124 C 514.450 334.129 520.130 365.367 501.047 388.225 C 480.506 412.828 446.155 412.419 446.149 412.421 M 356.335 391.576 C 356.337 391.570 356.788 356.882 381.488 334.558 C 405.232 313.097 438.386 315.826 438.391 315.824 C 438.389 315.830 440.840 349.868 417.799 372.082 C 393.000 395.991 356.341 391.574 356.335 391.576 M 318.366 275.052 C 318.371 275.049 337.288 248.898 368.034 245.137 C 397.591 241.523 421.355 261.351 421.361 261.352 C 421.356 261.356 404.995 288.566 375.570 293.130 C 343.898 298.043 318.371 275.053 318.366 275.052 M 365.015 172.555 C 365.021 172.556 396.490 165.383 422.077 182.842 C 446.674 199.624 451.452 230.203 451.455 230.208 C 451.450 230.207 421.203 239.862 396.078 223.881 C 369.035 206.678 365.018 172.560 365.015 172.555 M 489.542 217.873 C 489.539 217.869 465.464 208.376 456.428 185.241 C 447.743 163.002 458.418 140.600 458.418 140.595 C 458.422 140.598 482.811 147.895 492.208 169.843 C 502.323 193.467 489.542 217.868 489.542 217.873 M 524.927 151.624 C 524.930 151.627 544.662 161.774 550.403 182.279 C 555.921 201.991 544.908 220.196 544.907 220.199 C 544.905 220.197 524.718 211.896 518.567 192.372 C 511.948 171.358 524.927 151.628 524.927 151.624 M 553.330 159.210 C 553.332 159.213 559.152 180.624 578.015 190.505 C 596.148 200.003 616.245 193.018 616.249 193.018 C 616.246 193.015 612.327 171.543 594.510 161.466 C 575.332 150.619 553.334 159.210 553.330 159.210 M 531.185 145.808 C 531.189 145.808 552.231 152.846 570.917 142.636 C 588.880 132.821 594.220 112.225 594.223 112.222 C 594.219 112.222 574.181 103.569 555.911 112.801 C 536.246 122.737 531.188 145.805 531.185 145.808 M 487.022 128.121 C 487.026 128.118 511.670 120.217 522.197 97.722 C 532.316 76.097 523.127 53.046 523.127 53.041 C 523.123 53.044 498.309 58.733 487.499 80.020 C 475.862 102.933 487.022 128.116 487.022 128.121 M 424.703 125.813 C 424.705 125.808 443.081 104.887 440.357 78.302 C 437.739 52.746 416.508 36.551 416.506 36.547 C 416.504 36.551 396.747 55.525 398.541 81.152 C 400.473 108.736 424.701 125.808 424.703 125.813 M 359.099 149.819 C 359.098 149.813 370.223 120.285 356.709 93.184 C 343.719 67.132 314.735 58.444 314.731 58.441 C 314.730 58.446 301.363 86.461 313.508 112.918 C 326.581 141.396 359.094 149.815 359.099 149.819 M 315.709 199.598 C 315.706 199.593 308.787 168.806 282.611 153.578 C 257.448 138.940 228.454 147.596 228.449 147.596 C 228.452 147.600 232.665 178.354 257.344 193.795 C 283.907 210.416 315.703 199.597 315.709 199.598 M 294.523 265.817 C 294.518 265.814 273.907 241.922 243.643 240.827 C 214.551 239.774 193.058 261.073 193.053 261.075 C 193.058 261.078 211.268 286.217 240.311 288.205 C 271.572 290.346 294.517 265.819 294.523 265.817 M 188.664 325.601 C 188.663 325.596 193.650 294.438 174.985 270.591 C 157.042 247.667 126.905 244.958 126.900 244.956 C 126.901 244.961 119.413 275.085 136.609 298.575 C 155.118 323.859 188.659 325.599 188.664 325.601 M 134.111 357.679 C 134.107 357.676 122.799 331.234 96.816 321.930 C 71.838 312.986 47.291 325.553 47.286 325.553 C 47.290 325.557 56.167 352.417 80.844 362.161 C 107.406 372.649 134.105 357.680 134.111 357.679 M 113.621 403.802 C 113.617 403.802 92.575 393.126 71.328 400.962 C 50.904 408.495 42.083 429.331 42.081 429.334 C 42.085 429.335 61.820 441.555 82.476 434.684 C 104.710 427.288 113.618 403.806 113.621 403.802 M 118.467 461.097 C 118.465 461.101 101.008 476.975 100.781 499.619 C 100.563 521.387 116.904 537.038 116.906 537.041 C 116.908 537.038 135.344 522.934 136.262 501.185 C 137.251 477.774 118.469 461.101 118.467 461.097 M 126.008 416.149 C 126.009 416.153 121.853 439.379 135.482 457.465 C 148.583 474.850 171.078 477.288 171.081 477.290 C 171.081 477.286 177.092 454.866 164.557 437.068 C 151.065 417.911 126.012 416.151 126.008 416.149 M 178.541 358.762 C 178.539 358.767 160.568 382.253 165.360 410.226 C 169.967 437.117 193.622 452.756 193.625 452.760 C 193.627 452.755 213.202 431.235 209.463 404.209 C 205.440 375.119 178.544 358.767 178.541 358.762 M 309.427 366.174 C 309.421 366.175 279.453 358.000 254.139 373.748 C 229.805 388.886 223.967 418.095 223.964 418.100 C 223.969 418.099 252.662 428.613 277.471 414.267 C 304.174 398.824 309.424 366.179 309.427 366.174 M 231.005 697.365 C 201.448 687.003 205.086 675.149 205.083 675.147 C 205.093 675.133 266.235 584.285 298.407 535.404 C 324.717 495.430 349.667 415.597 316.773 372.508 C 294.180 342.911 243.624 341.578 206.916 347.820 C 179.311 352.515 150.455 368.302 134.090 391.023 C 120.375 410.064 118.045 460.139 118.043 460.146 C 118.043 460.139 108.743 408.199 119.277 386.085 C 133.396 356.446 165.590 333.785 197.041 324.368 C 230.426 314.373 301.950 334.242 301.961 334.243 C 301.964 334.227 270.645 268.734 329.116 181.184 C 353.233 145.075 406.145 124.002 459.868 124.582 C 492.028 124.929 551.290 157.728 551.299 157.731 C 551.290 157.729 490.006 136.858 458.723 137.982 C 431.199 138.971 380.419 145.555 347.632 189.824 C 292.610 264.113 329.118 336.697 329.116 336.711 C 329.119 336.718 352.781 379.027 357.506 402.132 C 361.595 422.127 357.506 463.843 357.506 463.850 C 357.515 463.845 412.449 420.598 445.145 414.476 C 484.129 407.175 529.494 412.819 563.642 432.991 C 585.725 446.035 605.646 492.224 605.650 492.230 C 605.642 492.224 577.069 451.001 521.674 435.459 C 479.725 423.690 425.601 439.471 394.537 470.021 C 313.954 549.269 264.345 696.108 264.332 696.130 C 264.328 696.131 245.055 702.291 231.005 697.365 M 321.826 488.088 C 321.821 488.085 304.479 458.946 272.658 452.126 C 242.069 445.571 215.341 464.089 215.335 464.090 C 215.340 464.094 229.907 494.103 260.270 501.640 C 292.951 509.752 321.820 488.090 321.826 488.088 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":246.86,\\\"y\\\":663.449,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.4197646590016845,\\\"y\\\":-0.9076329825723609}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":518.769,\\\"y\\\":57.329,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.4446345766298481,\\\"y\\\":-0.8957120593500991}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":128.848,\\\"y\\\":246.679,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5987075974448471,\\\"y\\\":-0.800967672732064}},{\\\"point\\\":{\\\"x\\\":611.299,\\\"y\\\":360.461,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.808704055458634,\\\"y\\\":-0.5882157348156871}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":118.311,\\\"y\\\":531.984,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.002740324476095995,\\\"y\\\":0.9999962453038339}},{\\\"point\\\":{\\\"x\\\":646.37,\\\"y\\\":572.478,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.41761585664930123,\\\"y\\\":0.90862368243133}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":316.677,\\\"y\\\":63.047,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.37771560334195214,\\\"y\\\":-0.9259216613688359}},{\\\"point\\\":{\\\"x\\\":614.645,\\\"y\\\":191.986,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8173207328797948,\\\"y\\\":0.5761829740671232}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":227.955,\\\"y\\\":693.174,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5019985728985481,\\\"y\\\":0.8648684482670306}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"bubbles\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":252.051,\\\"max\\\":470.567},\\\"y\\\":{\\\"min\\\":36.1045597499316,\\\"max\\\":656.624}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"bubbles\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"bubbles\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#6A14423D-0620-43B0-8BD1-FB4B5D154D5F_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 341.140 430.665 C 358.526 430.665 372.552 416.640 372.552 399.254 C 372.552 381.867 358.526 367.842 341.140 367.842 C 323.754 367.842 309.729 381.868 309.729 399.254 C 309.729 416.639 323.754 430.664 341.140 430.665 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#6A14423D-0620-43B0-8BD1-FB4B5D154D5F_1)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 420.693 352.954 C 447.191 352.954 468.567 331.578 468.567 305.079 C 468.567 278.581 447.191 257.205 420.693 257.205 C 394.194 257.205 372.818 278.581 372.818 305.079 C 372.818 331.578 394.194 352.954 420.693 352.954 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 446.041 330.427 C 460.071 316.397 460.071 293.761 446.041 279.731 C 432.011 265.701 409.374 265.701 395.344 279.731 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#6A14423D-0620-43B0-8BD1-FB4B5D154D5F_3)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 298.878 497.246 C 323.690 497.246 343.705 477.230 343.705 452.418 C 343.705 427.607 323.689 407.592 298.878 407.592 C 274.067 407.592 254.051 427.607 254.051 452.418 C 254.051 477.230 274.066 497.246 298.878 497.246 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 322.613 476.153 C 335.750 463.016 335.750 441.821 322.613 428.684 C 309.476 415.547 288.280 415.547 275.143 428.684 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#6A14423D-0620-43B0-8BD1-FB4B5D154D5F_5)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 394.958 577.422 C 416.059 577.422 433.082 560.399 433.082 539.298 C 433.082 518.196 416.060 501.174 394.958 501.174 C 373.857 501.174 356.834 518.196 356.834 539.298 C 356.834 560.399 373.857 577.422 394.958 577.422 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 415.144 559.483 C 426.316 548.311 426.316 530.285 415.144 519.112 C 403.971 507.940 385.945 507.940 374.773 519.112 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#6A14423D-0620-43B0-8BD1-FB4B5D154D5F_7)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 654.624 C 374.446 654.624 386.100 642.970 386.100 628.524 C 386.100 614.078 374.446 602.424 360.000 602.424 C 345.554 602.424 333.900 614.078 333.900 628.524 C 333.900 642.970 345.554 654.624 360.000 654.624 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 373.819 642.343 C 381.468 634.694 381.468 622.353 373.819 614.705 C 366.170 607.056 353.829 607.056 346.181 614.705 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#6A14423D-0620-43B0-8BD1-FB4B5D154D5F_9)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.566 172.391 C 396.729 172.631 426.903 142.846 427.143 105.683 C 427.383 68.519 397.597 38.346 360.434 38.106 C 323.271 37.866 293.097 67.651 292.857 104.814 C 292.617 141.977 322.403 172.150 359.566 172.391 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 395.320 141.028 C 415.124 121.479 415.329 89.732 395.780 69.928 C 376.230 50.124 344.483 49.919 324.679 69.469 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 357.772 415.885 C 366.977 406.679 366.977 391.827 357.772 382.622 C 348.566 373.416 333.714 373.416 324.509 382.622 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#6A14423D-0620-43B0-8BD1-FB4B5D154D5F_12)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 293.560 264.178 C 314.022 264.178 330.529 247.671 330.529 227.209 C 330.529 206.746 314.022 190.239 293.560 190.239 C 273.097 190.239 256.590 206.746 256.591 227.209 C 256.591 247.671 273.097 264.178 293.560 264.178 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 313.134 246.783 C 323.968 235.948 323.968 218.468 313.134 207.634 C 302.300 196.800 284.819 196.800 273.985 207.634 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":691.93,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":34.939,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":190.957,\\\"y\\\":346.779,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999874548000852,\\\"y\\\":0.005009016115709153}},{\\\"point\\\":{\\\"x\\\":529.043,\\\"y\\\":346.779,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999874548000852,\\\"y\\\":0.005009016115709153}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":529.607,\\\"y\\\":558.881,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129369546157063,\\\"y\\\":0.7012281360180027}},{\\\"point\\\":{\\\"x\\\":190.219,\\\"y\\\":558.924,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986824280384625,\\\"y\\\":0.7154319427802192}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":529.755,\\\"y\\\":134.765,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314829116413291,\\\"y\\\":-0.7753897937843839}},{\\\"point\\\":{\\\"x\\\":190.965,\\\"y\\\":134.837,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817473583452387,\\\"y\\\":-0.7315876840060176}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":658.45,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"6A14423D-0620-43B0-8BD1-FB4B5D154D5F_0\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"50.00%\\\",\\\"r\\\":\\\"50.00%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#000000\\\"},{\\\"offset\\\":\\\"92.16%\\\",\\\"color\\\":\\\"#ffffff\\\"}]},{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"6A14423D-0620-43B0-8BD1-FB4B5D154D5F_1\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"50.00%\\\",\\\"r\\\":\\\"50.00%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#000000\\\"},{\\\"offset\\\":\\\"92.16%\\\",\\\"color\\\":\\\"#ffffff\\\"}]},{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"6A14423D-0620-43B0-8BD1-FB4B5D154D5F_3\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"50.00%\\\",\\\"r\\\":\\\"50.00%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#000000\\\"},{\\\"offset\\\":\\\"92.16%\\\",\\\"color\\\":\\\"#ffffff\\\"}]},{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"6A14423D-0620-43B0-8BD1-FB4B5D154D5F_5\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"50.00%\\\",\\\"r\\\":\\\"50.00%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#000000\\\"},{\\\"offset\\\":\\\"92.16%\\\",\\\"color\\\":\\\"#ffffff\\\"}]},{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"6A14423D-0620-43B0-8BD1-FB4B5D154D5F_7\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"50.00%\\\",\\\"r\\\":\\\"50.00%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#000000\\\"},{\\\"offset\\\":\\\"92.16%\\\",\\\"color\\\":\\\"#ffffff\\\"}]},{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"6A14423D-0620-43B0-8BD1-FB4B5D154D5F_9\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"50.00%\\\",\\\"r\\\":\\\"50.18%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#000000\\\"},{\\\"offset\\\":\\\"92.16%\\\",\\\"color\\\":\\\"#ffffff\\\"}]},{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"6A14423D-0620-43B0-8BD1-FB4B5D154D5F_12\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"50.00%\\\",\\\"r\\\":\\\"50.00%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#000000\\\"},{\\\"offset\\\":\\\"92.16%\\\",\\\"color\\\":\\\"#ffffff\\\"}]}]},{\\\"name\\\":\\\"capricorn_tail\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":327.115,\\\"max\\\":707.8273502093732},\\\"y\\\":{\\\"min\\\":301.967436278268,\\\"max\\\":628.2617320911907}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"capricorn_tail\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"capricorn_tail\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 399.240 541.506 C 444.760 574.727 513.150 576.485 543.485 556.934 C 543.498 556.947 608.499 628.578 631.912 626.204 C 656.026 623.758 622.294 562.658 629.546 540.630 C 643.421 498.483 714.773 480.233 704.892 462.685 C 688.522 433.612 633.561 471.275 602.291 463.902 C 599.428 463.304 596.875 462.325 594.542 460.934 C 562.736 441.965 569.345 399.389 510.466 369.851 C 469.175 349.137 413.390 354.961 379.097 406.634 C 367.296 424.416 361.747 446.900 361.440 458.113 C 360.388 496.560 370.289 520.377 399.240 541.506 M 468.505 462.374 C 489.254 449.025 505.060 482.383 505.063 482.386 C 505.060 482.386 486.268 494.162 469.031 483.627 C 461.423 478.976 459.260 468.322 468.505 462.374 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 379.097 406.634 C 367.296 424.416 361.747 446.900 361.440 458.113 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 602.291 463.902 C 599.428 463.304 596.875 462.325 594.542 460.934 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 594.542 460.934 C 562.736 441.965 569.345 399.389 510.466 369.851 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 510.466 369.851 C 469.175 349.137 413.390 354.961 379.097 406.634 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 379.097 406.634 C 367.296 424.416 361.747 446.900 361.440 458.113 C 352.006 459.102 329.118 459.751 329.115 459.751 C 329.115 459.737 329.190 320.662 329.190 320.648 C 329.190 320.648 334.224 320.186 335.184 320.100 C 369.118 317.063 423.306 302.079 453.539 304.166 C 490.766 306.737 552.685 318.855 579.654 356.714 C 600.467 385.931 608.069 426.669 602.291 463.902 C 599.428 463.304 596.875 462.325 594.542 460.934 C 562.736 441.965 569.345 399.389 510.466 369.851 C 469.175 349.137 413.390 354.961 379.097 406.634 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 505.063 482.386 C 505.066 482.392 522.263 528.281 534.073 543.141 C 522.263 528.281 505.066 482.392 505.063 482.386 M 534.073 543.141 C 539.390 549.830 543.472 556.940 543.485 556.934 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 545.025 535.609 C 545.029 535.613 569.482 566.406 585.984 581.563 C 601.713 596.010 632.899 616.788 632.904 616.792 M 560.090 533.934 C 560.093 533.938 578.169 555.229 590.253 565.584 C 603.745 577.145 630.389 593.355 630.393 593.358 M 571.807 524.728 C 571.810 524.731 586.663 541.413 596.709 549.194 C 604.951 555.577 621.184 564.063 621.187 564.065 M 579.340 515.522 C 579.343 515.524 595.615 528.194 605.691 534.287 C 611.125 537.573 621.185 542.303 621.187 542.304 M 593.568 472.838 C 593.572 472.838 616.805 478.472 632.775 476.002 C 653.414 472.810 688.974 464.470 688.979 464.468 M 592.731 484.555 C 592.734 484.556 613.071 489.633 627.069 489.577 C 642.016 489.516 668.052 487.066 668.056 487.066 M 590.220 497.110 C 590.222 497.110 603.646 501.454 611.520 503.185 C 623.372 505.791 642.107 508.826 642.110 508.827 M 586.035 507.153 C 586.037 507.154 600.194 514.779 608.716 518.200 C 614.930 520.694 626.206 523.891 626.208 523.891 \\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":330.369,\\\"y\\\":390.449,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":328.475,\\\"y\\\":389.633,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":473.592,\\\"y\\\":306.751,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.004999104337938346,\\\"y\\\":-0.9999875043998392}},{\\\"point\\\":{\\\"x\\\":473.592,\\\"y\\\":567.412,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.004999104337938346,\\\"y\\\":0.9999875043998392}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":369.697,\\\"y\\\":314.868,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7012500843064531,\\\"y\\\":-0.712915366127139}},{\\\"point\\\":{\\\"x\\\":369.675,\\\"y\\\":504.24,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.715389739117582,\\\"y\\\":0.6987256408385756}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":701.933,\\\"y\\\":466.125,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9588289125721644,\\\"y\\\":-0.283984359456081}},{\\\"point\\\":{\\\"x\\\":636.742,\\\"y\\\":622.195,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.4124374294056144,\\\"y\\\":0.9109859311895486}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":630.693,\\\"y\\\":534.119,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8492900171691312,\\\"y\\\":0.52792657324372}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"castle_tower\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":218.414,\\\"max\\\":501.585},\\\"y\\\":{\\\"min\\\":16.054,\\\"max\\\":678.1}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"castle_tower\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"castle_tower\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#7811F520-9449-46A2-B7E1-63FCF7C4AF3B_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 240.355 137.699 C 240.353 137.695 220.416 97.822 220.414 97.818 C 220.414 97.810 220.414 18.062 220.414 18.054 C 220.418 18.054 260.292 18.054 260.296 18.054 C 260.296 18.058 260.296 57.932 260.296 57.936 C 260.300 57.936 300.174 57.936 300.178 57.936 C 300.178 57.932 300.178 18.058 300.178 18.054 C 300.182 18.054 340.055 18.054 340.059 18.054 C 340.059 18.058 340.059 57.932 340.059 57.936 C 340.063 57.936 379.937 57.936 379.941 57.936 C 379.941 57.932 379.941 18.058 379.941 18.054 C 379.945 18.054 419.818 18.054 419.822 18.054 C 419.822 18.058 419.822 57.932 419.822 57.936 C 419.826 57.936 459.700 57.936 459.704 57.936 C 459.704 57.932 459.704 18.058 459.704 18.054 C 459.708 18.054 499.581 18.054 499.585 18.054 C 499.585 18.062 499.585 97.810 499.585 97.818 C 499.583 97.822 479.647 137.695 479.645 137.699 C 479.645 137.753 479.645 676.046 479.645 676.100 C 479.621 676.100 240.379 676.100 240.355 676.100 C 240.355 676.046 240.355 137.753 240.355 137.699 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 260.296 137.699 C 326.765 137.699 393.234 137.699 459.704 137.699 M 240.355 97.817 C 320.118 97.817 399.882 97.817 479.645 97.817 \\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"windows\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 300.178 496.633 C 300.178 496.651 300.178 676.082 300.178 676.100 C 300.190 676.100 419.811 676.100 419.822 676.100 C 419.822 676.082 419.822 496.651 419.822 496.633 C 419.817 496.625 360.006 416.878 360.000 416.870 C 359.994 416.878 300.184 496.625 300.178 496.633 M 343.862 334.165 C 343.862 334.152 343.862 205.075 343.862 205.062 C 343.864 205.061 359.998 188.926 360.000 188.925 C 360.002 188.926 376.136 205.061 376.138 205.062 C 376.138 205.075 376.138 334.152 376.138 334.165 C 376.135 334.165 343.865 334.165 343.862 334.165 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":301.605,\\\"max\\\":418.395},\\\"y\\\":{\\\"min\\\":496.812,\\\"max\\\":670.012}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":705.349,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":16.853,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":239.785,\\\"y\\\":357.98,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872122750827,\\\"y\\\":0.005057201430513853}},{\\\"point\\\":{\\\"x\\\":480.293,\\\"y\\\":357.98,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872122750827,\\\"y\\\":0.005057201430513863}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":478.623,\\\"y\\\":673.87,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129208067247643,\\\"y\\\":0.7012445531616707}},{\\\"point\\\":{\\\"x\\\":241.542,\\\"y\\\":673.918,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987280169674286,\\\"y\\\":0.7153874183299317}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":221.621,\\\"y\\\":69.15,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8309157732314209,\\\"y\\\":-0.5563982187203964}},{\\\"point\\\":{\\\"x\\\":498.379,\\\"y\\\":69.15,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8309157732314202,\\\"y\\\":-0.5563982187203973}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.958,\\\"y\\\":673.638,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"7811F520-9449-46A2-B7E1-63FCF7C4AF3B_0\\\",\\\"x1\\\":\\\"50.53%\\\",\\\"y1\\\":\\\"60.95%\\\",\\\"x2\\\":\\\"50.53%\\\",\\\"y2\\\":\\\"-50.06%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}]},{\\\"name\\\":\\\"castle_tower_pointy\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":247.521,\\\"max\\\":472.478},\\\"y\\\":{\\\"min\\\":13.838,\\\"max\\\":683.307}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"castle_tower_pointy\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"castle_tower\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#C610F03E-1AC4-4381-AF55-F4E8855B48DA_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 358.998 15.838 C 359.007 15.856 445.799 200.429 445.808 200.447 C 445.790 200.447 272.205 200.447 272.188 200.447 C 272.197 200.429 358.989 15.856 358.998 15.838 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#C610F03E-1AC4-4381-AF55-F4E8855B48DA_1)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 265.304 255.174 C 265.302 255.171 249.523 223.612 249.521 223.609 C 249.521 223.603 249.521 160.484 249.521 160.478 C 249.524 160.478 281.083 160.478 281.086 160.478 C 281.086 160.481 281.086 192.040 281.086 192.044 C 281.089 192.044 312.649 192.044 312.652 192.044 C 312.652 192.040 312.652 160.481 312.652 160.478 C 312.655 160.478 344.214 160.478 344.217 160.478 C 344.217 160.481 344.217 192.040 344.217 192.044 C 344.220 192.044 375.780 192.044 375.783 192.044 C 375.783 192.040 375.783 160.481 375.783 160.478 C 375.786 160.478 407.345 160.478 407.348 160.478 C 407.348 160.481 407.348 192.040 407.348 192.044 C 407.351 192.044 438.910 192.044 438.913 192.044 C 438.913 192.040 438.913 160.481 438.913 160.478 C 438.917 160.478 470.475 160.478 470.478 160.478 C 470.478 160.484 470.478 223.603 470.478 223.609 C 470.477 223.612 454.698 255.171 454.696 255.174 C 454.696 255.217 454.696 681.264 454.696 681.307 C 454.677 681.307 265.323 681.307 265.304 681.307 C 265.304 681.264 265.304 255.217 265.304 255.174 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 281.086 255.174 C 333.695 255.174 386.304 255.174 438.913 255.174 M 265.304 223.609 C 328.434 223.609 391.565 223.609 454.696 223.609 \\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"windows\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 347.227 585.036 C 347.227 585.026 347.227 482.865 347.227 482.854 C 347.228 482.853 359.999 470.083 360.000 470.082 C 360.001 470.083 372.771 482.853 372.773 482.854 C 372.773 482.865 372.773 585.026 372.773 585.036 C 372.770 585.036 347.229 585.036 347.227 585.036 M 347.227 410.673 C 347.227 410.663 347.227 308.501 347.227 308.491 C 347.228 308.490 359.999 295.719 360.000 295.718 C 360.001 295.719 372.771 308.490 372.773 308.491 C 372.773 308.501 372.773 410.663 372.773 410.673 C 372.770 410.673 347.229 410.673 347.227 410.673 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":702.51,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":19.369,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":264.04,\\\"y\\\":343.502,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873325269011,\\\"y\\\":0.0050333672360686355}},{\\\"point\\\":{\\\"x\\\":456.038,\\\"y\\\":343.502,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873306234136,\\\"y\\\":0.005033745390817128}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":450.701,\\\"y\\\":676.275,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129053571532624,\\\"y\\\":0.701260259634167}},{\\\"point\\\":{\\\"x\\\":269.11,\\\"y\\\":676.322,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986805095282973,\\\"y\\\":0.7154338163696757}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":308.188,\\\"y\\\":123.698,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8309738458005973,\\\"y\\\":-0.556311484328128}},{\\\"point\\\":{\\\"x\\\":411.812,\\\"y\\\":123.698,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8309738458005973,\\\"y\\\":-0.556311484328128}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.958,\\\"y\\\":677.513,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"C610F03E-1AC4-4381-AF55-F4E8855B48DA_0\\\",\\\"x1\\\":\\\"48.31%\\\",\\\"y1\\\":\\\"-40.00%\\\",\\\"x2\\\":\\\"48.31%\\\",\\\"y2\\\":\\\"169.70%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"C610F03E-1AC4-4381-AF55-F4E8855B48DA_1\\\",\\\"x1\\\":\\\"50.00%\\\",\\\"y1\\\":\\\"50.00%\\\",\\\"x2\\\":\\\"50.00%\\\",\\\"y2\\\":\\\"-68.33%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"castle_wall\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":17.577,\\\"max\\\":702.423},\\\"y\\\":{\\\"min\\\":197.801,\\\"max\\\":522.199}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"castle_wall\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"castle_wall\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#D9EBD376-5018-4ED2-9B0C-0EFD5A1F2E1D_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 19.577 520.199 C 19.577 520.167 19.577 199.833 19.577 199.801 C 19.581 199.801 59.622 199.801 59.626 199.801 C 59.626 199.805 59.626 239.847 59.626 239.851 C 59.630 239.851 99.672 239.851 99.676 239.851 C 99.676 239.847 99.676 199.805 99.676 199.801 C 99.680 199.801 139.722 199.801 139.726 199.801 C 139.726 199.805 139.726 239.847 139.726 239.851 C 139.730 239.851 179.772 239.851 179.776 239.851 C 179.776 239.847 179.776 199.805 179.776 199.801 C 179.780 199.801 219.822 199.801 219.826 199.801 C 219.826 199.805 219.826 239.847 219.826 239.851 C 219.830 239.851 259.871 239.851 259.875 239.851 C 259.875 239.847 259.875 199.805 259.875 199.801 C 259.879 199.801 299.921 199.801 299.925 199.801 C 299.925 199.805 299.925 239.847 299.925 239.851 C 299.929 239.851 339.971 239.851 339.975 239.851 C 339.975 239.847 339.975 199.805 339.975 199.801 C 339.979 199.801 380.021 199.801 380.025 199.801 C 380.025 199.805 380.025 239.847 380.025 239.851 C 380.029 239.851 420.071 239.851 420.075 239.851 C 420.075 239.847 420.075 199.805 420.075 199.801 C 420.079 199.801 460.121 199.801 460.125 199.801 C 460.125 199.805 460.125 239.847 460.125 239.851 C 460.129 239.851 500.170 239.851 500.174 239.851 C 500.174 239.847 500.174 199.805 500.174 199.801 C 500.178 199.801 540.220 199.801 540.224 199.801 C 540.224 199.805 540.224 239.847 540.224 239.851 C 540.228 239.851 580.270 239.851 580.274 239.851 C 580.274 239.847 580.274 199.805 580.274 199.801 C 580.278 199.801 620.320 199.801 620.324 199.801 C 620.324 199.805 620.324 239.847 620.324 239.851 C 620.328 239.851 660.370 239.851 660.374 239.851 C 660.374 239.847 660.374 199.805 660.374 199.801 C 660.378 199.801 700.419 199.801 700.423 199.801 C 700.423 199.833 700.423 520.167 700.423 520.199 C 700.393 520.199 400.080 520.199 400.050 520.199 C 400.050 520.189 400.050 420.085 400.050 420.075 C 400.046 420.071 360.004 380.029 360.000 380.025 C 359.996 380.029 319.954 420.071 319.950 420.075 C 319.950 420.085 319.950 520.189 319.950 520.199 C 319.920 520.199 19.607 520.199 19.577 520.199 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"window\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 630.337 400.050 C 630.337 400.040 630.336 294.142 630.336 294.132 C 630.337 294.130 640.348 279.902 640.349 279.900 C 640.350 279.902 650.360 294.130 650.361 294.132 C 650.361 294.142 650.361 400.040 650.361 400.050 C 650.360 400.050 640.350 400.050 640.349 400.050 C 640.348 400.050 630.338 400.050 630.337 400.050 M 550.237 400.050 C 550.237 400.040 550.237 294.142 550.237 294.132 C 550.238 294.130 560.248 279.902 560.249 279.900 C 560.250 279.902 570.260 294.130 570.261 294.132 C 570.261 294.142 570.262 400.040 570.262 400.050 C 570.261 400.050 560.251 400.050 560.250 400.050 C 560.249 400.050 550.238 400.050 550.237 400.050 M 470.137 400.050 C 470.137 400.040 470.137 294.142 470.137 294.132 C 470.138 294.130 480.148 279.902 480.149 279.900 C 480.150 279.902 490.161 294.130 490.162 294.132 C 490.162 294.142 490.162 400.040 490.162 400.050 C 490.161 400.050 480.151 400.050 480.150 400.050 C 480.149 400.050 470.138 400.050 470.137 400.050 M 229.838 400.050 C 229.838 400.040 229.838 294.142 229.838 294.132 C 229.839 294.130 239.849 279.902 239.850 279.900 C 239.851 279.902 249.861 294.130 249.862 294.132 C 249.862 294.142 249.863 400.040 249.863 400.050 C 249.862 400.050 239.852 400.050 239.851 400.050 C 239.850 400.050 229.839 400.050 229.838 400.050 M 149.739 400.050 C 149.739 400.040 149.738 294.142 149.738 294.132 C 149.739 294.130 159.750 279.902 159.751 279.900 C 159.752 279.902 169.762 294.130 169.763 294.132 C 169.763 294.142 169.763 400.040 169.763 400.050 C 169.762 400.050 159.752 400.050 159.751 400.050 C 159.750 400.050 149.740 400.050 149.739 400.050 M 69.639 400.050 C 69.639 400.040 69.639 294.142 69.639 294.132 C 69.640 294.130 79.650 279.902 79.651 279.900 C 79.652 279.902 89.662 294.130 89.663 294.132 C 89.663 294.142 89.664 400.040 89.664 400.050 C 89.663 400.050 79.653 400.050 79.652 400.050 C 79.651 400.050 69.640 400.050 69.639 400.050 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":262.716,\\\"max\\\":457.284},\\\"y\\\":{\\\"min\\\":250.074,\\\"max\\\":372.451}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":536.797,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":199.929,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":21.241,\\\"y\\\":360.936,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999869443305633,\\\"y\\\":0.00510990884683594}},{\\\"point\\\":{\\\"x\\\":700.822,\\\"y\\\":360.936,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999869423966429,\\\"y\\\":0.005110287292651861}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":592.672,\\\"y\\\":516.547,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128965506064727,\\\"y\\\":0.701269212309647}},{\\\"point\\\":{\\\"x\\\":127.136,\\\"y\\\":516.595,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698688399112506,\\\"y\\\":0.7154261114507937}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":697.537,\\\"y\\\":202.704,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314454286031296,\\\"y\\\":-0.7754203187279851}},{\\\"point\\\":{\\\"x\\\":23.254,\\\"y\\\":202.783,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.681745419967421,\\\"y\\\":-0.7315894903246251}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.957,\\\"y\\\":524.792,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"D9EBD376-5018-4ED2-9B0C-0EFD5A1F2E1D_0\\\",\\\"x1\\\":\\\"50.00%\\\",\\\"y1\\\":\\\"50.00%\\\",\\\"x2\\\":\\\"50.00%\\\",\\\"y2\\\":\\\"-56.25%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"cathedral\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":100.348,\\\"max\\\":619.158},\\\"y\\\":{\\\"min\\\":27.45,\\\"max\\\":667.384}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cathedral\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cathedral\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#812EF8AF-E5B6-45E7-80F2-BB55437CEC0C_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 115.896 665.384 C 115.896 665.357 115.896 394.800 115.896 394.774 C 115.894 394.774 102.349 394.774 102.348 394.774 C 102.348 394.772 102.348 381.244 102.348 381.243 C 102.349 381.243 115.894 381.243 115.896 381.243 C 115.896 381.241 115.896 367.713 115.896 367.712 C 115.897 367.712 129.442 367.712 129.444 367.712 C 129.444 367.713 129.444 381.241 129.444 381.243 C 129.445 381.243 142.990 381.243 142.991 381.243 C 142.991 381.244 142.991 394.772 142.991 394.774 C 142.990 394.774 129.445 394.774 129.444 394.774 C 129.444 394.776 129.444 421.832 129.444 421.835 C 129.446 421.840 156.536 475.951 156.539 475.956 C 156.546 475.951 224.269 421.840 224.276 421.835 C 224.276 421.809 224.276 164.781 224.276 164.755 C 224.279 164.758 251.369 191.813 251.372 191.816 C 251.382 191.809 346.196 124.170 346.205 124.163 C 346.205 124.159 346.205 83.575 346.205 83.571 C 346.202 83.571 319.113 83.571 319.110 83.571 C 319.110 83.569 319.110 56.513 319.110 56.510 C 319.113 56.510 346.202 56.510 346.205 56.510 C 346.205 56.508 346.205 29.452 346.205 29.450 C 346.206 29.450 359.752 29.450 359.753 29.450 C 359.754 29.450 373.299 29.450 373.300 29.450 C 373.300 29.452 373.300 56.508 373.300 56.510 C 373.303 56.510 400.393 56.510 400.396 56.510 C 400.396 56.513 400.396 83.569 400.396 83.571 C 400.393 83.571 373.303 83.571 373.300 83.571 C 373.300 83.575 373.300 124.159 373.300 124.163 C 373.310 124.170 468.124 191.809 468.133 191.816 C 468.136 191.813 495.227 164.758 495.229 164.755 C 495.229 164.781 495.229 421.809 495.229 421.835 C 495.236 421.840 562.960 475.951 562.966 475.956 C 562.969 475.951 590.059 421.840 590.062 421.835 C 590.062 421.832 590.062 394.776 590.062 394.774 C 590.060 394.774 576.516 394.774 576.514 394.774 C 576.514 394.772 576.514 381.244 576.514 381.243 C 576.516 381.243 590.060 381.243 590.062 381.243 C 590.062 381.241 590.062 367.713 590.062 367.712 C 590.063 367.712 603.608 367.712 603.609 367.712 C 603.609 367.713 603.609 381.241 603.609 381.243 C 603.611 381.243 617.156 381.243 617.158 381.243 C 617.158 381.244 617.158 394.772 617.158 394.774 C 617.156 394.774 603.611 394.774 603.609 394.774 C 603.609 394.800 603.609 665.357 603.609 665.384 C 603.604 665.384 115.901 665.384 115.896 665.384 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"windows\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 170.086 597.731 C 170.086 598.199 170.086 665.384 170.086 665.384 C 188.149 665.384 206.213 665.384 224.276 665.384 C 224.276 665.370 224.276 530.091 224.276 530.078 C 224.271 530.085 170.086 557.138 170.086 597.731 M 305.562 557.139 C 305.562 557.329 306.231 666.770 306.231 666.770 C 342.135 666.308 378.039 665.846 413.943 665.384 C 413.943 665.373 413.906 566.160 413.943 557.139 C 414.219 489.882 359.758 479.688 359.753 479.681 C 359.747 479.688 305.562 489.483 305.562 557.139 M 495.229 665.384 C 513.293 665.384 531.356 665.384 549.419 665.384 C 549.419 665.377 549.419 597.731 549.419 597.731 C 549.419 557.137 495.235 530.085 495.229 530.078 C 495.229 530.091 495.229 665.384 495.229 665.384 M 359.753 380.241 C 411.835 378.227 439.944 337.134 440.035 300.060 C 440.128 262.068 411.202 219.879 359.753 219.879 C 308.304 219.879 279.471 262.042 279.471 300.060 C 279.471 338.077 308.291 380.087 359.753 380.241 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":293.444,\\\"max\\\":426.556},\\\"y\\\":{\\\"min\\\":234.144,\\\"max\\\":367.256}},{\\\"x\\\":{\\\"min\\\":314.693,\\\"max\\\":405.307},\\\"y\\\":{\\\"min\\\":496.99,\\\"max\\\":651.328}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":698.939,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":30.599,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":116.681,\\\"y\\\":522.606,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999875096983345,\\\"y\\\":0.004998044349876638}},{\\\"point\\\":{\\\"x\\\":603.319,\\\"y\\\":522.606,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999875096983345,\\\"y\\\":0.0049980443498766226}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":579.169,\\\"y\\\":662.127,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129398236144084,\\\"y\\\":0.7012252191020059}},{\\\"point\\\":{\\\"x\\\":140.65,\\\"y\\\":662.172,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986833748150326,\\\"y\\\":0.7154310181681227}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":492.655,\\\"y\\\":170.911,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314504127234041,\\\"y\\\":-0.7754162599993907}},{\\\"point\\\":{\\\"x\\\":228.009,\\\"y\\\":170.989,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817136231748407,\\\"y\\\":-0.7316191194725785}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":662.581,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"812EF8AF-E5B6-45E7-80F2-BB55437CEC0C_0\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"97.17%\\\",\\\"r\\\":\\\"139.95%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"23.92%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"chair\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":128.623,\\\"max\\\":590.506},\\\"y\\\":{\\\"min\\\":6.401999999999999,\\\"max\\\":681.568}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"chair\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"chair_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 418.083 419.119 C 418.083 419.130 418.083 529.135 418.083 529.146 C 418.080 529.147 388.463 536.762 388.460 536.763 C 388.457 536.762 362.225 526.608 362.223 526.607 C 362.223 526.598 362.223 435.209 362.223 435.199 C 362.219 435.200 326.137 445.125 326.133 445.126 C 326.133 445.148 326.133 667.697 326.133 667.719 C 326.131 667.721 297.360 679.567 297.357 679.568 C 297.354 679.566 264.352 657.565 264.349 657.563 C 264.349 657.541 265.195 442.608 265.195 442.587 C 265.188 442.583 189.030 403.658 189.023 403.654 C 189.023 403.674 189.023 600.837 189.023 600.857 C 189.020 600.858 161.095 610.552 161.092 610.553 C 161.089 610.551 130.627 594.087 130.623 594.086 C 130.623 594.059 130.623 327.508 130.623 327.481 C 130.647 327.476 361.888 276.474 361.911 276.469 C 361.914 276.443 390.454 18.584 390.457 18.559 C 390.460 18.558 423.462 8.403 423.465 8.402 C 423.482 8.407 588.490 61.718 588.506 61.723 C 588.503 61.752 556.348 351.997 556.344 352.026 C 556.344 352.052 556.344 616.065 556.344 616.091 C 556.341 616.092 526.724 623.708 526.721 623.708 C 526.719 623.707 497.948 605.936 497.945 605.935 C 497.945 605.914 497.945 395.190 497.945 395.190 C 497.945 395.190 418.091 419.116 418.083 419.119 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 361.911 276.469 C 361.914 276.443 390.454 18.584 390.457 18.559 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 525.886 350.368 C 525.870 350.361 361.927 276.476 361.911 276.469 C 361.914 276.443 390.454 18.584 390.457 18.559 C 446.281 37.758 557.912 76.152 557.928 76.158 C 557.925 76.185 525.889 350.341 525.886 350.368 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 130.623 327.481 C 130.623 327.508 130.623 594.059 130.623 594.086 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 130.623 594.086 C 130.627 594.087 161.089 610.551 161.092 610.553 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 189.023 403.654 C 189.030 403.658 265.188 442.583 265.195 442.587 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 265.195 442.587 C 265.195 442.608 264.349 657.541 264.349 657.563 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 264.349 657.563 C 264.352 657.565 297.354 679.566 297.357 679.568 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 297.357 407.886 C 297.340 407.878 130.640 327.489 130.623 327.481 C 130.623 327.508 130.623 594.059 130.623 594.086 C 130.627 594.087 161.089 610.551 161.092 610.553 C 161.092 536.508 161.092 388.442 161.092 388.419 C 161.095 388.421 179.712 398.576 189.023 403.654 C 189.030 403.658 265.188 442.583 265.195 442.587 C 265.195 442.608 264.349 657.541 264.349 657.563 C 264.352 657.565 297.354 679.566 297.357 679.568 C 297.357 589.007 297.357 407.913 297.357 407.886 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 388.460 536.763 C 388.457 536.762 362.225 526.608 362.223 526.607 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 362.223 526.607 C 362.223 526.598 362.223 435.209 362.223 435.199 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 387.856 428.010 C 387.856 428.021 388.259 500.512 388.460 536.763 C 388.457 536.762 362.225 526.608 362.223 526.607 C 362.223 526.598 362.223 435.209 362.223 435.199 C 370.767 432.803 387.854 428.011 387.856 428.010 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 497.945 395.190 C 497.945 395.190 497.945 605.914 497.945 605.935 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 497.945 605.935 C 497.948 605.936 526.719 623.707 526.721 623.708 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 527.123 386.156 C 517.397 389.167 497.948 395.189 497.945 395.190 C 497.945 395.190 497.945 605.914 497.945 605.935 C 497.948 605.936 526.719 623.707 526.721 623.708 C 526.722 623.685 527.123 386.179 527.123 386.156 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 387.856 428.010 C 397.932 425.046 408.007 422.082 418.083 419.119 M 297.357 407.886 C 373.533 388.713 449.710 369.541 525.886 350.368 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":183.87,\\\"max\\\":493.636},\\\"y\\\":{\\\"min\\\":42.516,\\\"max\\\":352.282}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":298.192,\\\"y\\\":698.408,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":497.137,\\\"y\\\":33.617,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":130.707,\\\"y\\\":343.18,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871827565018,\\\"y\\\":0.005063034931209322}},{\\\"point\\\":{\\\"x\\\":557.482,\\\"y\\\":343.18,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871827565018,\\\"y\\\":0.005063034931209294}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":137.262,\\\"y\\\":590.753,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987449204091869,\\\"y\\\":0.7153709081325289}},{\\\"point\\\":{\\\"x\\\":550.048,\\\"y\\\":614.849,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129015191744774,\\\"y\\\":0.7012641613249049}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":426.214,\\\"y\\\":24.199,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.19950101902796097,\\\"y\\\":-0.9798976188392363}},{\\\"point\\\":{\\\"x\\\":580.463,\\\"y\\\":72.581,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314088154797592,\\\"y\\\":-0.7754501323324713}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":551.173,\\\"y\\\":366.513,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7071067811865476,\\\"y\\\":0.7071067811865476}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"church\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":113.136,\\\"max\\\":623.242},\\\"y\\\":{\\\"min\\\":61.477,\\\"max\\\":648.776}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"church\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"windows\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#6E36C5C5-556A-415B-BCBF-99F9A1AF819E_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 191.700 171.321 C 191.858 149.744 191.865 123.636 191.875 108.366 C 179.035 108.366 159.471 108.366 159.468 108.366 C 159.468 108.365 159.468 96.022 159.468 96.021 C 159.471 96.021 179.035 96.021 191.876 96.021 C 191.852 83.135 191.852 63.480 191.852 63.477 C 191.853 63.477 204.195 63.477 204.196 63.477 C 204.196 63.480 204.197 84.874 204.246 96.021 C 214.989 96.021 236.577 96.021 236.580 96.021 C 236.580 96.022 236.580 108.365 236.580 108.366 C 236.577 108.366 212.328 108.366 204.244 108.366 C 204.220 128.512 204.195 153.215 204.048 172.702 C 229.192 230.560 279.244 345.734 279.252 345.751 C 279.281 345.751 572.943 345.751 572.972 345.751 C 572.977 345.762 618.604 450.178 618.608 450.189 C 618.609 450.208 621.242 645.878 621.242 645.898 C 621.191 645.898 115.186 646.775 115.136 646.776 C 115.136 646.745 115.136 344.062 115.136 344.032 C 115.136 344.032 191.700 171.321 191.700 171.321 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 549.705 493.864 C 550.395 485.541 556.014 479.734 563.834 479.734 C 571.655 479.734 577.798 484.461 577.963 493.864 C 578.321 514.202 577.669 590.085 577.669 590.095 C 577.666 590.095 549.985 590.159 549.982 590.159 C 549.982 590.149 547.945 515.093 549.705 493.864 M 169.110 344.874 C 169.110 360.661 181.845 373.396 197.632 373.396 C 213.419 373.396 226.155 360.661 226.155 344.874 C 226.155 329.086 213.420 316.351 197.632 316.351 C 181.845 316.351 169.110 329.086 169.110 344.874 M 484.393 493.864 C 484.717 485.518 490.702 479.734 498.523 479.734 C 506.343 479.734 512.486 484.461 512.652 493.864 C 513.010 514.202 512.357 590.085 512.357 590.095 C 512.354 590.095 484.672 590.159 484.670 590.159 C 484.670 590.149 483.570 515.093 484.393 493.864 M 415.938 493.864 C 416.277 485.519 422.248 479.734 430.068 479.734 C 437.889 479.734 443.600 484.479 444.197 493.864 C 445.493 514.202 443.903 590.085 443.903 590.095 C 443.900 590.095 416.218 590.159 416.216 590.159 C 416.216 590.149 415.115 514.155 415.938 493.864 M 348.421 493.864 C 349.112 485.541 354.730 479.734 362.551 479.734 C 370.371 479.734 376.082 484.479 376.680 493.864 C 377.976 514.202 376.385 590.085 376.385 590.095 C 376.382 590.095 348.701 590.159 348.698 590.159 C 348.698 590.149 346.660 515.093 348.421 493.864 M 279.908 493.864 C 280.231 485.518 286.216 479.734 294.037 479.734 C 301.858 479.734 308.001 484.461 308.167 493.864 C 308.525 514.202 307.871 590.085 307.871 590.095 C 307.869 590.095 280.187 590.159 280.184 590.159 C 280.184 590.149 279.084 515.093 279.908 493.864 M 174.593 498.596 C 174.917 484.896 184.946 475.412 197.779 475.412 C 210.611 475.412 221.170 483.167 220.964 498.596 C 220.552 529.544 220.480 644.978 220.480 644.992 C 220.475 644.992 175.052 645.097 175.047 645.097 C 175.047 645.082 173.851 529.962 174.593 498.596 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":236.564,\\\"max\\\":564.993},\\\"y\\\":{\\\"min\\\":354.599,\\\"max\\\":472.404}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":693.725,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":198.124,\\\"y\\\":66.829,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":115.012,\\\"y\\\":451.235,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873181281341,\\\"y\\\":0.005036227050266388}},{\\\"point\\\":{\\\"x\\\":619.248,\\\"y\\\":451.235,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873181281341,\\\"y\\\":0.005036227050266405}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":616.459,\\\"y\\\":642.247,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129699922269475,\\\"y\\\":0.7011945451755215}},{\\\"point\\\":{\\\"x\\\":120.091,\\\"y\\\":642.294,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698688399112506,\\\"y\\\":0.7154261114507937}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":573.014,\\\"y\\\":345.121,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314454286031306,\\\"y\\\":-0.7754203187279842}},{\\\"point\\\":{\\\"x\\\":115.842,\\\"y\\\":345.201,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817084818456931,\\\"y\\\":-0.7316239100655748}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.957,\\\"y\\\":642.687,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"6E36C5C5-556A-415B-BCBF-99F9A1AF819E_0\\\",\\\"x1\\\":\\\"49.77%\\\",\\\"y1\\\":\\\"68.86%\\\",\\\"x2\\\":\\\"49.77%\\\",\\\"y2\\\":\\\"-26.34%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"circle\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":36.178,\\\"max\\\":683.822},\\\"y\\\":{\\\"min\\\":15.588000000000001,\\\"max\\\":663.231}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"circle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"Circle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#8E02C545-A61C-4A1F-B3C0-8285B9A2D747_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 17.588 C 538.126 17.588 681.822 161.283 681.822 339.409 C 681.822 517.536 538.126 661.231 360.000 661.231 C 181.874 661.231 38.178 517.536 38.178 339.409 C 38.178 161.283 181.874 17.588 360.000 17.588 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":144.21,\\\"max\\\":575.79},\\\"y\\\":{\\\"min\\\":123.619,\\\"max\\\":555.2}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":701.804,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":19.072,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":40.272,\\\"y\\\":340.321,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999874183983771,\\\"y\\\":0.005016277997588125}},{\\\"point\\\":{\\\"x\\\":679.728,\\\"y\\\":340.321,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999874183983771,\\\"y\\\":0.005016277997588111}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":133.095,\\\"y\\\":566.388,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698697008836314,\\\"y\\\":0.7154177030540882}},{\\\"point\\\":{\\\"x\\\":586.738,\\\"y\\\":566.484,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128963966821081,\\\"y\\\":0.701269368786108}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":133.86,\\\"y\\\":110.542,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817006374191383,\\\"y\\\":-0.7316312192234149}},{\\\"point\\\":{\\\"x\\\":586.882,\\\"y\\\":110.864,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314191618063133,\\\"y\\\":-0.7754417077406998}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.959,\\\"y\\\":658.327,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"8E02C545-A61C-4A1F-B3C0-8285B9A2D747_0\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"50.00%\\\",\\\"r\\\":\\\"68.81%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"51.76%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"circle_spiral\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":103.279,\\\"max\\\":616.721},\\\"y\\\":{\\\"min\\\":85.03,\\\"max\\\":598.472}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"circle_spiral\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cloud_spiral_root\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#4FEEBBB3-33A9-4473-9C80-C31EBD03A545_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 596.472 C 500.986 596.472 614.721 482.737 614.721 341.751 C 614.721 200.765 500.986 87.030 360.000 87.030 C 219.014 87.030 105.279 200.765 105.279 341.751 C 105.279 482.737 219.014 596.472 360.000 596.472 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 604.402 371.163 C 602.809 412.482 597.532 433.366 576.252 476.334 M 530.468 180.233 C 584.048 228.491 607.500 290.791 604.402 371.163 M 212.253 216.293 C 280.760 106.011 438.011 96.960 530.468 180.233 M 208.007 406.623 C 174.848 346.544 176.555 273.758 212.253 216.293 M 437.115 451.615 C 365.708 514.002 255.048 491.855 208.007 406.623 M 479.325 353.509 C 480.360 390.547 465.022 427.232 437.115 451.615 M 383.261 252.270 C 437.425 252.004 477.877 301.708 479.325 353.509 M 315.669 293.563 C 328.963 268.106 355.031 252.409 383.261 252.270 M 324.454 355.826 C 305.291 339.468 306.266 311.569 315.669 293.563 M 347.824 363.177 C 337.650 362.944 332.173 362.415 324.454 355.826 M 366.141 334.377 C 377.871 347.373 363.200 363.529 347.824 363.177 M 354.453 336.490 C 354.799 332.844 362.308 330.130 366.141 334.377 M 105.279 341.751 C 105.279 482.737 219.014 596.472 360.000 596.472 C 500.986 596.472 614.721 482.737 614.721 341.751 C 614.721 200.765 500.986 87.030 360.000 87.030 C 219.014 87.030 105.279 200.765 105.279 341.751 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":265.634,\\\"max\\\":454.366},\\\"y\\\":{\\\"min\\\":247.385,\\\"max\\\":436.117}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":692.004,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":66.206,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":78.458,\\\"y\\\":345.79,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999874700083806,\\\"y\\\":0.005005979048893389}},{\\\"point\\\":{\\\"x\\\":641.542,\\\"y\\\":345.79,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999874700083806,\\\"y\\\":0.005005979048893383}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":559.655,\\\"y\\\":545.603,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129517580740846,\\\"y\\\":0.7012130850597925}},{\\\"point\\\":{\\\"x\\\":160.18,\\\"y\\\":545.644,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987282236274913,\\\"y\\\":0.715387216482354}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":559.795,\\\"y\\\":146.068,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314500680668252,\\\"y\\\":-0.7754165406659841}},{\\\"point\\\":{\\\"x\\\":160.884,\\\"y\\\":146.136,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817245493463407,\\\"y\\\":-0.7316089384490383}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":617.159,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"4FEEBBB3-33A9-4473-9C80-C31EBD03A545_0\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"50.00%\\\",\\\"r\\\":\\\"50.00%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"43.53%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"96.08%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"circles_concentric\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":72.154,\\\"max\\\":647.846},\\\"y\\\":{\\\"min\\\":72.154,\\\"max\\\":647.846}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"circles_concentric\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"circles_concentric\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"5\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 74.654 360.000 C 74.654 517.937 202.063 645.346 360.000 645.346 C 517.937 645.346 645.346 517.937 645.346 360.000 C 645.346 202.063 517.937 74.654 360.000 74.654 C 202.063 74.654 74.654 202.063 74.654 360.000 M 96.603 360.000 C 96.603 505.788 214.212 623.397 360.000 623.397 C 505.788 623.397 623.397 505.788 623.397 360.000 C 623.397 214.212 505.788 96.603 360.000 96.603 C 214.212 96.603 96.603 214.212 96.603 360.000 M 118.553 360.000 C 118.553 493.639 226.361 601.447 360.000 601.447 C 493.639 601.447 601.447 493.639 601.447 360.000 C 601.447 226.361 493.639 118.553 360.000 118.553 C 226.361 118.553 118.553 226.361 118.553 360.000 M 140.503 360.000 C 140.503 481.490 238.510 579.497 360.000 579.497 C 481.490 579.497 579.497 481.490 579.497 360.000 C 579.497 238.510 481.490 140.503 360.000 140.503 C 238.510 140.503 140.503 238.510 140.503 360.000 M 162.453 360.000 C 162.453 469.341 250.659 557.547 360.000 557.547 C 469.341 557.547 557.547 469.341 557.547 360.000 C 557.547 250.659 469.341 162.453 360.000 162.453 C 250.659 162.453 162.453 250.659 162.453 360.000 M 182.094 360.000 C 182.094 458.470 261.530 537.906 360.000 537.906 C 458.470 537.906 537.906 458.470 537.906 360.000 C 537.906 261.530 458.470 182.094 360.000 182.094 C 261.530 182.094 182.094 261.530 182.094 360.000 M 204.058 360.000 C 204.058 446.313 273.687 515.942 360.000 515.942 C 446.313 515.942 515.942 446.313 515.942 360.000 C 515.942 273.687 446.313 204.058 360.000 204.058 C 273.687 204.058 204.058 273.687 204.058 360.000 M 224.686 360.000 C 224.686 434.895 285.105 495.314 360.000 495.314 C 434.895 495.314 495.314 434.895 495.314 360.000 C 495.314 285.105 434.895 224.686 360.000 224.686 C 285.105 224.686 224.686 285.105 224.686 360.000 M 246.321 360.000 C 246.321 422.920 297.080 473.679 360.000 473.679 C 422.920 473.679 473.679 422.920 473.679 360.000 C 473.679 297.080 422.920 246.321 360.000 246.321 C 297.080 246.321 246.321 297.080 246.321 360.000 M 267.260 360.000 C 267.260 411.331 308.669 452.740 360.000 452.740 C 411.331 452.740 452.740 411.331 452.740 360.000 C 452.740 308.669 411.331 267.260 360.000 267.260 C 308.669 267.260 267.260 308.669 267.260 360.000 M 287.254 360.000 C 287.254 400.265 319.736 432.746 360.000 432.746 C 400.265 432.746 432.746 400.265 432.746 360.000 C 432.746 319.736 400.265 287.254 360.000 287.254 C 319.736 287.254 287.254 319.736 287.254 360.000 M 311.503 360.000 C 311.503 386.843 333.157 408.497 360.000 408.497 C 386.843 408.497 408.497 386.843 408.497 360.000 C 408.497 333.157 386.843 311.503 360.000 311.503 C 333.157 311.503 311.503 333.157 311.503 360.000 M 330.398 358.116 C 329.355 374.501 341.731 388.560 358.116 389.602 C 374.501 390.645 388.560 378.269 389.602 361.884 C 390.645 345.499 378.269 331.440 361.884 330.398 C 345.499 329.355 331.440 341.731 330.398 358.116 \\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"circles_concentric_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 85.800 360.000 C 85.800 511.768 208.232 634.200 360.000 634.200 C 511.768 634.200 634.200 511.768 634.200 360.000 C 634.200 208.232 511.768 85.800 360.000 85.800 C 208.232 85.800 85.800 208.232 85.800 360.000 M 106.892 360.000 C 106.892 500.093 219.907 613.108 360.000 613.108 C 500.093 613.108 613.108 500.093 613.108 360.000 C 613.108 219.907 500.093 106.892 360.000 106.892 C 219.907 106.892 106.892 219.907 106.892 360.000 M 127.985 360.000 C 127.985 488.419 231.581 592.015 360.000 592.015 C 488.419 592.015 592.015 488.419 592.015 360.000 C 592.015 231.581 488.419 127.985 360.000 127.985 C 231.581 127.985 127.985 231.581 127.985 360.000 M 149.077 360.000 C 149.077 476.745 243.256 570.923 360.000 570.923 C 476.745 570.923 570.923 476.745 570.923 360.000 C 570.923 243.256 476.745 149.077 360.000 149.077 C 243.256 149.077 149.077 243.256 149.077 360.000 M 170.169 360.000 C 170.169 465.070 254.930 549.831 360.000 549.831 C 465.070 549.831 549.831 465.070 549.831 360.000 C 549.831 254.930 465.070 170.169 360.000 170.169 C 254.930 170.169 170.169 254.930 170.169 360.000 M 191.262 360.000 C 191.262 453.395 266.605 528.738 360.000 528.738 C 453.395 528.738 528.738 453.395 528.738 360.000 C 528.738 266.605 453.395 191.262 360.000 191.262 C 266.605 191.262 191.262 266.605 191.262 360.000 M 212.354 360.000 C 212.354 441.721 278.279 507.646 360.000 507.646 C 441.721 507.646 507.646 441.721 507.646 360.000 C 507.646 278.279 441.721 212.354 360.000 212.354 C 278.279 212.354 212.354 278.279 212.354 360.000 M 233.446 360.000 C 233.446 430.047 289.953 486.554 360.000 486.554 C 430.047 486.554 486.554 430.047 486.554 360.000 C 486.554 289.953 430.047 233.446 360.000 233.446 C 289.953 233.446 233.446 289.953 233.446 360.000 M 254.538 360.000 C 254.538 418.372 301.628 465.462 360.000 465.462 C 418.372 465.462 465.462 418.372 465.462 360.000 C 465.462 301.628 418.372 254.538 360.000 254.538 C 301.628 254.538 254.538 301.628 254.538 360.000 M 275.631 360.000 C 275.631 406.698 313.302 444.369 360.000 444.369 C 406.698 444.369 444.369 406.698 444.369 360.000 C 444.369 313.302 406.698 275.631 360.000 275.631 C 313.302 275.631 275.631 313.302 275.631 360.000 M 296.723 360.000 C 296.723 395.023 324.977 423.277 360.000 423.277 C 395.023 423.277 423.277 395.023 423.277 360.000 C 423.277 324.977 395.023 296.723 360.000 296.723 C 324.977 296.723 296.723 324.977 296.723 360.000 M 317.815 360.000 C 317.815 383.349 336.651 402.185 360.000 402.185 C 383.349 402.185 402.185 383.349 402.185 360.000 C 402.185 336.651 383.349 317.815 360.000 317.815 C 336.651 317.815 317.815 336.651 317.815 360.000 M 338.908 360.000 C 338.908 371.675 348.325 381.092 360.000 381.092 C 371.675 381.092 381.092 371.675 381.092 360.000 C 381.092 348.325 371.675 338.908 360.000 338.908 C 348.325 338.908 338.908 348.325 338.908 360.000 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":242.319,\\\"max\\\":477.681},\\\"y\\\":{\\\"min\\\":242.805,\\\"max\\\":478.167}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":648.628,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":77.796,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":74.465,\\\"y\\\":361.3,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873936290595,\\\"y\\\":0.005021213295666688}},{\\\"point\\\":{\\\"x\\\":645.535,\\\"y\\\":361.3,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873936290595,\\\"y\\\":0.005021213295666688}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":562.487,\\\"y\\\":563.947,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129123427503464,\\\"y\\\":0.7012531579638074}},{\\\"point\\\":{\\\"x\\\":157.347,\\\"y\\\":563.989,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987607928207248,\\\"y\\\":0.7153554042687819}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":562.629,\\\"y\\\":158.746,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314380392234107,\\\"y\\\":-0.7754263360382432}},{\\\"point\\\":{\\\"x\\\":158.06,\\\"y\\\":158.815,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817328457201344,\\\"y\\\":-0.7316012076714522}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":639.318,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"clock\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":118.325,\\\"max\\\":601.675},\\\"y\\\":{\\\"min\\\":27.278,\\\"max\\\":510.628}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"clock\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"clock\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 510.628 C 493.766 510.628 601.675 402.718 601.675 268.953 C 601.675 135.187 493.766 27.278 360.000 27.278 C 226.235 27.278 118.325 135.187 118.325 268.953 C 118.325 402.718 226.235 510.628 360.000 510.628 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 492.300 C 483.621 492.300 583.347 392.574 583.347 268.953 C 583.347 145.332 483.621 45.606 360.000 45.606 C 236.379 45.606 136.653 145.332 136.653 268.953 C 136.653 392.574 236.379 492.300 360.000 492.300 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 473.815 C 473.390 473.815 564.862 382.343 564.862 268.953 C 564.862 155.563 473.390 64.090 360.000 64.090 C 246.610 64.090 155.138 155.563 155.138 268.953 C 155.138 382.343 246.610 473.815 360.000 473.815 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 197.369 362.848 C 202.297 360.003 207.225 357.157 212.153 354.312 M 522.631 175.058 C 517.703 177.903 512.775 180.748 507.847 183.593 M 266.105 431.584 C 268.950 426.656 271.795 421.728 274.641 416.800 M 453.895 106.321 C 451.050 111.249 448.205 116.178 445.359 121.106 M 522.631 362.848 C 517.703 360.003 512.775 357.157 507.847 354.312 M 197.369 175.058 C 202.297 177.903 207.225 180.748 212.153 183.593 M 453.895 431.584 C 451.050 426.656 448.205 421.728 445.359 416.800 M 266.105 106.321 C 268.950 111.249 271.795 116.178 274.641 121.106 M 172.209 268.953 C 177.900 268.953 183.591 268.953 189.281 268.953 M 547.791 268.953 C 542.100 268.953 536.409 268.953 530.719 268.953 M 360.000 456.743 C 360.000 451.053 360.000 445.362 360.000 439.671 M 360.000 81.162 C 360.000 86.853 360.000 92.544 360.000 98.234 M 155.138 268.953 C 155.138 382.343 246.610 473.815 360.000 473.815 C 473.390 473.815 564.862 382.343 564.862 268.953 C 564.862 155.563 473.390 64.090 360.000 64.090 C 246.610 64.090 155.138 155.563 155.138 268.953 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 239.659 137.260 C 239.672 137.273 370.494 269.672 370.507 269.685 C 370.506 269.687 357.845 281.133 357.843 281.135 C 357.832 281.120 239.671 137.274 239.659 137.260 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 265.579 350.722 C 265.589 350.714 370.461 271.310 370.471 271.302 C 370.470 271.301 359.245 258.443 359.244 258.442 C 359.234 258.451 265.588 350.713 265.579 350.722 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 136.653 268.953 C 136.653 392.574 236.379 492.300 360.000 492.300 C 483.621 492.300 583.347 392.574 583.347 268.953 C 583.347 145.332 483.621 45.606 360.000 45.606 C 236.379 45.606 136.653 145.332 136.653 268.953 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":431.197,\\\"max\\\":561.681},\\\"y\\\":{\\\"min\\\":203.711,\\\"max\\\":334.194}},{\\\"x\\\":{\\\"min\\\":158.32,\\\"max\\\":288.803},\\\"y\\\":{\\\"min\\\":203.711,\\\"max\\\":334.194}},{\\\"x\\\":{\\\"min\\\":294.758,\\\"max\\\":425.242},\\\"y\\\":{\\\"min\\\":340.15,\\\"max\\\":470.633}},{\\\"x\\\":{\\\"min\\\":294.758,\\\"max\\\":425.242},\\\"y\\\":{\\\"min\\\":67.272,\\\"max\\\":197.756}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":701.475,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":28.98,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":117.292,\\\"y\\\":270.24,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999869665965315,\\\"y\\\":0.005105549634238743}},{\\\"point\\\":{\\\"x\\\":602.709,\\\"y\\\":270.24,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999869639866393,\\\"y\\\":0.005106060789277737}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":532.116,\\\"y\\\":442.493,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129394206807778,\\\"y\\\":0.7012256287667735}},{\\\"point\\\":{\\\"x\\\":187.742,\\\"y\\\":442.528,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986978199346778,\\\"y\\\":0.7154169109117623}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":532.237,\\\"y\\\":98.067,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6313988243194999,\\\"y\\\":-0.7754582675089314}},{\\\"point\\\":{\\\"x\\\":188.348,\\\"y\\\":98.125,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817402126941753,\\\"y\\\":-0.7315943427854678}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":510.408,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"cloud\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":8.985999979894853,\\\"max\\\":711.3059549777182},\\\"y\\\":{\\\"min\\\":134.06812556347995,\\\"max\\\":587.2011687009165}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cloud\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cloud\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#4A5CA113-4EFD-477B-A9CD-40406528EDB8_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 10.986 448.176 C 10.985 398.984 48.288 358.730 95.924 354.106 C 90.056 340.911 86.626 325.619 86.626 309.505 C 86.626 248.451 136.011 203.230 196.931 199.198 C 230.468 196.979 261.859 206.869 283.660 229.730 C 296.109 171.798 349.218 133.881 409.664 136.166 C 477.142 138.716 536.377 187.260 534.094 256.429 C 543.811 252.145 555.245 248.934 567.244 249.624 C 613.248 252.270 655.308 301.337 636.184 353.961 C 673.742 365.944 705.687 397.356 709.014 438.721 C 713.697 496.941 661.326 536.105 603.489 544.247 C 570.009 548.960 537.549 543.255 517.199 519.624 C 504.059 533.272 486.451 546.720 465.405 547.050 C 451.728 547.265 439.365 540.672 428.767 534.057 C 400.311 577.742 348.371 589.878 294.631 583.694 C 245.540 578.046 201.340 559.694 178.848 518.221 C 159.660 536.201 133.517 544.337 105.534 542.723 C 53.289 539.710 10.986 500.508 10.986 448.176 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":200.206,\\\"max\\\":522.985},\\\"y\\\":{\\\"min\\\":238.808,\\\"max\\\":511.195}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":363.553,\\\"y\\\":632.565,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":406.825,\\\"y\\\":137.794,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":683.509,\\\"y\\\":382.494,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6948578932565497,\\\"y\\\":-0.7191470699231622}},{\\\"point\\\":{\\\"x\\\":30.57,\\\"y\\\":391.688,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7720226503585523,\\\"y\\\":-0.6355950183358553}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":308.754,\\\"y\\\":176.611,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.733010411886108,\\\"y\\\":-0.6802174182322576}},{\\\"point\\\":{\\\"x\\\":502.73,\\\"y\\\":176.611,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.733010411886106,\\\"y\\\":-0.6802174182322599}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":362.587,\\\"y\\\":565.604,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":196.501,\\\"y\\\":542.031,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7129097839851505,\\\"y\\\":0.701255759262087}},{\\\"point\\\":{\\\"x\\\":601.948,\\\"y\\\":542.031,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129097839851494,\\\"y\\\":0.701255759262088}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"4A5CA113-4EFD-477B-A9CD-40406528EDB8_0\\\",\\\"cx\\\":\\\"49.66%\\\",\\\"cy\\\":\\\"85.75%\\\",\\\"r\\\":\\\"65.48%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"49.80%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"cloud_spiraly\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":17.498,\\\"max\\\":702.502},\\\"y\\\":{\\\"min\\\":193.6997869453825,\\\"max\\\":512.3963644619341}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cloud_spiraly\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cloud_spiraly\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 437.618 353.840 C 468.488 353.840 485.735 372.588 485.735 390.886 C 485.735 409.185 468.488 427.933 437.618 427.933 C 406.747 427.933 389.500 409.185 389.500 390.886 C 389.500 372.588 406.747 353.840 437.618 353.840 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 282.029 415.095 C 332.450 420.242 363.898 397.891 389.240 372.977 C 406.163 383.905 432.465 389.003 455.087 380.818 C 485.664 369.754 514.845 337.580 517.113 309.276 C 520.709 264.386 491.963 225.919 467.779 210.230 C 418.726 178.406 363.920 203.476 351.072 215.124 C 301.660 259.924 307.188 305.432 304.672 324.797 C 300.877 353.997 288.477 369.325 273.207 380.641 C 260.281 390.220 231.363 399.019 231.358 399.021 C 231.363 399.022 265.214 413.378 282.029 415.095 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 282.029 415.095 C 332.450 420.242 363.898 397.891 389.240 372.977 C 406.163 383.905 432.465 389.003 455.087 380.818 C 485.664 369.754 514.845 337.580 517.113 309.276 C 520.709 264.386 491.963 225.919 467.779 210.230 C 418.726 178.406 363.920 203.476 351.072 215.124 C 301.660 259.924 307.188 305.432 304.672 324.797 C 300.877 353.997 288.477 369.325 273.207 380.641 C 260.281 390.220 231.363 399.019 231.358 399.021 C 231.363 399.022 265.214 413.378 282.029 415.095 M 392.151 245.308 C 342.386 270.776 326.917 332.731 389.240 372.977 M 463.541 312.341 C 483.723 267.395 434.012 223.885 392.151 245.308 M 403.508 324.523 C 421.441 346.920 453.400 334.923 463.541 312.341 M 418.747 286.854 C 401.557 284.100 387.358 304.352 403.508 324.523 M 421.218 302.963 C 430.239 302.952 430.420 288.724 418.747 286.854 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 332.318 435.715 C 352.000 397.367 344.027 365.538 332.135 337.752 C 346.029 327.729 358.207 308.472 358.725 288.018 C 359.423 260.373 342.968 227.299 321.249 216.742 C 286.803 200.001 247.434 210.867 227.521 225.168 C 187.130 254.177 190.028 305.351 195.279 319.133 C 215.474 372.140 253.234 381.846 267.795 389.832 C 289.752 401.875 298.057 416.442 302.294 432.040 C 305.882 445.244 303.902 470.876 303.902 470.880 C 303.905 470.876 325.754 448.504 332.318 435.715 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 332.318 435.715 C 352.000 397.367 344.027 365.538 332.135 337.752 C 346.029 327.729 358.207 308.472 358.725 288.018 C 359.423 260.373 342.968 227.299 321.249 216.742 C 286.803 200.001 247.434 210.867 227.521 225.168 C 187.130 254.177 190.028 305.351 195.279 319.133 C 215.474 372.140 253.234 381.846 267.795 389.832 C 289.752 401.875 298.057 416.442 302.294 432.040 C 305.882 445.244 303.902 470.876 303.902 470.880 C 303.905 470.876 325.754 448.504 332.318 435.715 M 231.902 295.934 C 236.674 343.238 280.965 374.666 332.135 337.752 M 307.097 260.129 C 277.739 230.231 227.887 256.143 231.902 295.934 M 298.167 311.454 C 321.460 304.180 321.847 275.150 307.097 260.129 M 273.044 287.724 C 265.542 300.489 277.190 318.005 298.167 311.454 M 286.570 290.752 C 289.353 283.603 278.138 279.055 273.044 287.724 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 48.205 348.166 C 82.655 321.688 115.662 323.816 145.371 330.563 C 152.787 314.967 169.670 299.396 189.857 295.170 C 217.142 289.458 252.923 299.769 267.333 319.388 C 290.186 350.504 286.558 391.511 275.993 413.852 C 254.562 459.167 203.297 465.584 188.678 462.880 C 132.453 452.478 115.975 416.800 105.413 403.812 C 89.486 384.227 73.535 378.638 57.300 377.267 C 43.556 376.108 18.502 382.724 18.498 382.724 C 18.501 382.721 36.717 356.996 48.205 348.166 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 75.489 358.473 C 111.999 355.387 135.505 368.779 135.511 368.780 M 22.135 379.693 C 22.141 379.690 45.507 361.006 75.489 358.473 M 48.205 348.166 C 82.655 321.688 115.662 323.816 145.371 330.563 C 152.787 314.967 169.670 299.396 189.857 295.170 C 217.142 289.458 252.923 299.769 267.333 319.388 C 290.186 350.504 286.558 391.511 275.993 413.852 C 254.562 459.167 203.297 465.584 188.678 462.880 C 132.453 452.478 115.975 416.800 105.413 403.812 C 89.486 384.227 73.535 378.638 57.300 377.267 C 43.556 376.108 18.502 382.724 18.498 382.724 C 18.501 382.721 36.717 356.996 48.205 348.166 M 205.031 422.355 C 157.262 426.210 118.060 388.001 145.371 330.563 M 226.883 341.297 C 261.857 364.978 245.214 419.112 205.031 422.355 M 177.614 359.469 C 180.597 335.053 209.311 329.399 226.883 341.297 M 205.703 380.071 C 194.408 389.826 174.926 381.456 177.614 359.469 M 200.245 367.210 C 206.829 363.152 213.373 373.446 205.703 380.071 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 672.935 350.243 C 639.703 320.190 606.049 314.430 574.266 325.071 C 568.549 309.571 553.811 293.276 534.944 287.504 C 509.444 279.703 474.463 286.433 459.039 303.878 C 434.576 331.546 434.158 371.051 442.619 393.125 C 460.438 439.612 511.745 447.148 526.499 446.563 C 577.053 444.558 595.510 414.855 606.000 404.487 C 625.382 385.330 642.730 380.532 660.318 380.643 C 675.207 380.738 701.498 390.296 701.502 390.297 C 701.500 390.293 684.537 360.735 672.935 350.243 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 642.597 358.662 C 605.715 351.812 580.361 362.332 580.355 362.333 M 697.887 386.682 C 697.882 386.679 674.532 364.594 642.597 358.662 M 672.935 350.243 C 639.703 320.190 606.049 314.430 574.266 325.071 C 568.549 309.571 553.811 293.276 534.944 287.504 C 509.444 279.703 474.463 286.433 459.039 303.878 C 434.576 331.546 434.158 371.051 442.619 393.125 C 460.438 439.612 511.745 447.148 526.499 446.563 C 577.053 444.558 595.510 414.855 606.000 404.487 C 625.382 385.330 642.730 380.532 660.318 380.643 C 675.207 380.738 701.498 390.296 701.502 390.297 C 701.500 390.293 684.537 360.735 672.935 350.243 M 509.490 407.363 C 554.666 415.167 595.319 382.154 574.266 325.071 M 495.681 328.249 C 460.313 347.786 471.488 400.798 509.490 407.363 M 541.049 349.821 C 540.318 326.302 513.451 318.432 495.681 328.249 M 512.506 367.020 C 522.423 377.291 541.708 371.002 541.049 349.821 M 518.818 355.239 C 512.897 350.804 505.771 360.045 512.506 367.020 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 511.934 464.803 C 474.470 487.837 440.874 491.329 399.141 472.278 C 391.223 488.829 373.248 505.330 351.791 509.770 C 322.791 515.771 284.803 504.728 269.542 483.849 C 245.340 450.736 249.295 407.179 260.574 383.471 C 283.454 335.381 337.934 328.690 353.458 331.599 C 413.165 342.788 432.666 379.280 441.772 394.557 C 455.948 418.339 469.251 427.925 484.764 436.793 C 506.719 449.343 533.321 446.473 533.326 446.474 C 533.324 446.475 525.934 456.196 511.934 464.803 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 466.127 458.181 C 429.141 452.014 409.715 431.704 409.710 431.701 M 531.316 447.989 C 531.310 447.990 500.232 463.867 466.127 458.181 M 511.934 464.803 C 474.470 487.837 440.874 491.329 399.141 472.278 C 391.223 488.829 373.248 505.330 351.791 509.770 C 322.791 515.771 284.803 504.728 269.542 483.849 C 245.340 450.736 249.295 407.179 260.574 383.471 C 283.454 335.381 337.934 328.690 353.458 331.599 C 413.165 342.788 432.666 379.280 441.772 394.557 C 455.948 418.339 469.251 427.925 484.764 436.793 C 506.719 449.343 533.321 446.473 533.326 446.474 C 533.324 446.475 525.934 456.196 511.934 464.803 M 335.984 374.612 C 386.743 370.633 428.298 411.324 399.141 472.278 M 312.570 460.673 C 275.472 435.429 293.286 377.958 335.984 374.612 M 364.958 441.490 C 361.727 467.421 331.209 473.357 312.570 460.673 M 335.166 419.532 C 347.191 409.196 367.867 418.136 364.958 441.490 M 340.933 433.209 C 333.928 437.504 327.001 426.551 335.166 419.532 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":225.98,\\\"max\\\":494.02},\\\"y\\\":{\\\"min\\\":253.465,\\\"max\\\":434.173}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":593.123,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360.024,\\\"y\\\":171.719,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":37.533,\\\"y\\\":366.898,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873200064072,\\\"y\\\":0.005035854088752079}},{\\\"point\\\":{\\\"x\\\":680.959,\\\"y\\\":366.898,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873181281341,\\\"y\\\":0.005036227050266362}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":519.314,\\\"y\\\":453.248,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128399409857223,\\\"y\\\":0.7013267558959032}},{\\\"point\\\":{\\\"x\\\":201.881,\\\"y\\\":453.281,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987485729302879,\\\"y\\\":0.7153673404817178}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":487.847,\\\"y\\\":227.192,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.631497449151015,\\\"y\\\":-0.7753779541073897}},{\\\"point\\\":{\\\"x\\\":225.834,\\\"y\\\":227.236,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817655631627131,\\\"y\\\":-0.731570718991287}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":502.734,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"cloud_spiraly_vertical\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":220.42819759562494,\\\"max\\\":512.2983085362782},\\\"y\\\":{\\\"min\\\":7.510999999999999,\\\"max\\\":634.662}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cloud_spiraly_vertical\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cloud_spiraly\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 365.638 250.044 C 365.638 221.788 348.478 206.002 331.730 206.002 C 314.981 206.002 297.822 221.788 297.822 250.044 C 297.822 278.299 314.981 294.085 331.730 294.085 C 348.478 294.085 365.638 278.299 365.638 250.044 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 309.572 392.453 C 304.860 346.303 325.318 317.519 348.122 294.323 C 338.120 278.834 333.453 254.760 340.946 234.054 C 351.072 206.067 380.521 179.357 406.428 177.282 C 447.515 173.991 482.723 200.302 497.083 222.436 C 526.212 267.335 503.266 317.499 492.604 329.258 C 451.599 374.486 409.946 369.425 392.221 371.728 C 365.494 375.201 351.464 386.552 341.108 400.527 C 332.340 412.359 324.286 438.828 324.284 438.832 C 324.283 438.827 311.143 407.844 309.572 392.453 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 309.572 392.453 C 304.860 346.303 325.318 317.519 348.122 294.323 C 338.120 278.834 333.453 254.760 340.946 234.054 C 351.072 206.067 380.521 179.357 406.428 177.282 C 447.515 173.991 482.723 200.302 497.083 222.436 C 526.212 267.335 503.266 317.499 492.604 329.258 C 451.599 374.486 409.946 369.425 392.221 371.728 C 365.494 375.201 351.464 386.552 341.108 400.527 C 332.340 412.359 324.286 438.828 324.284 438.832 C 324.283 438.827 311.143 407.844 309.572 392.453 M 464.977 291.659 C 441.666 337.208 384.959 351.367 348.122 294.323 M 403.622 226.316 C 444.761 207.844 484.585 253.343 464.977 291.659 M 392.472 281.264 C 371.972 264.849 382.953 235.598 403.622 226.316 M 426.950 267.316 C 429.470 283.050 410.934 296.046 392.472 281.264 M 412.206 265.054 C 412.216 256.797 425.239 256.631 426.950 267.316 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 290.698 346.424 C 325.798 328.409 354.931 335.706 380.363 346.591 C 389.537 333.874 407.163 322.727 425.885 322.254 C 451.188 321.614 481.461 336.676 491.123 356.555 C 506.446 388.084 496.501 424.118 483.411 442.344 C 456.859 479.314 410.020 476.662 397.405 471.855 C 348.888 453.371 340.005 418.809 332.695 405.481 C 321.672 385.384 308.339 377.783 294.062 373.904 C 281.976 370.621 258.516 372.433 258.512 372.433 C 258.516 372.430 278.993 352.432 290.698 346.424 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 290.698 346.424 C 325.798 328.409 354.931 335.706 380.363 346.591 C 389.537 333.874 407.163 322.727 425.885 322.254 C 451.188 321.614 481.461 336.676 491.123 356.555 C 506.446 388.084 496.501 424.118 483.411 442.344 C 456.859 479.314 410.020 476.662 397.405 471.855 C 348.888 453.371 340.005 418.809 332.695 405.481 C 321.672 385.384 308.339 377.783 294.062 373.904 C 281.976 370.621 258.516 372.433 258.512 372.433 C 258.516 372.430 278.993 352.432 290.698 346.424 M 418.639 438.334 C 375.342 433.966 346.576 393.427 380.363 346.591 M 451.412 369.509 C 478.777 396.380 455.060 442.009 418.639 438.334 M 404.434 377.682 C 411.091 356.362 437.662 356.008 451.412 369.509 M 426.154 400.677 C 414.470 407.544 398.437 396.882 404.434 377.682 M 423.382 388.297 C 429.926 385.749 434.089 396.014 426.154 400.677 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 370.832 606.470 C 395.066 574.939 393.119 544.728 386.943 517.535 C 401.218 510.748 415.471 495.294 419.339 476.817 C 424.567 451.844 415.129 419.093 397.171 405.904 C 368.692 384.987 331.158 388.307 310.710 397.978 C 269.233 417.593 263.359 464.516 265.835 477.897 C 275.355 529.359 308.011 544.441 319.899 554.109 C 337.825 568.686 342.941 583.287 344.195 598.146 C 345.257 610.726 339.201 633.659 339.200 633.662 C 339.204 633.659 362.750 616.986 370.832 606.470 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 361.398 581.498 C 364.222 548.080 351.965 526.566 351.964 526.560 M 341.975 630.333 C 341.977 630.328 359.079 608.940 361.398 581.498 M 370.832 606.470 C 395.066 574.939 393.119 544.728 386.943 517.535 C 401.218 510.748 415.471 495.294 419.339 476.817 C 424.567 451.844 415.129 419.093 397.171 405.904 C 368.692 384.987 331.158 388.307 310.710 397.978 C 269.233 417.593 263.359 464.516 265.835 477.897 C 275.355 529.359 308.011 544.441 319.899 554.109 C 337.825 568.686 342.941 583.287 344.195 598.146 C 345.257 610.726 339.201 633.659 339.200 633.662 C 339.204 633.659 362.750 616.986 370.832 606.470 M 302.927 462.929 C 299.398 506.651 334.371 542.534 386.943 517.535 M 377.118 442.928 C 355.443 410.917 305.895 426.150 302.927 462.929 M 360.486 488.024 C 382.833 485.293 388.009 459.012 377.118 442.928 M 341.629 462.314 C 332.701 472.653 340.361 490.483 360.486 488.024 M 353.401 467.309 C 357.115 461.283 347.692 455.293 341.629 462.314 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 368.931 34.659 C 396.437 65.076 401.709 95.879 391.971 124.970 C 406.158 130.202 421.072 143.693 426.355 160.961 C 433.495 184.301 427.335 216.319 411.368 230.437 C 386.044 252.828 349.885 253.211 329.681 245.466 C 287.131 229.156 280.234 182.195 280.770 168.691 C 282.605 122.419 309.791 105.526 319.281 95.924 C 336.815 78.184 341.207 62.305 341.105 46.207 C 341.019 32.579 332.270 8.515 332.270 8.511 C 332.273 8.513 359.327 24.039 368.931 34.659 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 361.224 62.427 C 367.494 96.185 357.865 119.391 357.865 119.396 M 335.578 11.820 C 335.581 11.825 355.795 33.197 361.224 62.427 M 368.931 34.659 C 396.437 65.076 401.709 95.879 391.971 124.970 C 406.158 130.202 421.072 143.693 426.355 160.961 C 433.495 184.301 427.335 216.319 411.368 230.437 C 386.044 252.828 349.885 253.211 329.681 245.466 C 287.131 229.156 280.234 182.195 280.770 168.691 C 282.605 122.419 309.791 105.526 319.281 95.924 C 336.815 78.184 341.207 62.305 341.105 46.207 C 341.019 32.579 332.270 8.515 332.270 8.511 C 332.273 8.513 359.327 24.039 368.931 34.659 M 316.649 184.259 C 309.506 142.910 339.723 105.700 391.971 124.970 M 389.062 196.899 C 371.179 229.271 322.657 219.043 316.649 184.259 M 369.317 155.373 C 390.844 156.042 398.047 180.634 389.062 196.899 M 353.575 181.498 C 344.174 172.421 349.930 154.770 369.317 155.373 M 364.358 175.721 C 368.417 181.141 359.958 187.663 353.575 181.498 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 264.074 182.022 C 242.992 216.313 239.795 247.063 257.233 285.261 C 242.084 292.508 226.980 308.960 222.917 328.600 C 217.424 355.144 227.531 389.915 246.641 403.882 C 276.950 426.034 316.817 422.414 338.517 412.090 C 382.533 391.149 388.658 341.284 385.995 327.074 C 375.754 272.425 342.353 254.576 328.370 246.241 C 306.602 233.266 297.828 221.089 289.711 206.890 C 278.224 186.795 280.852 162.447 280.851 162.442 C 280.849 162.444 271.952 169.208 264.074 182.022 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 270.135 223.948 C 275.780 257.802 294.370 275.582 294.372 275.587 M 279.464 164.282 C 279.463 164.288 264.931 192.733 270.135 223.948 M 264.074 182.022 C 242.992 216.313 239.795 247.063 257.233 285.261 C 242.084 292.508 226.980 308.960 222.917 328.600 C 217.424 355.144 227.531 389.915 246.641 403.882 C 276.950 426.034 316.817 422.414 338.517 412.090 C 382.533 391.149 388.658 341.284 385.995 327.074 C 375.754 272.425 342.353 254.576 328.370 246.241 C 306.602 233.266 297.828 221.089 289.711 206.890 C 278.224 186.795 280.852 162.447 280.851 162.442 C 280.849 162.444 271.952 169.208 264.074 182.022 M 346.626 343.068 C 350.267 296.609 313.024 258.574 257.233 285.261 M 267.854 364.500 C 290.960 398.455 343.563 382.150 346.626 343.068 M 285.413 316.549 C 261.678 319.506 256.244 347.439 267.854 364.500 M 305.510 343.817 C 314.971 332.811 306.788 313.886 285.413 316.549 M 292.992 338.538 C 289.061 344.950 299.086 351.290 305.510 343.817 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":292.11,\\\"max\\\":457.511},\\\"y\\\":{\\\"min\\\":198.419,\\\"max\\\":443.754}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":354.128,\\\"y\\\":673.805,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":480.131,\\\"y\\\":340.995,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":353.686,\\\"y\\\":27.315,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.005016523979622043,\\\"y\\\":-0.9999874171644171}},{\\\"point\\\":{\\\"x\\\":353.686,\\\"y\\\":616.24,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.0050169299027262,\\\"y\\\":0.9999874151279861}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":274.65,\\\"y\\\":175.267,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7012676521221254,\\\"y\\\":-0.7128980853439865}},{\\\"point\\\":{\\\"x\\\":274.621,\\\"y\\\":465.812,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7154230781409924,\\\"y\\\":0.6986915050744982}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":481.559,\\\"y\\\":204.068,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7754328473320149,\\\"y\\\":-0.63143004305985}},{\\\"point\\\":{\\\"x\\\":481.518,\\\"y\\\":443.888,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7315754135102335,\\\"y\\\":0.681760525659363}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":221.763,\\\"y\\\":348.611,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"clouds\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":13.46819945902843,\\\"max\\\":675.096},\\\"y\\\":{\\\"min\\\":6.053967119420255,\\\"max\\\":643.4093860538943}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"clouds\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"clouds\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 250.559 119.554 C 250.735 93.442 277.202 64.095 317.802 76.822 C 314.003 43.900 365.078 9.495 400.789 51.417 C 422.930 -11.773 510.274 -1.684 519.682 54.466 C 544.546 30.699 573.984 50.447 574.870 69.479 C 613.409 46.977 651.657 81.912 651.821 109.125 C 651.986 136.611 618.781 168.117 576.559 149.928 C 578.612 189.513 521.498 218.598 478.675 169.928 C 470.908 192.767 386.929 229.427 365.097 162.797 C 359.459 175.396 333.888 185.359 321.082 160.566 C 281.515 177.725 250.382 145.942 250.559 119.554 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 599.608 592.116 C 594.184 600.054 582.610 612.182 554.082 604.963 C 545.994 635.452 489.387 659.574 450.005 622.898 C 427.775 649.855 375.728 630.405 376.763 604.754 C 376.807 603.680 376.875 602.281 376.872 601.814 C 366.160 607.689 349.947 607.622 344.555 593.527 C 340.303 598.226 324.854 608.223 311.487 607.344 C 290.598 605.970 272.974 590.977 273.150 570.044 C 273.324 549.391 292.530 527.717 326.722 536.007 C 325.992 502.191 378.184 470.838 418.718 500.756 C 425.403 480.518 453.747 461.250 481.412 461.250 C 512.151 461.250 538.137 481.088 547.198 508.385 C 577.083 491.512 601.810 522.267 604.465 531.463 C 611.866 525.613 622.464 522.699 633.205 523.418 C 655.235 524.893 673.096 541.229 673.096 563.309 C 673.096 585.388 642.648 614.952 599.608 592.116 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 221.169 409.612 C 209.357 434.284 137.970 441.838 120.601 398.103 C 101.790 411.390 78.536 407.331 67.314 381.037 C 35.657 399.851 13.601 371.571 15.593 352.860 C 18.363 326.826 46.206 325.966 54.780 325.948 C 53.861 293.127 91.150 261.718 136.652 285.269 C 148.348 240.737 200.042 248.293 207.223 273.737 C 252.085 226.165 323.714 270.620 315.528 311.940 C 353.197 292.319 390.043 324.987 387.636 351.916 C 385.538 375.384 346.735 394.457 319.731 377.954 C 312.104 411.053 271.663 443.158 221.169 409.612 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":702.792,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":566.695,\\\"y\\\":504.121,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":94.951,\\\"y\\\":279.628,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":277.581,\\\"y\\\":417.32,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"coffin\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":237.851,\\\"max\\\":482.149},\\\"y\\\":{\\\"min\\\":57.632,\\\"max\\\":662.368}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"coffin\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"coffin\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 420.075 660.368 C 420.063 660.368 299.937 660.368 299.925 660.368 C 299.919 660.322 239.857 199.853 239.851 199.807 C 239.857 199.793 299.919 59.646 299.925 59.632 C 299.937 59.632 420.063 59.632 420.075 59.632 C 420.081 59.646 480.142 199.794 480.149 199.807 C 480.149 199.807 420.081 660.322 420.075 660.368 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":280.661,\\\"max\\\":439.339},\\\"y\\\":{\\\"min\\\":91.761,\\\"max\\\":554.726}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":527.427,\\\"y\\\":360,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360.054,\\\"y\\\":60.316,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":262.592,\\\"y\\\":355.705,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872906762893,\\\"y\\\":0.005041674909603205}},{\\\"point\\\":{\\\"x\\\":457.408,\\\"y\\\":355.705,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872906762893,\\\"y\\\":0.005041674909603205}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":418.216,\\\"y\\\":648.752,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129100341718151,\\\"y\\\":0.7012555049175312}},{\\\"point\\\":{\\\"x\\\":301.612,\\\"y\\\":648.795,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987090269036205,\\\"y\\\":0.7154059656750116}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":270.646,\\\"y\\\":132.893,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8908786038487382,\\\"y\\\":-0.45424147015053923}},{\\\"point\\\":{\\\"x\\\":449.354,\\\"y\\\":132.893,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8908786038487382,\\\"y\\\":-0.45424147015053923}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":655.259,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"cornucopia_half\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":51.06227687351811,\\\"max\\\":651.3241651462271},\\\"y\\\":{\\\"min\\\":68.11951449392149,\\\"max\\\":610.466}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cornucopia_half\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cornucopia\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 246.813 607.653 C 246.904 608.427 515.055 607.450 649.170 608.466 C 649.942 568.027 647.566 498.864 647.518 497.970 C 647.466 496.991 642.102 425.724 637.070 393.620 C 631.705 359.386 625.379 327.729 615.785 299.161 C 606.625 271.885 594.502 247.716 581.547 225.623 C 568.389 203.186 554.028 182.804 537.163 165.337 C 519.441 146.983 499.325 131.675 477.567 118.507 C 456.701 105.879 434.113 95.264 409.503 87.306 C 385.465 79.533 359.416 75.078 331.839 70.953 C 322.363 69.535 276.011 69.984 263.727 71.862 C 236.565 76.013 211.204 81.590 190.565 89.629 C 165.709 99.311 146.777 111.877 134.683 122.484 C 118.745 136.462 103.581 151.436 90.747 168.170 C 84.744 175.996 67.737 211.175 64.887 220.538 C 59.551 238.070 55.152 256.031 53.623 274.698 C 52.217 291.857 53.468 309.303 57.231 326.040 C 60.995 342.776 67.293 358.805 76.049 373.134 C 84.805 387.463 96.017 400.093 109.609 410.031 C 123.201 419.969 139.173 427.215 157.445 430.777 C 171.466 433.511 183.938 434.509 194.954 433.314 C 208.800 431.813 220.662 427.465 230.938 422.005 C 236.679 418.955 241.525 415.139 245.764 410.788 C 251.801 404.591 256.954 397.623 261.137 389.982 C 265.611 381.809 267.783 372.777 267.940 364.014 C 268.097 355.250 266.238 346.754 262.650 339.652 C 259.062 332.551 253.744 326.843 246.982 323.656 C 240.221 320.469 232.016 319.803 222.653 322.784 C 227.269 325.659 231.130 331.843 231.131 331.844 C 231.131 331.845 230.976 340.942 230.976 340.943 C 230.975 340.944 225.351 348.834 225.350 348.835 C 225.349 348.836 217.417 354.275 217.416 354.276 C 217.415 354.276 206.741 357.190 206.739 357.190 C 206.738 357.190 195.805 356.514 195.804 356.514 C 195.803 356.513 185.788 352.526 185.787 352.526 C 185.786 352.525 177.866 345.506 177.865 345.505 C 177.864 345.504 171.005 330.769 171.005 330.767 C 171.005 330.765 169.921 313.755 169.921 313.753 C 169.921 313.751 174.074 296.461 174.074 296.459 C 174.075 296.458 182.925 280.883 182.926 280.881 C 182.927 280.880 195.765 268.118 195.766 268.117 C 195.768 268.116 214.131 257.857 214.133 257.855 C 214.135 257.855 233.999 253.432 234.001 253.431 C 234.003 253.431 256.770 250.612 256.773 250.611 C 256.775 250.612 283.380 254.772 283.383 254.773 C 283.385 254.774 302.264 264.683 302.266 264.684 C 302.268 264.686 320.329 282.664 320.331 282.666 C 320.333 282.669 331.686 307.602 331.687 307.605 C 331.688 307.608 337.329 337.395 337.330 337.398 C 337.330 337.402 335.470 378.517 335.469 378.522 C 335.467 378.529 317.646 447.377 317.644 447.385 C 317.640 447.393 285.161 515.637 285.152 515.664 C 285.133 515.696 255.039 559.885 246.813 607.653 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 285.152 515.664 C 285.133 515.696 255.117 559.285 246.813 607.653 C 246.852 607.644 515.055 607.450 649.170 608.466 C 649.942 568.027 647.566 498.864 647.518 497.970 C 647.466 496.991 642.102 425.724 637.070 393.620 C 558.353 437.811 396.842 463.931 317.644 447.385 C 317.640 447.393 285.161 515.637 285.152 515.664 C 353.949 535.875 569.227 527.378 647.518 497.970 M 335.469 378.522 C 335.467 378.529 317.646 447.377 317.644 447.385 M 337.330 337.398 C 337.330 337.402 335.470 378.517 335.469 378.522 C 409.426 382.701 556.074 353.786 615.785 299.161 C 606.625 271.885 594.502 247.716 581.547 225.623 C 528.062 288.084 401.292 337.442 337.330 337.398 C 337.329 337.395 331.688 307.608 331.687 307.605 C 331.686 307.602 320.333 282.669 320.331 282.666 C 320.329 282.664 302.268 264.686 302.266 264.684 C 302.264 264.683 283.385 254.774 283.383 254.773 C 283.380 254.772 256.775 250.612 256.773 250.611 C 256.770 250.612 234.003 253.431 234.001 253.431 C 233.999 253.432 214.135 257.855 214.133 257.855 C 214.131 257.857 195.768 268.116 195.766 268.117 C 195.765 268.118 182.927 280.880 182.926 280.881 C 182.925 280.883 174.075 296.458 174.074 296.459 C 174.074 296.461 169.921 313.751 169.921 313.753 C 169.921 313.755 171.005 330.765 171.005 330.767 C 171.005 330.769 177.864 345.504 177.865 345.505 C 177.866 345.506 185.786 352.525 185.787 352.526 C 185.788 352.526 195.803 356.513 195.804 356.514 C 195.805 356.514 206.738 357.190 206.739 357.190 C 206.741 357.190 217.415 354.276 217.416 354.276 C 217.417 354.275 225.349 348.836 225.350 348.835 C 225.351 348.834 230.975 340.944 230.976 340.943 C 230.976 340.942 231.131 331.845 231.131 331.844 C 242.320 332.067 241.699 326.385 246.982 323.656 C 240.221 320.469 232.016 319.803 222.653 322.784 C 227.269 325.659 231.130 331.843 231.131 331.844 M 174.074 296.459 C 156.496 273.122 97.676 265.635 53.623 274.698 C 52.217 291.857 53.468 309.303 57.231 326.040 C 87.458 305.467 144.869 298.430 169.921 313.753 M 171.005 330.767 C 143.623 324.864 96.367 349.172 76.049 373.134 C 84.805 387.463 96.017 400.093 109.609 410.031 C 121.064 382.300 145.900 355.030 177.865 345.505 M 185.787 352.526 C 165.743 369.831 160.587 397.384 159.020 403.381 C 158.271 406.245 157.970 421.645 157.445 430.777 C 171.466 433.511 183.938 434.509 194.954 433.314 C 193.202 425.526 189.869 412.527 189.696 409.950 C 189.309 404.162 185.442 376.654 195.804 356.514 M 206.739 357.190 C 206.146 377.319 214.363 395.087 216.209 399.368 C 217.362 402.043 226.028 414.459 230.938 422.005 C 236.679 418.955 241.525 415.139 245.764 410.788 C 251.801 404.591 256.954 397.623 261.137 389.982 C 255.085 388.598 244.714 386.847 242.982 385.829 C 239.207 383.608 220.150 371.828 217.416 354.276 M 225.350 348.835 C 231.100 361.661 248.961 364.977 252.319 365.668 C 253.978 366.009 262.733 364.565 267.940 364.014 C 268.097 355.250 266.238 346.754 262.650 339.652 C 259.546 341.739 254.521 345.653 253.339 345.913 C 250.926 346.442 236.661 348.785 230.976 340.943 M 182.926 280.881 C 170.598 250.599 114.884 222.953 64.887 220.538 C 59.551 238.070 55.152 256.031 53.623 274.698 M 234.001 253.431 C 243.032 216.880 239.142 150.300 190.565 89.629 C 165.709 99.311 146.777 111.877 134.683 122.484 C 187.255 160.352 216.008 222.782 214.133 257.855 M 256.773 250.611 C 273.304 208.767 283.536 147.668 263.727 71.862 C 236.565 76.013 211.204 81.590 190.565 89.629 M 283.383 254.773 C 308.843 216.482 341.127 153.511 331.839 70.953 C 322.363 69.535 276.011 69.984 263.727 71.862 M 302.266 264.684 C 340.276 240.347 394.020 174.753 409.503 87.306 C 385.465 79.533 359.416 75.078 331.839 70.953 M 320.331 282.666 C 364.009 265.563 452.713 200.180 477.567 118.507 C 456.701 105.879 434.113 95.264 409.503 87.306 M 331.687 307.605 C 391.410 295.458 500.566 241.213 537.163 165.337 C 519.441 146.983 499.325 131.675 477.567 118.507 M 195.766 268.117 C 190.313 234.544 137.714 186.059 90.747 168.170 C 84.744 175.996 67.737 211.175 64.887 220.538 M 262.650 339.652 C 259.062 332.551 253.744 326.843 246.982 323.656 M 261.137 389.982 C 265.611 381.809 267.783 372.777 267.940 364.014 M 194.954 433.314 C 208.800 431.813 220.662 427.465 230.938 422.005 M 109.609 410.031 C 123.201 419.969 139.173 427.215 157.445 430.777 M 57.231 326.040 C 60.995 342.776 67.293 358.805 76.049 373.134 M 134.683 122.484 C 118.745 136.462 103.581 151.436 90.747 168.170 M 581.547 225.623 C 568.389 203.186 554.028 182.804 537.163 165.337 M 637.070 393.620 C 631.705 359.386 625.379 327.729 615.785 299.161 \\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":448.723,\\\"y\\\":606.682,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":303.915,\\\"y\\\":70.173,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":51.525,\\\"y\\\":289.454,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872861335325,\\\"y\\\":0.0050425758588849715}},{\\\"point\\\":{\\\"x\\\":611.235,\\\"y\\\":289.454,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872880189178,\\\"y\\\":0.0050422019564934075}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":638.106,\\\"y\\\":602.105,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712902628479816,\\\"y\\\":0.7012630336090514}},{\\\"point\\\":{\\\"x\\\":255.97,\\\"y\\\":602.144,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987116039190656,\\\"y\\\":0.7154034487957455}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":495.771,\\\"y\\\":128.474,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314715662654435,\\\"y\\\":-0.7753990334003955}},{\\\"point\\\":{\\\"x\\\":128.244,\\\"y\\\":128.553,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.681712969909508,\\\"y\\\":-0.73161972817657}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":449.271,\\\"y\\\":607.867,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true}},{\\\"name\\\":\\\"cow_head\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":14.211212280476229,\\\"max\\\":702.3657877195237},\\\"y\\\":{\\\"min\\\":126.98500000000001,\\\"max\\\":643.9039359451795}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cow_head2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cow_head_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 447.837 219.023 C 447.846 219.020 512.802 210.310 542.768 191.620 C 568.603 175.507 600.503 128.992 600.509 128.985 C 600.505 128.996 593.623 202.016 557.448 238.596 C 529.302 267.057 473.291 274.803 473.282 274.807 C 473.283 274.809 486.982 298.293 486.983 298.295 C 486.993 298.294 554.275 281.083 581.914 287.530 C 623.457 297.220 702.205 359.479 700.333 368.759 C 698.481 377.938 593.972 413.076 561.362 398.119 C 543.851 390.088 533.860 339.965 519.279 334.506 C 517.213 333.732 508.515 335.484 508.514 335.484 C 508.516 335.495 534.821 405.307 530.045 439.223 C 522.953 489.584 452.738 576.223 452.730 576.237 C 452.728 576.241 450.280 606.546 436.092 620.277 C 412.473 643.134 365.217 641.764 360.735 641.807 C 355.984 641.853 305.641 644.389 280.484 620.277 C 266.231 606.615 263.848 576.241 263.847 576.237 C 263.839 576.223 193.624 489.584 186.532 439.223 C 181.756 405.307 208.061 335.495 208.063 335.484 C 208.062 335.484 199.364 333.732 197.298 334.506 C 182.716 339.965 172.726 390.088 155.215 398.119 C 122.605 413.076 18.096 377.938 16.244 368.759 C 14.372 359.479 93.120 297.220 134.663 287.530 C 162.302 281.083 229.584 298.294 229.593 298.295 C 229.595 298.293 243.293 274.809 243.295 274.807 C 243.286 274.803 187.274 267.057 159.129 238.596 C 122.954 202.016 116.072 128.996 116.068 128.985 C 116.074 128.992 147.974 175.507 173.809 191.620 C 203.775 210.310 268.731 219.020 268.740 219.023 C 268.749 219.022 357.790 211.194 357.799 211.194 C 357.799 211.194 447.828 219.022 447.837 219.023 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 209.042 333.527 C 202.944 329.844 190.751 322.478 190.749 322.477 C 190.745 322.475 161.314 304.963 143.471 306.124 C 102.464 308.794 41.290 355.079 44.626 364.844 M 509.493 333.527 C 515.436 329.939 527.321 322.766 527.322 322.765 C 527.327 322.763 557.030 304.967 575.063 306.124 C 616.073 308.757 677.253 355.082 673.909 364.844 M 264.826 574.279 C 264.830 574.274 266.554 545.750 310.823 525.346 C 321.568 520.393 357.794 521.432 357.799 521.431 C 357.804 521.432 394.780 520.304 405.754 525.346 C 450.959 546.117 452.725 575.253 452.730 575.258 M 380.308 570.365 C 391.798 570.650 429.046 572.293 427.285 555.685 C 426.877 551.844 413.882 546.436 404.775 547.855 C 388.561 550.381 383.436 562.743 380.308 570.365 C 375.314 582.534 387.910 613.089 385.276 623.213 C 384.083 627.798 380.343 635.372 358.233 635.427 C 341.386 635.469 332.740 627.709 331.301 623.213 C 327.758 612.140 341.263 582.534 336.268 570.365 C 333.140 562.743 331.786 551.329 311.802 547.855 C 301.160 546.006 289.699 551.844 289.292 555.685 C 287.531 572.293 324.779 570.650 336.268 570.365 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 473.282 274.807 C 473.280 274.805 463.587 264.229 457.153 250.517 C 449.907 235.071 450.942 229.521 447.837 219.023 M 243.295 274.807 C 243.296 274.805 253.858 264.494 260.402 250.517 C 267.578 235.190 265.961 229.521 268.740 219.023 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 594.733 372.568 C 561.777 364.054 604.847 318.742 527.322 322.765 C 527.327 322.763 557.030 304.967 575.063 306.124 C 616.073 308.757 677.253 355.082 673.909 364.844 C 671.594 371.599 635.744 383.162 594.733 372.568 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 124.147 372.568 C 156.874 363.944 113.633 319.135 190.749 322.477 C 190.745 322.475 161.314 304.963 143.471 306.124 C 102.464 308.794 41.290 355.079 44.626 364.844 C 46.943 371.630 83.010 383.407 124.147 372.568 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 418.583 393.072 C 418.582 393.071 412.640 387.303 409.669 384.418 C 409.673 384.412 414.723 336.685 449.794 323.740 C 474.514 314.616 499.701 335.483 499.706 335.484 C 499.703 335.491 500.956 381.491 470.346 398.119 C 447.332 410.621 418.588 393.073 418.583 393.072 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 295.144 393.141 C 295.145 393.140 302.987 387.325 306.908 384.418 C 306.904 384.412 301.854 336.685 266.783 323.740 C 242.063 314.616 216.876 335.483 216.871 335.484 C 216.874 335.491 215.520 381.678 246.231 398.119 C 268.058 409.805 295.139 393.141 295.144 393.141 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 312.634 520.442 C 312.633 520.429 306.909 384.431 306.908 384.418 M 403.943 520.442 C 403.944 520.429 409.668 384.431 409.669 384.418 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":304.926,\\\"max\\\":415.074},\\\"y\\\":{\\\"min\\\":228.881,\\\"max\\\":339.028}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":693.882,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":210.669,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":191.995,\\\"y\\\":452.121,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873181281341,\\\"y\\\":0.005036227050270593}},{\\\"point\\\":{\\\"x\\\":525.086,\\\"y\\\":452.121,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873200064072,\\\"y\\\":0.0050358540887562725}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":459.532,\\\"y\\\":561.086,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128965506064748,\\\"y\\\":0.7012692123096449}},{\\\"point\\\":{\\\"x\\\":258.629,\\\"y\\\":561.134,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986883991125071,\\\"y\\\":0.7154261114507926}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":593.877,\\\"y\\\":144.915,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.4872519015636219,\\\"y\\\":-0.8732614639514529}},{\\\"point\\\":{\\\"x\\\":123.002,\\\"y\\\":145.056,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5443686174596458,\\\"y\\\":-0.8388461171901994}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":632.235,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"crescent\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":30.33364723678065,\\\"max\\\":657.93},\\\"y\\\":{\\\"min\\\":15.648719386668894,\\\"max\\\":676.3174193674872}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"crescent\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"crescent\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 655.930 491.343 C 655.930 491.343 655.930 491.343 655.930 491.343 C 617.462 567.084 551.460 628.012 465.387 656.990 C 379.314 685.967 289.872 677.427 214.703 640.124 C 139.534 602.820 78.639 536.754 49.661 450.681 C 20.684 364.608 29.224 275.166 66.528 199.997 C 103.831 124.828 169.897 63.933 255.970 34.955 C 341.182 6.267 429.697 14.351 503.304 51.024 C 464.583 45.617 424.837 46.802 385.256 58.025 C 310.384 79.254 249.736 125.967 215.824 190.857 C 184.008 251.737 174.902 331.993 198.186 401.121 C 222.411 473.040 276.923 529.006 342.635 553.475 C 409.849 578.504 473.647 580.163 552.962 554.870 C 593.627 541.903 626.163 516.605 655.930 491.343 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":288.29,\\\"max\\\":612.556},\\\"y\\\":{\\\"min\\\":153.746,\\\"max\\\":478.012}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":701.999,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":16.462,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":32.423,\\\"y\\\":346.124,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873200064072,\\\"y\\\":0.005035854088752079}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":593.334,\\\"y\\\":578.981,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129329685826609,\\\"y\\\":0.7012321885851466}},{\\\"point\\\":{\\\"x\\\":127.799,\\\"y\\\":579.029,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986883991125066,\\\"y\\\":0.7154261114507933}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.957,\\\"y\\\":671.988,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"crescent_interlock\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":111.379,\\\"max\\\":608.621},\\\"y\\\":{\\\"min\\\":155.90488842429815,\\\"max\\\":564.0951011584016}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"crescent_interlock\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"crescent_interlock\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 319.666 502.446 C 313.478 496.180 307.697 489.511 302.272 482.358 C 269.556 507.232 234.040 519.464 185.741 520.542 C 159.398 521.131 135.327 512.889 112.879 504.113 C 150.535 540.614 201.294 562.943 257.360 562.591 C 294.925 562.356 329.993 551.984 360.005 534.078 C 345.227 525.258 331.679 514.610 319.666 502.446 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 398.535 215.755 C 387.108 204.471 374.343 194.542 360.040 185.901 C 390.323 167.706 426.496 157.166 465.182 157.409 C 520.688 157.757 570.744 180.237 606.360 216.416 C 584.839 205.490 561.396 198.208 536.035 196.818 C 490.941 194.347 448.667 207.545 415.986 235.391 C 410.665 228.539 404.801 221.943 398.535 215.755 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 415.986 235.391 C 410.665 228.539 404.801 221.943 398.535 215.755 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 398.535 215.755 C 387.108 204.471 374.343 194.542 360.040 185.901 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.402 359.594 C 360.380 362.838 360.346 366.045 359.784 369.142 C 363.426 411.458 381.464 451.392 411.742 477.527 C 413.753 479.263 415.859 480.847 417.726 482.272 C 443.662 448.164 458.972 405.264 458.680 358.729 C 458.388 312.194 442.541 269.489 415.986 235.391 C 410.665 228.539 404.801 221.943 398.535 215.755 C 387.108 204.471 374.343 194.542 360.040 185.901 C 329.678 167.706 293.504 157.166 254.818 157.409 C 199.312 157.757 149.256 180.237 113.640 216.416 C 135.162 205.490 158.605 198.208 183.965 196.818 C 229.059 194.347 271.333 207.545 304.011 235.379 C 305.556 236.702 307.613 238.463 309.537 240.375 C 337.344 267.994 355.541 309.122 360.181 350.195 C 360.377 353.418 360.423 356.508 360.402 359.594 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 309.537 240.375 C 337.344 267.994 355.541 309.122 360.181 350.195 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.784 369.142 C 363.426 411.458 381.464 451.392 411.742 477.527 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 411.742 477.527 C 413.753 479.263 415.859 480.847 417.726 482.272 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.005 534.078 C 345.227 525.258 331.679 514.610 319.666 502.446 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 319.666 502.446 C 313.478 496.180 307.697 489.511 302.272 482.358 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 304.011 235.379 C 305.556 236.702 307.613 238.463 309.537 240.375 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 309.537 240.375 C 337.344 267.994 355.541 309.122 360.181 350.195 C 359.728 353.413 359.657 356.507 359.598 359.594 C 359.536 362.836 359.517 366.037 359.784 369.142 C 363.426 411.458 381.464 451.392 411.742 477.527 C 413.753 479.263 415.859 480.847 417.726 482.272 C 450.445 507.231 485.960 519.463 534.259 520.542 C 560.602 521.131 584.674 512.889 607.121 504.113 C 569.465 540.614 518.706 562.943 462.640 562.591 C 425.075 562.356 390.007 551.984 360.005 534.078 C 345.227 525.258 331.679 514.610 319.666 502.446 C 313.478 496.180 307.697 489.511 302.272 482.358 C 276.338 448.164 261.028 405.264 261.320 358.729 C 261.612 312.194 277.460 269.489 304.011 235.379 C 305.556 236.702 307.613 238.463 309.537 240.375 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":483.178,\\\"max\\\":715.749},\\\"y\\\":{\\\"min\\\":243.714,\\\"max\\\":476.286}},{\\\"x\\\":{\\\"min\\\":4.251,\\\"max\\\":236.822},\\\"y\\\":{\\\"min\\\":243.714,\\\"max\\\":476.286}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":636.603,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":102.375,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":544.512,\\\"y\\\":544.918,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129201686221815,\\\"y\\\":0.7012452018885549}},{\\\"point\\\":{\\\"x\\\":175.336,\\\"y\\\":544.956,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986983952206235,\\\"y\\\":0.7154163490696347}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":544.641,\\\"y\\\":175.687,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314255409680891,\\\"y\\\":-0.7754365133350092}},{\\\"point\\\":{\\\"x\\\":175.986,\\\"y\\\":175.75,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817324154662258,\\\"y\\\":-0.7316016085975928}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":564.253,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"crescent_interlock_3\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":14.552,\\\"max\\\":705.448},\\\"y\\\":{\\\"min\\\":17.547,\\\"max\\\":632.6264419362478}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"crescent_interlock_3\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"crescent_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#C39E0CB1-FEA3-4E24-88FE-E38E2E2D91A2_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 639.764 246.165 C 630.229 239.905 620.417 234.409 611.190 230.075 C 612.409 219.748 613.049 210.078 613.137 200.270 C 613.212 191.863 612.878 183.551 612.026 175.193 C 658.415 210.039 689.881 258.634 703.448 311.476 C 687.052 286.164 666.293 263.583 639.764 246.165 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#C39E0CB1-FEA3-4E24-88FE-E38E2E2D91A2_1)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 225.964 279.219 C 255.644 304.678 294.894 323.163 335.656 328.676 C 338.496 322.432 341.683 316.294 345.219 310.292 C 349.794 302.525 354.956 295.099 360.990 287.583 C 386.375 255.956 422.389 231.753 459.923 219.210 C 465.407 217.377 471.078 215.758 476.750 214.418 C 497.676 209.474 519.022 208.121 540.286 210.198 C 549.359 189.870 555.325 168.094 558.376 144.163 C 505.705 121.673 448.687 118.357 396.042 131.962 C 384.134 135.039 372.450 138.983 361.449 143.615 C 322.909 159.842 288.274 185.498 261.017 219.923 C 254.032 228.745 247.377 238.427 241.327 248.694 C 235.426 258.708 230.290 268.955 225.964 279.219 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#C39E0CB1-FEA3-4E24-88FE-E38E2E2D91A2_2)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 214.172 440.595 C 210.770 427.434 208.427 413.999 207.140 400.040 C 240.178 425.027 279.585 442.109 322.482 448.401 C 324.165 456.043 326.461 463.855 329.297 471.457 C 337.845 494.369 348.718 514.586 363.231 533.268 C 376.152 549.902 392.211 565.276 411.999 579.732 C 418.766 584.677 426.456 589.803 434.676 594.826 C 462.770 611.994 493.951 618.196 523.712 622.802 C 469.657 636.238 411.799 632.668 359.344 609.779 C 349.202 605.355 339.957 600.646 330.903 595.310 C 324.264 591.398 317.869 587.233 311.221 582.473 C 261.997 547.244 228.586 496.374 214.172 440.595 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 361.449 143.615 C 322.909 159.842 288.274 185.498 261.017 219.923 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#C39E0CB1-FEA3-4E24-88FE-E38E2E2D91A2_3)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 329.118 132.189 C 340.345 135.305 351.358 139.194 361.449 143.615 C 322.909 159.842 288.274 185.498 261.017 219.923 C 255.542 218.526 250.204 217.363 244.827 216.460 C 221.175 212.485 198.649 211.743 176.415 214.675 C 154.268 217.596 132.422 223.904 109.382 234.090 C 102.042 237.333 93.758 241.430 85.298 246.036 C 56.383 261.782 35.421 285.685 16.552 309.156 C 31.582 256.884 62.467 209.581 107.888 174.918 C 116.605 168.265 126.398 161.787 136.764 155.925 C 143.472 152.131 150.277 148.675 157.160 145.552 C 212.845 120.283 273.605 116.784 329.118 132.189 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.990 287.583 C 386.375 255.956 422.389 231.753 459.923 219.210 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 411.999 579.732 C 392.211 565.276 376.152 549.902 363.231 533.268 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#C39E0CB1-FEA3-4E24-88FE-E38E2E2D91A2_4)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 376.439 310.832 C 371.827 302.680 366.688 294.950 360.990 287.583 C 386.375 255.956 422.389 231.753 459.923 219.210 C 467.966 229.359 475.226 240.156 481.731 251.657 C 486.511 260.109 490.754 268.715 494.348 277.141 C 511.410 317.140 517.447 359.141 513.645 399.322 C 512.166 414.968 509.447 429.664 505.466 444.010 C 490.753 497.029 458.796 545.262 411.999 579.732 C 392.211 565.276 376.152 549.902 363.231 533.268 C 376.708 515.045 387.099 494.678 393.703 472.678 C 396.141 464.558 398.066 456.147 399.360 448.189 C 405.773 408.798 401.418 365.996 385.381 328.879 C 382.639 322.533 379.698 316.592 376.439 310.832 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 311.221 582.473 C 317.869 587.233 324.264 591.398 330.903 595.310 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 330.903 595.310 C 339.957 600.646 349.202 605.355 359.344 609.779 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#C39E0CB1-FEA3-4E24-88FE-E38E2E2D91A2_5)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 284.703 597.978 C 293.819 593.390 302.517 588.305 311.221 582.473 C 317.869 587.233 324.264 591.398 330.903 595.310 C 339.957 600.646 349.202 605.355 359.344 609.779 C 306.663 632.194 248.845 635.146 196.299 620.475 C 226.418 618.931 256.354 612.244 284.703 597.978 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 385.381 328.879 C 401.418 365.996 405.773 408.798 399.360 448.189 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 322.482 448.401 C 279.585 442.109 240.178 425.027 207.140 400.040 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 109.382 234.090 C 132.422 223.904 154.268 217.596 176.415 214.675 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 225.964 279.219 C 255.644 304.678 294.894 323.163 335.656 328.676 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#C39E0CB1-FEA3-4E24-88FE-E38E2E2D91A2_6)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.145 330.381 C 367.926 330.458 376.618 329.947 385.381 328.879 C 401.418 365.996 405.773 408.798 399.360 448.189 C 385.728 450.254 371.870 451.279 357.747 451.153 C 345.838 451.048 334.131 450.127 322.482 448.401 C 279.585 442.109 240.178 425.027 207.140 400.040 C 197.260 392.530 187.956 384.347 179.296 375.532 C 142.553 338.128 117.401 289.336 109.382 234.090 C 132.422 223.904 154.268 217.596 176.415 214.675 C 185.134 232.991 196.455 249.658 210.350 264.408 C 215.074 269.422 220.133 274.240 225.964 279.219 C 255.644 304.678 294.894 323.163 335.656 328.676 C 343.482 329.732 351.313 330.312 359.145 330.381 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 513.645 399.322 C 517.447 359.141 511.410 317.140 494.348 277.141 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 540.286 210.198 C 549.359 189.870 555.325 168.094 558.376 144.163 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 612.026 175.193 C 612.878 183.551 613.212 191.863 613.137 200.270 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 613.137 200.270 C 613.049 210.078 612.409 219.748 611.190 230.075 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#C39E0CB1-FEA3-4E24-88FE-E38E2E2D91A2_7)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 537.515 378.720 C 530.127 385.979 522.294 392.784 513.645 399.322 C 517.447 359.141 511.410 317.140 494.348 277.141 C 498.824 272.610 502.875 268.197 506.680 263.588 C 520.769 246.521 531.994 228.909 540.286 210.198 C 549.359 189.870 555.325 168.094 558.376 144.163 C 559.744 133.167 560.542 122.199 560.831 110.643 C 561.652 77.729 551.433 47.624 540.541 19.547 C 580.569 61.057 606.848 115.211 612.026 175.193 C 612.878 183.551 613.212 191.863 613.137 200.270 C 613.049 210.078 612.409 219.748 611.190 230.075 C 604.103 287.628 577.228 339.708 537.515 378.720 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 157.160 145.552 C 150.277 148.675 143.472 152.131 136.764 155.925 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 136.764 155.925 C 126.398 161.787 116.605 168.265 107.888 174.918 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#C39E0CB1-FEA3-4E24-88FE-E38E2E2D91A2_8)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 156.338 107.362 C 155.581 120.547 155.897 133.542 157.160 145.552 C 150.277 148.675 143.472 152.131 136.764 155.925 C 126.398 161.787 116.605 168.265 107.888 174.918 C 113.301 114.096 140.265 59.499 181.057 19.553 C 167.334 46.409 158.157 75.677 156.338 107.362 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":260.795,\\\"max\\\":459.205},\\\"y\\\":{\\\"min\\\":225.035,\\\"max\\\":423.444}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":701.278,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":141.372,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}},{\\\"point\\\":{\\\"x\\\":514.658,\\\"y\\\":399.581,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8660425293174793,\\\"y\\\":0.4999703365334618}},{\\\"point\\\":{\\\"x\\\":205.341,\\\"y\\\":402.708,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.866024015056127,\\\"y\\\":0.5000024053402794}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":613.114,\\\"y\\\":171.455,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8660265386344244,\\\"y\\\":-0.4999980343770141}},{\\\"point\\\":{\\\"x\\\":106.886,\\\"y\\\":175.629,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8660265386344249,\\\"y\\\":-0.49999803437701323}},{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":611.074,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"C39E0CB1-FEA3-4E24-88FE-E38E2E2D91A2_0\\\",\\\"x1\\\":\\\"50.00%\\\",\\\"y1\\\":\\\"50.00%\\\",\\\"x2\\\":\\\"-24.47%\\\",\\\"y2\\\":\\\"5.03%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"27.45%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"C39E0CB1-FEA3-4E24-88FE-E38E2E2D91A2_1\\\",\\\"x1\\\":\\\"50.00%\\\",\\\"y1\\\":\\\"48.65%\\\",\\\"x2\\\":\\\"126.45%\\\",\\\"y2\\\":\\\"21.66%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"27.45%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"C39E0CB1-FEA3-4E24-88FE-E38E2E2D91A2_2\\\",\\\"x1\\\":\\\"50.00%\\\",\\\"y1\\\":\\\"53.70%\\\",\\\"x2\\\":\\\"47.16%\\\",\\\"y2\\\":\\\"-19.92%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"27.45%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"C39E0CB1-FEA3-4E24-88FE-E38E2E2D91A2_3\\\",\\\"x1\\\":\\\"48.01%\\\",\\\"y1\\\":\\\"32.95%\\\",\\\"x2\\\":\\\"95.97%\\\",\\\"y2\\\":\\\"76.53%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"27.45%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"C39E0CB1-FEA3-4E24-88FE-E38E2E2D91A2_4\\\",\\\"x1\\\":\\\"67.28%\\\",\\\"y1\\\":\\\"35.38%\\\",\\\"x2\\\":\\\"-3.40%\\\",\\\"y2\\\":\\\"-5.72%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"27.45%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"C39E0CB1-FEA3-4E24-88FE-E38E2E2D91A2_5\\\",\\\"x1\\\":\\\"50.00%\\\",\\\"y1\\\":\\\"56.00%\\\",\\\"x2\\\":\\\"111.49%\\\",\\\"y2\\\":\\\"-51.85%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"27.45%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"C39E0CB1-FEA3-4E24-88FE-E38E2E2D91A2_6\\\",\\\"x1\\\":\\\"32.61%\\\",\\\"y1\\\":\\\"37.91%\\\",\\\"x2\\\":\\\"4.95%\\\",\\\"y2\\\":\\\"-21.46%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"27.45%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"C39E0CB1-FEA3-4E24-88FE-E38E2E2D91A2_7\\\",\\\"x1\\\":\\\"65.46%\\\",\\\"y1\\\":\\\"69.01%\\\",\\\"x2\\\":\\\"-33.05%\\\",\\\"y2\\\":\\\"79.18%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"27.45%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"C39E0CB1-FEA3-4E24-88FE-E38E2E2D91A2_8\\\",\\\"x1\\\":\\\"42.17%\\\",\\\"y1\\\":\\\"53.69%\\\",\\\"x2\\\":\\\"74.70%\\\",\\\"y2\\\":\\\"106.75%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"27.45%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"cross\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":44.144,\\\"max\\\":675.856},\\\"y\\\":{\\\"min\\\":20.357,\\\"max\\\":652.069}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cross\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cross\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 46.144 279.148 C 46.170 279.148 199.024 279.148 302.919 279.148 C 302.935 175.238 302.935 22.383 302.935 22.357 C 302.947 22.357 417.053 22.357 417.065 22.357 C 417.065 22.383 417.065 193.931 417.142 279.148 C 502.281 279.148 673.830 279.148 673.856 279.148 C 673.856 279.160 673.856 393.266 673.856 393.278 C 673.830 393.278 502.282 393.278 417.147 393.278 C 417.065 497.188 417.065 650.043 417.065 650.069 C 417.053 650.069 302.947 650.069 302.935 650.069 C 302.935 650.043 302.935 478.494 302.924 393.278 C 199.024 393.278 46.170 393.278 46.144 393.278 C 46.144 393.266 46.144 279.160 46.144 279.148 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":201.285,\\\"max\\\":518.715},\\\"y\\\":{\\\"min\\\":177.498,\\\"max\\\":494.928}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":704.39,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":22.731,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":47.114,\\\"y\\\":337.105,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872583262418,\\\"y\\\":0.005048087277974795}},{\\\"point\\\":{\\\"x\\\":672.886,\\\"y\\\":337.105,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872583262418,\\\"y\\\":0.0050480872779748035}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":581.883,\\\"y\\\":559.163,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128690054290197,\\\"y\\\":0.7012972130977281}},{\\\"point\\\":{\\\"x\\\":137.935,\\\"y\\\":559.209,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987090223112513,\\\"y\\\":0.7154059701601988}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":582.038,\\\"y\\\":115.148,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314810462492056,\\\"y\\\":-0.7753913129691413}},{\\\"point\\\":{\\\"x\\\":138.716,\\\"y\\\":115.224,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817397690748632,\\\"y\\\":-0.7315947561743129}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":647.492,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"cross_tall\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":141.752,\\\"max\\\":578.248},\\\"y\\\":{\\\"min\\\":13.969,\\\"max\\\":706.031}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cross_tall\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cross_tall\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 143.752 192.899 C 143.769 192.899 249.087 192.899 320.671 192.899 C 320.682 120.817 320.682 15.986 320.682 15.969 C 320.690 15.969 399.310 15.969 399.318 15.969 C 399.318 15.986 399.318 131.825 399.371 192.899 C 458.033 192.899 576.231 192.899 576.248 192.899 C 576.248 192.907 576.248 271.527 576.248 271.535 C 576.231 271.535 458.033 271.535 399.374 271.535 C 399.316 432.423 399.318 703.988 399.318 704.031 C 399.310 704.031 320.690 704.031 320.682 704.031 C 320.682 703.988 320.682 414.602 320.674 271.535 C 249.087 271.535 143.769 271.535 143.752 271.535 C 143.752 271.527 143.752 192.907 143.752 192.899 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":212.722,\\\"max\\\":507.611},\\\"y\\\":{\\\"min\\\":85.313,\\\"max\\\":380.203}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360.167,\\\"y\\\":702.942,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360.167,\\\"y\\\":14.692,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":142.349,\\\"y\\\":233.376,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873799329543,\\\"y\\\":0.005023940169361445}},{\\\"point\\\":{\\\"x\\\":577.651,\\\"y\\\":233.376,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873799329543,\\\"y\\\":0.005023940169361445}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":514.347,\\\"y\\\":387.865,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128887745836083,\\\"y\\\":0.701277117174574}},{\\\"point\\\":{\\\"x\\\":205.526,\\\"y\\\":387.896,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986837139562596,\\\"y\\\":0.715430686965752}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":514.418,\\\"y\\\":78.97,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314244252646386,\\\"y\\\":-0.7754374218331361}},{\\\"point\\\":{\\\"x\\\":206.032,\\\"y\\\":79.022,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817133757444261,\\\"y\\\":-0.7316193500250927}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360.167,\\\"y\\\":696.497,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"crown\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":25.114999191682596,\\\"max\\\":694.885},\\\"y\\\":{\\\"min\\\":39.694,\\\"max\\\":493.846}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"crown\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"crown\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 50.305 459.012 C 50.336 459.009 111.107 427.245 360.000 427.246 C 553.799 427.246 669.664 459.009 669.695 459.012 C 669.723 459.035 625.815 491.846 360.000 491.846 C 94.185 491.846 50.336 459.015 50.305 459.012 C 50.303 458.978 27.110 124.786 27.115 124.753 C 27.121 124.767 219.384 276.359 219.389 276.371 C 219.407 276.350 359.983 41.715 360.000 41.694 C 360.003 41.712 500.610 277.455 500.611 277.469 C 500.632 277.456 692.866 124.768 692.885 124.753 C 692.883 124.787 669.436 458.799 669.695 459.012 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#6FD5DCA2-19D9-4D91-8CA6-4FCDFC0BAEF9_1)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 27.115 124.753 C 27.121 124.767 219.384 276.359 219.389 276.371 C 219.407 276.350 359.983 41.715 360.000 41.694 C 360.003 41.712 500.610 277.455 500.611 277.469 C 500.632 277.456 692.866 124.768 692.885 124.753 C 692.883 124.787 669.436 458.799 669.695 459.012 C 669.723 459.035 625.815 491.846 360.000 491.846 C 94.185 491.846 50.336 459.015 50.305 459.012 C 50.303 458.978 27.110 124.786 27.115 124.753 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 359.727 427.407 C 532.499 428.172 636.213 451.318 636.240 451.320 C 636.264 451.342 596.347 471.294 360.132 470.217 C 123.728 469.139 84.015 448.785 83.987 448.783 C 84.015 448.781 138.621 426.429 359.727 427.407 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 50.305 459.012 C 50.336 459.009 111.107 427.245 360.000 427.246 C 553.799 427.246 669.664 459.009 669.695 459.012 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":197.046,\\\"max\\\":522.954},\\\"y\\\":{\\\"min\\\":170.876,\\\"max\\\":449.848}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":682.75,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":41.126,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":29.342,\\\"y\\\":129.47,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.47807111005873953,\\\"y\\\":-0.8783211335993257}},{\\\"point\\\":{\\\"x\\\":690.351,\\\"y\\\":130.394,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.4976058390874751,\\\"y\\\":-0.86740326775154}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":46.049,\\\"y\\\":358.308,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9845185257543309,\\\"y\\\":-0.17528055353209895}},{\\\"point\\\":{\\\"x\\\":673.951,\\\"y\\\":358.308,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9845185257543307,\\\"y\\\":-0.1752805535320994}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":132.064,\\\"y\\\":477.009,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5860451057049829,\\\"y\\\":0.8102784299728306}},{\\\"point\\\":{\\\"x\\\":587.936,\\\"y\\\":477.009,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5860451057049805,\\\"y\\\":0.8102784299728324}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.967,\\\"y\\\":490.137,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"6FD5DCA2-19D9-4D91-8CA6-4FCDFC0BAEF9_1\\\",\\\"x1\\\":\\\"-39.69%\\\",\\\"y1\\\":\\\"56.37%\\\",\\\"x2\\\":\\\"129.73%\\\",\\\"y2\\\":\\\"56.37%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#000000\\\"},{\\\"offset\\\":\\\"36.86%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"67.45%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"crown_5pt\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":83.359,\\\"max\\\":636.641},\\\"y\\\":{\\\"min\\\":32.749,\\\"max\\\":603.904}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"crown_5pt\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"crown_5pt\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 110.427 137.372 C 110.438 137.395 220.869 362.205 220.880 362.227 C 220.882 362.199 235.212 81.400 235.213 81.372 C 235.221 81.397 313.619 335.988 313.627 336.014 C 313.631 335.986 359.995 59.952 360.000 59.925 C 360.005 59.952 406.369 335.986 406.373 336.014 C 406.381 335.988 484.779 81.397 484.787 81.372 C 484.788 81.400 499.118 362.199 499.120 362.227 C 499.131 362.205 609.562 137.395 609.573 137.372 C 609.567 137.417 554.780 443.562 555.883 581.061 C 457.748 557.362 262.252 557.362 164.117 581.061 C 165.220 443.562 110.433 137.417 110.427 137.372 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 85.359 136.622 C 85.359 122.443 96.797 111.005 110.976 111.005 C 125.155 111.005 136.593 122.443 136.593 136.622 C 136.593 150.801 125.155 162.239 110.976 162.239 C 96.797 162.239 85.359 150.801 85.359 136.622 M 583.407 136.622 C 583.407 122.443 594.845 111.005 609.024 111.005 C 623.203 111.005 634.641 122.443 634.641 136.622 C 634.641 150.801 623.203 162.239 609.024 162.239 C 594.845 162.239 583.407 150.801 583.407 136.622 M 209.275 83.005 C 209.275 68.826 220.714 57.387 234.893 57.387 C 249.072 57.387 260.510 68.826 260.510 83.005 C 260.510 97.184 249.072 108.622 234.893 108.622 C 220.714 108.622 209.275 97.184 209.275 83.005 M 459.491 83.005 C 459.491 68.826 470.929 57.387 485.108 57.387 C 499.287 57.387 510.725 68.826 510.725 83.005 C 510.725 97.184 499.287 108.622 485.108 108.622 C 470.929 108.622 459.491 97.184 459.491 83.005 M 334.383 60.366 C 334.383 46.187 345.821 34.749 360.000 34.749 C 374.179 34.749 385.617 46.187 385.617 60.366 C 385.617 74.545 374.179 85.984 360.000 85.984 C 345.821 85.984 334.383 74.545 334.383 60.366 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 555.883 534.791 C 457.748 511.092 262.252 511.092 164.117 534.791 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.949 560.502 C 491.267 560.502 555.834 571.598 555.834 581.203 C 555.834 590.808 491.267 601.904 359.949 601.904 C 228.631 601.904 164.064 590.808 164.064 581.203 C 164.064 571.598 228.631 560.502 359.949 560.502 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":260.919,\\\"max\\\":459.081},\\\"y\\\":{\\\"min\\\":345.725,\\\"max\\\":543.887}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":690.002,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":34.824,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":154.814,\\\"y\\\":439.445,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999870341193497,\\\"y\\\":0.005092307255700907}},{\\\"point\\\":{\\\"x\\\":565.186,\\\"y\\\":439.445,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999870341193497,\\\"y\\\":0.005092307255700925}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":549.722,\\\"y\\\":577.782,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129404344750184,\\\"y\\\":0.7012245980358731}},{\\\"point\\\":{\\\"x\\\":170.121,\\\"y\\\":577.821,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698701690436459,\\\"y\\\":0.7154131308420573}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":628.687,\\\"y\\\":118.047,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314257919384909,\\\"y\\\":-0.7754363089737605}},{\\\"point\\\":{\\\"x\\\":92.209,\\\"y\\\":118.138,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817669760752474,\\\"y\\\":-0.7315694022669436}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":601.678,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"crown_ornate\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":48.82199993929521,\\\"max\\\":671.1780000607049},\\\"y\\\":{\\\"min\\\":138.769,\\\"max\\\":577.825}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"crown_ornate_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"crown_ornate\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 303.490 187.004 C 303.494 187.004 331.016 187.004 349.722 187.004 C 349.725 168.295 349.725 140.773 349.725 140.769 C 349.727 140.769 370.273 140.769 370.275 140.769 C 370.275 140.773 370.275 171.661 370.288 187.004 C 385.618 187.004 416.506 187.004 416.510 187.004 C 416.510 187.007 416.510 207.552 416.510 207.554 C 416.506 207.554 385.618 207.554 370.290 207.554 C 370.275 226.263 370.275 253.785 370.275 253.789 C 370.273 253.789 349.727 253.789 349.725 253.789 C 349.725 253.785 349.725 222.897 349.723 207.554 C 331.016 207.554 303.494 207.554 303.490 207.554 C 303.490 207.552 303.490 187.007 303.490 187.004 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 575.825 C 420.889 575.825 547.968 574.857 563.451 566.994 C 561.209 566.895 420.017 558.050 360.002 558.050 C 299.985 558.050 156.569 566.993 156.549 566.994 C 172.671 574.256 299.111 575.825 360.000 575.825 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.007 270.408 C 389.270 244.787 428.592 228.836 470.148 229.862 C 549.233 231.816 636.489 306.158 613.164 372.700 C 604.852 396.412 588.018 418.735 570.963 436.097 C 558.257 451.279 538.283 468.802 538.280 468.806 C 538.277 468.806 521.696 468.903 513.312 468.953 C 417.546 469.515 280.018 470.323 209.710 470.735 C 199.085 470.798 182.904 470.892 182.901 470.892 C 182.897 470.889 162.057 450.415 148.380 433.866 C 131.041 415.193 113.532 392.185 106.836 372.700 C 85.172 309.660 163.146 227.263 249.851 229.862 C 291.402 231.108 330.730 244.787 360.007 270.408 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 513.312 468.953 C 417.546 469.515 280.018 470.323 209.710 470.735 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 571.471 388.330 C 560.187 422.166 529.820 453.326 513.312 468.953 C 417.546 469.515 280.018 470.323 209.710 470.735 C 189.527 452.269 153.760 416.861 143.754 388.330 C 125.121 335.193 191.323 265.475 264.565 267.670 C 299.665 268.722 332.888 280.276 357.619 301.920 C 382.339 280.277 415.582 266.039 450.660 267.670 C 517.466 270.777 590.314 331.826 571.471 388.330 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 563.451 566.994 C 561.209 566.895 420.017 558.050 360.002 558.050 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.002 558.050 C 299.985 558.050 156.569 566.993 156.549 566.994 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 138.493 474.677 C 138.515 474.676 295.309 466.608 360.894 466.619 C 425.953 466.631 581.485 474.676 581.507 474.677 C 581.505 474.686 563.956 567.016 563.451 566.994 C 561.209 566.895 420.017 558.050 360.002 558.050 C 299.985 558.050 156.569 566.993 156.549 566.994 C 156.547 566.984 138.495 474.686 138.493 474.677 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 581.507 474.677 C 581.485 474.676 425.953 466.631 360.894 466.619 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.894 466.619 C 295.309 466.608 138.515 474.676 138.493 474.677 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 596.798 445.503 C 593.559 451.682 590.737 457.065 588.401 461.524 C 584.181 469.575 583.805 470.293 581.507 474.677 C 581.485 474.676 425.953 466.631 360.894 466.619 C 295.309 466.608 138.515 474.676 138.493 474.677 C 138.492 474.676 133.788 465.699 131.349 461.046 C 128.688 455.969 125.838 450.531 122.983 445.083 C 117.274 434.190 111.219 422.637 105.246 411.241 C 102.461 405.927 99.617 400.500 96.882 395.281 C 87.111 376.638 74.329 352.249 74.326 352.245 C 74.338 352.249 155.879 375.086 187.025 393.056 C 203.905 402.795 207.162 438.208 237.568 433.866 C 271.854 428.971 262.817 388.728 277.800 372.651 C 298.762 350.158 359.992 311.441 360.000 311.435 C 360.008 311.441 421.238 350.158 442.200 372.651 C 457.183 388.728 448.146 428.971 482.432 433.866 C 512.838 438.208 516.095 402.795 532.975 393.056 C 564.122 375.086 645.664 352.249 645.675 352.245 C 645.672 352.249 630.702 380.812 622.964 395.578 C 620.524 400.232 617.632 405.749 614.591 411.552 C 608.792 422.617 602.346 434.915 596.798 445.503 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 312.258 403.667 C 312.258 377.242 333.575 355.924 360.000 355.924 C 386.425 355.924 407.742 377.242 407.742 403.667 C 407.742 430.092 386.425 451.409 360.000 451.409 C 333.575 451.409 312.258 430.092 312.258 403.667 M 210.290 400.971 C 210.290 388.795 220.112 378.973 232.288 378.973 C 244.463 378.973 254.285 388.795 254.285 400.971 C 254.285 413.146 244.463 422.968 232.288 422.968 C 220.112 422.968 210.290 413.146 210.290 400.971 M 465.715 400.971 C 465.715 388.795 475.538 378.973 487.713 378.973 C 499.889 378.973 509.710 388.796 509.710 400.971 C 509.710 413.146 499.888 422.968 487.713 422.968 C 475.538 422.969 465.716 413.146 465.715 400.971 M 50.822 323.027 C 50.822 307.715 63.175 295.362 78.488 295.362 C 93.801 295.362 106.154 307.715 106.154 323.027 C 106.154 338.340 93.801 350.694 78.488 350.694 C 63.175 350.694 50.821 338.341 50.822 323.027 M 613.847 323.027 C 613.847 307.715 626.199 295.362 641.512 295.362 C 656.825 295.362 669.178 307.715 669.178 323.027 C 669.179 338.341 656.825 350.694 641.512 350.694 C 626.199 350.694 613.847 338.340 613.847 323.027 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 504.519 519.602 C 504.519 504.674 516.561 492.631 531.489 492.631 C 546.417 492.631 558.461 504.674 558.461 519.602 C 558.461 534.531 546.417 546.574 531.489 546.574 C 516.561 546.574 504.519 534.531 504.519 519.602 M 421.670 515.335 C 421.670 500.406 433.713 488.363 448.641 488.363 C 463.570 488.363 475.614 500.406 475.614 515.335 C 475.614 530.263 463.570 542.306 448.641 542.306 C 433.713 542.306 421.670 530.263 421.670 515.335 M 333.028 514.597 C 333.028 499.669 345.071 487.626 360.000 487.626 C 374.929 487.626 386.972 499.669 386.972 514.597 C 386.972 529.526 374.929 541.569 360.000 541.569 C 345.071 541.569 333.028 529.526 333.028 514.597 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 378.942 C 373.685 378.942 384.725 389.982 384.725 403.667 C 384.725 417.352 373.686 428.393 360.000 428.393 C 346.314 428.393 335.275 417.352 335.275 403.667 C 335.275 389.982 346.315 378.942 360.000 378.942 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 641.081 309.257 C 648.772 309.257 654.976 315.460 654.976 323.151 C 654.976 330.841 648.772 337.046 641.081 337.046 C 633.390 337.046 627.186 330.841 627.186 323.151 C 627.186 315.460 633.391 309.257 641.081 309.257 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 78.920 309.255 C 86.610 309.255 92.814 315.460 92.814 323.151 C 92.814 330.841 86.610 337.045 78.920 337.045 C 71.229 337.045 65.025 330.841 65.025 323.151 C 65.025 315.460 71.229 309.255 78.920 309.255 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 82.335 368.343 C 82.344 368.347 151.301 388.313 178.156 402.894 C 197.383 413.333 202.478 450.648 236.694 446.387 C 288.138 439.982 270.251 402.265 285.751 384.278 C 306.586 360.100 359.993 327.539 360.000 327.534 C 360.007 327.539 411.625 360.100 434.249 384.278 C 450.472 401.616 431.862 439.088 483.306 446.387 C 517.444 451.231 522.617 413.333 541.844 402.894 C 568.699 388.312 637.657 368.347 637.666 368.343 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 221.614 519.602 C 221.614 504.674 209.572 492.631 194.644 492.631 C 179.715 492.631 167.673 504.674 167.673 519.602 C 167.673 534.531 179.715 546.574 194.644 546.574 C 209.572 546.574 221.614 534.531 221.614 519.602 M 304.463 515.335 C 304.463 500.406 292.420 488.363 277.492 488.363 C 262.563 488.363 250.519 500.406 250.519 515.335 C 250.519 530.263 262.563 542.306 277.492 542.306 C 292.420 542.306 304.463 530.263 304.463 515.335 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 157.910 556.631 C 157.930 556.630 300.991 547.697 360.000 547.676 C 419.811 547.655 496.562 553.646 564.842 556.631 M 143.600 485.977 C 143.622 485.976 296.840 478.845 360.000 478.844 C 423.180 478.844 504.313 483.599 576.469 485.977 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 588.401 461.524 C 579.402 456.145 572.842 446.895 570.963 436.097 C 570.617 433.920 570.432 431.784 570.432 429.603 C 570.431 408.955 587.088 392.298 607.737 392.298 C 613.105 392.298 618.204 393.424 622.964 395.578 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 96.882 395.281 C 101.294 393.339 106.207 392.298 111.369 392.298 C 132.017 392.298 148.674 408.955 148.674 429.603 C 148.674 431.048 148.592 432.474 148.380 433.866 C 147.104 445.420 140.565 455.348 131.349 461.046 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 122.983 445.083 C 117.274 434.190 111.219 422.637 105.246 411.241 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 130.689 429.603 C 130.689 435.912 127.686 441.502 122.983 445.083 C 117.274 434.190 111.219 422.637 105.246 411.241 C 107.174 410.628 109.230 410.283 111.369 410.283 C 122.062 410.283 130.688 418.910 130.689 429.603 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 614.591 411.552 C 608.792 422.617 602.346 434.915 596.798 445.503 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 607.737 410.283 C 610.196 410.283 612.546 410.740 614.591 411.552 C 608.792 422.617 602.346 434.915 596.798 445.503 C 591.733 442.069 588.417 436.233 588.417 429.603 C 588.417 418.910 597.043 410.283 607.737 410.283 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 429.301 241.069 C 435.009 241.069 439.613 245.674 439.613 251.382 C 439.613 257.090 435.009 261.694 429.301 261.694 C 423.593 261.694 418.988 257.090 418.988 251.382 C 418.988 245.674 423.593 241.069 429.301 241.069 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 462.292 237.429 C 468.533 237.429 473.567 242.464 473.567 248.704 C 473.567 254.944 468.533 259.979 462.292 259.979 C 456.052 259.979 451.018 254.944 451.018 248.704 C 451.018 242.464 456.052 237.429 462.292 237.429 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 496.679 241.069 C 503.822 241.069 509.584 246.831 509.584 253.974 C 509.584 261.116 503.822 266.878 496.679 266.878 C 489.537 266.878 483.775 261.116 483.775 253.974 C 483.775 246.831 489.537 241.069 496.679 241.069 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 528.709 254.172 C 535.852 254.172 541.613 259.934 541.613 267.076 C 541.613 274.219 535.852 279.981 528.709 279.981 C 521.566 279.981 515.805 274.219 515.805 267.076 C 515.805 259.934 521.567 254.172 528.709 254.172 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 556.371 272.371 C 563.513 272.371 569.275 278.133 569.275 285.275 C 569.275 292.418 563.513 298.180 556.371 298.180 C 549.228 298.180 543.466 292.418 543.466 285.275 C 543.466 278.133 549.228 272.371 556.371 272.371 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 580.393 299.304 C 587.535 299.304 593.297 305.066 593.297 312.209 C 593.297 319.351 587.535 325.113 580.393 325.113 C 573.250 325.113 567.489 319.351 567.489 312.209 C 567.489 305.066 573.250 299.304 580.393 299.304 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 593.496 332.062 C 600.638 332.062 606.400 337.824 606.400 344.966 C 606.400 352.109 600.638 357.871 593.496 357.871 C 586.353 357.871 580.591 352.109 580.591 344.966 C 580.591 337.824 586.353 332.062 593.496 332.062 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 288.896 241.069 C 283.188 241.069 278.584 245.674 278.583 251.382 C 278.583 257.090 283.188 261.694 288.896 261.694 C 294.604 261.694 299.209 257.090 299.209 251.382 C 299.209 245.674 294.604 241.069 288.896 241.069 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 255.905 237.429 C 249.664 237.429 244.630 242.464 244.630 248.704 C 244.630 254.944 249.664 259.979 255.905 259.979 C 262.145 259.979 267.179 254.944 267.179 248.704 C 267.179 242.464 262.145 237.429 255.905 237.429 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 221.517 241.069 C 214.375 241.069 208.613 246.831 208.613 253.974 C 208.613 261.116 214.375 266.878 221.517 266.878 C 228.660 266.878 234.422 261.116 234.422 253.974 C 234.422 246.831 228.660 241.069 221.517 241.069 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 189.488 254.172 C 182.345 254.172 176.584 259.934 176.584 267.076 C 176.584 274.219 182.345 279.981 189.488 279.981 C 196.630 279.981 202.392 274.219 202.392 267.076 C 202.392 259.934 196.630 254.172 189.488 254.172 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 161.826 272.371 C 154.684 272.371 148.922 278.133 148.922 285.275 C 148.922 292.418 154.684 298.180 161.826 298.180 C 168.969 298.180 174.730 292.418 174.730 285.275 C 174.730 278.133 168.969 272.371 161.826 272.371 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 137.804 299.304 C 130.662 299.304 124.900 305.066 124.900 312.209 C 124.900 319.351 130.662 325.113 137.804 325.113 C 144.947 325.113 150.708 319.351 150.708 312.209 C 150.708 305.066 144.947 299.304 137.804 299.304 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 124.701 332.062 C 117.559 332.062 111.797 337.824 111.797 344.966 C 111.797 352.109 117.559 357.871 124.701 357.871 C 131.844 357.871 137.605 352.109 137.605 344.966 C 137.605 337.824 131.844 332.062 124.701 332.062 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 317.251 251.191 C 311.543 251.191 306.939 255.796 306.939 261.504 C 306.938 267.212 311.543 271.817 317.251 271.817 C 322.959 271.817 327.564 267.212 327.564 261.504 C 327.564 255.796 322.959 251.191 317.251 251.191 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 402.749 251.191 C 397.041 251.191 392.436 255.796 392.436 261.504 C 392.436 267.212 397.041 271.817 402.749 271.817 C 408.457 271.817 413.062 267.212 413.062 261.504 C 413.061 255.796 408.457 251.191 402.749 251.191 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 249.606 C 378.105 249.606 392.710 264.211 392.710 282.316 C 392.710 300.420 378.105 315.026 360.000 315.026 C 341.895 315.026 327.290 300.420 327.290 282.316 C 327.290 264.211 341.895 249.606 360.000 249.606 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 266.707 C 368.639 266.707 375.609 273.676 375.609 282.316 C 375.609 290.955 368.639 297.925 360.000 297.925 C 351.361 297.925 344.391 290.955 344.391 282.316 C 344.391 273.676 351.361 266.707 360.000 266.707 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":648.536,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":141.355,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":131.964,\\\"y\\\":475.881,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999874575738875,\\\"y\\\":0.005008462330136208}},{\\\"point\\\":{\\\"x\\\":588.036,\\\"y\\\":475.881,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999874575738875,\\\"y\\\":0.0050084623301362005}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":558.339,\\\"y\\\":569.705,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129035080045204,\\\"y\\\":0.7012621394848353}},{\\\"point\\\":{\\\"x\\\":161.497,\\\"y\\\":569.746,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987167746284594,\\\"y\\\":0.7153983986932055}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":559.677,\\\"y\\\":253.963,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314960764983152,\\\"y\\\":-0.7753790720462052}},{\\\"point\\\":{\\\"x\\\":161.017,\\\"y\\\":254.031,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817518635479985,\\\"y\\\":-0.7315834856999106}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":578.079,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"cube_die\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":77.026,\\\"max\\\":642.974},\\\"y\\\":{\\\"min\\\":12.187,\\\"max\\\":665.069}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cube_die\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cube\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 14.187 C 360.028 14.204 640.946 176.392 640.974 176.408 C 640.974 176.440 640.974 500.816 640.974 500.849 C 640.946 500.865 453.658 608.996 360.000 663.069 C 359.972 663.053 79.051 500.863 79.026 500.849 C 79.026 392.702 79.026 284.555 79.026 176.408 C 79.054 176.392 359.975 14.202 360.000 14.187 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 14.187 C 359.975 14.202 79.054 176.392 79.026 176.408 C 176.899 230.984 359.972 338.612 360.000 338.628 C 360.028 338.612 542.683 232.079 640.974 176.408 C 640.946 176.392 360.028 14.204 360.000 14.187 M 79.026 176.408 C 79.026 284.555 79.026 392.702 79.026 500.849 C 79.051 500.863 359.972 663.053 360.000 663.069 C 358.696 550.771 360.000 338.661 360.000 338.628 M 640.974 500.849 C 640.974 500.816 640.974 176.440 640.974 176.408 M 360.000 663.069 C 453.658 608.996 640.946 500.865 640.974 500.849 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 663.069 C 359.972 663.053 79.051 500.863 79.026 500.849 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 79.026 500.849 C 79.026 392.702 79.026 284.555 79.026 176.408 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 663.069 C 359.972 663.053 79.051 500.863 79.026 500.849 C 79.026 392.702 79.026 284.555 79.026 176.408 C 176.899 230.984 359.972 338.612 360.000 338.628 C 360.000 338.661 358.696 550.771 360.000 663.069 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 79.026 176.408 C 79.026 284.555 79.026 392.702 79.026 500.849 C 79.051 500.863 359.972 663.053 360.000 663.069 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 663.069 C 359.972 663.053 79.051 500.863 79.026 500.849 C 79.026 392.702 79.026 284.555 79.026 176.408 \\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"dots2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 175.223 478.169 C 182.193 456.092 168.792 431.249 146.095 426.683 C 133.001 424.049 120.989 431.728 116.968 444.464 C 109.998 466.542 123.398 491.385 146.095 495.951 C 159.189 498.585 171.202 490.906 175.223 478.169 M 262.605 528.726 C 266.626 515.990 278.639 508.311 291.733 510.945 C 314.430 515.511 327.830 540.354 320.860 562.431 C 316.839 575.168 304.826 582.846 291.733 580.212 C 269.036 575.646 255.635 550.804 262.605 528.726 M 248.041 433.716 C 255.011 411.639 241.611 386.797 218.914 382.231 C 205.820 379.596 193.807 387.275 189.786 400.012 C 182.816 422.089 196.217 446.932 218.914 451.498 C 232.008 454.132 244.020 446.453 248.041 433.716 M 175.223 305.001 C 171.202 317.738 159.189 325.416 146.095 322.782 C 123.398 318.216 109.998 293.374 116.968 271.297 C 120.989 258.560 133.001 250.881 146.095 253.515 C 168.792 258.081 182.193 282.924 175.223 305.001 M 320.860 389.263 C 327.830 367.186 314.429 342.343 291.733 337.777 C 278.639 335.143 266.626 342.822 262.605 355.559 C 255.635 377.636 269.036 402.479 291.733 407.044 C 304.826 409.678 316.839 402.000 320.860 389.263 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 548.217 478.169 C 541.247 456.092 554.647 431.249 577.344 426.683 C 590.438 424.049 602.450 431.728 606.471 444.464 C 613.441 466.542 600.041 491.385 577.344 495.951 C 564.250 498.585 552.238 490.906 548.217 478.169 M 460.834 528.726 C 456.813 515.990 444.801 508.311 431.707 510.945 C 409.010 515.511 395.609 540.354 402.579 562.431 C 406.600 575.168 418.613 582.846 431.707 580.212 C 454.404 575.646 467.804 550.804 460.834 528.726 M 548.217 305.001 C 552.238 317.738 564.250 325.416 577.344 322.782 C 600.041 318.216 613.441 293.374 606.471 271.297 C 602.451 258.560 590.438 250.881 577.344 253.515 C 554.647 258.081 541.247 282.924 548.217 305.001 M 402.579 389.263 C 395.609 367.186 409.010 342.343 431.707 337.777 C 444.801 335.143 456.813 342.822 460.834 355.558 C 467.805 377.636 454.404 402.478 431.707 407.044 C 418.613 409.678 406.600 402.000 402.579 389.263 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 330.006 187.367 C 321.178 177.345 321.822 163.102 330.842 153.251 C 346.477 136.177 374.691 135.361 389.994 152.734 C 398.822 162.756 398.178 176.999 389.159 186.850 C 373.524 203.925 345.309 204.741 330.006 187.367 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":359.561,\\\"y\\\":709.372,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":359.488,\\\"y\\\":16.584,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":81,\\\"y\\\":348.512,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999867959855171,\\\"y\\\":0.005138857326293132}},{\\\"point\\\":{\\\"x\\\":639,\\\"y\\\":348.512,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999867959855171,\\\"y\\\":0.005138857326293132}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":522.91,\\\"y\\\":566.781,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5070996150903193,\\\"y\\\":0.8618874522669708}},{\\\"point\\\":{\\\"x\\\":196.908,\\\"y\\\":566.841,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.48970204908451026,\\\"y\\\":0.8718898457502713}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.488,\\\"y\\\":657.017,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":215.634,\\\"y\\\":98.503,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.4897425046771502,\\\"y\\\":-0.8718671223945491}},{\\\"point\\\":{\\\"x\\\":504.206,\\\"y\\\":98.556,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5070484866958855,\\\"y\\\":-0.8619175320988735}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false}},{\\\"name\\\":\\\"cube_die_2\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":77.026,\\\"max\\\":642.974},\\\"y\\\":{\\\"min\\\":12.187,\\\"max\\\":665.069}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cube_die_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cube\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 14.187 C 360.028 14.204 640.946 176.392 640.974 176.408 C 640.974 176.440 640.974 500.816 640.974 500.849 C 640.946 500.865 453.658 608.996 360.000 663.069 C 359.972 663.053 79.051 500.863 79.026 500.849 C 79.026 392.702 79.026 284.555 79.026 176.408 C 79.054 176.392 359.975 14.202 360.000 14.187 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 14.187 C 359.975 14.202 79.054 176.392 79.026 176.408 C 176.899 230.984 359.972 338.612 360.000 338.628 C 360.028 338.612 542.683 232.079 640.974 176.408 C 640.946 176.392 360.028 14.204 360.000 14.187 M 79.026 176.408 C 79.026 284.555 79.026 392.702 79.026 500.849 C 79.051 500.863 359.972 663.053 360.000 663.069 C 358.696 550.771 360.000 338.661 360.000 338.628 M 640.974 500.849 C 640.974 500.816 640.974 176.440 640.974 176.408 M 360.000 663.069 C 453.658 608.996 640.946 500.865 640.974 500.849 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 663.069 C 359.972 663.053 79.051 500.863 79.026 500.849 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 79.026 500.849 C 79.026 392.702 79.026 284.555 79.026 176.408 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 663.069 C 359.972 663.053 79.051 500.863 79.026 500.849 C 79.026 392.702 79.026 284.555 79.026 176.408 C 176.899 230.984 359.972 338.612 360.000 338.628 C 360.000 338.661 358.696 550.771 360.000 663.069 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 79.026 176.408 C 79.026 284.555 79.026 392.702 79.026 500.849 C 79.051 500.863 359.972 663.053 360.000 663.069 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 663.069 C 359.972 663.053 79.051 500.863 79.026 500.849 C 79.026 392.702 79.026 284.555 79.026 176.408 \\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"dots2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 262.605 528.726 C 266.626 515.990 278.639 508.311 291.733 510.945 C 314.430 515.511 327.830 540.354 320.860 562.431 C 316.839 575.168 304.826 582.846 291.733 580.212 C 269.036 575.646 255.635 550.804 262.605 528.726 M 248.041 433.716 C 255.011 411.639 241.611 386.797 218.914 382.231 C 205.820 379.596 193.807 387.275 189.786 400.012 C 182.816 422.089 196.217 446.932 218.914 451.498 C 232.008 454.132 244.020 446.453 248.041 433.716 M 175.223 305.001 C 171.202 317.738 159.189 325.416 146.095 322.782 C 123.398 318.216 109.998 293.374 116.968 271.297 C 120.989 258.560 133.001 250.881 146.095 253.515 C 168.792 258.081 182.193 282.924 175.223 305.001 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 559.346 474.122 C 552.376 452.045 565.777 427.202 588.474 422.637 C 601.567 420.003 613.580 427.681 617.601 440.417 C 624.571 462.495 611.171 487.338 588.474 491.904 C 575.380 494.538 563.367 486.859 559.346 474.122 M 448.694 536.820 C 444.673 524.084 432.660 516.405 419.566 519.039 C 396.869 523.605 383.468 548.448 390.438 570.525 C 394.459 583.262 406.472 590.940 419.566 588.306 C 442.263 583.740 455.663 558.898 448.694 536.820 M 559.346 296.908 C 563.367 309.644 575.380 317.323 588.474 314.688 C 611.170 310.122 624.571 285.280 617.601 263.203 C 613.580 250.466 601.567 242.787 588.474 245.421 C 565.777 249.987 552.376 274.830 559.346 296.908 M 390.438 393.310 C 383.469 371.232 396.869 346.390 419.566 341.824 C 432.660 339.190 444.673 346.869 448.694 359.605 C 455.664 381.683 442.263 406.525 419.566 411.091 C 406.472 413.725 394.459 406.047 390.438 393.310 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 330.006 265.283 C 321.178 255.260 321.822 241.017 330.842 231.167 C 346.477 214.092 374.691 213.276 389.994 230.649 C 398.822 240.672 398.178 254.914 389.159 264.765 C 373.524 281.840 345.309 282.656 330.006 265.283 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 330.006 111.498 C 321.178 101.475 321.822 87.233 330.842 77.382 C 346.477 60.307 374.691 59.491 389.994 76.864 C 398.822 86.887 398.178 101.130 389.159 110.980 C 373.524 128.055 345.309 128.871 330.006 111.498 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 535.704 487.244 C 531.683 474.508 519.671 466.829 506.577 469.463 C 483.880 474.029 470.479 498.872 477.449 520.949 C 481.470 533.686 493.483 541.364 506.577 538.730 C 529.274 534.164 542.674 509.322 535.704 487.244 M 477.449 343.734 C 470.479 321.657 483.880 296.814 506.577 292.248 C 519.670 289.614 531.683 297.293 535.704 310.029 C 542.674 332.107 529.274 356.949 506.577 361.515 C 493.483 364.150 481.470 356.471 477.449 343.734 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":359.561,\\\"y\\\":709.372,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":359.488,\\\"y\\\":16.584,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":81,\\\"y\\\":348.512,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999867959855171,\\\"y\\\":0.005138857326293132}},{\\\"point\\\":{\\\"x\\\":639,\\\"y\\\":348.512,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999867959855171,\\\"y\\\":0.005138857326293132}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":522.91,\\\"y\\\":566.781,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5070996150903193,\\\"y\\\":0.8618874522669708}},{\\\"point\\\":{\\\"x\\\":196.908,\\\"y\\\":566.841,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.48970204908451026,\\\"y\\\":0.8718898457502713}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.488,\\\"y\\\":657.017,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":215.634,\\\"y\\\":98.503,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.4897425046771502,\\\"y\\\":-0.8718671223945491}},{\\\"point\\\":{\\\"x\\\":504.206,\\\"y\\\":98.556,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5070484866958855,\\\"y\\\":-0.8619175320988735}}]}},{\\\"name\\\":\\\"cube_paradox\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":62.385000000000005,\\\"max\\\":660.534},\\\"y\\\":{\\\"min\\\":23.245,\\\"max\\\":639.759}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cube_paradox_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cube2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 153.466 465.206 C 153.476 465.214 250.295 539.333 250.304 539.340 C 250.304 539.331 249.688 442.851 249.688 442.842 C 249.679 442.844 153.476 465.204 153.466 465.206 M 64.885 458.305 C 64.885 458.270 64.885 222.841 64.885 105.110 C 179.402 78.655 293.919 52.200 408.436 25.745 C 491.635 70.262 574.835 114.780 658.034 159.298 C 656.737 285.736 655.439 412.175 654.142 538.614 C 529.001 571.495 403.859 604.377 278.718 637.259 C 207.440 577.608 64.906 458.323 64.885 458.305 M 591.798 464.232 C 591.798 464.205 595.417 200.065 595.417 200.039 C 595.400 200.043 430.203 237.270 430.187 237.273 C 430.187 237.286 430.914 363.476 430.914 363.489 C 430.930 363.499 591.782 464.222 591.798 464.232 M 308.738 566.053 C 308.762 566.047 469.488 524.513 549.863 503.743 C 499.927 471.398 449.991 439.053 400.055 406.709 C 369.204 414.028 338.353 421.346 307.502 428.665 C 307.914 474.461 308.738 566.039 308.738 566.053 M 169.895 138.409 C 169.907 138.416 289.790 213.999 289.802 214.007 C 289.811 214.005 376.078 196.428 376.087 196.426 C 376.087 196.415 376.087 85.550 376.087 85.539 C 376.066 85.544 169.915 138.403 169.895 138.409 M 550.946 160.629 C 550.934 160.623 430.717 97.036 430.705 97.030 C 430.705 97.038 430.381 185.031 430.381 185.040 C 430.393 185.037 550.934 160.631 550.946 160.629 M 306.101 265.777 C 306.101 265.788 306.734 336.909 307.051 372.474 C 329.669 366.867 374.898 355.654 374.904 355.652 C 374.904 355.641 375.560 285.181 375.889 249.945 C 352.626 255.223 306.108 265.776 306.101 265.777 M 120.723 176.504 C 120.723 176.528 122.938 333.844 124.045 412.513 C 165.769 403.846 207.493 395.178 249.216 386.511 C 249.013 343.710 248.606 258.121 248.606 258.108 C 248.593 258.100 120.736 176.513 120.723 176.504 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"5\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 408.436 25.745 C 293.919 52.200 64.919 105.102 64.885 105.110 C 64.906 105.123 207.440 195.423 278.718 240.579 C 278.728 240.577 343.630 226.699 376.087 219.758 M 658.034 159.298 C 574.835 114.780 491.635 70.262 408.436 25.745 M 278.718 240.579 C 278.718 240.619 278.718 637.220 278.718 637.259 C 278.696 637.241 136.163 517.956 64.885 458.305 M 654.142 538.614 C 655.439 412.175 658.034 159.336 658.034 159.298 C 658.012 159.302 506.209 191.548 430.297 207.673 M 278.718 637.259 C 403.859 604.377 529.001 571.495 654.142 538.614 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"5\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 400.055 406.709 C 369.204 414.028 338.353 421.346 307.502 428.665 C 307.502 428.662 307.221 400.045 307.221 400.042 C 338.403 391.725 400.756 375.094 400.766 375.091 C 400.785 375.103 591.289 494.899 591.308 494.911 C 591.311 494.913 612.727 508.972 623.436 516.003 C 623.432 516.004 581.602 526.174 581.598 526.176 C 581.571 526.183 309.004 597.544 308.977 597.551 C 308.977 597.548 308.738 566.056 308.738 566.053 C 308.738 566.039 307.502 428.679 307.502 428.665 M 93.232 450.028 C 103.371 447.887 123.647 443.606 123.650 443.606 C 123.662 443.603 207.496 423.868 249.420 413.999 C 249.420 413.996 249.216 386.514 249.216 386.511 C 207.493 395.178 165.769 403.846 124.045 412.513 C 124.045 412.489 121.830 255.174 120.723 176.504 C 120.720 176.503 92.310 158.404 92.307 158.402 C 92.307 158.431 93.232 449.999 93.232 450.028 C 93.248 450.041 250.508 577.348 250.524 577.360 C 250.524 577.357 250.304 539.344 250.304 539.340 C 218.025 514.629 153.476 465.214 153.466 465.206 C 153.463 465.204 123.653 443.608 123.650 443.606 C 123.650 443.603 124.045 412.516 124.045 412.513 M 249.688 442.842 C 217.614 450.296 185.540 457.751 153.466 465.206 M 400.766 375.091 C 400.763 375.089 383.525 362.132 374.904 355.652 C 374.898 355.654 329.669 366.867 307.051 372.474 C 307.051 372.464 306.101 265.788 306.101 265.777 C 306.108 265.776 352.626 255.223 375.889 249.945 C 375.888 249.956 374.904 355.641 374.904 355.652 M 591.798 464.232 C 591.634 474.458 591.308 494.908 591.308 494.911 C 591.304 494.912 549.867 503.742 549.863 503.743 C 549.839 503.749 389.113 545.283 308.738 566.053 M 400.766 375.091 C 400.769 375.090 420.865 367.356 430.914 363.489 C 430.914 363.476 430.187 237.286 430.187 237.273 C 485.263 224.862 595.400 200.043 595.417 200.039 C 595.420 200.038 627.267 192.916 627.270 192.915 C 627.270 192.948 623.436 515.970 623.436 516.003 M 401.013 50.067 C 400.931 158.408 400.766 375.059 400.766 375.091 C 400.766 375.094 400.055 406.706 400.055 406.709 C 400.070 406.719 499.927 471.398 549.863 503.743 M 430.381 185.040 C 470.569 176.903 550.934 160.631 550.946 160.629 C 550.950 160.628 595.628 151.691 595.633 151.690 C 595.613 151.680 401.033 50.077 401.013 50.067 C 400.987 50.073 133.558 115.252 133.532 115.259 C 133.535 115.261 169.891 138.406 169.895 138.409 C 169.907 138.416 289.790 213.999 289.802 214.007 C 289.811 214.005 347.325 202.286 376.087 196.426 C 376.087 196.428 376.087 219.756 376.087 219.758 C 343.630 226.699 278.728 240.577 278.718 240.579 C 278.718 240.619 278.718 637.220 278.718 637.259 C 403.859 604.377 529.001 571.495 654.142 538.614 C 655.439 412.175 658.034 159.336 658.034 159.298 C 574.835 114.780 491.635 70.262 408.436 25.745 C 293.919 52.200 64.919 105.102 64.885 105.110 C 64.885 222.841 64.885 340.573 64.885 458.305 C 136.163 517.956 278.696 637.241 278.718 637.259 M 550.946 160.629 C 510.865 139.429 430.717 97.036 430.705 97.030 C 430.705 97.038 430.381 185.031 430.381 185.040 C 430.381 185.042 430.297 207.671 430.297 207.673 C 430.297 207.676 430.187 237.270 430.187 237.273 M 375.889 249.945 C 375.889 249.942 376.087 219.761 376.087 219.758 M 376.087 196.426 C 376.087 196.415 376.087 85.550 376.087 85.539 C 376.066 85.544 238.625 120.786 169.895 138.409 M 307.051 372.474 C 307.051 372.477 307.221 400.039 307.221 400.042 M 248.606 258.108 C 248.593 258.100 120.736 176.513 120.723 176.504 M 249.216 386.511 C 249.216 386.498 248.606 258.121 248.606 258.108 M 249.688 442.842 C 249.688 442.839 249.420 414.002 249.420 413.999 M 250.304 539.340 C 250.304 539.331 249.688 442.851 249.688 442.842 M 430.914 363.489 C 430.930 363.499 591.782 464.222 591.798 464.232 C 591.798 464.205 594.211 288.103 595.417 200.039 M 658.034 159.298 C 658.012 159.302 506.209 191.548 430.297 207.673 M 64.885 105.110 C 64.906 105.123 207.440 195.423 278.718 240.579 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"5\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 278.718 240.579 C 278.696 240.566 64.906 105.123 64.885 105.110 C 64.885 105.145 64.885 458.270 64.885 458.305 C 64.906 458.323 278.696 637.241 278.718 637.259 C 278.718 637.220 278.718 240.619 278.718 240.579 M 250.524 577.360 C 250.524 577.328 248.637 258.742 248.636 258.710 C 248.621 258.700 92.323 158.412 92.307 158.402 C 92.307 158.431 93.232 449.999 93.232 450.028 C 93.248 450.041 250.508 577.348 250.524 577.360 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"5\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 623.436 516.003 C 623.433 516.001 591.311 494.913 591.308 494.911 C 591.289 494.899 400.785 375.103 400.766 375.091 C 400.766 375.094 400.055 406.706 400.055 406.709 C 400.070 406.719 549.848 503.733 549.863 503.743 C 549.867 503.742 591.304 494.912 591.308 494.911 C 591.308 494.882 595.556 199.952 595.556 199.922 C 595.559 199.922 627.267 192.916 627.270 192.915 C 627.270 192.948 623.436 515.970 623.436 516.003 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"5\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 401.013 50.067 C 401.013 50.099 400.766 375.059 400.766 375.091 C 400.769 375.090 430.457 363.224 430.460 363.223 C 430.460 363.196 430.705 97.056 430.705 97.030 C 430.717 97.036 550.934 160.623 550.946 160.629 C 550.950 160.628 595.628 151.691 595.633 151.690 C 595.613 151.680 401.033 50.077 401.013 50.067 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":702.991,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":407.29,\\\"y\\\":25.164,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":657.474,\\\"y\\\":336.046,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873798915149,\\\"y\\\":0.005023948417628874}},{\\\"point\\\":{\\\"x\\\":59.398,\\\"y\\\":336.813,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873798915149,\\\"y\\\":0.00502394841762886}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":158.349,\\\"y\\\":543.83,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6285439478965765,\\\"y\\\":0.7777740710274326}},{\\\"point\\\":{\\\"x\\\":497.009,\\\"y\\\":584.944,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.24528795152159552,\\\"y\\\":0.9694502673362565}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":64.706,\\\"y\\\":103.651,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817084818456944,\\\"y\\\":-0.7316239100655736}},{\\\"point\\\":{\\\"x\\\":657.325,\\\"y\\\":159.298,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314454286031296,\\\"y\\\":-0.7754203187279851}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":650.927,\\\"y\\\":536.294,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7071067811865476,\\\"y\\\":0.7071067811865476}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"cup\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":80.83096088641506,\\\"max\\\":639.1690391135849},\\\"y\\\":{\\\"min\\\":48.012,\\\"max\\\":676.802}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cup\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"cup_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#3192170F-A0C1-4DEA-9A1E-71F270174773_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 86.902 70.418 C 86.929 70.418 177.347 50.012 360.000 50.012 C 542.653 50.012 633.071 70.418 633.098 70.418 C 633.092 70.441 683.074 292.213 432.936 414.478 C 393.692 433.660 392.241 550.697 432.936 574.677 C 488.166 607.224 560.918 594.244 560.249 634.146 C 559.903 654.774 453.855 674.802 360.000 674.802 C 266.145 674.802 160.102 655.084 159.751 634.146 C 159.082 594.244 231.834 607.224 287.064 574.677 C 327.759 550.697 326.308 433.660 287.064 414.478 C 36.926 292.213 86.908 70.441 86.902 70.418 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 85.091 C 483.809 85.091 545.520 79.339 545.520 76.626 C 545.520 73.912 483.809 68.161 360.000 68.161 C 236.191 68.161 174.480 73.912 174.480 76.626 C 174.480 79.339 236.191 85.091 360.000 85.091 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 86.902 70.418 C 86.929 70.420 226.001 84.897 360.000 84.897 C 493.999 84.897 542.066 75.245 633.098 70.418 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 546.149 615.419 C 545.397 634.508 446.906 649.298 360.000 649.298 C 273.094 649.298 174.614 634.795 173.851 615.419 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":209.126,\\\"max\\\":510.874},\\\"y\\\":{\\\"min\\\":107.188,\\\"max\\\":351.902}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":733.494,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":52.456,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":101.449,\\\"y\\\":221.886,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873372717037,\\\"y\\\":0.005032424490028817}},{\\\"point\\\":{\\\"x\\\":618.551,\\\"y\\\":221.886,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873372717037,\\\"y\\\":0.005032424490028821}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":540.978,\\\"y\\\":644.786,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129099334034306,\\\"y\\\":0.7012556073606228}},{\\\"point\\\":{\\\"x\\\":179.026,\\\"y\\\":644.841,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987196000423073,\\\"y\\\":0.7153956391513147}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":612.539,\\\"y\\\":68.692,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314768013396646,\\\"y\\\":-0.7753947700170707}},{\\\"point\\\":{\\\"x\\\":108.231,\\\"y\\\":68.782,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817343329883498,\\\"y\\\":-0.731599821777541}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.957,\\\"y\\\":672.411,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"3192170F-A0C1-4DEA-9A1E-71F270174773_0\\\",\\\"cx\\\":\\\"51.03%\\\",\\\"cy\\\":\\\"8.36%\\\",\\\"r\\\":\\\"89.59%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"30.59%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"dagger\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":224.25914481786768,\\\"max\\\":495.74085518213235},\\\"y\\\":{\\\"min\\\":65.749,\\\"max\\\":707.639}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"dagger\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"dagger\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 339.209 228.155 C 345.528 233.501 374.472 233.501 380.791 228.155 C 396.146 215.164 396.146 140.100 380.791 127.109 C 374.472 121.763 345.528 121.763 339.209 127.109 C 323.854 140.100 323.854 215.164 339.209 228.155 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 143.128 C 380.861 143.128 397.690 126.300 397.690 105.438 C 397.690 84.577 380.861 67.749 360.000 67.749 C 339.139 67.749 322.310 84.577 322.310 105.438 C 322.310 126.300 339.139 143.128 360.000 143.128 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 431.814 485.805 C 431.807 485.827 383.938 632.361 360.000 705.639 C 359.993 705.617 288.193 485.827 288.186 485.805 C 288.189 485.786 310.205 290.722 310.207 290.702 C 310.217 290.702 409.783 290.702 409.793 290.702 C 409.795 290.722 431.812 485.786 431.814 485.805 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 431.814 485.805 C 431.807 485.827 383.938 632.361 360.000 705.639 C 359.993 705.617 288.193 485.827 288.186 485.805 C 288.189 485.786 310.205 290.722 310.207 290.702 C 310.217 290.702 409.783 290.702 409.793 290.702 C 409.795 290.722 431.812 485.786 431.814 485.805 M 360.000 290.702 C 360.000 429.014 360.000 705.598 360.000 705.639 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 322.992 215.833 C 323.000 215.833 397.000 215.833 397.008 215.833 C 397.008 215.832 397.008 201.280 397.008 201.279 C 397.000 201.279 323.000 201.279 322.992 201.279 C 322.992 201.280 322.992 215.832 322.992 215.833 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 232.576 223.772 C 255.664 186.259 302.775 208.190 297.389 238.454 C 299.827 230.215 304.701 213.740 304.701 213.738 C 304.713 213.738 381.496 213.786 419.893 213.810 C 433.397 206.002 449.797 203.812 464.330 209.842 C 487.832 219.593 502.935 245.938 487.424 271.140 C 464.336 308.652 417.225 286.722 422.611 256.458 C 420.173 264.696 415.299 281.171 415.299 281.173 C 415.287 281.173 338.504 281.125 300.107 281.101 C 286.196 288.158 270.203 291.099 255.670 285.069 C 232.168 275.318 217.065 248.974 232.576 223.772 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 262.108 229.832 C 274.358 225.901 275.664 239.218 269.871 241.569 M 264.258 259.753 C 251.306 254.833 248.954 234.052 262.108 229.832 M 297.389 238.454 C 294.667 253.752 279.802 265.658 264.258 259.753 M 232.576 223.772 C 255.664 186.259 302.775 208.190 297.389 238.454 C 299.827 230.215 304.701 213.740 304.701 213.738 C 304.713 213.738 381.496 213.786 419.893 213.810 C 433.397 206.002 449.797 203.812 464.330 209.842 C 487.832 219.593 502.935 245.938 487.424 271.140 C 464.336 308.652 417.225 286.722 422.611 256.458 C 420.173 264.696 415.299 281.171 415.299 281.173 C 415.287 281.173 338.504 281.125 300.107 281.101 C 286.196 288.158 270.203 291.099 255.670 285.069 C 232.168 275.318 217.065 248.974 232.576 223.772 M 455.742 235.158 C 440.198 229.253 425.333 241.159 422.611 256.458 M 457.892 265.079 C 471.046 260.859 468.694 240.078 455.742 235.158 M 450.129 253.342 C 444.336 255.693 445.642 269.010 457.892 265.079 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 300.385 280.504 C 340.107 258.409 379.830 236.314 419.553 214.219 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 303.957 293.539 C 303.968 293.539 416.032 293.539 416.043 293.539 C 416.043 293.538 416.043 278.987 416.043 278.985 C 416.032 278.985 303.968 278.985 303.957 278.985 C 303.957 278.987 303.957 293.538 303.957 293.539 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":15.672,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":700.607,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":226.043,\\\"y\\\":248.05,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999870589770065,\\\"y\\\":-0.005087423563746617}},{\\\"point\\\":{\\\"x\\\":493.957,\\\"y\\\":248.05,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999870589770065,\\\"y\\\":-0.005087423563746617}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":286.687,\\\"y\\\":489.544,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817526902115878,\\\"y\\\":0.7315827153434277}},{\\\"point\\\":{\\\"x\\\":434.036,\\\"y\\\":489.628,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314359083177964,\\\"y\\\":0.7754280712528272}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":67.559,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}]}},{\\\"name\\\":\\\"death\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":156.067,\\\"max\\\":602.0951753528407},\\\"y\\\":{\\\"min\\\":24.766,\\\"max\\\":640.888}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"death\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"death\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 26.766 C 470.012 26.766 470.012 118.442 470.012 356.802 C 470.012 425.944 429.779 450.820 402.405 505.101 C 389.820 530.057 430.536 545.661 380.936 581.138 C 362.918 594.025 386.712 603.140 360.000 638.888 C 362.171 607.137 328.473 599.639 339.065 579.539 C 363.707 532.777 308.409 535.881 317.595 506.926 C 336.112 448.560 249.988 446.900 249.988 356.802 C 249.988 118.442 249.988 26.766 360.000 26.766 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 299.764 113.238 C 299.764 98.417 311.719 86.461 326.540 86.461 C 341.361 86.461 353.317 98.417 353.317 113.238 C 353.317 128.059 341.361 140.014 326.540 140.014 C 311.720 140.014 299.764 128.058 299.764 113.238 M 345.850 154.616 C 345.852 154.613 359.999 128.963 360.000 128.960 C 360.001 128.963 374.148 154.613 374.150 154.616 C 374.147 154.616 345.853 154.616 345.850 154.616 M 366.259 112.766 C 366.259 98.055 378.126 86.189 392.837 86.189 C 407.547 86.189 419.414 98.056 419.414 112.766 C 419.414 127.476 407.547 139.343 392.837 139.343 C 378.126 139.343 366.259 127.476 366.259 112.766 M 321.516 205.925 C 321.516 205.922 321.892 178.798 321.990 171.720 C 303.137 159.235 287.912 138.202 287.331 113.168 C 286.429 74.343 321.164 45.599 360.000 45.599 C 398.836 45.599 433.571 74.343 432.669 113.168 C 432.088 138.202 416.863 159.235 398.010 171.720 C 398.108 178.799 398.484 205.922 398.484 205.925 C 398.483 205.925 386.248 205.925 386.247 205.925 C 386.247 205.924 386.247 188.405 386.247 188.403 C 386.246 188.403 382.209 188.403 382.209 188.403 C 382.209 188.405 382.209 205.924 382.209 205.925 C 382.208 205.925 370.096 205.925 370.095 205.925 C 370.095 205.924 370.095 188.405 370.095 188.403 C 370.095 188.403 366.058 188.403 366.057 188.403 C 366.057 188.405 366.057 205.924 366.057 205.925 C 366.056 205.925 353.944 205.925 353.943 205.925 C 353.943 205.924 353.943 188.405 353.943 188.403 C 353.942 188.403 349.905 188.403 349.905 188.403 C 349.905 188.405 349.905 205.924 349.905 205.925 C 349.904 205.925 337.792 205.925 337.791 205.925 C 337.791 205.924 337.791 188.405 337.791 188.403 C 337.791 188.403 333.754 188.403 333.753 188.403 C 333.753 188.405 333.753 205.924 333.753 205.925 C 333.752 205.925 321.517 205.925 321.516 205.925 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"scythe\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 546.712 154.840 C 546.714 154.860 644.813 223.790 575.041 351.647 C 597.350 231.438 517.555 178.854 517.550 178.836 C 517.553 178.834 546.709 154.843 546.712 154.840 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 544.338 147.902 C 544.792 147.767 551.868 156.343 551.427 156.518 C 486.321 182.345 421.610 383.548 170.264 452.066 C 163.461 447.381 160.012 440.610 158.067 433.049 C 440.615 343.180 474.727 168.600 544.338 147.902 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 336.901 383.884 C 336.899 383.881 316.169 350.938 316.167 350.935 C 316.168 350.934 327.149 344.024 327.150 344.023 C 327.152 344.026 347.883 376.969 347.885 376.972 C 347.884 376.973 336.903 383.883 336.901 383.884 M 328.300 394.581 C 328.298 394.577 305.186 357.850 305.184 357.846 C 305.185 357.845 316.166 350.935 316.167 350.935 C 316.169 350.938 339.281 387.665 339.284 387.669 C 339.283 387.669 328.301 394.580 328.300 394.581 M 314.935 397.707 C 314.933 397.703 294.203 364.761 294.201 364.758 C 294.202 364.757 305.183 357.847 305.184 357.846 C 305.186 357.849 325.916 390.792 325.918 390.795 C 325.917 390.796 314.936 397.706 314.935 397.707 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 389.995 294.271 C 389.998 294.274 416.086 323.160 416.088 323.163 C 416.087 323.164 406.459 331.860 406.458 331.861 C 406.455 331.858 380.367 302.972 380.364 302.969 C 380.365 302.968 389.994 294.272 389.995 294.271 M 396.628 282.255 C 396.631 282.258 425.716 314.462 425.718 314.465 C 425.717 314.466 416.089 323.162 416.088 323.163 C 416.085 323.160 387.001 290.956 386.998 290.953 C 386.999 290.952 396.627 282.256 396.628 282.255 M 409.256 276.877 C 409.259 276.879 435.347 305.765 435.349 305.768 C 435.348 305.768 425.719 314.464 425.718 314.465 C 425.716 314.462 399.628 285.577 399.625 285.574 C 399.626 285.573 409.255 276.877 409.256 276.877 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":688.994,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":27.177,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":245.41,\\\"y\\\":234.607,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999870164065952,\\\"y\\\":0.005095784359265848}},{\\\"point\\\":{\\\"x\\\":474.59,\\\"y\\\":234.607,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999870164065952,\\\"y\\\":0.005095784359265848}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":443.642,\\\"y\\\":503.615,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129394926389885,\\\"y\\\":0.701225555606512}},{\\\"point\\\":{\\\"x\\\":276.164,\\\"y\\\":503.663,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987116417233631,\\\"y\\\":0.7154034118734987}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":642.28,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"devil\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":103.497,\\\"max\\\":615.059},\\\"y\\\":{\\\"min\\\":120.39693877606955,\\\"max\\\":620.8190728660453}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"devil_4\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"devil_half\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 511.425 260.574 C 530.338 293.333 519.169 335.016 486.411 353.930 C 453.652 372.843 415.835 368.372 393.055 328.915 C 393.055 328.915 511.413 260.581 511.425 260.574 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 453.615 282.665 C 463.321 282.665 475.172 291.501 475.172 320.575 C 475.172 349.649 453.617 358.481 453.615 358.485 C 453.613 358.481 432.059 349.649 432.059 320.575 C 432.059 291.502 443.910 282.665 453.615 282.665 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 486.411 353.930 C 453.652 372.843 415.835 368.372 393.055 328.915 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 393.055 328.915 C 393.055 328.915 511.413 260.581 511.425 260.574 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 511.425 260.574 C 530.338 293.333 519.169 335.016 486.411 353.930 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 486.411 353.930 C 453.652 372.843 415.835 368.372 393.055 328.915 C 393.055 328.915 511.413 260.581 511.425 260.574 C 530.338 293.333 519.169 335.016 486.411 353.930 M 457.964 525.703 C 457.954 525.702 419.190 506.317 361.029 506.317 C 361.029 506.328 361.033 618.804 361.029 618.814 C 514.950 619.682 613.059 509.051 613.059 370.608 C 613.059 232.166 514.950 121.535 361.029 122.402 C 361.029 122.402 361.029 197.401 361.029 234.900 C 361.029 238.236 361.029 479.546 361.029 479.570 C 361.029 479.571 361.029 486.748 361.029 486.749 C 438.577 486.930 457.954 525.700 457.964 525.703 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 511.425 260.574 C 530.338 293.333 519.169 335.016 486.411 353.930 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 486.411 353.930 C 453.652 372.843 415.835 368.372 393.055 328.915 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 393.055 328.915 C 393.055 328.915 511.413 260.581 511.425 260.574 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 361.029 234.900 C 361.029 238.236 361.029 479.546 361.029 479.570 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 511.425 260.574 C 530.338 293.333 519.169 335.016 486.411 353.930 C 453.652 372.843 415.835 368.372 393.055 328.915 C 393.055 328.915 511.413 260.581 511.425 260.574 M 562.378 324.929 C 553.743 253.514 516.415 197.656 476.641 189.730 C 432.715 180.976 388.622 202.532 361.029 234.900 C 361.029 238.236 361.029 479.546 361.029 479.570 C 361.033 479.567 403.698 446.237 403.750 445.787 C 480.963 425.318 514.460 466.483 525.444 471.592 C 557.414 440.284 563.056 393.425 563.060 393.417 C 563.063 393.409 609.677 397.290 597.995 312.617 C 589.863 314.625 571.990 320.092 562.378 324.929 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 380.416 312.448 C 380.416 312.459 380.416 428.758 380.416 428.769 C 380.421 428.767 410.905 409.463 424.452 404.872 C 446.254 397.484 476.544 416.316 464.936 441.430 M 526.250 228.441 C 477.639 256.443 380.431 312.439 380.416 312.448 M 403.750 445.787 C 415.180 438.305 425.894 426.662 437.951 428.865 M 511.425 260.574 C 530.338 293.333 519.169 335.016 486.411 353.930 C 453.652 372.843 415.835 368.372 393.055 328.915 C 393.055 328.915 511.413 260.581 511.425 260.574 M 562.378 324.929 C 553.743 253.514 516.415 197.656 476.641 189.730 C 432.715 180.976 388.622 202.532 361.029 234.900 C 361.029 238.236 361.029 479.546 361.029 479.570 C 361.033 479.567 403.698 446.237 403.750 445.787 C 480.963 425.318 514.460 466.483 525.444 471.592 C 557.414 440.284 563.056 393.425 563.060 393.417 C 563.063 393.409 609.677 397.290 597.995 312.617 C 589.863 314.625 571.990 320.092 562.378 324.929 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 460.074 136.952 C 435.582 158.719 439.417 164.923 442.409 189.948 C 433.277 203.572 411.506 212.615 400.451 202.846 C 398.190 161.385 416.857 132.220 460.074 136.952 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"devil_half_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 207.131 260.574 C 188.218 293.333 199.387 335.016 232.145 353.930 C 264.904 372.843 302.721 368.372 325.501 328.915 C 325.501 328.915 207.143 260.581 207.131 260.574 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 232.145 353.930 C 264.904 372.843 302.721 368.372 325.501 328.915 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 325.501 328.915 C 325.501 328.915 207.143 260.581 207.131 260.574 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 207.131 260.574 C 188.218 293.333 199.387 335.016 232.145 353.930 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 232.145 353.930 C 264.904 372.843 302.721 368.372 325.501 328.915 C 325.501 328.915 207.143 260.581 207.131 260.574 C 188.218 293.333 199.387 335.016 232.145 353.930 M 260.592 525.703 C 260.602 525.702 299.366 506.317 357.527 506.317 C 357.527 506.328 357.523 618.804 357.527 618.814 C 203.606 619.682 105.497 509.051 105.497 370.608 C 105.497 232.166 203.606 121.535 357.527 122.402 C 357.527 122.402 357.527 197.401 357.527 234.900 C 357.527 238.236 357.527 479.546 357.527 479.570 C 357.527 479.571 357.527 486.748 357.527 486.749 C 279.979 486.930 260.602 525.700 260.592 525.703 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 264.941 282.665 C 255.235 282.665 243.384 291.501 243.384 320.575 C 243.384 349.649 264.939 358.481 264.941 358.485 C 264.943 358.481 286.497 349.649 286.497 320.575 C 286.497 291.502 274.646 282.665 264.941 282.665 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 207.131 260.574 C 188.218 293.333 199.387 335.016 232.145 353.930 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 232.145 353.930 C 264.904 372.843 302.721 368.372 325.501 328.915 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 325.501 328.915 C 325.501 328.915 207.143 260.581 207.131 260.574 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 357.527 234.900 C 357.527 238.236 357.527 479.546 357.527 479.570 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 207.131 260.574 C 188.218 293.333 199.387 335.016 232.145 353.930 C 264.904 372.843 302.721 368.372 325.501 328.915 C 325.501 328.915 207.143 260.581 207.131 260.574 M 156.178 324.929 C 164.813 253.514 202.141 197.656 241.915 189.730 C 285.841 180.976 329.934 202.532 357.527 234.900 C 357.527 238.236 357.527 479.546 357.527 479.570 C 357.523 479.567 314.858 446.237 314.806 445.787 C 237.593 425.318 204.096 466.483 193.112 471.592 C 161.142 440.284 155.500 393.425 155.496 393.417 C 155.493 393.409 108.879 397.290 120.561 312.617 C 128.693 314.625 146.566 320.092 156.178 324.929 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 338.140 312.448 C 338.140 312.459 338.140 428.758 338.140 428.769 C 338.135 428.767 307.651 409.463 294.104 404.872 C 272.302 397.484 242.012 416.316 253.620 441.430 M 192.306 228.441 C 240.917 256.443 338.125 312.439 338.140 312.448 M 314.806 445.787 C 303.376 438.305 292.662 426.662 280.605 428.865 M 207.131 260.574 C 188.218 293.333 199.387 335.016 232.145 353.930 C 264.904 372.843 302.721 368.372 325.501 328.915 C 325.501 328.915 207.143 260.581 207.131 260.574 M 156.178 324.929 C 164.813 253.514 202.141 197.656 241.915 189.730 C 285.841 180.976 329.934 202.532 357.527 234.900 C 357.527 238.236 357.527 479.546 357.527 479.570 C 357.523 479.567 314.858 446.237 314.806 445.787 C 237.593 425.318 204.096 466.483 193.112 471.592 C 161.142 440.284 155.500 393.425 155.496 393.417 C 155.493 393.409 108.879 397.290 120.561 312.617 C 128.693 314.625 146.566 320.092 156.178 324.929 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 258.482 136.952 C 282.974 158.719 279.139 164.923 276.147 189.948 C 285.279 203.572 307.050 212.615 318.105 202.846 C 320.365 161.385 301.699 132.220 258.482 136.952 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":703.479,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":119.938,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":103.764,\\\"y\\\":370.789,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873291494513,\\\"y\\\":0.005034038194809824}},{\\\"point\\\":{\\\"x\\\":616.236,\\\"y\\\":370.789,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873291494513,\\\"y\\\":0.005034038194809813}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":549.562,\\\"y\\\":537.582,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129009603494577,\\\"y\\\":0.7012647294230766}},{\\\"point\\\":{\\\"x\\\":170.282,\\\"y\\\":537.621,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986940826594948,\\\"y\\\":0.7154205608288086}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":534.985,\\\"y\\\":188.288,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314974491510122,\\\"y\\\":-0.7753779541073919}},{\\\"point\\\":{\\\"x\\\":185.63,\\\"y\\\":188.348,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6816824390812377,\\\"y\\\":-0.7316481751827544}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":618.112,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"door\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":140.751,\\\"max\\\":623.426},\\\"y\\\":{\\\"min\\\":14.021,\\\"max\\\":711.047}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"door\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"door\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 297.325 536.213 C 297.325 536.162 297.913 197.716 298.207 28.469 C 298.237 28.486 598.494 201.838 598.524 201.855 C 598.524 201.906 598.620 709.496 598.620 709.547 C 598.590 709.530 297.355 536.230 297.325 536.213 M 360.917 519.908 C 360.825 510.205 360.732 500.502 360.640 490.800 C 425.206 527.944 489.771 565.089 554.337 602.233 C 554.318 602.222 360.659 490.811 360.640 490.800 C 360.640 490.761 361.207 107.819 361.207 107.780 C 425.563 144.936 554.255 219.236 554.275 219.247 C 554.275 219.286 554.337 602.195 554.337 602.233 C 554.337 611.830 554.337 631.021 554.337 631.024 C 554.318 631.013 425.391 556.947 360.917 519.908 M 335.319 96.436 C 335.321 96.437 351.957 104.755 360.276 108.915 C 360.276 108.956 360.276 520.693 360.276 520.734 C 360.276 520.693 360.276 246.188 360.276 108.915 C 351.957 104.755 335.321 96.437 335.319 96.436 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 297.325 536.213 C 297.325 536.162 297.913 197.716 298.207 28.469 C 298.237 28.486 598.494 201.838 598.524 201.855 C 598.524 201.906 598.620 709.496 598.620 709.547 C 598.590 709.530 297.355 536.230 297.325 536.213 M 360.917 519.908 C 360.825 510.205 360.732 500.502 360.640 490.800 C 425.206 527.944 489.771 565.089 554.337 602.233 C 554.337 611.830 554.337 621.427 554.337 631.024 C 554.337 631.021 554.337 611.830 554.337 602.233 C 554.318 602.222 360.659 490.811 360.640 490.800 C 360.640 490.761 361.207 107.819 361.207 107.780 C 361.226 107.792 489.919 182.092 554.275 219.247 C 554.255 219.236 425.563 144.936 361.207 107.780 M 554.337 602.233 C 554.337 602.195 554.275 219.286 554.275 219.247 M 360.917 519.908 C 425.391 556.947 554.318 631.013 554.337 631.024 M 361.207 108.248 C 361.207 245.521 361.207 382.794 361.207 520.067 M 335.319 96.436 C 335.321 96.437 351.957 104.755 360.276 108.915 C 360.276 108.956 360.276 520.693 360.276 520.734 C 360.276 520.693 360.276 246.188 360.276 108.915 C 351.957 104.755 335.321 96.437 335.319 96.436 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 335.319 96.436 C 335.321 96.437 351.957 104.755 360.276 108.915 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.276 108.915 C 360.276 246.188 360.276 520.693 360.276 520.734 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 167.210 632.202 C 167.207 632.200 150.571 623.882 142.251 619.722 C 142.251 482.449 142.251 207.945 142.251 207.903 C 142.271 207.892 335.299 96.447 335.319 96.436 C 335.321 96.437 351.957 104.755 360.276 108.915 C 360.276 246.188 360.276 520.693 360.276 520.734 C 360.257 520.746 167.229 632.190 167.210 632.202 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 142.251 619.722 C 142.251 619.720 142.251 207.942 142.251 207.903 C 142.268 207.894 335.299 96.447 335.319 96.436 C 335.321 96.437 351.957 104.755 360.276 108.915 C 360.276 108.956 360.276 520.693 360.276 520.734 C 360.257 520.746 167.229 632.190 167.210 632.202 C 158.890 628.042 150.571 623.882 142.251 619.722 M 142.251 207.903 C 150.571 212.063 158.890 216.223 167.210 220.383 C 167.227 220.373 360.257 108.926 360.276 108.915 M 167.210 632.202 C 167.210 632.199 167.210 220.421 167.210 220.383 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.917 519.908 C 360.825 510.205 360.732 500.502 360.640 490.800 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.640 490.800 C 425.206 527.944 489.771 565.089 554.337 602.233 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 554.337 602.233 C 554.337 611.830 554.337 631.021 554.337 631.024 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 554.337 631.024 C 554.318 631.013 425.391 556.947 360.917 519.908 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.917 519.908 C 360.825 510.205 360.732 500.502 360.640 490.800 C 425.206 527.944 489.771 565.089 554.337 602.233 C 554.337 611.830 554.337 631.021 554.337 631.024 C 554.318 631.013 425.391 556.947 360.917 519.908 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 142.251 619.722 C 142.251 619.719 142.251 207.942 142.251 207.903 C 150.571 212.063 158.890 216.223 167.210 220.383 C 167.210 220.421 167.210 632.199 167.210 632.202 C 158.890 628.042 150.571 623.882 142.251 619.722 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 200.270 394.740 C 210.630 394.740 218.988 403.098 218.988 413.459 C 218.989 423.820 210.630 432.178 200.270 432.178 C 189.909 432.178 181.550 423.820 181.550 413.459 C 181.550 403.098 189.909 394.740 200.270 394.740 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 554.337 631.024 C 554.337 621.427 554.337 611.830 554.337 602.233 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 598.524 201.855 C 598.494 201.838 298.237 28.486 298.207 28.469 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 321.513 15.521 C 421.618 73.317 621.799 188.891 621.829 188.908 C 614.061 193.224 606.292 197.540 598.524 201.855 C 598.494 201.838 298.237 28.486 298.207 28.469 C 298.210 28.467 313.744 19.837 321.513 15.521 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 598.524 201.855 C 606.292 197.540 614.061 193.224 621.829 188.908 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 598.620 709.547 C 598.620 709.496 598.524 201.906 598.524 201.855 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 598.524 201.855 C 606.292 197.540 614.061 193.224 621.829 188.908 C 621.829 188.959 621.926 696.549 621.926 696.600 C 621.923 696.601 606.389 705.231 598.620 709.547 C 598.620 709.496 598.524 201.906 598.524 201.855 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":232.66,\\\"max\\\":553.719},\\\"y\\\":{\\\"min\\\":221.364,\\\"max\\\":614.153}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":700.544,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":40.816,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":622.848,\\\"y\\\":368.302,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999875002343701,\\\"y\\\":0.004999937501169377}},{\\\"point\\\":{\\\"x\\\":140.261,\\\"y\\\":369.089,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999870306009792,\\\"y\\\":0.005092998118627711}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":152.551,\\\"y\\\":621.189,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986691571538629,\\\"y\\\":0.7154449027297006}},{\\\"point\\\":{\\\"x\\\":612.779,\\\"y\\\":699.128,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129208414116204,\\\"y\\\":0.7012445178972504}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":609.115,\\\"y\\\":182.925,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6313905507300575,\\\"y\\\":-0.7754650040129436}},{\\\"point\\\":{\\\"x\\\":162.584,\\\"y\\\":195.649,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817605159348934,\\\"y\\\":-0.7315754225725384}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":514.984,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"dragon\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":8.124,\\\"max\\\":710.6207112358421},\\\"y\\\":{\\\"min\\\":135.129,\\\"max\\\":569.96}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"dragon\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tongue\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 186.872 231.321 C 191.401 229.932 182.109 220.415 178.322 218.519 C 166.813 212.757 120.901 202.328 132.348 227.217 C 139.498 242.764 82.109 227.737 93.473 245.855 C 102.140 259.673 47.357 247.832 51.049 259.524 C 57.839 281.034 8.628 273.190 8.624 273.192 C 8.629 273.191 62.550 289.365 57.425 264.838 C 54.917 252.837 108.736 267.788 100.574 253.666 C 88.959 233.571 150.420 249.877 143.013 233.973 C 132.152 210.652 178.842 233.784 186.872 231.321 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 178.322 218.519 C 166.813 212.757 120.901 202.328 132.348 227.217 C 139.498 242.764 82.109 227.737 93.473 245.855 C 102.140 259.673 47.357 247.832 51.049 259.524 C 57.839 281.034 8.628 273.190 8.624 273.192 C 8.629 273.191 62.550 289.365 57.425 264.838 C 54.917 252.837 108.736 267.788 100.574 253.666 C 88.959 233.571 150.420 249.877 143.013 233.973 C 132.152 210.652 178.842 233.784 186.872 231.321 C 191.401 229.932 182.109 220.415 178.322 218.519 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"dragon\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 499.118 365.434 C 549.656 367.345 575.279 391.666 597.413 405.574 C 589.747 385.164 582.339 357.487 574.416 344.344 C 553.017 308.846 498.884 265.962 409.957 288.996 C 351.961 304.018 304.567 342.610 293.615 349.596 C 289.019 352.527 246.715 380.083 229.608 345.089 C 221.781 329.080 251.635 306.897 260.139 279.766 C 273.294 237.798 256.302 205.806 239.206 194.220 C 221.480 182.206 196.240 177.523 196.236 177.521 C 196.238 177.520 211.540 169.785 215.407 166.160 C 221.730 160.234 235.286 135.632 235.288 135.629 C 235.284 135.632 211.000 159.457 198.366 164.740 C 183.385 171.005 155.106 163.548 142.983 171.131 C 91.462 203.355 70.934 200.157 62.039 215.863 C 56.666 225.351 66.299 251.361 66.300 251.365 C 66.300 251.363 71.269 237.166 71.270 237.164 C 71.280 237.162 163.952 207.657 169.965 217.993 C 174.822 226.342 98.968 268.400 98.961 268.405 C 98.960 268.405 82.632 262.726 82.630 262.725 C 82.632 262.728 94.355 285.413 96.831 287.576 C 98.896 289.381 117.551 298.320 118.842 296.807 C 119.806 295.678 111.053 283.200 111.742 280.476 C 115.140 267.043 192.678 246.398 192.686 246.394 C 192.687 246.394 204.526 230.721 204.703 226.797 C 205.063 218.828 191.977 202.375 191.976 202.372 C 191.977 202.375 205.732 217.800 205.197 227.246 C 205.136 228.327 200.475 236.575 198.501 238.915 C 198.097 239.393 216.414 242.872 206.177 266.275 C 195.809 289.977 136.113 292.507 122.392 349.350 C 114.500 382.046 131.779 401.285 129.181 402.610 C 119.924 407.333 122.393 429.581 122.392 429.583 C 122.388 429.585 82.151 447.882 81.920 446.624 C 74.098 403.995 89.396 408.002 81.210 390.532 C 79.332 386.521 72.891 369.579 60.619 367.810 C 45.018 365.562 30.801 374.910 30.798 374.911 C 30.801 374.911 54.091 375.181 57.069 377.751 C 67.063 386.375 61.329 392.660 61.329 392.662 C 61.327 392.661 47.315 385.537 36.478 387.691 C 27.885 389.399 14.469 406.861 14.467 406.862 C 14.470 406.862 33.998 397.722 39.318 398.342 C 43.510 398.831 57.067 408.991 57.069 408.992 C 57.066 408.994 38.733 405.685 29.378 421.773 C 27.578 424.867 29.378 443.782 29.378 443.784 C 29.379 443.782 38.150 424.993 40.028 423.903 C 45.853 420.523 63.457 426.033 63.460 426.033 C 63.460 426.040 67.495 492.571 69.850 489.936 C 90.709 466.597 164.650 447.662 161.781 445.161 C 145.327 430.815 131.495 403.636 131.494 403.635 C 131.495 403.636 148.035 433.553 168.197 450.780 C 171.170 453.320 170.176 452.018 179.195 456.565 C 176.388 435.614 181.325 416.097 181.325 416.093 C 181.325 416.097 177.007 448.383 181.325 460.115 C 186.312 473.661 216.138 493.823 214.697 498.457 C 212.860 504.363 156.834 512.146 150.794 509.107 C 147.671 507.537 140.616 482.764 133.043 480.706 C 114.314 475.617 97.545 491.355 97.541 491.356 C 97.544 491.357 121.132 486.296 128.073 492.777 C 132.341 496.763 131.622 511.236 131.623 511.237 C 131.620 511.237 111.109 504.067 102.511 509.107 C 90.317 516.257 86.892 547.445 86.891 547.449 C 86.893 547.447 96.610 524.646 105.351 521.178 C 113.426 517.975 134.460 526.858 134.463 526.858 C 134.461 526.860 115.184 531.617 111.742 540.349 C 107.765 550.440 120.971 569.458 120.972 569.460 C 120.973 569.458 117.855 553.417 123.812 546.029 C 132.946 534.703 149.246 548.259 158.604 536.089 C 168.440 523.299 259.202 516.338 260.139 513.368 C 260.631 511.808 246.081 479.964 228.898 465.085 C 222.430 459.485 243.807 428.877 243.808 428.873 C 243.807 428.877 223.483 458.275 229.226 462.955 C 232.692 465.780 266.920 479.163 307.712 472.895 C 363.650 464.301 407.721 421.814 407.731 421.809 C 407.737 421.803 439.946 375.878 475.990 367.891 C 484.424 366.021 492.220 366.265 499.118 365.434 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 292.112 436.582 C 261.281 439.629 242.528 432.256 242.523 432.255 M 413.507 369.941 C 393.286 385.653 370.585 428.828 292.112 436.582 M 509.075 365.245 C 487.872 341.127 437.699 351.142 413.507 369.941 M 499.118 365.434 C 549.656 367.345 575.279 391.666 597.413 405.574 C 589.747 385.164 582.339 357.487 574.416 344.344 C 553.017 308.846 498.884 265.962 409.957 288.996 C 351.961 304.018 304.567 342.610 293.615 349.596 C 289.019 352.527 246.715 380.083 229.608 345.089 C 221.781 329.080 251.635 306.897 260.139 279.766 C 273.294 237.798 256.302 205.806 239.206 194.220 C 221.480 182.206 196.240 177.523 196.236 177.521 C 196.238 177.520 211.540 169.785 215.407 166.160 C 221.730 160.234 235.286 135.632 235.288 135.629 C 235.284 135.632 211.000 159.457 198.366 164.740 C 183.385 171.005 155.106 163.548 142.983 171.131 C 91.462 203.355 70.934 200.157 62.039 215.863 C 56.666 225.351 66.299 251.361 66.300 251.365 C 66.300 251.363 71.269 237.166 71.270 237.164 C 71.280 237.162 163.952 207.657 169.965 217.993 C 174.822 226.342 98.968 268.400 98.961 268.405 C 98.960 268.405 82.632 262.726 82.630 262.725 C 82.632 262.728 94.355 285.413 96.831 287.576 C 98.896 289.381 117.551 298.320 118.842 296.807 C 119.806 295.678 111.053 283.200 111.742 280.476 C 115.140 267.043 192.678 246.398 192.686 246.394 C 192.687 246.394 204.526 230.721 204.703 226.797 C 205.063 218.828 191.977 202.375 191.976 202.372 C 191.977 202.375 205.732 217.800 205.197 227.246 C 205.136 228.327 200.475 236.575 198.501 238.915 C 198.097 239.393 216.414 242.872 206.177 266.275 C 195.809 289.977 136.113 292.507 122.392 349.350 C 114.500 382.046 131.779 401.285 129.181 402.610 C 119.924 407.333 122.393 429.581 122.392 429.583 C 122.388 429.585 82.151 447.882 81.920 446.624 C 74.098 403.995 89.396 408.002 81.210 390.532 C 79.332 386.521 72.891 369.579 60.619 367.810 C 45.018 365.562 30.801 374.910 30.798 374.911 C 30.801 374.911 54.091 375.181 57.069 377.751 C 67.063 386.375 61.329 392.660 61.329 392.662 C 61.327 392.661 47.315 385.537 36.478 387.691 C 27.885 389.399 14.469 406.861 14.467 406.862 C 14.470 406.862 33.998 397.722 39.318 398.342 C 43.510 398.831 57.067 408.991 57.069 408.992 C 57.066 408.994 38.733 405.685 29.378 421.773 C 27.578 424.867 29.378 443.782 29.378 443.784 C 29.379 443.782 38.150 424.993 40.028 423.903 C 45.853 420.523 63.457 426.033 63.460 426.033 C 63.460 426.040 67.495 492.571 69.850 489.936 C 90.709 466.597 164.650 447.662 161.781 445.161 C 145.327 430.815 131.495 403.636 131.494 403.635 C 131.495 403.636 148.035 433.553 168.197 450.780 C 171.170 453.320 170.176 452.018 179.195 456.565 C 176.388 435.614 181.325 416.097 181.325 416.093 C 181.325 416.097 177.007 448.383 181.325 460.115 C 186.312 473.661 216.138 493.823 214.697 498.457 C 212.860 504.363 156.834 512.146 150.794 509.107 C 147.671 507.537 140.616 482.764 133.043 480.706 C 114.314 475.617 97.545 491.355 97.541 491.356 C 97.544 491.357 121.132 486.296 128.073 492.777 C 132.341 496.763 131.622 511.236 131.623 511.237 C 131.620 511.237 111.109 504.067 102.511 509.107 C 90.317 516.257 86.892 547.445 86.891 547.449 C 86.893 547.447 96.610 524.646 105.351 521.178 C 113.426 517.975 134.460 526.858 134.463 526.858 C 134.461 526.860 115.184 531.617 111.742 540.349 C 107.765 550.440 120.971 569.458 120.972 569.460 C 120.973 569.458 117.855 553.417 123.812 546.029 C 132.946 534.703 149.246 548.259 158.604 536.089 C 168.440 523.299 259.202 516.338 260.139 513.368 C 260.631 511.808 246.081 479.964 228.898 465.085 C 222.430 459.485 243.807 428.877 243.808 428.873 C 243.807 428.877 223.483 458.275 229.226 462.955 C 232.692 465.780 266.920 479.163 307.712 472.895 C 363.650 464.301 407.721 421.814 407.731 421.809 C 407.737 421.803 439.946 375.878 475.990 367.891 C 484.424 366.021 492.220 366.265 499.118 365.434 M 152.214 349.414 C 147.167 396.616 177.265 412.884 180.472 416.077 M 227.865 264.404 C 223.737 293.064 156.100 313.070 152.214 349.414 M 201.787 215.927 C 201.790 215.932 233.577 224.738 227.865 264.404 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 407.731 421.809 C 407.737 421.803 439.946 375.878 475.990 367.891 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 475.990 367.891 C 484.424 366.021 492.220 366.265 499.118 365.434 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 499.118 365.434 C 549.656 367.345 575.279 391.666 597.413 405.574 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 507.787 477.872 C 518.782 475.284 526.500 461.119 530.066 455.613 C 530.067 455.610 501.994 441.837 489.543 454.298 C 480.355 463.493 489.229 482.239 507.787 477.872 M 637.168 462.245 C 628.474 464.875 616.513 467.698 602.333 468.304 C 600.872 482.286 597.322 494.643 591.016 504.137 C 567.954 538.854 519.267 568.991 458.239 546.029 C 417.921 530.860 397.391 488.135 397.176 465.085 C 396.923 438.065 407.730 421.815 407.731 421.809 C 407.737 421.803 439.946 375.878 475.990 367.891 C 484.424 366.021 492.220 366.265 499.118 365.434 C 549.656 367.345 575.279 391.666 597.413 405.574 C 608.369 412.459 618.661 416.526 630.778 412.542 C 649.327 406.444 686.001 388.670 682.610 356.450 C 676.802 301.259 622.973 285.756 622.967 285.749 C 622.976 285.757 696.351 278.055 709.122 362.934 C 713.374 391.192 706.636 441.232 637.168 462.245 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 602.333 468.304 C 581.770 469.184 530.065 455.618 530.066 455.613 C 530.065 455.618 581.770 469.184 602.333 468.304 C 581.770 469.184 530.065 455.618 530.066 455.613 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 559.064 464.375 C 559.060 464.380 550.028 498.384 524.272 509.817 C 502.402 519.526 474.250 513.871 459.659 494.907 C 445.906 477.033 448.091 450.860 461.079 432.424 C 473.135 415.310 496.862 407.850 515.042 411.122 C 550.553 417.515 574.121 442.963 610.186 441.883 C 637.837 441.055 665.134 437.148 682.088 415.289 C 700.362 391.728 703.308 359.597 689.795 333.019 C 670.866 295.785 628.630 287.882 628.624 287.877 M 602.333 468.304 C 581.770 469.184 530.065 455.618 530.066 455.613 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 77.018 218.093 C 70.448 220.311 67.611 226.300 67.610 226.301 C 67.610 226.300 68.427 218.066 71.213 215.891 C 77.741 210.796 83.189 216.011 77.018 218.093 M 155.206 193.271 C 145.067 196.631 134.072 192.220 134.070 192.220 C 134.071 192.219 144.134 180.858 150.101 178.658 C 161.132 174.590 171.536 181.927 171.538 181.927 C 171.536 181.928 168.728 188.790 155.206 193.271 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wing\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 566.173 154.848 C 566.167 154.850 524.403 161.356 515.535 175.106 C 502.845 194.784 507.321 221.659 507.320 221.664 C 507.316 221.667 478.793 235.695 469.937 254.480 C 463.273 268.614 463.004 295.112 463.004 295.116 C 463.001 295.118 442.576 300.579 434.973 310.663 C 427.999 319.913 428.120 339.250 428.119 339.253 C 428.114 339.254 402.281 339.606 382.996 348.166 C 364.491 356.380 347.562 374.471 347.559 374.474 C 347.556 374.472 323.862 358.294 323.859 358.292 C 323.861 358.288 345.396 315.915 345.398 315.911 C 345.399 315.905 346.792 262.072 346.793 262.067 C 346.790 262.064 322.624 226.739 322.621 226.736 C 322.629 226.731 360.479 193.843 397.095 182.324 C 532.650 139.678 566.156 154.851 566.173 154.848 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 569.584 155.835 C 569.568 155.837 542.986 134.708 409.771 172.610 C 330.487 195.168 299.959 234.923 299.948 234.930 C 299.950 234.930 317.200 232.191 327.977 241.394 C 337.922 249.887 343.748 273.459 343.395 286.074 C 342.969 301.356 334.190 325.779 320.946 338.751 C 309.854 349.615 304.485 355.038 324.341 359.888 C 334.137 350.811 348.793 324.977 349.365 324.626 C 350.125 324.160 369.072 322.676 377.620 323.806 C 395.649 326.191 434.267 342.389 434.272 342.391 C 434.267 342.388 404.840 320.385 382.899 314.840 C 373.623 312.496 350.139 311.429 350.136 311.428 C 350.137 311.427 353.968 294.949 354.381 294.525 C 355.498 293.378 383.538 287.307 400.952 287.494 C 430.244 287.810 478.764 302.361 478.772 302.362 C 478.765 302.359 436.299 279.669 405.000 275.940 C 392.895 274.498 355.828 282.134 355.823 282.134 C 355.823 282.132 351.204 259.499 351.393 259.063 C 352.017 257.625 391.739 237.040 423.131 229.755 C 462.354 220.653 519.767 223.862 519.777 223.862 C 519.768 223.861 492.679 208.815 425.244 218.171 C 387.274 223.439 346.901 248.058 346.893 248.061 C 346.891 248.059 342.551 235.225 331.978 225.512 C 330.622 224.267 347.395 208.177 415.993 182.727 C 522.318 143.280 569.568 155.838 569.584 155.835 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":323.08,\\\"y\\\":600.719,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":148.785,\\\"y\\\":169.686,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.2573472617554675,\\\"y\\\":-0.9663189881539961}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":120.189,\\\"y\\\":358.358,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872168704637,\\\"y\\\":0.005056292679846634}},{\\\"point\\\":{\\\"x\\\":581.558,\\\"y\\\":358.358,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872195631562,\\\"y\\\":0.005055760115760814}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":569.994,\\\"y\\\":528.533,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129599815034307,\\\"y\\\":0.7012047238678786}},{\\\"point\\\":{\\\"x\\\":91.916,\\\"y\\\":528.582,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987283661265411,\\\"y\\\":0.7153870773016063}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":558.87,\\\"y\\\":153.502,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9930278473685396,\\\"y\\\":-0.1178799997904839}},{\\\"point\\\":{\\\"x\\\":205.906,\\\"y\\\":164.343,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5998846313325429,\\\"y\\\":-0.8000865135040206}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":56.502,\\\"y\\\":264.34,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9036525363018578,\\\"y\\\":0.42826638163089537}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"dragon_fore\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":118.808,\\\"max\\\":601.192},\\\"y\\\":{\\\"min\\\":14.96,\\\"max\\\":705.04}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"dragon_fore\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"dragon_fore\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 418.118 59.448 C 418.121 59.449 446.594 62.639 446.597 62.640 C 446.598 62.636 460.659 29.398 460.660 29.394 C 460.656 29.397 418.122 59.445 418.118 59.448 M 525.280 394.642 C 525.284 394.641 570.486 384.475 570.491 384.474 C 570.491 384.469 572.871 329.251 572.871 329.245 C 572.866 329.252 525.285 394.635 525.280 394.642 M 468.128 341.446 C 468.130 341.450 485.349 377.106 485.351 377.109 C 485.356 377.105 533.456 331.361 533.461 331.357 C 533.454 331.358 468.134 341.445 468.128 341.446 M 535.794 261.976 C 535.792 261.979 509.672 296.043 509.669 296.046 C 509.675 296.046 569.437 291.864 569.443 291.864 C 569.440 291.861 535.798 261.979 535.794 261.976 M 551.025 194.041 C 551.024 194.044 545.199 231.469 545.198 231.473 C 545.204 231.471 600.686 207.226 600.692 207.224 C 600.687 207.223 551.030 194.042 551.025 194.041 M 533.293 128.940 C 533.294 128.943 549.680 162.330 549.682 162.333 C 549.686 162.329 586.318 121.829 586.322 121.825 C 586.317 121.826 533.298 128.939 533.293 128.940 M 478.874 90.197 C 478.877 90.198 507.220 104.253 507.223 104.255 C 507.226 104.251 532.512 67.919 532.515 67.915 C 532.509 67.918 478.879 90.194 478.874 90.197 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 422.034 140.677 C 404.254 129.135 331.023 103.645 345.192 146.480 C 354.043 173.238 262.871 138.118 278.148 169.856 C 289.799 194.061 202.308 164.631 206.205 184.445 C 213.374 220.897 134.270 199.032 134.263 199.034 C 134.271 199.033 219.555 235.395 215.666 194.313 C 213.762 174.209 299.106 208.551 288.337 183.941 C 273.013 148.922 370.614 186.881 361.408 159.493 C 347.909 119.333 420.085 165.756 433.679 163.198 C 441.347 161.755 427.883 144.475 422.034 140.677 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 487.908 502.273 C 487.912 502.274 504.651 510.640 534.103 513.599 C 569.021 517.107 585.831 515.870 585.837 515.870 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 587.146 371.725 C 587.146 441.398 587.146 511.071 587.146 580.745 C 537.859 582.130 465.667 555.338 460.513 550.079 C 451.972 541.366 490.628 496.978 490.631 496.973 C 490.628 496.978 450.027 543.155 459.585 553.506 C 484.980 581.010 502.954 635.797 501.862 638.259 C 499.784 642.949 349.957 637.694 331.514 656.823 C 313.964 675.026 289.773 649.849 272.747 666.711 C 261.641 677.710 263.801 704.536 263.800 704.540 C 263.799 704.535 245.673 670.988 254.033 655.201 C 261.267 641.541 293.691 637.290 293.695 637.288 C 293.690 637.287 260.894 618.890 247.090 622.651 C 232.147 626.723 212.060 662.259 212.057 662.263 C 212.060 662.257 223.386 611.840 244.656 602.375 C 259.651 595.702 291.907 611.200 291.911 611.201 C 291.911 611.197 295.742 587.641 289.486 580.334 C 279.316 568.454 239.781 572.411 239.776 572.410 C 239.782 572.409 270.115 549.726 299.836 561.491 C 311.852 566.247 318.856 608.087 323.679 611.231 C 333.008 617.311 426.132 614.849 430.222 605.520 C 433.431 598.200 388.312 559.731 382.635 536.645 C 377.719 516.652 390.709 464.602 390.710 464.594 C 390.709 464.601 379.050 495.640 379.800 530.444 C 365.873 521.348 367.262 523.662 362.861 518.958 C 333.022 487.065 311.438 435.067 311.437 435.066 C 311.438 435.067 329.091 482.088 353.391 508.586 C 357.627 513.205 233.137 530.634 194.715 565.007 C 190.379 568.887 195.977 459.256 195.978 459.245 C 195.974 459.244 168.171 446.997 158.018 451.461 C 154.745 452.901 136.942 482.044 136.940 482.047 C 136.941 482.044 137.465 450.756 140.977 446.022 C 159.240 421.407 188.638 430.184 188.643 430.182 C 188.641 430.180 168.316 411.065 161.545 409.496 C 152.951 407.504 119.313 418.882 119.308 418.883 C 119.312 418.880 144.472 392.762 158.850 391.542 C 176.982 390.004 198.608 404.234 198.612 404.235 C 198.612 404.233 209.149 394.998 194.374 379.050 C 189.972 374.298 151.901 369.584 151.897 369.583 C 151.902 369.583 176.886 356.890 202.008 363.432 C 221.768 368.577 229.202 397.488 231.542 404.396 C 241.735 434.491 217.431 425.127 222.416 496.332 C 222.563 498.434 291.773 475.868 291.780 475.866 C 291.781 475.862 291.822 438.996 307.839 432.964 C 312.335 431.271 287.583 396.614 306.497 344.547 C 339.379 254.030 437.548 260.838 458.864 223.948 C 479.912 187.522 450.577 178.475 451.319 177.760 C 454.967 174.250 463.927 161.403 464.214 159.634 C 466.693 144.358 447.343 116.759 447.342 116.754 C 447.343 116.759 465.742 146.087 463.692 159.065 C 462.683 165.455 440.430 188.934 440.429 188.935 C 440.416 188.939 309.723 208.507 301.698 229.869 C 300.071 234.201 312.107 256.230 310.324 257.900 C 307.933 260.140 279.040 242.088 275.992 238.756 C 272.336 234.760 257.310 195.481 257.308 195.477 C 257.310 195.478 282.992 207.768 282.995 207.770 C 283.007 207.763 414.870 152.840 408.451 138.283 C 400.506 120.264 243.418 151.557 243.402 151.558 C 243.401 151.560 232.664 173.886 232.663 173.888 C 232.663 173.882 221.667 129.545 232.201 115.001 C 249.640 90.927 282.651 99.927 372.886 56.635 C 394.118 46.449 439.035 63.841 464.703 56.335 C 486.351 50.004 530.465 15.464 530.472 15.460 C 530.468 15.465 503.769 53.244 492.333 61.784 C 485.338 67.008 458.876 76.860 458.872 76.862 C 458.879 76.865 499.329 89.160 526.138 112.074 C 551.995 134.173 573.937 189.650 544.709 255.926 C 525.813 298.772 472.243 329.839 482.756 357.240 C 505.674 416.970 587.136 371.723 587.146 371.725 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 534.103 513.599 C 569.021 517.107 585.831 515.870 585.837 515.870 M 487.908 502.273 C 487.912 502.274 504.651 510.640 534.103 513.599 M 460.914 140.739 C 460.918 140.748 511.328 160.991 494.703 224.863 C 482.690 271.014 368.320 291.351 355.293 350.122 C 338.375 426.452 384.653 458.599 389.317 464.413 M 587.146 371.725 C 587.146 441.398 587.146 511.071 587.146 580.745 C 537.859 582.130 465.667 555.338 460.513 550.079 C 451.972 541.366 490.628 496.978 490.631 496.973 C 490.628 496.978 450.027 543.155 459.585 553.506 C 484.980 581.010 502.954 635.797 501.862 638.259 C 499.784 642.949 349.957 637.694 331.514 656.823 C 313.964 675.026 289.773 649.849 272.747 666.711 C 261.641 677.710 263.801 704.536 263.800 704.540 C 263.799 704.535 245.673 670.988 254.033 655.201 C 261.267 641.541 293.691 637.290 293.695 637.288 C 293.690 637.287 260.894 618.890 247.090 622.651 C 232.147 626.723 212.060 662.259 212.057 662.263 C 212.060 662.257 223.386 611.840 244.656 602.375 C 259.651 595.702 291.907 611.200 291.911 611.201 C 291.911 611.197 295.742 587.641 289.486 580.334 C 279.316 568.454 239.781 572.411 239.776 572.410 C 239.782 572.409 270.115 549.726 299.836 561.491 C 311.852 566.247 318.856 608.087 323.679 611.231 C 333.008 617.311 426.132 614.849 430.222 605.520 C 433.431 598.200 388.312 559.731 382.635 536.645 C 377.719 516.652 390.709 464.602 390.710 464.594 C 390.709 464.601 379.050 495.640 379.800 530.444 C 365.873 521.348 367.262 523.662 362.861 518.958 C 333.022 487.065 311.438 435.067 311.437 435.066 C 311.438 435.067 329.091 482.088 353.391 508.586 C 357.627 513.205 233.137 530.634 194.715 565.007 C 190.379 568.887 195.977 459.256 195.978 459.245 C 195.974 459.244 168.171 446.997 158.018 451.461 C 154.745 452.901 136.942 482.044 136.940 482.047 C 136.941 482.044 137.465 450.756 140.977 446.022 C 159.240 421.407 188.638 430.184 188.643 430.182 C 188.641 430.180 168.316 411.065 161.545 409.496 C 152.951 407.504 119.313 418.882 119.308 418.883 C 119.312 418.880 144.472 392.762 158.850 391.542 C 176.982 390.004 198.608 404.234 198.612 404.235 C 198.612 404.233 209.149 394.998 194.374 379.050 C 189.972 374.298 151.901 369.584 151.897 369.583 C 151.902 369.583 176.886 356.890 202.008 363.432 C 221.768 368.577 229.202 397.488 231.542 404.396 C 241.735 434.491 217.431 425.127 222.416 496.332 C 222.563 498.434 291.773 475.868 291.780 475.866 C 291.781 475.862 291.822 438.996 307.839 432.964 C 312.335 431.271 287.583 396.614 306.497 344.547 C 339.379 254.030 437.548 260.838 458.864 223.948 C 479.912 187.522 450.577 178.475 451.319 177.760 C 454.967 174.250 463.927 161.403 464.214 159.634 C 466.693 144.358 447.343 116.759 447.342 116.754 C 447.343 116.759 465.742 146.087 463.692 159.065 C 462.683 165.455 440.430 188.934 440.429 188.935 C 440.416 188.939 309.723 208.507 301.698 229.869 C 300.071 234.201 312.107 256.230 310.324 257.900 C 307.933 260.140 279.040 242.088 275.992 238.756 C 272.336 234.760 257.310 195.481 257.308 195.477 C 257.310 195.478 282.992 207.768 282.995 207.770 C 283.007 207.763 414.870 152.840 408.451 138.283 C 400.506 120.264 243.418 151.557 243.402 151.558 C 243.401 151.560 232.664 173.886 232.663 173.888 C 232.663 173.882 221.667 129.545 232.201 115.001 C 249.640 90.927 282.651 99.927 372.886 56.635 C 394.118 46.449 439.035 63.841 464.703 56.335 C 486.351 50.004 530.465 15.464 530.472 15.460 C 530.468 15.465 503.769 53.244 492.333 61.784 C 485.338 67.008 458.876 76.860 458.872 76.862 C 458.879 76.865 499.329 89.160 526.138 112.074 C 551.995 134.173 573.937 189.650 544.709 255.926 C 525.813 298.772 472.243 329.839 482.756 357.240 C 505.674 416.970 587.136 371.723 587.146 371.725 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 265.983 120.272 C 249.520 124.913 243.164 132.702 243.162 132.704 C 243.163 132.702 247.569 115.009 254.198 113.244 C 263.746 110.702 271.058 118.842 265.983 120.272 M 422.573 71.307 C 422.568 71.309 389.353 97.643 379.203 97.377 C 355.641 96.761 335.962 90.022 335.958 90.022 C 335.961 90.019 365.589 70.401 372.943 68.021 C 387.735 63.234 422.568 71.306 422.573 71.307 Z\\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":387.36,\\\"max\\\":576.587},\\\"y\\\":{\\\"min\\\":395.736,\\\"max\\\":537.098}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":587.121,\\\"y\\\":474.337,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":380.691,\\\"y\\\":54.828,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.12116843158907646,\\\"y\\\":-0.9926319615981762}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":239.777,\\\"y\\\":190.121,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.913389084050397,\\\"y\\\":0.40708768237024423}},{\\\"point\\\":{\\\"x\\\":583.542,\\\"y\\\":378.303,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5336311543154578,\\\"y\\\":-0.8457173234266591}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":198.034,\\\"y\\\":557.681,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986777434832886,\\\"y\\\":0.7154365176317882}},{\\\"point\\\":{\\\"x\\\":497.989,\\\"y\\\":637.443,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129402691979176,\\\"y\\\":0.7012247660743314}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":451.988,\\\"y\\\":60.828,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314578676874986,\\\"y\\\":-0.7754101890841759}},{\\\"point\\\":{\\\"x\\\":237.276,\\\"y\\\":110.444,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817656855653808,\\\"y\\\":-0.7315706049217438}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":587.298,\\\"y\\\":474.224,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"dragon_hind\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":29.069,\\\"max\\\":690.9932323883971},\\\"y\\\":{\\\"min\\\":139.6636281170547,\\\"max\\\":595.9260674028993}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"dragon_hind\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"dragon_hind\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 29.569 215.614 C 29.589 215.606 135.444 155.217 233.596 142.838 C 384.056 123.863 457.633 210.177 492.482 265.468 C 506.108 287.086 517.575 326.782 522.555 370.144 C 499.870 350.242 479.858 317.161 426.146 294.445 C 399.857 283.327 364.656 281.370 328.458 285.529 C 254.857 293.985 205.602 362.274 205.590 362.283 C 192.185 374.929 132.987 409.149 84.477 422.746 C 64.673 428.297 29.574 428.990 29.569 428.991 C 29.569 357.865 29.569 286.739 29.569 215.614 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 29.569 215.614 C 29.589 215.606 135.444 155.217 233.596 142.838 C 384.056 123.863 457.633 210.177 492.482 265.468 C 506.108 287.086 517.575 326.782 522.555 370.144 C 499.870 350.242 479.858 317.161 426.146 294.445 C 360.679 226.088 275.606 227.549 198.158 280.910 C 174.583 297.153 115.215 338.505 31.056 346.796 M 328.458 285.529 C 364.656 281.370 399.857 283.327 426.146 294.445 M 205.590 362.283 C 205.602 362.274 254.857 293.985 328.458 285.529 M 29.569 215.614 C 29.569 286.739 29.569 357.865 29.569 428.991 C 29.574 428.990 64.673 428.297 84.477 422.746 C 132.987 409.149 192.185 374.929 205.590 362.283 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 205.590 362.283 C 205.602 362.274 254.857 293.985 328.458 285.529 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 328.458 285.529 C 364.656 281.370 399.857 283.327 426.146 294.445 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 426.146 294.445 C 479.858 317.161 499.870 350.242 522.555 370.144 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.953 473.410 C 379.760 473.779 401.904 440.644 401.908 440.644 C 401.908 440.644 357.963 412.700 335.070 431.046 C 318.175 444.585 325.355 472.712 360.953 473.410 M 690.431 364.106 C 689.464 402.865 654.437 490.054 516.831 479.750 C 510.945 500.313 504.972 518.770 493.916 532.131 C 449.661 585.608 367.221 617.641 266.451 577.162 C 205.378 552.629 176.252 470.176 180.193 431.988 C 184.584 389.435 205.588 362.293 205.590 362.283 C 205.602 362.274 254.857 293.985 328.458 285.529 C 364.656 281.370 399.857 283.327 426.146 294.445 C 479.858 317.161 499.870 350.242 522.555 370.144 C 544.869 389.721 593.754 384.490 614.705 353.451 C 654.943 293.837 614.384 233.585 614.384 233.573 C 614.392 233.586 693.013 260.638 690.431 364.106 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 29.569 215.614 C 29.569 286.739 29.569 357.865 29.569 428.991 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 29.569 215.614 C 29.569 286.739 29.569 357.865 29.569 428.991 C 29.569 428.969 29.569 215.635 29.569 215.614 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 401.908 440.644 C 449.648 467.356 472.528 474.615 516.412 479.828 M 451.162 464.450 C 451.156 464.457 427.098 516.355 382.391 529.311 C 344.115 540.403 298.845 526.860 278.164 492.796 C 258.672 460.689 267.081 417.765 291.957 389.624 C 315.048 363.502 355.677 355.543 385.185 364.245 C 444.525 381.743 479.753 435.024 541.617 434.418 C 579.643 434.045 621.004 421.466 638.697 393.405 C 691.275 310.017 627.462 246.736 618.545 237.174 \\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":30.458,\\\"y\\\":324.361,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":29.274,\\\"y\\\":324.367,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":76.039,\\\"y\\\":195.503,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005059601108088425,\\\"y\\\":-0.9999872001363953}},{\\\"point\\\":{\\\"x\\\":76.039,\\\"y\\\":420.736,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005059601108088425,\\\"y\\\":0.9999872001363953}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":481.434,\\\"y\\\":544.958,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129218918262792,\\\"y\\\":0.7012434499906854}},{\\\"point\\\":{\\\"x\\\":224.592,\\\"y\\\":544.985,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987347307941938,\\\"y\\\":0.7153808607881298}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":456.233,\\\"y\\\":216.431,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314804817980629,\\\"y\\\":-0.7753917726595286}},{\\\"point\\\":{\\\"x\\\":30.16,\\\"y\\\":216.503,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817364129169317,\\\"y\\\":-0.731597883610358}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":595.27,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"drape\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":13.629,\\\"max\\\":706.371},\\\"y\\\":{\\\"min\\\":200.705,\\\"max\\\":519.2959324600237}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"drape\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"bunting\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 705.371 489.514 C 705.365 489.485 647.815 201.734 647.809 201.705 C 647.803 201.734 590.253 489.485 590.247 489.514 C 590.250 489.515 612.746 495.253 618.328 497.912 C 625.154 501.164 637.152 518.442 647.809 518.295 C 658.127 518.153 668.533 501.470 675.890 497.912 C 682.389 494.768 705.368 489.515 705.371 489.514 M 360.000 518.295 C 131.363 518.295 72.191 201.705 72.191 201.705 C 72.191 201.705 203.354 259.267 360.000 259.267 C 516.647 259.267 647.809 201.705 647.809 201.705 C 647.809 201.705 588.638 518.295 360.000 518.295 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 216.096 288.048 C 120.898 245.983 120.159 230.486 72.191 201.705 C 100.972 259.267 129.753 288.048 158.534 316.829 M 503.904 288.048 C 599.103 245.983 599.841 230.486 647.809 201.705 C 647.812 201.734 664.028 396.319 672.138 493.627 M 623.479 493.627 C 631.589 396.319 647.807 201.734 647.809 201.705 C 619.028 240.080 619.028 259.267 561.466 316.829 M 705.371 489.514 C 705.365 489.485 647.815 201.734 647.809 201.705 C 647.803 201.734 590.253 489.485 590.247 489.514 C 590.250 489.515 612.746 495.253 618.328 497.912 C 625.154 501.164 637.152 518.442 647.809 518.295 C 658.127 518.153 668.533 501.470 675.890 497.912 C 682.389 494.768 705.368 489.515 705.371 489.514 M 360.000 518.295 C 131.363 518.295 72.191 201.705 72.191 201.705 C 72.191 201.705 203.354 259.267 360.000 259.267 C 516.647 259.267 647.809 201.705 647.809 201.705 C 647.809 201.705 588.638 518.295 360.000 518.295 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 72.191 201.705 C 72.186 201.734 14.635 489.485 14.629 489.514 C 14.632 489.515 37.129 495.253 42.711 497.912 C 49.536 501.164 61.534 518.441 72.191 518.295 C 82.509 518.152 92.915 501.470 100.272 497.912 C 106.772 494.768 129.750 489.515 129.753 489.514 C 129.747 489.485 72.197 201.734 72.191 201.705 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 72.191 201.705 C 72.194 201.734 88.411 396.319 96.521 493.627 M 47.862 493.627 C 55.972 396.319 72.189 201.734 72.191 201.705 C 72.197 201.734 129.747 489.485 129.753 489.514 C 129.750 489.515 106.772 494.768 100.272 497.912 C 92.915 501.470 82.509 518.152 72.191 518.295 C 61.534 518.441 49.536 501.164 42.711 497.912 C 37.129 495.253 14.632 489.515 14.629 489.514 C 14.635 489.485 72.186 201.734 72.191 201.705 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":256.266,\\\"max\\\":463.734},\\\"y\\\":{\\\"min\\\":277.337,\\\"max\\\":484.806}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":638.934,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":235.021,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":521.215,\\\"y\\\":451.807,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129078968039947,\\\"y\\\":0.701257677800753}},{\\\"point\\\":{\\\"x\\\":198.652,\\\"y\\\":451.84,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987204419418092,\\\"y\\\":0.7153948168757186}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":656.943,\\\"y\\\":189.834,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314273408121039,\\\"y\\\":-0.775435047747363}},{\\\"point\\\":{\\\"x\\\":64.035,\\\"y\\\":189.934,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817263056225,\\\"y\\\":-0.7316073019197509}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":548.545,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"eagle_head\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":104.865,\\\"max\\\":577.2540462286611},\\\"y\\\":{\\\"min\\\":25.128197723556095,\\\"max\\\":707.2045463631528}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eagle_head_3\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eagle_head_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 248.042 220.366 C 277.136 187.906 258.904 160.585 253.332 152.219 C 266.344 154.303 292.878 165.302 293.554 170.211 C 295.927 187.445 273.115 216.807 259.188 227.797 C 225.264 254.567 202.537 245.442 202.531 245.444 C 202.535 245.442 231.120 239.246 248.042 220.366 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 326.062 165.567 C 308.948 143.260 264.874 143.688 226.656 166.691 C 198.144 183.852 197.776 210.439 168.166 215.722 C 132.846 222.025 106.871 211.078 106.865 211.078 C 106.871 211.080 135.076 234.797 168.166 231.512 C 207.872 227.569 213.875 206.580 237.019 199.224 C 285.520 183.809 321.418 210.149 321.418 210.149 C 321.418 210.149 333.778 175.625 326.062 165.567 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 361.646 241.444 C 362.818 211.213 332.800 189.684 332.797 189.679 C 332.796 189.684 332.643 233.438 324.908 243.742 C 303.206 272.652 278.705 278.922 278.701 278.925 C 278.709 278.922 359.679 292.167 361.646 241.444 M 307.928 353.658 C 343.048 339.824 333.350 285.882 333.352 285.875 C 333.346 285.879 291.717 323.314 275.285 325.663 C 233.539 331.631 207.791 319.840 207.784 319.839 C 207.794 319.843 227.647 385.282 307.928 353.658 M 235.003 445.118 C 261.310 418.790 243.371 376.049 243.372 376.042 C 243.367 376.046 211.972 417.965 197.540 424.004 C 167.300 436.656 146.378 435.150 146.216 435.813 C 145.942 436.938 199.813 480.336 235.003 445.118 M 243.700 561.010 C 260.082 528.172 229.608 493.873 229.606 493.866 C 229.603 493.872 213.154 542.471 201.551 552.480 C 176.730 573.892 156.284 578.353 156.373 579.545 C 156.524 581.565 221.475 605.559 243.700 561.010 M 307.995 638.891 C 301.189 602.489 254.902 594.468 254.897 594.463 C 254.898 594.469 269.174 642.141 266.101 656.744 C 259.481 688.196 247.802 704.757 248.204 705.183 C 248.899 705.920 317.144 687.828 307.995 638.891 M 495.952 558.191 C 456.667 544.962 451.535 494.696 451.530 494.690 C 451.537 494.692 481.353 513.069 513.830 516.832 C 551.871 521.240 574.714 511.993 575.240 513.068 C 576.021 514.662 544.168 574.428 495.952 558.191 M 440.924 445.274 C 404.874 436.801 398.990 390.194 398.986 390.188 C 398.992 390.190 445.711 409.493 460.558 407.015 C 492.890 401.618 509.647 388.365 509.897 388.597 C 510.321 388.991 489.388 456.666 440.924 445.274 M 458.095 341.592 C 427.831 320.251 439.805 274.826 439.803 274.819 C 439.808 274.823 475.917 310.198 490.613 313.452 C 522.618 320.539 543.133 314.553 543.260 314.823 C 543.475 315.282 498.783 370.282 458.095 341.592 M 489.268 252.006 C 453.447 242.610 448.762 195.868 448.758 195.862 C 448.764 195.864 494.972 216.360 509.877 214.263 C 542.338 209.697 559.520 196.968 559.672 197.117 C 559.931 197.370 537.424 264.637 489.268 252.006 M 468.913 155.414 C 432.268 160.757 409.697 119.558 409.691 119.554 C 409.697 119.553 460.241 120.372 473.143 112.619 C 501.241 95.737 512.126 77.324 512.285 77.386 C 512.555 77.491 518.178 148.232 468.913 155.414 M 403.152 83.833 C 366.488 90.033 339.071 56.900 339.065 56.897 C 339.072 56.896 393.745 55.563 408.725 48.538 C 433.331 36.998 437.227 35.168 446.806 27.175 C 448.988 25.355 442.481 77.182 403.152 83.833 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 379.502 67.257 C 379.498 67.259 368.121 75.526 345.566 80.117 C 342.392 106.408 334.646 118.978 311.201 124.700 C 273.086 134.001 256.407 108.912 256.402 108.910 C 256.406 108.908 273.663 92.320 298.637 85.715 C 324.603 78.847 337.310 81.798 345.566 80.117 M 483.958 189.716 C 505.501 287.954 418.321 347.356 422.657 420.058 C 425.500 467.731 472.722 507.466 472.727 507.474 C 472.716 507.479 381.105 539.939 367.479 551.296 C 353.391 563.038 303.519 650.295 303.511 650.304 C 303.500 650.296 173.498 557.914 223.893 403.340 C 250.713 321.077 353.501 310.332 336.279 235.227 C 332.417 218.389 290.772 233.369 290.767 233.369 C 290.760 233.360 344.371 140.416 223.893 138.632 C 218.281 138.549 208.425 107.085 215.534 91.263 C 225.391 69.330 303.477 54.344 327.919 52.253 C 390.829 46.873 456.764 65.711 483.958 189.716 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 379.502 67.257 C 379.498 67.259 368.121 75.526 345.566 80.117 C 342.392 106.408 334.646 118.978 311.201 124.700 C 273.086 134.001 256.407 108.912 256.402 108.910 C 256.406 108.908 273.663 92.320 298.637 85.715 C 324.603 78.847 337.310 81.798 345.566 80.117 M 483.958 189.716 C 505.501 287.954 418.321 347.356 422.657 420.058 C 425.500 467.731 472.722 507.466 472.727 507.474 C 472.716 507.479 381.105 539.939 367.479 551.296 C 353.391 563.038 303.519 650.295 303.511 650.304 C 303.500 650.296 173.498 557.914 223.893 403.340 C 250.713 321.077 353.501 310.332 336.279 235.227 C 332.417 218.389 290.772 233.369 290.767 233.369 C 290.760 233.360 344.371 140.416 223.893 138.632 C 218.281 138.549 208.425 107.085 215.534 91.263 C 225.391 69.330 303.477 54.344 327.919 52.253 C 390.829 46.873 456.764 65.711 483.958 189.716 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 202.531 245.444 C 202.537 245.442 225.264 254.567 259.188 227.797 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 259.188 227.797 C 273.115 216.807 295.927 187.445 293.554 170.211 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 293.554 170.211 C 292.878 165.302 266.344 154.303 253.332 152.219 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 305.628 162.780 C 309.742 184.473 325.306 229.527 271.263 246.373 C 226.069 260.460 202.538 245.444 202.531 245.444 C 202.537 245.442 225.264 254.567 259.188 227.797 C 273.115 216.807 295.927 187.445 293.554 170.211 C 292.878 165.302 266.344 154.303 253.332 152.219 C 251.559 151.935 191.791 141.202 171.296 149.770 C 140.902 162.477 142.020 186.928 142.017 186.932 C 142.017 186.925 113.748 160.467 148.652 122.090 C 164.992 104.123 216.682 86.274 226.048 89.580 C 232.087 91.711 235.647 133.211 255.132 135.229 C 268.563 136.621 285.408 142.763 285.411 142.764 C 285.413 142.766 303.780 153.040 305.628 162.780 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 285.411 142.764 C 285.418 142.763 333.662 156.032 358.723 131.737 C 378.804 112.270 379.500 67.264 379.502 67.257 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 389.068 605.547 C 359.748 578.266 323.847 568.788 323.841 568.784 C 323.842 568.791 328.748 619.000 336.102 632.388 C 364.597 684.264 420.629 679.054 419.885 677.361 C 402.868 638.676 420.974 635.234 389.068 605.547 M 424.647 605.905 C 389.060 577.997 384.510 531.500 384.506 531.492 C 384.513 531.495 443.488 556.182 461.204 564.852 C 501.206 584.429 496.903 592.193 514.855 612.195 C 517.646 615.304 464.329 637.025 424.647 605.905 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 311.201 124.700 C 334.646 118.978 342.392 106.408 345.566 80.117 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 345.566 80.117 C 337.310 81.798 324.603 78.847 298.637 85.715 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 298.637 85.715 C 273.663 92.320 256.406 108.908 256.402 108.910 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 256.402 108.910 C 256.407 108.912 273.086 134.001 311.201 124.700 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 311.201 124.700 C 334.646 118.978 342.392 106.408 345.566 80.117 C 337.310 81.798 324.603 78.847 298.637 85.715 C 273.663 92.320 256.406 108.908 256.402 108.910 C 256.407 108.912 273.086 134.001 311.201 124.700 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 302.414 88.437 C 311.831 88.437 319.428 96.034 319.428 105.451 C 319.428 114.868 311.831 122.465 302.414 122.465 C 292.996 122.465 285.400 114.868 285.400 105.451 C 285.400 96.034 292.996 88.437 302.414 88.437 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 218.151 99.493 C 220.992 99.493 223.284 101.785 223.284 104.626 C 223.284 107.467 220.992 109.758 218.151 109.758 C 215.310 109.758 213.019 107.467 213.019 104.626 C 213.018 101.785 215.310 99.493 218.151 99.493 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eagle_head_details\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 226.170 395.930 C 226.169 395.939 207.918 443.899 218.934 480.812 C 229.704 516.902 270.212 546.435 270.217 546.442 C 270.217 546.437 269.685 516.710 275.690 493.320 C 280.619 474.126 292.521 452.861 292.522 452.857 C 292.524 452.863 291.371 489.347 308.149 510.521 C 326.638 533.855 366.331 541.321 366.337 541.324 C 366.336 541.319 354.003 515.592 353.386 492.960 C 352.840 472.980 362.219 449.653 362.220 449.649 C 362.221 449.654 363.536 482.699 381.481 497.788 C 404.962 517.531 448.239 509.832 448.246 509.834 C 448.244 509.830 432.035 491.497 426.053 472.990 C 419.121 451.544 422.265 423.295 422.264 423.290 C 422.269 423.298 437.321 481.892 473.441 504.234 C 474.190 504.697 475.074 521.595 480.950 534.331 C 492.225 558.771 516.761 581.867 516.765 581.872 C 516.757 581.871 476.876 582.090 445.741 573.315 C 430.200 568.935 412.996 559.083 412.993 559.081 C 412.993 559.084 412.989 575.398 416.342 588.239 C 422.427 611.537 437.763 636.986 437.765 636.990 C 437.759 636.989 402.869 629.265 376.239 617.238 C 360.330 610.053 342.873 597.831 342.869 597.829 C 342.869 597.833 340.126 620.543 343.758 638.642 C 348.190 660.732 362.305 684.880 362.307 684.884 C 362.301 684.881 294.916 647.089 294.908 647.086 C 294.903 647.080 204.863 571.618 204.389 492.505 C 203.978 424.101 226.168 395.940 226.170 395.930 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 432.393 368.177 C 432.390 368.179 417.171 379.478 409.390 392.440 C 399.916 408.220 396.829 431.153 396.828 431.157 C 396.826 431.153 376.842 417.108 371.286 399.617 C 366.030 383.069 373.637 361.295 373.637 361.291 C 373.635 361.294 355.336 376.029 346.553 392.535 C 338.574 407.532 336.602 428.756 336.601 428.760 C 336.599 428.756 318.089 412.996 313.651 395.127 C 309.296 377.596 318.056 355.427 318.056 355.423 C 318.053 355.426 297.466 371.555 286.421 389.411 C 277.698 403.513 273.249 423.630 273.248 423.633 C 273.246 423.628 256.743 398.362 257.729 375.526 C 258.582 355.760 274.274 335.026 274.275 335.022 M 335.207 272.756 C 335.207 272.758 336.868 288.405 334.238 300.834 C 331.196 315.208 321.954 330.911 321.953 330.914 C 321.958 330.911 357.629 321.729 373.275 299.455 C 382.532 286.274 381.935 264.908 381.936 264.904 C 381.937 264.907 389.172 280.938 391.189 295.057 C 393.660 312.346 390.401 333.669 390.401 333.673 C 390.404 333.669 416.675 317.579 427.551 296.420 C 436.319 279.362 435.102 254.687 435.102 254.683 C 435.103 254.686 442.691 273.240 444.325 289.400 C 445.763 303.612 442.621 320.941 442.621 320.944 C 442.624 320.941 461.970 304.459 472.064 286.711 M 330.290 227.752 C 348.282 228.220 364.626 244.587 364.629 244.589 C 364.630 244.586 371.261 229.036 370.210 215.831 C 368.898 199.335 357.215 181.625 357.214 181.622 C 357.217 181.625 377.398 193.193 390.753 206.569 C 404.259 220.095 415.917 240.530 415.919 240.534 C 415.920 240.529 422.699 212.701 420.647 189.712 C 419.180 173.282 411.306 154.454 411.305 154.451 C 411.308 154.453 431.122 163.695 444.079 175.696 C 456.697 187.384 467.174 205.915 467.177 205.918 C 467.177 205.912 470.871 176.971 467.244 153.588 C 464.061 133.066 453.452 109.785 453.451 109.781 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 412.993 559.081 C 393.355 547.312 377.571 520.444 370.667 484.954 M 342.869 597.829 C 315.958 566.706 309.202 545.909 301.934 501.714 M 294.908 647.086 C 256.062 592.782 244.474 567.551 235.069 512.228 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":361.356,\\\"y\\\":546.8,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":361.356,\\\"y\\\":49.678,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":205.721,\\\"y\\\":432.51,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873559740994,\\\"y\\\":-0.0050287067850341505}},{\\\"point\\\":{\\\"x\\\":426.375,\\\"y\\\":432.51,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873571967549,\\\"y\\\":-0.005028463647057703}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":495.703,\\\"y\\\":564.087,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128810715840902,\\\"y\\\":0.7012849476333564}},{\\\"point\\\":{\\\"x\\\":225.309,\\\"y\\\":564.125,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698687209876367,\\\"y\\\":0.7154272728622928}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":415.604,\\\"y\\\":597.956,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7096963441520611,\\\"y\\\":0.7045076998139902}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"eagle_shield\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":4.344,\\\"max\\\":716.33},\\\"y\\\":{\\\"min\\\":27.812,\\\"max\\\":633.275352209078}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eagle_shield\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"head_eagle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"head_eagle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 352.774 95.086 C 352.770 95.085 327.752 82.373 314.799 84.079 C 303.657 85.546 303.875 97.745 294.359 96.714 C 286.279 95.838 283.358 83.608 273.034 82.974 C 262.063 82.299 252.252 95.144 252.250 95.145 C 252.252 95.144 264.368 85.356 272.477 87.065 C 281.736 89.017 281.117 102.006 291.813 103.452 C 306.064 105.378 307.595 92.433 317.958 92.120 C 327.585 91.831 350.764 109.814 350.767 109.816 C 350.768 109.814 352.774 95.088 352.774 95.086 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 373.348 52.840 C 376.817 52.090 372.645 67.476 359.764 68.910 C 352.590 69.709 339.083 59.426 339.081 59.425 C 339.085 59.424 359.563 55.820 373.348 52.840 M 336.225 76.162 C 336.223 76.161 315.033 67.441 315.031 67.440 C 315.034 67.438 322.305 48.943 343.713 45.092 C 352.923 43.435 362.285 40.809 371.607 41.316 C 393.449 42.505 404.259 28.314 404.262 28.312 C 404.261 28.314 408.236 43.549 393.940 47.494 C 391.019 48.301 397.323 51.135 399.936 53.584 C 413.945 66.715 435.833 54.169 435.836 54.169 C 435.834 54.171 431.450 72.006 410.085 74.298 C 407.311 74.596 409.250 84.750 411.766 88.916 C 420.658 103.645 440.994 101.685 440.996 101.686 C 440.993 101.686 424.828 113.726 410.190 105.795 C 407.685 104.437 396.604 123.723 398.987 127.535 C 413.047 150.022 430.872 148.010 430.875 148.012 C 430.871 148.012 412.037 158.906 392.820 146.284 C 389.531 144.124 381.295 163.603 384.392 168.798 C 396.053 188.352 414.581 191.021 414.584 191.023 C 414.581 191.023 410.361 199.342 384.197 190.996 C 378.667 189.232 382.336 210.909 388.402 215.386 C 410.239 231.501 430.762 217.554 430.766 217.554 C 430.764 217.556 429.225 232.742 409.670 234.547 C 399.244 235.509 413.213 245.163 424.125 253.183 C 405.971 268.036 384.697 284.139 332.445 276.528 C 330.451 276.237 325.664 253.260 322.121 255.630 C 308.479 264.753 290.923 252.951 290.920 252.950 C 290.922 252.949 308.446 254.709 314.307 243.141 C 315.881 240.035 313.420 221.542 306.403 222.884 C 288.208 226.363 274.570 214.057 274.567 214.056 C 274.570 214.055 300.869 216.337 306.962 206.300 C 310.529 200.425 313.699 186.245 309.023 186.229 C 288.192 186.158 276.903 171.352 276.900 171.351 C 276.904 171.350 300.486 179.459 315.019 166.930 C 321.956 160.951 323.579 152.146 321.208 151.905 C 300.648 149.816 298.505 135.184 298.503 135.183 C 298.506 135.183 311.183 144.778 328.742 140.232 C 331.004 139.647 331.779 135.859 336.692 131.936 C 353.872 118.219 335.317 112.713 335.316 112.712 C 335.316 112.708 336.225 76.165 336.225 76.162 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 305.433 63.215 C 288.116 69.891 292.956 86.102 292.955 86.104 C 292.957 86.103 296.277 74.957 308.035 73.989 C 311.677 73.689 326.651 76.830 329.563 80.255 C 332.767 84.023 336.877 100.900 332.667 105.266 C 328.398 109.695 307.843 102.302 307.841 102.301 C 307.844 102.303 337.087 125.899 344.551 121.353 C 353.726 115.766 356.450 84.417 342.607 69.498 C 333.743 59.944 327.782 54.599 305.433 63.215 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 352.429 96.833 C 352.430 96.835 371.067 100.326 367.854 121.630 C 364.103 146.499 337.323 152.195 336.621 190.857 C 335.729 239.936 371.375 263.798 385.209 274.778 \\\"},\\\"children\\\":[]}]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tail_eagle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"longfeathers\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 369.018 349.616 C 369.023 349.627 422.008 467.869 448.275 514.228 C 457.931 531.270 478.491 556.135 507.668 552.628 C 499.785 569.052 454.313 586.341 418.411 530.924 C 405.210 510.547 360.424 343.611 360.420 343.598 C 360.420 343.599 369.017 349.616 369.018 349.616 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 368.777 361.075 C 368.780 361.087 403.359 490.034 422.506 541.488 C 429.544 560.404 446.418 588.602 476.652 590.259 C 465.980 605.149 419.015 612.363 392.888 551.318 C 383.129 528.516 361.016 353.562 361.013 353.548 C 361.014 353.549 368.776 361.074 368.777 361.075 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 368.052 355.112 C 368.053 355.126 383.897 506.715 393.636 568.689 C 396.920 589.588 404.118 617.744 437.344 631.333 C 390.388 637.568 366.592 625.276 359.899 560.972 C 355.562 519.308 361.179 345.611 361.179 345.596 C 361.180 345.597 368.051 355.111 368.052 355.112 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 350.982 349.616 C 350.977 349.627 297.992 467.869 271.725 514.228 C 262.069 531.270 241.509 556.135 212.332 552.628 C 220.215 569.052 265.687 586.341 301.589 530.924 C 314.790 510.547 359.576 343.611 359.581 343.598 C 359.580 343.599 350.983 349.616 350.982 349.616 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 351.223 361.075 C 351.220 361.087 316.641 490.034 297.494 541.488 C 290.456 560.404 273.582 588.602 243.348 590.259 C 254.020 605.149 300.985 612.363 327.112 551.318 C 336.871 528.516 358.984 353.562 358.987 353.548 C 358.986 353.549 351.224 361.074 351.223 361.075 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 351.948 355.112 C 351.947 355.126 336.103 506.715 326.364 568.689 C 323.080 589.588 315.882 617.744 282.656 631.333 C 329.612 637.568 353.408 625.276 360.101 560.972 C 364.438 519.308 358.821 345.611 358.821 345.596 C 358.820 345.597 351.949 355.111 351.948 355.112 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tail_eagle_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 511.958 C 365.176 501.606 373.733 499.733 378.291 489.094 C 382.318 479.695 379.400 470.667 378.291 466.230 C 373.718 447.939 346.281 447.940 341.709 466.230 C 340.600 470.666 337.682 479.695 341.709 489.094 C 346.267 499.733 354.824 501.606 360.000 511.958 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 457.085 C 360.000 473.852 360.000 490.618 360.000 507.385 M 341.709 489.094 C 346.267 499.733 354.824 501.606 360.000 511.958 C 365.176 501.606 373.733 499.733 378.291 489.094 C 382.318 479.695 379.400 470.667 378.291 466.230 C 373.718 447.939 346.281 447.940 341.709 466.230 C 340.600 470.666 337.682 479.695 341.709 489.094 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 332.829 493.548 C 340.508 484.888 349.258 485.294 356.414 476.197 C 362.737 468.161 362.255 458.684 362.332 454.112 C 362.649 435.261 336.147 428.160 326.996 444.644 C 324.777 448.642 319.621 456.608 321.078 466.729 C 322.728 478.185 330.508 482.209 332.829 493.548 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 347.031 440.544 C 342.692 456.740 338.352 472.935 334.012 489.131 M 321.078 466.729 C 322.728 478.185 330.508 482.209 332.829 493.548 C 340.508 484.888 349.258 485.294 356.414 476.197 C 362.737 468.161 362.255 458.684 362.332 454.112 C 362.649 435.261 336.147 428.160 326.996 444.644 C 324.777 448.642 319.621 456.608 321.078 466.729 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 387.171 493.548 C 389.492 482.209 397.272 478.185 398.922 466.729 C 400.379 456.608 395.223 448.642 393.004 444.644 C 383.853 428.160 357.351 435.261 357.668 454.112 C 357.745 458.684 357.263 468.161 363.586 476.197 C 370.742 485.294 379.492 484.888 387.171 493.548 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 372.969 440.544 C 377.308 456.740 381.648 472.935 385.988 489.131 M 363.586 476.197 C 370.742 485.294 379.492 484.888 387.171 493.548 C 389.492 482.209 397.272 478.185 398.922 466.729 C 400.379 456.608 395.223 448.642 393.004 444.644 C 383.853 428.160 357.351 435.261 357.668 454.112 C 357.745 458.684 357.263 468.161 363.586 476.197 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 459.774 C 365.176 449.422 373.733 447.548 378.291 436.910 C 382.318 427.511 379.400 418.482 378.291 414.046 C 373.718 395.755 346.281 395.755 341.709 414.046 C 340.600 418.482 337.682 427.511 341.709 436.910 C 346.267 447.548 354.824 449.422 360.000 459.774 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 402.194 C 360.000 419.863 360.000 437.532 360.000 455.201 M 341.709 436.910 C 346.267 447.548 354.824 449.422 360.000 459.774 C 365.176 449.422 373.733 447.548 378.291 436.910 C 382.318 427.511 379.400 418.482 378.291 414.046 C 373.718 395.755 346.281 395.755 341.709 414.046 C 340.600 418.482 337.682 427.511 341.709 436.910 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 403.060 458.839 C 405.380 447.500 413.161 443.476 414.811 432.020 C 416.268 421.899 411.112 413.933 408.893 409.935 C 399.742 393.451 373.240 400.552 373.557 419.403 C 373.634 423.975 373.152 433.452 379.474 441.488 C 386.631 450.585 395.381 450.179 403.060 458.839 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 388.649 405.835 C 392.988 422.031 397.328 438.226 401.667 454.422 M 379.474 441.488 C 386.631 450.585 395.381 450.179 403.060 458.839 C 405.380 447.500 413.161 443.476 414.811 432.020 C 416.268 421.899 411.112 413.933 408.893 409.935 C 399.742 393.451 373.240 400.552 373.557 419.403 C 373.634 423.975 373.152 433.452 379.474 441.488 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 316.940 458.839 C 324.619 450.179 333.369 450.585 340.526 441.488 C 346.848 433.452 346.366 423.975 346.443 419.403 C 346.760 400.552 320.258 393.451 311.107 409.935 C 308.888 413.933 303.732 421.899 305.190 432.020 C 306.839 443.476 314.620 447.500 316.940 458.839 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 331.142 405.835 C 326.803 422.031 322.463 438.226 318.124 454.422 M 305.190 432.020 C 306.839 443.476 314.620 447.500 316.940 458.839 C 324.619 450.179 333.369 450.585 340.526 441.488 C 346.848 433.452 346.366 423.975 346.443 419.403 C 346.760 400.552 320.258 393.451 311.107 409.935 C 308.888 413.933 303.732 421.899 305.190 432.020 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 332.829 422.931 C 340.508 414.271 349.258 414.677 356.414 405.580 C 362.737 397.544 362.255 388.067 362.332 383.495 C 362.649 364.644 336.147 357.543 326.996 374.027 C 324.777 378.025 319.621 385.991 321.078 396.112 C 322.728 407.568 330.508 411.592 332.829 422.931 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 347.031 369.927 C 342.692 386.123 338.352 402.319 334.012 418.514 M 321.078 396.112 C 322.728 407.568 330.508 411.592 332.829 422.931 C 340.508 414.271 349.258 414.677 356.414 405.580 C 362.737 397.544 362.255 388.067 362.332 383.495 C 362.649 364.644 336.147 357.543 326.996 374.027 C 324.777 378.025 319.621 385.991 321.078 396.112 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 387.171 422.931 C 389.492 411.592 397.272 407.568 398.922 396.112 C 400.379 385.991 395.223 378.025 393.004 374.027 C 383.853 357.543 357.351 364.644 357.668 383.495 C 357.745 388.067 357.263 397.544 363.586 405.580 C 370.742 414.677 379.492 414.271 387.171 422.931 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 372.969 369.927 C 377.308 386.123 381.648 402.319 385.988 418.514 M 363.586 405.580 C 370.742 414.677 379.492 414.271 387.171 422.931 C 389.492 411.592 397.272 407.568 398.922 396.112 C 400.379 385.991 395.223 378.025 393.004 374.027 C 383.853 357.543 357.351 364.644 357.668 383.495 C 357.745 388.067 357.263 397.544 363.586 405.580 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 342.004 C 373.862 342.004 385.044 353.186 385.044 367.048 C 385.044 380.910 373.862 392.092 360.000 392.092 C 346.138 392.092 334.956 380.910 334.956 367.048 C 334.956 353.186 346.138 342.004 360.000 342.004 Z\\\"},\\\"children\\\":[]}]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wing_eagle_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 453.308 228.316 C 463.923 219.334 513.040 211.791 530.760 197.245 C 558.164 174.751 563.808 140.921 557.306 119.238 C 550.715 97.264 524.041 100.111 524.037 100.109 C 524.042 100.108 536.162 77.794 575.603 84.307 C 596.798 87.807 612.742 104.813 612.746 104.815 C 612.748 104.817 623.546 121.712 626.130 128.801 C 640.941 169.428 630.864 218.203 647.961 269.777 C 665.218 321.831 715.324 397.015 715.330 397.028 C 715.325 397.026 674.533 409.446 629.490 322.936 C 614.776 294.675 604.334 243.612 604.331 243.604 C 604.333 243.612 611.295 295.527 621.242 326.126 C 634.425 366.679 666.254 428.623 666.259 428.633 C 666.255 428.631 618.514 434.801 583.331 327.858 C 573.961 299.377 569.263 250.413 569.261 250.405 C 569.262 250.413 570.869 302.043 578.302 332.678 C 587.878 372.144 617.185 431.950 617.189 431.960 C 617.181 431.951 562.409 419.084 543.998 342.136 C 538.659 319.818 536.615 282.347 536.615 282.341 C 536.615 282.346 535.490 314.939 537.065 334.893 C 539.619 367.259 546.492 409.496 546.493 409.504 C 546.489 409.496 513.092 398.428 505.326 333.819 C 503.067 315.030 501.444 284.289 501.444 284.284 C 501.443 284.288 498.336 309.230 498.981 324.600 C 500.155 352.584 501.581 390.368 501.581 390.375 C 501.578 390.367 470.944 375.192 468.175 312.645 C 467.570 298.977 467.379 276.737 467.379 276.733 C 467.379 276.736 465.018 290.179 465.088 303.252 C 465.212 326.202 462.491 348.785 462.491 348.789 C 462.489 348.783 434.479 336.143 437.540 283.916 C 439.302 253.856 445.369 235.034 453.308 228.316 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 453.308 228.316 C 463.923 219.334 513.040 211.791 530.760 197.245 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 530.760 197.245 C 558.164 174.751 563.808 140.921 557.306 119.238 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 557.306 119.238 C 550.715 97.264 524.041 100.111 524.037 100.109 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 524.037 100.109 C 524.042 100.108 536.162 77.794 575.603 84.307 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 575.603 84.307 C 596.798 87.807 612.742 104.813 612.746 104.815 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 474.225 292.230 C 474.223 292.224 428.974 284.054 453.308 228.316 C 463.923 219.334 513.040 211.791 530.760 197.245 C 558.164 174.751 563.808 140.921 557.306 119.238 C 550.715 97.264 524.041 100.111 524.037 100.109 C 524.042 100.108 536.162 77.794 575.603 84.307 C 596.798 87.807 612.742 104.813 612.746 104.815 C 649.544 144.030 632.521 203.993 665.120 263.699 C 644.156 263.504 629.517 262.471 617.221 221.919 C 612.530 206.449 610.923 180.168 610.922 180.164 C 610.922 180.168 611.036 206.647 611.785 222.991 C 612.712 243.214 625.456 259.567 631.375 277.179 C 600.298 271.238 592.923 264.228 584.108 244.792 C 578.662 232.783 580.011 210.417 580.010 210.414 C 580.010 210.417 580.915 226.815 580.570 238.772 C 579.780 266.092 591.202 290.430 591.203 290.436 C 591.199 290.432 560.110 292.587 552.514 255.386 C 550.434 245.199 552.491 228.090 552.491 228.088 C 552.490 228.090 549.197 242.343 548.445 251.278 C 546.100 279.138 551.234 301.335 551.234 301.340 C 551.230 301.336 525.782 294.487 517.414 263.989 C 514.774 254.367 513.621 238.072 513.621 238.069 C 513.621 238.072 515.115 252.879 512.967 262.195 C 509.205 278.509 510.438 301.457 510.438 301.461 C 510.435 301.456 479.912 294.360 481.707 254.295 C 481.889 250.225 480.942 243.627 480.942 243.626 C 480.942 243.628 479.590 251.922 477.923 258.164 C 473.476 274.822 474.225 292.227 474.225 292.230 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 493.460 264.443 C 493.456 264.439 451.694 272.181 453.160 228.006 C 463.775 219.024 512.892 211.481 530.612 196.935 C 558.016 174.441 563.660 140.611 557.158 118.929 C 550.568 96.955 523.893 99.801 523.890 99.800 C 523.895 99.798 533.877 77.830 573.378 79.842 C 592.512 80.817 596.348 83.842 608.810 93.126 C 638.846 118.901 624.486 133.956 656.266 146.336 C 641.195 157.012 616.483 164.831 603.245 128.330 C 591.405 95.686 563.871 98.087 563.867 98.084 C 563.871 98.087 587.960 97.656 601.441 127.547 C 612.688 152.483 607.311 157.361 633.904 183.887 C 606.780 187.792 582.999 185.064 583.603 162.672 C 584.281 137.580 574.889 128.939 574.889 128.936 C 574.889 128.940 584.324 138.667 582.392 165.104 C 581.716 174.364 594.610 182.166 594.523 184.526 C 593.516 211.759 605.646 223.004 605.647 223.008 C 605.643 223.007 560.604 242.850 563.847 211.481 C 565.521 195.295 561.210 184.978 561.210 184.975 C 561.210 184.979 566.860 196.785 561.740 219.772 C 557.586 238.426 570.775 249.076 570.776 249.079 C 570.772 249.077 530.215 252.746 531.540 234.948 C 532.743 218.785 531.534 213.428 531.534 213.426 C 531.533 213.428 534.950 227.639 529.007 236.222 C 522.285 245.929 529.497 260.581 529.497 260.584 C 529.494 260.582 493.096 269.468 495.050 240.622 C 495.544 233.328 494.352 227.665 494.352 227.664 C 494.351 227.665 497.681 235.172 492.203 244.088 C 484.642 256.397 493.460 264.441 493.460 264.443 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wing_eagle_3\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 267.366 228.316 C 256.751 219.334 207.634 211.791 189.914 197.245 C 162.510 174.751 156.866 140.921 163.369 119.238 C 169.959 97.264 196.634 100.111 196.637 100.109 C 196.632 100.108 184.513 77.794 145.071 84.307 C 123.876 87.807 107.932 104.813 107.928 104.815 C 107.927 104.817 97.129 121.712 94.544 128.801 C 79.733 169.428 89.810 218.203 72.713 269.777 C 55.456 321.831 5.350 397.015 5.344 397.028 C 5.349 397.026 46.141 409.446 91.184 322.936 C 105.898 294.675 116.341 243.612 116.343 243.604 C 116.341 243.612 109.379 295.527 99.432 326.126 C 86.250 366.679 54.421 428.623 54.415 428.633 C 54.419 428.631 102.160 434.801 137.343 327.858 C 146.713 299.377 151.411 250.413 151.413 250.405 C 151.412 250.413 149.806 302.043 142.372 332.678 C 132.796 372.144 103.490 431.950 103.486 431.960 C 103.493 431.951 158.265 419.084 176.676 342.136 C 182.016 319.818 184.059 282.347 184.060 282.341 C 184.060 282.346 185.184 314.939 183.609 334.893 C 181.055 367.259 174.182 409.496 174.181 409.504 C 174.185 409.496 207.582 398.428 215.349 333.819 C 217.607 315.030 219.230 284.289 219.231 284.284 C 219.231 284.288 222.338 309.230 221.693 324.600 C 220.520 352.584 219.093 390.368 219.093 390.375 C 219.096 390.367 249.730 375.192 252.499 312.645 C 253.104 298.977 253.295 276.737 253.295 276.733 C 253.295 276.736 255.657 290.179 255.586 303.252 C 255.462 326.202 258.183 348.785 258.183 348.789 C 258.186 348.783 286.195 336.143 283.134 283.916 C 281.372 253.856 275.305 235.034 267.366 228.316 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 267.366 228.316 C 256.751 219.334 207.634 211.791 189.914 197.245 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 189.914 197.245 C 162.510 174.751 156.866 140.921 163.369 119.238 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 163.369 119.238 C 169.959 97.264 196.634 100.111 196.637 100.109 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 196.637 100.109 C 196.632 100.108 184.513 77.794 145.071 84.307 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 145.071 84.307 C 123.876 87.807 107.932 104.813 107.928 104.815 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 246.449 292.230 C 246.452 292.224 291.700 284.054 267.366 228.316 C 256.751 219.334 207.634 211.791 189.914 197.245 C 162.510 174.751 156.866 140.921 163.369 119.238 C 169.959 97.264 196.634 100.111 196.637 100.109 C 196.632 100.108 184.513 77.794 145.071 84.307 C 123.876 87.807 107.932 104.813 107.928 104.815 C 71.131 144.030 88.153 203.993 55.555 263.699 C 76.519 263.504 91.157 262.471 103.454 221.919 C 108.145 206.449 109.752 180.168 109.752 180.164 C 109.752 180.168 109.639 206.647 108.889 222.991 C 107.962 243.214 95.218 259.567 89.300 277.179 C 120.376 271.238 127.751 264.228 136.566 244.792 C 142.012 232.783 140.664 210.417 140.664 210.414 C 140.664 210.417 139.759 226.815 140.104 238.772 C 140.894 266.092 129.472 290.430 129.471 290.436 C 129.475 290.432 160.564 292.587 168.160 255.386 C 170.241 245.199 168.184 228.090 168.184 228.088 C 168.184 228.090 171.477 242.343 172.229 251.278 C 174.574 279.138 169.441 301.335 169.440 301.340 C 169.444 301.336 194.892 294.487 203.260 263.989 C 205.900 254.367 207.053 238.072 207.053 238.069 C 207.053 238.072 205.560 252.879 207.708 262.195 C 211.469 278.509 210.236 301.457 210.236 301.461 C 210.239 301.456 240.762 294.360 238.967 254.295 C 238.785 250.225 239.732 243.627 239.732 243.626 C 239.732 243.628 241.084 251.922 242.751 258.164 C 247.198 274.822 246.449 292.227 246.449 292.230 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 227.214 264.443 C 227.218 264.439 268.980 272.181 267.514 228.006 C 256.899 219.024 207.782 211.481 190.062 196.935 C 162.658 174.441 157.014 140.611 163.517 118.929 C 170.107 96.955 196.781 99.801 196.785 99.800 C 196.780 99.798 186.797 77.830 147.296 79.842 C 128.162 80.817 124.326 83.842 111.864 93.126 C 81.828 118.901 96.188 133.956 64.409 146.336 C 79.479 157.012 104.192 164.831 117.430 128.330 C 129.269 95.686 156.803 98.087 156.807 98.084 C 156.804 98.087 132.715 97.656 119.233 127.547 C 107.986 152.483 113.363 157.361 86.770 183.887 C 113.894 187.792 137.676 185.064 137.071 162.672 C 136.393 137.580 145.785 128.939 145.786 128.936 C 145.785 128.940 136.350 138.667 138.282 165.104 C 138.959 174.364 126.064 182.166 126.151 184.526 C 127.158 211.759 115.028 223.004 115.027 223.008 C 115.031 223.007 160.070 242.850 156.827 211.481 C 155.153 195.295 159.464 184.978 159.464 184.975 C 159.464 184.979 153.814 196.785 158.934 219.772 C 163.089 238.426 149.899 249.076 149.898 249.079 C 149.902 249.077 190.459 252.746 189.134 234.948 C 187.931 218.785 189.141 213.428 189.141 213.426 C 189.141 213.428 185.724 227.639 191.667 236.222 C 198.389 245.929 191.177 260.581 191.177 260.584 C 191.180 260.582 227.578 269.468 225.624 240.622 C 225.130 233.328 226.323 227.665 226.323 227.664 C 226.323 227.665 222.994 235.172 228.471 244.088 C 236.032 256.397 227.214 264.441 227.214 264.443 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"leg_eagle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"leg_eagle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 168.028 520.166 C 168.028 520.166 162.314 513.922 162.314 513.921 C 162.312 513.923 150.726 530.262 150.724 530.263 C 150.726 530.262 168.026 520.167 168.028 520.166 M 200.656 531.435 C 200.810 531.303 206.129 530.434 206.131 530.818 C 206.216 544.781 198.751 548.553 198.750 548.554 C 198.750 548.553 201.978 539.012 200.656 531.435 M 153.976 480.424 C 154.121 480.282 155.458 475.061 155.076 475.025 C 141.174 473.705 136.757 480.807 136.755 480.807 C 136.757 480.807 146.546 478.437 153.976 480.424 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 221.111 453.772 C 221.110 453.774 213.359 461.841 207.857 467.567 C 204.519 471.041 201.182 474.514 198.345 477.466 C 195.810 480.106 190.505 485.626 190.504 485.627 C 190.504 485.627 187.423 483.137 185.021 481.575 C 181.572 479.026 177.272 476.439 173.572 475.616 C 173.097 475.510 172.629 475.404 172.215 475.309 C 167.512 474.234 163.600 473.217 160.368 472.743 C 156.165 472.127 152.980 472.343 150.463 474.304 C 149.845 474.785 149.680 479.242 150.194 480.371 C 152.036 484.414 156.368 481.886 169.354 487.330 C 173.711 489.157 180.597 493.886 180.598 493.886 C 180.597 493.887 176.744 498.086 173.527 501.031 C 170.328 504.235 166.371 507.632 162.714 509.713 C 158.788 511.946 160.256 519.217 161.154 520.256 C 162.089 521.339 169.482 523.940 172.255 520.140 C 172.971 519.159 173.792 518.159 174.643 517.256 C 176.824 514.777 179.438 512.288 181.902 510.178 C 185.178 507.201 189.602 503.727 189.603 503.726 C 189.603 503.727 193.703 511.005 195.138 515.507 C 196.291 519.129 196.922 522.072 197.309 524.508 C 198.338 530.995 197.553 533.607 200.374 535.207 C 201.453 535.820 205.907 536.049 206.441 535.476 C 208.657 533.098 209.132 529.870 208.859 525.535 C 208.651 522.223 207.972 518.200 207.327 513.446 C 207.276 513.072 207.228 512.709 207.180 512.341 C 206.671 508.456 204.340 503.764 202.066 500.073 C 200.776 497.675 198.706 494.590 198.706 494.590 C 198.707 494.589 204.086 490.267 207.528 487.502 C 210.965 484.741 214.732 481.714 218.226 478.907 C 226.225 472.481 233.143 466.923 233.145 466.922 C 233.145 466.922 221.113 453.774 221.111 453.772 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 180.598 493.886 C 182.441 494.634 184.666 495.823 186.222 497.547 C 187.863 499.366 188.906 501.857 189.603 503.726 C 189.914 503.644 193.001 502.152 195.963 501.339 C 198.607 500.173 200.326 500.268 202.066 500.073 C 200.776 497.675 198.706 494.590 198.706 494.590 C 197.747 492.815 197.540 491.171 195.831 489.267 C 194.007 487.237 190.505 485.628 190.504 485.627 C 190.504 485.627 187.423 483.137 185.021 481.575 C 184.692 483.290 184.095 485.539 183.260 487.457 C 182.111 490.096 179.905 492.865 179.904 492.866 M 207.857 467.567 C 209.135 468.434 212.142 470.560 213.747 472.297 C 215.435 474.124 217.407 477.457 218.226 478.907 C 226.225 472.481 233.143 466.923 233.145 466.922 C 233.145 466.922 221.113 453.774 221.111 453.772 C 221.110 453.774 213.359 461.841 207.857 467.567 C 204.519 471.041 201.182 474.514 198.345 477.466 C 199.760 478.403 202.018 480.017 203.665 481.817 C 205.313 483.618 206.721 486.010 207.528 487.502 C 210.965 484.741 214.732 481.714 218.226 478.907 M 169.354 487.330 C 169.354 487.330 171.435 483.762 172.029 480.497 C 172.573 478.841 172.297 476.868 172.215 475.309 C 167.512 474.234 163.600 473.217 160.368 472.743 C 160.700 474.217 160.994 476.005 161.045 477.669 C 161.141 480.745 160.206 484.422 160.206 484.423 M 195.138 515.507 C 195.138 515.506 198.684 513.520 201.902 513.141 C 203.710 512.929 205.709 513.212 207.327 513.446 C 207.276 513.072 207.228 512.709 207.180 512.341 C 206.671 508.456 204.340 503.764 202.066 500.073 M 197.309 524.508 C 198.995 524.294 201.514 524.083 203.746 524.332 C 205.479 524.525 207.318 525.026 208.859 525.535 C 208.651 522.223 207.972 518.200 207.327 513.446 M 173.527 501.031 C 175.106 501.866 177.347 502.956 178.814 504.558 C 180.308 506.189 181.209 508.566 181.902 510.178 C 185.178 507.201 189.602 503.727 189.603 503.726 C 189.603 503.727 193.703 511.005 195.138 515.507 C 196.291 519.129 196.922 522.072 197.309 524.508 C 198.338 530.995 197.553 533.607 200.374 535.207 C 201.453 535.820 205.907 536.049 206.441 535.476 C 208.657 533.098 209.132 529.870 208.859 525.535 M 165.837 507.825 C 165.837 507.826 168.903 509.683 170.902 511.799 C 173.101 514.126 173.823 515.765 174.643 517.256 C 176.824 514.777 179.438 512.288 181.902 510.178 M 198.706 494.590 C 198.707 494.589 204.086 490.267 207.528 487.502 M 172.255 520.140 C 172.971 519.159 173.792 518.159 174.643 517.256 M 161.154 520.256 C 162.089 521.339 169.482 523.940 172.255 520.140 M 162.714 509.713 C 158.788 511.946 160.256 519.217 161.154 520.256 M 173.527 501.031 C 170.328 504.235 166.371 507.632 162.714 509.713 M 180.598 493.886 C 180.597 493.887 176.744 498.086 173.527 501.031 M 169.354 487.330 C 173.711 489.157 180.597 493.886 180.598 493.886 M 150.194 480.371 C 152.036 484.414 156.368 481.886 169.354 487.330 M 150.463 474.304 C 149.845 474.785 149.680 479.242 150.194 480.371 M 160.368 472.743 C 156.165 472.127 152.980 472.343 150.463 474.304 M 173.572 475.616 C 173.097 475.510 172.629 475.404 172.215 475.309 M 185.021 481.575 C 181.572 479.026 177.272 476.439 173.572 475.616 M 198.345 477.466 C 195.810 480.106 190.505 485.626 190.504 485.627 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 216.977 469.637 C 228.194 466.442 235.407 471.529 246.417 467.680 C 256.143 464.280 260.870 455.969 263.413 452.127 C 273.900 436.284 255.235 415.888 238.527 424.932 C 234.475 427.125 225.778 431.098 221.531 440.485 C 216.723 451.111 221.151 458.746 216.977 469.637 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 257.769 432.308 C 245.305 443.714 232.840 455.120 220.376 466.526 M 221.531 440.485 C 216.723 451.111 221.151 458.746 216.977 469.637 C 228.194 466.442 235.407 471.529 246.417 467.680 C 256.143 464.280 260.870 455.969 263.413 452.127 C 273.900 436.284 255.235 415.888 238.527 424.932 C 234.475 427.125 225.778 431.098 221.531 440.485 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 212.179 436.914 C 223.840 436.731 229.491 443.512 241.122 442.644 C 251.397 441.877 258.114 435.072 261.565 432.019 C 275.795 419.431 263.045 394.899 244.566 399.310 C 240.084 400.380 230.655 401.966 224.123 409.934 C 216.728 418.954 219.030 427.475 212.179 436.914 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 261.243 411.415 C 246.251 419.206 231.259 426.997 216.268 434.789 M 224.123 409.934 C 216.728 418.954 219.030 427.475 212.179 436.914 C 223.840 436.731 229.491 443.512 241.122 442.644 C 251.397 441.877 258.114 435.072 261.565 432.019 C 275.795 419.431 263.045 394.899 244.566 399.310 C 240.084 400.380 230.655 401.966 224.123 409.934 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 249.146 477.312 C 259.154 471.323 267.439 474.369 277.077 467.802 C 285.592 462.001 288.007 452.749 289.469 448.380 C 295.498 430.363 272.190 415.493 258.393 428.552 C 255.046 431.720 247.674 437.808 246.000 447.975 C 244.106 459.483 250.360 465.712 249.146 477.312 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 278.888 430.697 C 269.800 444.940 260.712 459.184 251.625 473.427 M 246.000 447.975 C 244.106 459.483 250.360 465.712 249.146 477.312 C 259.154 471.323 267.439 474.369 277.077 467.802 C 285.592 462.001 288.007 452.749 289.469 448.380 C 295.498 430.363 272.190 415.493 258.393 428.552 C 255.046 431.720 247.674 437.808 246.000 447.975 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 255.770 434.137 C 266.987 430.943 274.201 436.030 285.210 432.181 C 294.937 428.781 299.664 420.469 302.207 416.627 C 312.694 400.785 294.029 380.389 277.321 389.432 C 273.269 391.625 264.572 395.598 260.324 404.986 C 255.516 415.611 259.945 423.247 255.770 434.137 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 296.563 396.808 C 284.099 408.214 271.634 419.620 259.170 431.026 M 260.324 404.986 C 255.516 415.611 259.945 423.247 255.770 434.137 C 266.987 430.943 274.201 436.030 285.210 432.181 C 294.937 428.781 299.664 420.469 302.207 416.627 C 312.694 400.785 294.029 380.389 277.321 389.432 C 273.269 391.625 264.572 395.598 260.324 404.986 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 285.758 465.512 C 295.766 459.523 304.050 462.569 313.688 456.002 C 322.203 450.201 324.618 440.949 326.080 436.580 C 332.109 418.563 308.802 403.693 295.004 416.752 C 291.657 419.920 284.285 426.008 282.612 436.175 C 280.718 447.683 286.972 453.912 285.758 465.512 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 315.357 418.741 C 306.269 432.985 297.182 447.228 288.094 461.472 M 282.612 436.175 C 280.718 447.683 286.972 453.912 285.758 465.512 C 295.766 459.523 304.050 462.569 313.688 456.002 C 322.203 450.201 324.618 440.949 326.080 436.580 C 332.109 418.563 308.802 403.693 295.004 416.752 C 291.657 419.920 284.285 426.008 282.612 436.175 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 227.173 401.490 C 238.834 401.308 244.485 408.089 256.116 407.220 C 266.391 406.454 273.108 399.649 276.559 396.596 C 290.789 384.008 278.039 359.476 259.560 363.887 C 255.078 364.956 245.649 366.543 239.116 374.511 C 231.722 383.530 234.024 392.052 227.173 401.490 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 276.237 375.991 C 261.245 383.783 246.253 391.574 231.261 399.365 M 239.116 374.511 C 231.722 383.530 234.024 392.052 227.173 401.490 C 238.834 401.308 244.485 408.089 256.116 407.220 C 266.391 406.454 273.108 399.649 276.559 396.596 C 290.789 384.008 278.039 359.476 259.560 363.887 C 255.078 364.956 245.649 366.543 239.116 374.511 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 261.601 391.688 C 273.263 391.505 278.914 398.286 290.544 397.418 C 300.819 396.651 307.537 389.846 310.988 386.793 C 325.217 374.205 312.467 349.673 293.988 354.084 C 289.507 355.154 280.077 356.740 273.545 364.708 C 266.151 373.728 268.452 382.249 261.601 391.688 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 310.665 366.189 C 295.674 373.980 280.682 381.772 265.690 389.563 M 273.545 364.708 C 266.151 373.728 268.452 382.249 261.601 391.688 C 273.263 391.505 278.914 398.286 290.544 397.418 C 300.819 396.651 307.537 389.846 310.988 386.793 C 325.217 374.205 312.467 349.673 293.988 354.084 C 289.507 355.154 280.077 356.740 273.545 364.708 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 298.569 432.086 C 308.577 426.097 316.861 429.144 326.499 422.577 C 335.014 416.775 337.429 407.523 338.891 403.154 C 344.921 385.137 321.613 370.267 307.815 383.326 C 304.468 386.494 297.096 392.582 295.423 402.749 C 293.529 414.257 299.783 420.486 298.569 432.086 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 328.310 385.471 C 319.222 399.714 310.135 413.958 301.047 428.201 M 295.423 402.749 C 293.529 414.257 299.783 420.486 298.569 432.086 C 308.577 426.097 316.861 429.144 326.499 422.577 C 335.014 416.775 337.429 407.523 338.891 403.154 C 344.921 385.137 321.613 370.267 307.815 383.326 C 304.468 386.494 297.096 392.582 295.423 402.749 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 287.163 405.410 C 298.380 402.215 305.594 407.302 316.603 403.453 C 326.329 400.053 331.057 391.742 333.600 387.900 C 344.087 372.057 325.422 351.661 308.714 360.705 C 304.662 362.898 295.965 366.871 291.717 376.258 C 286.909 386.884 291.338 394.519 287.163 405.410 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 327.956 368.081 C 315.491 379.487 303.027 390.893 290.563 402.299 M 291.717 376.258 C 286.909 386.884 291.338 394.519 287.163 405.410 C 298.380 402.215 305.594 407.302 316.603 403.453 C 326.329 400.053 331.057 391.742 333.600 387.900 C 344.087 372.057 325.422 351.661 308.714 360.705 C 304.662 362.898 295.965 366.871 291.717 376.258 \\\"},\\\"children\\\":[]}]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"leg_eagle_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"leg_eagle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 549.397 517.872 C 549.397 517.872 555.382 511.887 555.382 511.886 C 555.383 511.888 566.235 528.724 566.236 528.726 C 566.235 528.724 549.399 517.873 549.397 517.872 M 516.302 527.685 C 516.153 527.546 510.879 526.442 510.859 526.825 C 510.157 540.772 517.447 544.870 517.448 544.872 C 517.448 544.870 514.646 535.195 516.302 527.685 M 565.195 478.791 C 565.057 478.643 563.953 473.368 564.336 473.349 C 578.282 472.646 582.380 479.936 582.382 479.937 C 582.381 479.937 572.706 477.135 565.195 478.791 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 499.306 449.192 C 499.308 449.193 506.694 457.596 511.937 463.560 C 515.117 467.178 518.298 470.796 521.001 473.871 C 523.417 476.620 528.472 482.371 528.472 482.371 C 528.473 482.371 531.661 480.020 534.130 478.566 C 537.688 476.172 542.099 473.778 545.831 473.120 C 546.311 473.035 546.783 472.950 547.201 472.874 C 551.947 472.008 555.900 471.165 559.150 470.835 C 563.376 470.406 566.548 470.763 568.977 472.833 C 569.572 473.341 569.540 477.801 568.976 478.906 C 566.957 482.864 562.742 480.146 549.527 485.010 C 545.093 486.642 538.004 491.060 538.003 491.061 C 538.004 491.062 541.667 495.428 544.751 498.513 C 547.805 501.854 551.607 505.423 555.169 507.664 C 558.992 510.069 557.204 517.268 556.261 518.267 C 555.279 519.307 547.777 521.578 545.175 517.658 C 544.503 516.647 543.728 515.612 542.918 514.672 C 540.849 512.099 538.347 509.496 535.979 507.280 C 532.838 504.160 528.573 500.493 528.572 500.493 C 528.571 500.494 524.152 507.582 522.520 512.016 C 521.207 515.584 520.447 518.496 519.953 520.913 C 518.637 527.347 519.306 529.992 516.416 531.466 C 515.312 532.029 510.851 532.061 510.344 531.466 C 508.234 528.991 507.904 525.745 508.368 521.427 C 508.723 518.128 509.579 514.139 510.434 509.418 C 510.501 509.046 510.566 508.686 510.630 508.321 C 511.311 504.462 513.847 499.878 516.282 496.291 C 517.677 493.952 519.882 490.962 519.882 490.962 C 519.881 490.961 514.698 486.405 511.382 483.490 C 508.071 480.580 504.442 477.389 501.076 474.430 C 493.369 467.655 486.705 461.797 486.703 461.796 C 486.703 461.796 499.305 449.193 499.306 449.192 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 538.003 491.061 C 536.129 491.727 533.854 492.816 532.223 494.470 C 530.502 496.214 529.350 498.656 528.572 500.493 C 528.264 500.397 525.247 498.769 522.323 497.826 C 519.733 496.544 518.012 496.563 516.282 496.291 C 517.677 493.952 519.882 490.962 519.882 490.962 C 520.918 489.232 521.198 487.598 522.990 485.772 C 524.902 483.824 528.472 482.372 528.472 482.371 C 528.473 482.371 531.661 480.020 534.130 478.566 C 534.383 480.294 534.879 482.567 535.629 484.520 C 536.660 487.207 538.741 490.072 538.742 490.072 M 511.937 463.560 C 510.622 464.370 507.524 466.360 505.844 468.025 C 504.076 469.775 501.958 473.018 501.076 474.430 C 493.369 467.655 486.705 461.797 486.703 461.796 C 486.703 461.796 499.305 449.193 499.306 449.192 C 499.308 449.193 506.694 457.596 511.937 463.560 C 515.117 467.178 518.298 470.796 521.001 473.871 C 519.546 474.744 517.219 476.257 515.493 477.982 C 513.768 479.708 512.255 482.036 511.382 483.490 C 508.071 480.580 504.442 477.389 501.076 474.430 M 549.527 485.010 C 549.527 485.009 547.605 481.352 547.157 478.065 C 546.687 476.386 547.050 474.428 547.201 472.874 C 551.947 472.008 555.900 471.165 559.150 470.835 C 558.753 472.293 558.380 474.065 558.255 475.726 C 558.023 478.795 558.794 482.510 558.794 482.510 M 522.520 512.016 C 522.520 512.016 519.066 509.874 515.867 509.354 C 514.071 509.061 512.061 509.256 510.434 509.418 C 510.501 509.046 510.566 508.686 510.630 508.321 C 511.311 504.462 513.847 499.878 516.282 496.291 M 519.953 520.913 C 518.278 520.624 515.771 520.302 513.529 520.452 C 511.790 520.568 509.930 520.987 508.368 521.427 C 508.723 518.128 509.579 514.139 510.434 509.418 M 544.751 498.513 C 543.136 499.277 540.850 500.266 539.312 501.802 C 537.748 503.365 536.743 505.700 535.979 507.280 C 532.838 504.160 528.573 500.493 528.572 500.493 C 528.571 500.494 524.152 507.582 522.520 512.016 C 521.207 515.584 520.447 518.496 519.953 520.913 C 518.637 527.347 519.306 529.992 516.416 531.466 C 515.312 532.029 510.851 532.061 510.344 531.466 C 508.234 528.991 507.904 525.745 508.368 521.427 M 552.133 505.640 C 552.132 505.641 548.987 507.360 546.896 509.386 C 544.597 511.613 543.803 513.219 542.918 514.672 C 540.849 512.099 538.347 509.496 535.979 507.280 M 519.882 490.962 C 519.881 490.961 514.698 486.405 511.382 483.490 M 545.175 517.658 C 544.503 516.647 543.728 515.612 542.918 514.672 M 556.261 518.267 C 555.279 519.307 547.777 521.578 545.175 517.658 M 555.169 507.664 C 558.992 510.069 557.204 517.268 556.261 518.267 M 544.751 498.513 C 547.805 501.854 551.607 505.423 555.169 507.664 M 538.003 491.061 C 538.004 491.062 541.667 495.428 544.751 498.513 M 549.527 485.010 C 545.093 486.642 538.004 491.060 538.003 491.061 M 568.976 478.906 C 566.957 482.864 562.742 480.146 549.527 485.010 M 568.977 472.833 C 569.572 473.341 569.540 477.801 568.976 478.906 M 559.150 470.835 C 563.376 470.406 566.548 470.763 568.977 472.833 M 545.831 473.120 C 546.311 473.035 546.783 472.950 547.201 472.874 M 534.130 478.566 C 537.688 476.172 542.099 473.778 545.831 473.120 M 521.001 473.871 C 523.417 476.620 528.472 482.371 528.472 482.371 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 502.734 465.224 C 491.670 461.536 484.238 466.298 473.410 461.966 C 463.844 458.138 459.490 449.626 457.119 445.674 C 447.344 429.383 466.894 409.834 483.185 419.608 C 487.136 421.979 495.649 426.333 499.476 435.900 C 503.809 446.728 499.046 454.159 502.734 465.224 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 463.635 426.125 C 475.582 438.072 487.529 450.019 499.476 461.966 M 499.476 435.900 C 503.809 446.728 499.046 454.159 502.734 465.224 C 491.670 461.536 484.238 466.298 473.410 461.966 C 463.844 458.138 459.490 449.626 457.119 445.674 C 447.344 429.383 466.894 409.834 483.185 419.608 C 487.136 421.979 495.649 426.333 499.476 435.900 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 508.977 432.746 C 497.335 432.047 491.389 438.570 479.809 437.188 C 469.578 435.967 463.168 428.871 459.856 425.668 C 446.198 412.462 460.022 388.519 478.287 393.744 C 482.717 395.011 492.067 397.014 498.240 405.264 C 505.228 414.602 502.551 423.013 508.977 432.746 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 461.090 405.098 C 475.722 413.546 490.354 421.994 504.986 430.442 M 498.240 405.264 C 505.228 414.602 502.551 423.013 508.977 432.746 C 497.335 432.047 491.389 438.570 479.809 437.188 C 469.578 435.967 463.168 428.871 459.856 425.668 C 446.198 412.462 460.022 388.519 478.287 393.744 C 482.717 395.011 492.067 397.014 498.240 405.264 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 470.256 471.466 C 460.523 465.040 452.112 467.717 442.774 460.729 C 434.525 454.556 432.522 445.207 431.255 440.777 C 426.030 422.511 449.973 408.687 463.179 422.345 C 466.382 425.658 473.478 432.067 474.699 442.298 C 476.081 453.879 469.557 459.824 470.256 471.466 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 442.609 423.580 C 451.057 438.212 459.505 452.844 467.952 467.476 M 474.699 442.298 C 476.081 453.879 469.557 459.824 470.256 471.466 C 460.523 465.040 452.112 467.717 442.774 460.729 C 434.525 454.556 432.522 445.207 431.255 440.777 C 426.030 422.511 449.973 408.687 463.179 422.345 C 466.382 425.658 473.478 432.067 474.699 442.298 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 465.551 428.041 C 454.487 424.353 447.055 429.115 436.227 424.783 C 426.661 420.955 422.306 412.442 419.936 408.491 C 410.161 392.200 429.711 372.651 446.002 382.425 C 449.953 384.796 458.465 389.150 462.293 398.716 C 466.626 409.545 461.863 416.976 465.551 428.041 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 426.452 388.942 C 438.399 400.889 450.346 412.836 462.293 424.783 M 462.293 398.716 C 466.626 409.545 461.863 416.976 465.551 428.041 C 454.487 424.353 447.055 429.115 436.227 424.783 C 426.661 420.955 422.306 412.442 419.936 408.491 C 410.161 392.200 429.711 372.651 446.002 382.425 C 449.953 384.796 458.465 389.150 462.293 398.716 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 434.204 458.056 C 424.471 451.630 416.060 454.307 406.722 447.319 C 398.472 441.146 396.469 431.797 395.202 427.367 C 389.977 409.101 413.921 395.277 427.126 408.935 C 430.329 412.248 437.425 418.657 438.646 428.888 C 440.028 440.468 433.505 446.414 434.204 458.056 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 406.705 410.021 C 415.153 424.653 423.601 439.285 432.049 453.917 M 438.646 428.888 C 440.028 440.468 433.505 446.414 434.204 458.056 C 424.471 451.630 416.060 454.307 406.722 447.319 C 398.472 441.146 396.469 431.797 395.202 427.367 C 389.977 409.101 413.921 395.277 427.126 408.935 C 430.329 412.248 437.425 418.657 438.646 428.888 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 495.567 396.693 C 483.925 395.994 477.979 402.518 466.398 401.135 C 456.168 399.914 449.758 392.819 446.446 389.616 C 432.788 376.409 446.612 352.466 464.877 357.691 C 469.307 358.959 478.657 360.962 484.830 369.211 C 491.817 378.549 489.141 386.960 495.567 396.693 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 447.680 369.046 C 462.312 377.493 476.944 385.941 491.576 394.389 M 484.830 369.211 C 491.817 378.549 489.141 386.960 495.567 396.693 C 483.925 395.994 477.979 402.518 466.398 401.135 C 456.168 399.914 449.758 392.819 446.446 389.616 C 432.788 376.409 446.612 352.466 464.877 357.691 C 469.307 358.959 478.657 360.962 484.830 369.211 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 461.606 385.375 C 449.965 384.676 444.019 391.200 432.438 389.817 C 422.207 388.596 415.798 381.501 412.485 378.298 C 398.827 365.091 412.651 341.148 430.917 346.374 C 435.347 347.641 444.696 349.644 450.869 357.893 C 457.857 367.231 455.180 375.642 461.606 385.375 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 413.720 357.728 C 428.352 366.175 442.984 374.623 457.616 383.071 M 450.869 357.893 C 457.857 367.231 455.180 375.642 461.606 385.375 C 449.965 384.676 444.019 391.200 432.438 389.817 C 422.207 388.596 415.798 381.501 412.485 378.298 C 398.827 365.091 412.651 341.148 430.917 346.374 C 435.347 347.641 444.696 349.644 450.869 357.893 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 422.886 424.096 C 413.153 417.670 404.742 420.346 395.404 413.359 C 387.154 407.186 385.152 397.836 383.884 393.406 C 378.659 375.140 402.603 361.317 415.808 374.975 C 419.011 378.287 426.107 384.696 427.328 394.927 C 428.710 406.508 422.187 412.454 422.886 424.096 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 395.238 376.209 C 403.686 390.841 412.134 405.473 420.582 420.105 M 427.328 394.927 C 428.710 406.508 422.187 412.454 422.886 424.096 C 413.153 417.670 404.742 420.346 395.404 413.359 C 387.154 407.186 385.152 397.836 383.884 393.406 C 378.659 375.140 402.603 361.317 415.808 374.975 C 419.011 378.287 426.107 384.696 427.328 394.927 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 435.462 397.951 C 424.397 394.263 416.966 399.025 406.137 394.693 C 396.571 390.865 392.217 382.353 389.846 378.402 C 380.071 362.110 399.621 342.561 415.912 352.335 C 419.863 354.706 428.376 359.061 432.203 368.627 C 436.536 379.455 431.774 386.887 435.462 397.951 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 396.363 358.852 C 408.310 370.799 420.257 382.746 432.203 394.693 M 432.203 368.627 C 436.536 379.455 431.774 386.887 435.462 397.951 C 424.397 394.263 416.966 399.025 406.137 394.693 C 396.571 390.865 392.217 382.353 389.846 378.402 C 380.071 362.110 399.621 342.561 415.912 352.335 C 419.863 354.706 428.376 359.061 432.203 368.627 \\\"},\\\"children\\\":[]}]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"shield\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"shield\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 236.126 173.480 C 236.151 173.480 483.849 173.480 483.874 173.480 C 483.874 173.501 506.095 297.411 483.874 387.443 C 464.177 467.246 360.012 511.305 360.000 511.317 C 359.988 511.305 255.823 467.246 236.126 387.443 C 213.905 297.411 236.126 173.501 236.126 173.480 Z\\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":244.746,\\\"max\\\":475.254},\\\"y\\\":{\\\"min\\\":190.383,\\\"max\\\":457.2}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":695.328,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":40.436,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":63.613,\\\"y\\\":242.447,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999874940847915,\\\"y\\\":0.005001167265653793}},{\\\"point\\\":{\\\"x\\\":656.387,\\\"y\\\":242.447,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999874940847915,\\\"y\\\":0.005001167265653793}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":558.834,\\\"y\\\":521.145,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712890063991706,\\\"y\\\":0.7012758064142106}},{\\\"point\\\":{\\\"x\\\":161.003,\\\"y\\\":521.186,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987374608604087,\\\"y\\\":0.71537819423739}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":558.973,\\\"y\\\":90.697,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314144323869134,\\\"y\\\":-0.7754455587425283}},{\\\"point\\\":{\\\"x\\\":161.703,\\\"y\\\":90.764,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817962317794365,\\\"y\\\":-0.7315421370853226}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":550.725,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"egg\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":127.45386221540934,\\\"max\\\":592.5468343300855},\\\"y\\\":{\\\"min\\\":13.528,\\\"max\\\":650.033}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"egg\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"egg\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#6CE5DBD2-CC60-459D-9650-8B059AB54BD3_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 15.528 C 470.069 15.528 625.198 262.332 583.646 448.465 C 558.086 562.959 477.312 648.033 360.000 648.033 C 242.688 648.033 161.914 562.959 136.355 448.465 C 94.802 262.332 249.931 15.528 360.000 15.528 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 130.806 371.193 C 157.441 348.363 210.704 302.709 210.712 302.703 C 210.717 302.709 265.641 369.046 265.646 369.053 C 265.652 369.049 324.856 330.531 324.862 330.527 C 324.868 330.529 368.144 346.698 389.785 354.784 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":189.648,\\\"max\\\":530.352},\\\"y\\\":{\\\"min\\\":197.433,\\\"max\\\":538.136}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":701.254,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":18.937,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":131.098,\\\"y\\\":397.504,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872087043342,\\\"y\\\":0.005057907444228417}},{\\\"point\\\":{\\\"x\\\":588.902,\\\"y\\\":397.504,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872087043342,\\\"y\\\":0.005057907444228422}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":509.197,\\\"y\\\":587.62,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712919276649926,\\\"y\\\":0.7012461087100207}},{\\\"point\\\":{\\\"x\\\":210.62,\\\"y\\\":587.665,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986913597264861,\\\"y\\\":0.7154232200897269}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":444.012,\\\"y\\\":54.666,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314096317746991,\\\"y\\\":-0.7754494676651335}},{\\\"point\\\":{\\\"x\\\":276.635,\\\"y\\\":54.741,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817663038045618,\\\"y\\\":-0.7315700287714538}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":646.718,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"6CE5DBD2-CC60-459D-9650-8B059AB54BD3_0\\\",\\\"cx\\\":\\\"49.50%\\\",\\\"cy\\\":\\\"55.98%\\\",\\\"r\\\":\\\"64.40%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"37.25%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"eggshell\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":11.042,\\\"max\\\":710.905},\\\"y\\\":{\\\"min\\\":299.606,\\\"max\\\":656.89}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eggshell\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"egg\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"url(#AC45C005-9D10-4014-ADEF-FAD44ABB36DB_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 581.897 305.503 C 581.898 305.517 593.561 401.910 583.646 448.465 C 559.208 563.204 477.312 648.033 360.000 648.033 C 242.688 648.033 161.915 562.959 136.355 448.465 C 130.537 422.407 129.730 369.369 129.729 369.361 C 129.737 369.354 210.703 302.709 210.712 302.703 C 210.716 302.711 256.536 389.279 256.541 389.287 C 256.547 389.282 324.855 330.533 324.862 330.527 C 324.870 330.535 401.841 414.941 401.849 414.949 C 401.854 414.938 454.885 301.617 454.890 301.606 C 454.898 301.613 527.837 374.910 527.844 374.917 C 527.850 374.910 581.892 305.510 581.897 305.503 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S2\\\",\\\"fill\\\":\\\"url(#AC45C005-9D10-4014-ADEF-FAD44ABB36DB_1)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 494.793 627.639 C 494.802 627.636 580.429 600.392 580.438 600.389 C 580.438 600.385 584.930 560.828 584.930 560.824 C 584.935 560.823 634.315 551.690 634.320 551.689 C 634.323 551.683 669.972 492.366 669.975 492.360 C 669.971 492.373 679.174 590.504 625.206 621.800 C 566.244 655.993 494.806 627.639 494.793 627.639 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S3\\\",\\\"fill\\\":\\\"url(#AC45C005-9D10-4014-ADEF-FAD44ABB36DB_2)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 688.467 654.890 C 688.462 654.888 640.783 632.508 640.778 632.505 C 640.785 632.504 708.898 614.016 708.905 614.014 C 708.903 614.018 688.469 654.886 688.467 654.890 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S4\\\",\\\"fill\\\":\\\"url(#AC45C005-9D10-4014-ADEF-FAD44ABB36DB_3)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 13.042 649.051 C 13.047 649.043 18.929 600.167 58.784 572.165 C 100.896 542.578 159.990 550.756 160.001 550.754 C 159.997 550.757 129.558 580.543 129.555 580.546 C 129.554 580.549 121.496 611.310 121.496 611.313 C 121.491 611.313 75.333 611.095 75.329 611.095 C 75.326 611.098 51.974 647.100 51.971 647.104 C 51.967 647.104 13.046 649.050 13.042 649.051 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S5\\\",\\\"fill\\\":\\\"url(#AC45C005-9D10-4014-ADEF-FAD44ABB36DB_4)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 109.392 638.345 C 109.402 638.342 205.733 606.232 205.742 606.228 C 205.741 606.233 193.092 654.885 193.090 654.890 C 193.082 654.888 109.400 638.347 109.392 638.345 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":152.902,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":435.643,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":131.098,\\\"y\\\":397.504,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872087043342,\\\"y\\\":0.005057907444228417}},{\\\"point\\\":{\\\"x\\\":588.902,\\\"y\\\":397.504,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872087043342,\\\"y\\\":0.005057907444228422}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"AC45C005-9D10-4014-ADEF-FAD44ABB36DB_0\\\",\\\"cx\\\":\\\"49.90%\\\",\\\"cy\\\":\\\"32.13%\\\",\\\"r\\\":\\\"100.19%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"32.16%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"AC45C005-9D10-4014-ADEF-FAD44ABB36DB_1\\\",\\\"cx\\\":\\\"52.45%\\\",\\\"cy\\\":\\\"55.92%\\\",\\\"r\\\":\\\"87.20%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"32.16%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"AC45C005-9D10-4014-ADEF-FAD44ABB36DB_2\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"50.00%\\\",\\\"r\\\":\\\"136.89%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"32.16%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"AC45C005-9D10-4014-ADEF-FAD44ABB36DB_3\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"46.41%\\\",\\\"r\\\":\\\"92.55%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"32.16%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"AC45C005-9D10-4014-ADEF-FAD44ABB36DB_4\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"50.00%\\\",\\\"r\\\":\\\"122.48%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"32.16%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"eye\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":13.047,\\\"max\\\":706.953},\\\"y\\\":{\\\"min\\\":190.972,\\\"max\\\":529.028}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eye\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eye\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#AB73A7F7-98AF-4043-895F-7E3AE0D791B3_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 192.972 C 564.753 192.972 704.919 359.983 704.953 360.000 C 704.919 360.017 564.753 527.028 360.000 527.028 C 155.247 527.028 15.081 360.017 15.047 360.000 C 15.081 359.983 155.247 192.972 360.000 192.972 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 221.924 C 436.424 221.924 498.076 283.576 498.076 360.000 C 498.076 436.424 436.424 498.076 360.000 498.076 C 283.576 498.076 221.924 436.424 221.924 360.000 C 221.924 283.576 283.576 221.924 360.000 221.924 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 331.602 C 375.718 331.602 388.398 344.282 388.398 360.000 C 388.398 375.718 375.718 388.398 360.000 388.398 C 344.282 388.398 331.602 375.718 331.602 360.000 C 331.602 344.282 344.282 331.602 360.000 331.602 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":251.724,\\\"max\\\":471.643},\\\"y\\\":{\\\"min\\\":250.04,\\\"max\\\":469.96}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":361.684,\\\"y\\\":568.535,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":361.684,\\\"y\\\":197.193,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":14.26,\\\"y\\\":359.365,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999875634527172,\\\"y\\\":0.0049872778043753814}},{\\\"point\\\":{\\\"x\\\":705.539,\\\"y\\\":359.365,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999875634527172,\\\"y\\\":0.004987277804375375}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":157.893,\\\"y\\\":470.253,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5860254780827434,\\\"y\\\":0.8102926255606009}},{\\\"point\\\":{\\\"x\\\":563.828,\\\"y\\\":470.253,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5860254780827449,\\\"y\\\":0.8102926255605999}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":187.267,\\\"y\\\":235.185,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5014596828785342,\\\"y\\\":-0.8651810136886731}},{\\\"point\\\":{\\\"x\\\":533.088,\\\"y\\\":235.185,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5015171182352989,\\\"y\\\":-0.8651477215579784}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":361.656,\\\"y\\\":522.995,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"AB73A7F7-98AF-4043-895F-7E3AE0D791B3_0\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"50.00%\\\",\\\"r\\\":\\\"93.35%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"45.88%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"eye_eyelashes\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":10.643878860546883,\\\"max\\\":709.33},\\\"y\\\":{\\\"min\\\":134.658,\\\"max\\\":571.32}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eye_eyelashes\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eye_eyelashes\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 210.495 C 499.782 210.495 635.864 359.985 635.892 360.000 C 635.864 360.015 499.782 509.505 360.000 509.505 C 220.218 509.505 84.136 360.015 84.108 360.000 C 84.136 359.985 220.218 210.495 360.000 210.495 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 484.761 359.228 C 484.871 427.261 440.768 483.907 360.000 483.989 C 292.018 483.989 235.239 428.069 235.239 359.228 C 235.239 289.527 290.299 234.467 360.000 234.467 C 433.688 233.331 484.647 289.220 484.761 359.228 M 634.473 359.228 C 634.446 359.213 482.807 209.653 360.000 209.515 C 222.764 209.514 85.554 359.213 85.527 359.228 C 85.554 359.242 222.764 508.940 360.000 508.941 C 497.236 508.940 634.446 359.242 634.473 359.228 M 397.429 571.320 C 397.425 571.314 360.000 508.941 360.000 508.941 C 360.000 508.941 322.575 571.314 322.571 571.320 C 322.569 571.314 301.539 503.378 301.537 503.371 C 301.531 503.376 246.896 555.402 246.889 555.408 C 246.889 555.400 246.891 482.311 246.891 482.303 C 246.883 482.307 181.079 522.271 181.072 522.276 C 181.075 522.269 200.834 457.771 200.836 457.763 C 200.827 457.766 122.996 481.408 122.989 481.410 C 122.992 481.405 156.084 426.357 156.087 426.351 C 156.077 426.353 60.618 445.699 60.608 445.701 C 60.613 445.695 116.934 393.224 116.940 393.218 C 116.929 393.215 8.717 361.195 10.670 359.228 C 10.681 359.224 116.070 326.512 116.081 326.509 C 116.075 326.505 60.648 281.318 60.642 281.314 C 60.651 281.315 154.805 294.234 154.815 294.236 C 154.812 294.229 126.016 227.566 126.013 227.560 C 126.020 227.563 200.828 263.678 200.836 263.683 C 200.834 263.674 181.933 188.866 181.931 188.859 C 181.939 188.863 252.451 233.570 252.458 233.574 C 252.458 233.566 248.610 153.604 248.609 153.597 C 248.615 153.602 304.935 215.077 304.940 215.083 C 304.942 215.075 322.570 134.666 322.571 134.658 C 322.575 134.665 359.996 206.483 360.000 206.490 C 360.004 206.483 397.425 134.665 397.429 134.658 C 397.431 134.666 416.330 217.652 416.332 217.661 C 416.338 217.655 476.508 159.170 476.513 159.164 C 476.513 159.172 467.510 236.145 467.509 236.152 C 467.517 236.148 543.596 193.160 543.603 193.156 C 543.601 193.163 518.274 264.534 518.271 264.541 C 518.280 264.538 600.407 233.577 600.415 233.574 C 600.412 233.580 566.048 297.220 566.045 297.226 C 566.054 297.225 658.490 283.034 658.499 283.032 C 658.494 283.037 607.361 329.941 607.356 329.945 C 607.366 329.948 709.319 358.242 709.330 359.228 C 709.318 359.232 600.493 395.380 600.482 395.384 C 600.488 395.388 655.916 440.128 655.922 440.132 C 655.911 440.131 560.486 428.070 560.477 428.069 C 560.480 428.074 597.421 481.851 597.424 481.856 C 597.417 481.854 518.314 457.766 518.305 457.763 C 518.308 457.770 543.221 517.560 543.224 517.566 C 543.217 517.563 468.821 484.025 468.814 484.021 C 468.815 484.028 477.406 551.964 477.407 551.970 C 477.401 551.966 420.187 502.518 420.181 502.512 C 420.179 502.520 397.431 571.314 397.429 571.320 M 360.000 396.656 C 379.206 395.625 397.380 377.451 397.429 359.228 C 397.478 340.513 378.714 321.799 360.000 321.799 C 341.286 321.799 322.571 340.513 322.571 359.228 C 322.571 377.942 341.286 396.606 360.000 396.656 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":252.4,\\\"max\\\":470.947},\\\"y\\\":{\\\"min\\\":250.727,\\\"max\\\":469.273}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":361.673,\\\"y\\\":602.802,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":361.673,\\\"y\\\":205.698,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":16.418,\\\"y\\\":359.369,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999874074164002,\\\"y\\\":0.005018466760505231}},{\\\"point\\\":{\\\"x\\\":703.383,\\\"y\\\":359.369,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999874054717116,\\\"y\\\":0.005018854247213299}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":536.347,\\\"y\\\":509.814,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5860486058072052,\\\"y\\\":0.8102758984638695}},{\\\"point\\\":{\\\"x\\\":186.299,\\\"y\\\":515.43,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5860486058072018,\\\"y\\\":0.810275898463872}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":186.473,\\\"y\\\":194.779,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.501492745540327,\\\"y\\\":-0.8651618496965899}},{\\\"point\\\":{\\\"x\\\":537.624,\\\"y\\\":200.395,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.501492745540326,\\\"y\\\":-0.8651618496965904}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":361.645,\\\"y\\\":512.617,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"eye_starburst\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":39.133,\\\"max\\\":680.867},\\\"y\\\":{\\\"min\\\":25.631,\\\"max\\\":667.364}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eye_starburst\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"starburst\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 667.364 C 360.002 667.349 377.203 513.589 377.204 513.574 C 377.209 513.589 424.772 660.847 424.777 660.862 C 424.775 660.846 410.017 506.921 410.016 506.906 C 410.023 506.919 485.052 642.190 485.059 642.203 C 485.055 642.189 440.145 494.225 440.141 494.210 C 440.151 494.222 539.560 612.656 539.570 612.668 C 539.563 612.654 466.918 476.168 466.910 476.155 C 466.922 476.165 587.021 573.521 587.033 573.530 C 587.023 573.518 489.667 453.420 489.657 453.408 C 489.671 453.416 626.156 526.061 626.170 526.068 C 626.158 526.058 507.724 426.648 507.712 426.638 C 507.727 426.643 655.691 471.553 655.706 471.557 C 655.692 471.550 520.422 396.521 520.408 396.514 C 520.424 396.515 674.348 411.273 674.364 411.275 C 674.349 411.270 527.091 363.707 527.076 363.702 C 527.092 363.700 680.851 346.499 680.867 346.498 C 680.851 346.496 527.092 329.295 527.076 329.293 C 527.091 329.289 674.349 281.726 674.364 281.721 C 674.348 281.722 520.424 296.480 520.408 296.482 C 520.422 296.474 655.692 221.446 655.706 221.438 C 655.691 221.443 507.727 266.353 507.712 266.357 C 507.724 266.347 626.158 166.938 626.170 166.928 C 626.156 166.935 489.671 239.580 489.657 239.587 C 489.667 239.576 587.023 119.477 587.033 119.465 C 587.021 119.475 466.923 216.831 466.911 216.841 C 466.918 216.827 539.563 80.341 539.570 80.328 C 539.560 80.340 440.151 198.774 440.141 198.786 C 440.145 198.771 485.055 50.807 485.059 50.792 C 485.052 50.806 410.023 186.076 410.016 186.090 C 410.017 186.074 424.775 32.149 424.777 32.134 C 424.772 32.149 377.209 179.407 377.204 179.421 C 377.203 179.406 360.002 25.647 360.000 25.631 C 359.998 25.647 342.797 179.406 342.796 179.421 C 342.791 179.407 295.228 32.149 295.223 32.134 C 295.225 32.149 309.983 186.074 309.984 186.090 C 309.977 186.076 234.948 50.806 234.941 50.792 C 234.945 50.807 279.855 198.771 279.859 198.786 C 279.849 198.774 180.440 80.340 180.430 80.328 C 180.437 80.341 253.083 216.827 253.090 216.841 C 253.078 216.831 132.980 119.475 132.967 119.465 C 132.977 119.477 230.333 239.575 230.343 239.587 C 230.329 239.580 93.844 166.935 93.830 166.927 C 93.842 166.937 212.276 266.347 212.288 266.357 C 212.273 266.353 64.309 221.443 64.294 221.438 C 64.308 221.446 199.578 296.474 199.592 296.482 C 199.576 296.480 45.652 281.722 45.636 281.721 C 45.651 281.726 192.909 329.289 192.924 329.293 C 192.908 329.295 39.149 346.496 39.133 346.498 C 39.149 346.499 192.908 363.700 192.924 363.702 C 192.909 363.707 45.651 411.270 45.636 411.275 C 45.652 411.273 199.576 396.515 199.592 396.514 C 199.578 396.521 64.308 471.550 64.294 471.557 C 64.309 471.553 212.273 426.643 212.288 426.638 C 212.276 426.648 93.842 526.058 93.830 526.068 C 93.844 526.060 230.329 453.415 230.343 453.408 C 230.333 453.420 132.977 573.518 132.967 573.530 C 132.980 573.521 253.077 476.165 253.089 476.155 C 253.082 476.168 180.437 612.654 180.430 612.668 C 180.440 612.656 279.849 494.222 279.859 494.210 C 279.855 494.225 234.945 642.189 234.941 642.203 C 234.948 642.190 309.977 506.919 309.984 506.906 C 309.983 506.921 295.225 660.846 295.223 660.862 C 295.228 660.847 342.791 513.589 342.796 513.574 C 342.797 513.589 359.998 667.349 360.000 667.364 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eye\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 332.735 346.498 C 332.735 331.407 344.909 319.232 360.000 319.232 C 375.091 319.232 387.265 331.407 387.265 346.498 C 387.265 361.589 375.091 373.763 360.000 373.763 C 344.909 373.763 332.735 361.589 332.735 346.498 M 271.397 346.498 C 271.397 297.457 310.959 257.895 360.000 257.895 C 409.041 257.895 448.603 297.457 448.603 346.498 C 448.603 395.539 409.041 435.100 360.000 435.100 C 310.959 435.100 271.397 395.539 271.397 346.498 M 178.467 346.498 C 178.485 346.487 246.405 235.782 360.000 235.782 C 473.595 235.782 541.515 346.487 541.533 346.498 C 541.515 346.509 473.595 457.213 360.000 457.213 C 246.405 457.213 178.485 346.509 178.467 346.498 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 332.735 346.498 C 332.735 331.407 344.909 319.232 360.000 319.232 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 319.232 C 375.091 319.232 387.265 331.407 387.265 346.498 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 387.265 346.498 C 387.265 361.589 375.091 373.763 360.000 373.763 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 373.763 C 344.909 373.763 332.735 361.589 332.735 346.498 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 271.397 346.498 C 271.397 297.457 310.959 257.895 360.000 257.895 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 257.895 C 409.041 257.895 448.603 297.457 448.603 346.498 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 448.603 346.498 C 448.603 395.539 409.041 435.100 360.000 435.100 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 435.100 C 310.959 435.100 271.397 395.539 271.397 346.498 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 332.735 346.498 C 332.735 331.407 344.909 319.232 360.000 319.232 C 375.091 319.232 387.265 331.407 387.265 346.498 C 387.265 361.589 375.091 373.763 360.000 373.763 C 344.909 373.763 332.735 361.589 332.735 346.498 M 271.397 346.498 C 271.397 297.457 310.959 257.895 360.000 257.895 C 409.041 257.895 448.603 297.457 448.603 346.498 C 448.603 395.539 409.041 435.100 360.000 435.100 C 310.959 435.100 271.397 395.539 271.397 346.498 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":292.123,\\\"max\\\":427.878},\\\"y\\\":{\\\"min\\\":278.62,\\\"max\\\":414.375}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360.072,\\\"y\\\":697.151,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360.011,\\\"y\\\":44.434,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":60.329,\\\"y\\\":346.023,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.999986995377541,\\\"y\\\":0.0050999093911416864}},{\\\"point\\\":{\\\"x\\\":660.65,\\\"y\\\":346.023,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.999986995377541,\\\"y\\\":0.0050999093911416596}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":573.476,\\\"y\\\":559.051,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128712231972893,\\\"y\\\":0.7012949587279238}},{\\\"point\\\":{\\\"x\\\":147.583,\\\"y\\\":559.095,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987192905433214,\\\"y\\\":0.7153959414356764}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":573.019,\\\"y\\\":133.093,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314242570759948,\\\"y\\\":-0.7754375587860237}},{\\\"point\\\":{\\\"x\\\":147.727,\\\"y\\\":133.165,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817758203984837,\\\"y\\\":-0.7315611599312626}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360.072,\\\"y\\\":644.425,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"eye_up\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":21.462,\\\"max\\\":698.538},\\\"y\\\":{\\\"min\\\":156.582,\\\"max\\\":563.418}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eye_up\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eye_up\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 288.521 252.605 C 288.521 213.042 320.437 181.126 360.000 181.126 C 399.563 181.126 431.479 213.042 431.479 252.605 C 431.479 292.168 399.563 324.084 360.000 324.084 C 320.437 324.084 288.521 292.168 288.521 252.605 M 190.547 205.425 C 232.533 176.045 290.043 158.582 360.000 158.582 C 427.899 158.582 484.073 175.033 528.990 205.164 C 533.272 220.114 535.537 236.088 535.537 252.605 C 535.537 349.764 457.159 428.142 360.000 428.142 C 262.841 428.142 184.463 349.764 184.463 252.605 C 184.463 236.088 186.728 220.114 190.547 205.425 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 181.126 C 399.563 181.126 431.479 213.042 431.479 252.605 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 431.479 252.605 C 431.479 292.168 399.563 324.084 360.000 324.084 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 324.084 C 320.437 324.084 288.521 292.168 288.521 252.605 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 288.521 252.605 C 288.521 213.042 320.437 181.126 360.000 181.126 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 181.126 C 399.563 181.126 431.479 213.042 431.479 252.605 C 431.479 292.168 399.563 324.084 360.000 324.084 C 320.437 324.084 288.521 292.168 288.521 252.605 C 288.521 213.042 320.437 181.126 360.000 181.126 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 184.463 252.605 C 184.463 236.088 186.728 220.114 190.547 205.425 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 528.990 205.164 C 533.272 220.114 535.537 236.088 535.537 252.605 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 535.537 252.605 C 535.537 349.764 457.159 428.142 360.000 428.142 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 428.142 C 262.841 428.142 184.463 349.764 184.463 252.605 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#77A2BF57-080F-4D74-BD9F-7CCB18A2BEE7_2)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 184.463 252.605 C 184.463 236.088 186.728 220.114 190.547 205.425 C 95.105 249.663 23.479 359.985 23.462 360.000 C 23.496 360.020 154.245 561.418 360.000 561.418 C 565.755 561.418 696.504 360.020 696.538 360.000 C 696.521 359.985 623.371 247.317 528.990 205.164 C 533.272 220.114 535.537 236.088 535.537 252.605 C 535.537 349.764 457.159 428.142 360.000 428.142 C 262.841 428.142 184.463 349.764 184.463 252.605 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":685.952,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":156.323,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":31.9,\\\"y\\\":360.935,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999869443305633,\\\"y\\\":0.00510990884683594}},{\\\"point\\\":{\\\"x\\\":688.1,\\\"y\\\":360.935,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999869443305632,\\\"y\\\":0.005109908846835966}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":592.672,\\\"y\\\":473.156,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128965506064706,\\\"y\\\":0.7012692123096491}},{\\\"point\\\":{\\\"x\\\":127.136,\\\"y\\\":473.204,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698688399112506,\\\"y\\\":0.7154261114507937}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":592.835,\\\"y\\\":241.465,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314454286031296,\\\"y\\\":-0.7754203187279851}},{\\\"point\\\":{\\\"x\\\":127.956,\\\"y\\\":241.544,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817850569385165,\\\"y\\\":-0.7315525518616852}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":561.726,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"77A2BF57-080F-4D74-BD9F-7CCB18A2BEE7_2\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"4.96%\\\",\\\"r\\\":\\\"133.14%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"50.00%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}]},{\\\"name\\\":\\\"eye_up_starburst\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":17.114,\\\"max\\\":702.886},\\\"y\\\":{\\\"min\\\":17.114,\\\"max\\\":702.886}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eye_up_starburst\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eye_up_starburst\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 702.886 C 360.002 702.870 378.383 538.558 378.385 538.542 C 378.390 538.558 429.217 695.922 429.222 695.937 C 429.221 695.921 413.450 531.433 413.448 531.416 C 413.456 531.431 493.634 675.984 493.642 675.999 C 493.637 675.983 445.645 517.865 445.640 517.849 C 445.651 517.862 551.882 644.423 551.893 644.436 C 551.885 644.421 474.255 498.570 474.247 498.555 C 474.260 498.565 602.600 602.602 602.613 602.613 C 602.602 602.600 498.565 474.260 498.555 474.247 C 498.570 474.255 644.421 551.886 644.436 551.893 C 644.423 551.883 517.862 445.651 517.849 445.640 C 517.865 445.645 675.983 493.637 675.999 493.642 C 675.984 493.634 531.431 413.456 531.416 413.448 C 531.433 413.450 695.921 429.221 695.937 429.222 C 695.922 429.217 538.558 378.390 538.542 378.385 C 538.558 378.383 702.870 360.002 702.886 360.000 C 702.870 359.998 538.558 341.617 538.542 341.615 C 538.558 341.610 695.922 290.783 695.937 290.778 C 695.921 290.779 531.433 306.550 531.416 306.552 C 531.431 306.544 675.984 226.366 675.999 226.358 C 675.983 226.363 517.865 274.355 517.849 274.360 C 517.862 274.349 644.423 168.118 644.436 168.107 C 644.421 168.115 498.570 245.745 498.555 245.753 C 498.565 245.740 602.602 117.400 602.613 117.387 C 602.600 117.398 474.260 221.435 474.247 221.445 C 474.255 221.431 551.886 75.579 551.893 75.564 C 551.883 75.577 445.651 202.138 445.640 202.151 C 445.645 202.135 493.637 44.017 493.642 44.001 C 493.634 44.016 413.456 188.569 413.448 188.584 C 413.450 188.567 429.221 24.079 429.222 24.063 C 429.217 24.079 378.390 181.442 378.385 181.458 C 378.383 181.442 360.002 17.130 360.000 17.114 C 359.998 17.130 341.617 181.442 341.615 181.458 C 341.610 181.442 290.783 24.079 290.778 24.063 C 290.779 24.079 306.550 188.567 306.552 188.584 C 306.544 188.569 226.366 44.016 226.358 44.001 C 226.363 44.017 274.355 202.135 274.360 202.151 C 274.349 202.138 168.118 75.577 168.107 75.564 C 168.115 75.579 245.745 221.431 245.753 221.445 C 245.740 221.435 117.400 117.398 117.387 117.387 C 117.398 117.400 221.435 245.740 221.445 245.753 C 221.431 245.745 75.579 168.114 75.564 168.107 C 75.577 168.117 202.138 274.349 202.151 274.360 C 202.135 274.355 44.017 226.363 44.001 226.358 C 44.016 226.366 188.569 306.544 188.584 306.552 C 188.567 306.550 24.079 290.779 24.063 290.778 C 24.079 290.783 181.442 341.610 181.458 341.615 C 181.442 341.617 17.130 359.998 17.114 360.000 C 17.130 360.002 181.442 378.383 181.458 378.385 C 181.442 378.390 24.079 429.217 24.063 429.222 C 24.079 429.221 188.567 413.450 188.584 413.448 C 188.569 413.456 44.016 493.634 44.001 493.642 C 44.017 493.637 202.135 445.645 202.151 445.640 C 202.138 445.651 75.577 551.882 75.564 551.893 C 75.579 551.885 221.431 474.255 221.445 474.247 C 221.435 474.260 117.398 602.600 117.387 602.613 C 117.400 602.602 245.740 498.565 245.753 498.555 C 245.745 498.570 168.114 644.421 168.107 644.436 C 168.117 644.423 274.349 517.862 274.360 517.849 C 274.355 517.865 226.363 675.983 226.358 675.999 C 226.366 675.984 306.544 531.431 306.552 531.416 C 306.550 531.433 290.779 695.921 290.778 695.937 C 290.783 695.922 341.610 538.558 341.615 538.542 C 341.617 538.558 359.998 702.870 360.000 702.886 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 325.096 307.559 C 325.096 288.240 340.681 272.655 360.000 272.655 C 379.319 272.655 394.904 288.240 394.904 307.559 C 394.904 326.877 379.319 342.462 360.000 342.462 C 340.681 342.462 325.096 326.877 325.096 307.559 M 277.255 284.520 C 297.757 270.174 325.840 261.647 360.000 261.647 C 393.155 261.647 420.586 269.680 442.519 284.393 C 444.610 291.693 445.716 299.493 445.715 307.559 C 445.715 355.002 407.443 393.274 360.000 393.274 C 312.557 393.274 274.284 355.002 274.285 307.559 C 274.285 299.493 275.391 291.693 277.255 284.520 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 272.655 C 379.319 272.655 394.904 288.240 394.904 307.559 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 394.904 307.559 C 394.904 326.877 379.319 342.462 360.000 342.462 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 342.462 C 340.681 342.462 325.096 326.877 325.096 307.559 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 325.096 307.559 C 325.096 288.240 340.681 272.655 360.000 272.655 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 272.655 C 379.319 272.655 394.904 288.240 394.904 307.559 C 394.904 326.877 379.319 342.462 360.000 342.462 C 340.681 342.462 325.096 326.877 325.096 307.559 C 325.096 288.240 340.681 272.655 360.000 272.655 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 274.285 307.559 C 274.285 299.493 275.391 291.693 277.255 284.520 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 442.519 284.393 C 444.610 291.693 445.716 299.493 445.715 307.559 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 445.715 307.559 C 445.715 355.002 407.443 393.274 360.000 393.274 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 393.274 C 312.557 393.274 274.284 355.002 274.285 307.559 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 274.285 307.559 C 274.285 299.493 275.391 291.693 277.255 284.520 C 230.651 306.122 195.675 359.992 195.667 360.000 C 195.683 360.010 259.529 458.353 360.000 458.353 C 460.471 458.353 524.317 360.010 524.333 360.000 C 524.325 359.992 488.605 304.976 442.519 284.393 C 444.610 291.693 445.716 299.493 445.715 307.559 C 445.715 355.002 407.443 393.274 360.000 393.274 C 312.557 393.274 274.284 355.002 274.285 307.559 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":704.417,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":31.274,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":32.423,\\\"y\\\":360.936,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999869443305633,\\\"y\\\":0.00510990884683594}},{\\\"point\\\":{\\\"x\\\":688.623,\\\"y\\\":360.936,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999869443305632,\\\"y\\\":0.005109908846835966}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":593.334,\\\"y\\\":593.794,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129699922269517,\\\"y\\\":0.7011945451755173}},{\\\"point\\\":{\\\"x\\\":127.799,\\\"y\\\":593.842,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987254201015096,\\\"y\\\":0.7153899547127908}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":592.835,\\\"y\\\":128.186,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314454286031289,\\\"y\\\":-0.7754203187279854}},{\\\"point\\\":{\\\"x\\\":127.956,\\\"y\\\":128.265,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817481203990752,\\\"y\\\":-0.73158697386731}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":692.017,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"eye_up_starburst_2\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":30.005,\\\"max\\\":689.995},\\\"y\\\":{\\\"min\\\":205.691,\\\"max\\\":592.597}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eye_up_starburst_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eye_up_starburst\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 592.597 C 360.002 592.579 384.405 411.275 384.408 411.257 C 384.413 411.274 440.304 584.020 440.310 584.037 C 440.309 584.019 430.957 403.373 430.956 403.355 C 430.965 403.370 515.039 559.462 515.048 559.477 C 515.044 559.460 473.698 388.327 473.694 388.310 C 473.704 388.323 582.618 520.586 582.629 520.599 C 582.622 520.584 511.678 366.930 511.670 366.915 C 511.683 366.925 641.460 469.072 641.473 469.082 C 641.463 469.069 543.951 339.973 543.941 339.960 C 543.956 339.968 689.981 424.894 689.995 424.902 C 689.984 424.891 580.052 307.601 580.043 307.588 C 580.054 307.594 494.226 205.691 360.000 205.691 C 225.774 205.691 139.946 307.594 139.957 307.588 C 139.948 307.601 30.016 424.890 30.005 424.902 C 30.019 424.893 176.044 339.967 176.059 339.959 C 176.049 339.971 78.537 469.069 78.527 469.082 C 78.540 469.072 208.316 366.925 208.329 366.915 C 208.322 366.930 137.377 520.584 137.370 520.599 C 137.381 520.586 246.296 388.323 246.306 388.310 C 246.302 388.327 204.956 559.460 204.952 559.477 C 204.961 559.462 289.035 403.370 289.044 403.355 C 289.043 403.373 279.691 584.019 279.690 584.037 C 279.696 584.020 335.587 411.274 335.593 411.257 C 335.595 411.275 359.998 592.579 360.000 592.597 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 322.434 267.021 C 322.434 246.228 339.208 229.455 360.000 229.455 C 380.792 229.455 397.566 246.228 397.566 267.021 C 397.566 287.813 380.792 304.586 360.000 304.586 C 339.208 304.586 322.434 287.813 322.434 267.021 M 269.641 244.620 C 293.268 231.877 323.353 226.810 360.000 226.812 C 395.572 226.815 424.914 231.560 450.112 244.521 C 451.833 251.655 452.425 259.228 452.253 267.021 C 451.130 318.070 411.061 359.274 360.000 359.274 C 308.939 359.274 268.922 318.069 267.747 267.021 C 267.567 259.217 268.143 251.634 269.641 244.620 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 229.455 C 380.792 229.455 397.566 246.228 397.566 267.021 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 397.566 267.021 C 397.566 287.813 380.792 304.586 360.000 304.586 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 304.586 C 339.208 304.586 322.434 287.813 322.434 267.021 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 322.434 267.021 C 322.434 246.228 339.208 229.455 360.000 229.455 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 229.455 C 380.792 229.455 397.566 246.228 397.566 267.021 C 397.566 287.813 380.792 304.586 360.000 304.586 C 339.208 304.586 322.434 287.813 322.434 267.021 C 322.434 246.228 339.208 229.455 360.000 229.455 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 267.747 267.021 C 267.567 259.217 268.143 251.634 269.641 244.620 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 450.112 244.521 C 451.833 251.655 452.425 259.228 452.253 267.021 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 452.253 267.021 C 451.130 318.070 411.061 359.274 360.000 359.274 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 359.274 C 308.939 359.274 268.922 318.069 267.747 267.021 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 267.747 267.021 C 267.567 259.217 268.143 251.634 269.641 244.620 C 222.790 260.046 180.555 303.377 180.546 303.382 C 180.564 303.390 257.645 379.953 360.000 379.953 C 462.355 379.953 539.436 303.390 539.454 303.382 C 539.445 303.377 496.362 259.042 450.112 244.521 C 451.833 251.655 452.425 259.228 452.253 267.021 C 451.130 318.070 411.061 359.274 360.000 359.274 C 308.939 359.274 268.922 318.069 267.747 267.021 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":645.921,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":179.411,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":42.872,\\\"y\\\":417.247,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8634726332158469,\\\"y\\\":0.50439568960023}},{\\\"point\\\":{\\\"x\\\":677.128,\\\"y\\\":417.247,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.863472633215845,\\\"y\\\":0.5043956896002331}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":580.693,\\\"y\\\":518.793,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129000543792842,\\\"y\\\":0.701265650425011}},{\\\"point\\\":{\\\"x\\\":139.126,\\\"y\\\":518.838,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987423116869965,\\\"y\\\":0.7153734562159211}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":589.061,\\\"y\\\":261.749,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314651427950151,\\\"y\\\":-0.7754042645193997}},{\\\"point\\\":{\\\"x\\\":131.717,\\\"y\\\":261.827,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817494092242942,\\\"y\\\":-0.7315857728402909}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":594.284,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"eye_vertical\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":199.114,\\\"max\\\":522.798},\\\"y\\\":{\\\"min\\\":8.588,\\\"max\\\":672.813}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eye_vertical\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eye_vertical_\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 201.114 340.701 C 201.114 144.757 360.940 10.621 360.956 10.588 C 360.972 10.621 520.798 144.757 520.798 340.701 C 520.798 536.644 360.972 670.780 360.956 670.813 C 360.940 670.780 201.114 536.644 201.114 340.701 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.956 390.282 C 333.513 390.282 311.375 368.143 311.375 340.701 C 311.375 313.258 333.513 291.119 360.956 291.119 C 388.399 291.119 410.537 313.258 410.537 340.701 C 410.537 368.143 388.399 390.282 360.956 390.282 M 360.956 472.836 C 287.820 472.836 228.821 413.837 228.821 340.701 C 228.821 267.565 287.820 208.565 360.956 208.565 C 434.092 208.565 493.091 267.565 493.091 340.701 C 493.091 413.837 434.092 472.836 360.956 472.836 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":251.527,\\\"max\\\":470.385},\\\"y\\\":{\\\"min\\\":231.272,\\\"max\\\":450.129}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360.956,\\\"y\\\":705.429,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360.956,\\\"y\\\":19.999,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":201.036,\\\"y\\\":341.291,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872464433512,\\\"y\\\":0.005050440638603526}},{\\\"point\\\":{\\\"x\\\":520.62,\\\"y\\\":341.291,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872494386687,\\\"y\\\":0.005049847530930028}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":461.447,\\\"y\\\":545.748,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128964530124513,\\\"y\\\":0.7012693115218046}},{\\\"point\\\":{\\\"x\\\":261.179,\\\"y\\\":545.778,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987185559104256,\\\"y\\\":0.71539665894275}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":463.876,\\\"y\\\":138.73,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6315030131668488,\\\"y\\\":-0.7753734225269724}},{\\\"point\\\":{\\\"x\\\":257.619,\\\"y\\\":138.78,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817070244783117,\\\"y\\\":-0.731625268000584}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360.929,\\\"y\\\":665.578,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"eyeball\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":120.512,\\\"max\\\":599.488},\\\"y\\\":{\\\"min\\\":54.225,\\\"max\\\":533.201}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eyeball\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"starburst_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 533.201 C 360.002 533.195 377.796 466.562 377.798 466.556 C 377.801 466.562 408.345 528.342 408.348 528.348 C 408.348 528.341 411.742 459.664 411.742 459.658 C 411.746 459.663 453.338 514.416 453.342 514.422 C 453.341 514.415 442.908 446.530 442.906 446.523 C 442.912 446.528 494.022 492.372 494.027 492.377 C 494.025 492.371 470.602 427.852 470.600 427.845 C 470.606 427.849 529.446 463.162 529.452 463.166 C 529.449 463.160 494.136 404.319 494.132 404.314 C 494.138 404.316 558.657 427.738 558.664 427.741 C 558.659 427.736 512.815 376.625 512.810 376.620 C 512.817 376.621 580.702 387.054 580.709 387.055 C 580.703 387.051 525.950 345.460 525.944 345.455 C 525.951 345.455 594.628 342.062 594.635 342.061 C 594.628 342.058 532.849 311.514 532.843 311.511 C 532.849 311.510 599.482 293.715 599.488 293.713 C 599.482 293.711 532.849 275.917 532.843 275.915 C 532.849 275.912 594.628 245.368 594.635 245.365 C 594.628 245.365 525.951 241.971 525.944 241.971 C 525.950 241.967 580.703 200.376 580.709 200.372 C 580.702 200.373 512.817 210.806 512.810 210.807 C 512.815 210.802 558.659 159.691 558.664 159.686 C 558.657 159.688 494.138 183.111 494.132 183.113 C 494.136 183.107 529.449 124.267 529.452 124.261 C 529.446 124.264 470.606 159.578 470.600 159.581 C 470.603 159.575 494.025 95.056 494.028 95.049 C 494.022 95.054 442.912 140.899 442.906 140.903 C 442.908 140.896 453.341 73.011 453.342 73.005 C 453.338 73.010 411.746 127.763 411.742 127.769 C 411.742 127.762 408.348 59.085 408.348 59.079 C 408.345 59.085 377.801 120.864 377.798 120.871 C 377.796 120.864 360.002 54.232 360.000 54.225 C 359.998 54.232 342.204 120.864 342.202 120.871 C 342.199 120.864 311.655 59.085 311.652 59.079 C 311.652 59.085 308.258 127.762 308.258 127.769 C 308.254 127.763 266.662 73.010 266.658 73.005 C 266.659 73.011 277.092 140.896 277.094 140.903 C 277.088 140.899 225.978 95.054 225.973 95.049 C 225.975 95.056 249.398 159.575 249.400 159.581 C 249.394 159.578 190.554 124.264 190.548 124.261 C 190.551 124.267 225.864 183.107 225.868 183.113 C 225.862 183.110 161.343 159.688 161.336 159.686 C 161.341 159.691 207.185 210.802 207.190 210.807 C 207.183 210.806 139.298 200.373 139.291 200.372 C 139.297 200.376 194.050 241.967 194.056 241.971 C 194.049 241.971 125.372 245.365 125.365 245.365 C 125.372 245.368 187.151 275.912 187.157 275.915 C 187.151 275.917 120.518 293.711 120.512 293.713 C 120.518 293.715 187.151 311.510 187.157 311.511 C 187.151 311.514 125.372 342.058 125.365 342.061 C 125.372 342.062 194.049 345.455 194.056 345.455 C 194.050 345.460 139.297 387.051 139.291 387.055 C 139.298 387.054 207.183 376.621 207.190 376.620 C 207.185 376.625 161.341 427.735 161.336 427.740 C 161.343 427.738 225.862 404.315 225.868 404.313 C 225.864 404.319 190.551 463.160 190.548 463.166 C 190.554 463.162 249.394 427.849 249.400 427.845 C 249.397 427.852 225.975 492.371 225.972 492.377 C 225.978 492.372 277.088 446.528 277.094 446.523 C 277.092 446.530 266.659 514.415 266.658 514.422 C 266.662 514.416 308.254 459.663 308.258 459.658 C 308.258 459.664 311.652 528.341 311.652 528.348 C 311.655 528.342 342.199 466.562 342.202 466.556 C 342.204 466.562 359.998 533.195 360.000 533.201 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eyeball\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#CFF21D5D-28C3-4C68-9AB6-9D56F4044F2C_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 82.066 C 477.145 82.066 571.647 176.568 571.647 293.713 C 571.647 410.858 477.145 505.360 360.000 505.360 C 242.855 505.360 148.353 410.858 148.353 293.713 C 148.353 176.568 242.855 82.066 360.000 82.066 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 314.992 190.780 C 385.805 190.780 442.930 247.905 442.930 318.718 C 442.930 389.531 385.805 446.656 314.992 446.656 C 244.179 446.656 187.054 389.531 187.054 318.718 C 187.054 247.905 244.179 190.780 314.992 190.780 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 299.566 296.866 C 316.997 296.866 331.059 310.928 331.059 328.359 C 331.059 345.791 316.997 359.853 299.566 359.853 C 282.134 359.853 268.072 345.791 268.072 328.359 C 268.072 310.928 282.134 296.866 299.566 296.866 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":215.459,\\\"max\\\":384.475},\\\"y\\\":{\\\"min\\\":243.38,\\\"max\\\":412.397}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360.057,\\\"y\\\":697.505,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360.057,\\\"y\\\":84.409,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":151.74,\\\"y\\\":294.051,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999868693859837,\\\"y\\\":0.005124554187400743}},{\\\"point\\\":{\\\"x\\\":569.039,\\\"y\\\":294.051,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999868724439995,\\\"y\\\":0.005123957422566158}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":508.442,\\\"y\\\":442.133,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129635150717997,\\\"y\\\":0.7012011310433431}},{\\\"point\\\":{\\\"x\\\":212.393,\\\"y\\\":442.163,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986716018009902,\\\"y\\\":0.7154425153964772}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":508.124,\\\"y\\\":146.038,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314733538627079,\\\"y\\\":-0.7753975776086637}},{\\\"point\\\":{\\\"x\\\":212.493,\\\"y\\\":146.088,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817454325875962,\\\"y\\\":-0.7315894785642771}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360.057,\\\"y\\\":504.102,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"CFF21D5D-28C3-4C68-9AB6-9D56F4044F2C_0\\\",\\\"cx\\\":\\\"40.25%\\\",\\\"cy\\\":\\\"54.60%\\\",\\\"r\\\":\\\"68.93%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"50.00%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}]},{\\\"name\\\":\\\"eyelash\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":38.516,\\\"max\\\":681.484},\\\"y\\\":{\\\"min\\\":228.463,\\\"max\\\":491.537}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eye_closed\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"eye_closed\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 315.824 399.052 C 315.827 399.052 345.744 402.331 345.747 402.332 C 351.677 432.067 363.535 491.528 363.537 491.537 C 363.538 491.528 372.142 432.242 376.444 402.594 C 376.448 402.594 407.010 399.777 407.013 399.776 C 418.546 427.205 441.609 482.053 441.612 482.062 C 441.612 482.053 438.243 423.364 436.559 394.015 C 436.562 394.014 464.936 385.467 464.939 385.466 C 481.278 409.650 513.951 458.011 513.956 458.018 C 513.954 458.010 499.327 402.196 492.012 374.284 C 492.015 374.283 517.632 360.625 517.635 360.624 C 538.108 380.742 579.049 420.973 579.055 420.979 C 579.051 420.972 554.128 370.087 541.664 344.640 C 541.666 344.638 563.956 326.490 563.958 326.488 C 587.773 341.832 635.394 372.516 635.401 372.521 C 635.396 372.514 601.383 328.388 584.374 306.322 C 584.376 306.319 602.768 284.299 602.770 284.297 C 629.008 294.270 681.476 314.212 681.484 314.215 C 681.478 314.210 639.830 278.451 619.002 260.569 C 619.004 260.566 635.480 228.466 635.481 228.463 C 635.455 228.477 539.325 371.876 367.141 372.621 C 195.081 373.366 93.284 231.625 93.256 231.611 C 93.257 231.613 103.804 250.639 103.805 250.641 C 82.042 276.274 38.522 327.531 38.516 327.539 C 38.524 327.534 94.772 296.688 122.900 281.263 C 122.902 281.266 141.051 303.555 141.053 303.557 C 123.027 330.333 86.980 383.877 86.974 383.885 C 86.982 383.879 136.471 343.944 161.219 323.973 C 161.221 323.975 183.241 342.367 183.244 342.369 C 170.589 371.569 145.284 429.959 145.280 429.968 C 145.286 429.961 186.408 382.390 206.972 358.602 C 206.974 358.603 232.247 372.527 232.250 372.529 C 225.453 403.112 211.860 464.268 211.858 464.278 C 211.863 464.270 243.233 410.764 258.920 384.008 C 258.923 384.009 286.827 392.896 286.830 392.896 C 286.265 423.699 285.135 485.295 285.135 485.304 C 285.138 485.295 305.594 427.802 315.824 399.052 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":228.662,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":true,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"face\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":37.601,\\\"max\\\":682.399},\\\"y\\\":{\\\"min\\\":20.422,\\\"max\\\":665.219}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"face\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"face\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 22.422 C 540.224 22.422 680.399 162.596 680.399 342.821 C 680.399 523.045 540.224 663.219 360.000 663.219 C 179.776 663.219 39.601 523.045 39.601 342.821 C 39.601 162.596 179.776 22.422 360.000 22.422 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 663.219 C 540.224 663.219 680.399 523.333 680.399 342.821 C 680.399 523.045 540.224 663.219 360.000 663.219 C 179.776 663.219 39.601 523.045 39.601 342.821 C 39.601 162.596 179.776 22.422 360.000 22.422 C 540.224 22.422 680.399 162.596 680.399 342.821 M 39.601 342.821 C 39.601 523.333 179.776 663.219 360.000 663.219 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 39.601 342.821 C 39.601 162.596 179.776 22.422 360.000 22.422 C 540.224 22.422 680.399 162.596 680.399 342.821 C 680.399 523.045 540.224 663.219 360.000 663.219 C 179.776 663.219 39.601 523.045 39.601 342.821 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 375.524 572.541 C 375.524 563.949 368.593 557.017 360.000 557.017 C 351.407 557.017 344.476 563.949 344.476 572.541 C 344.476 581.134 351.408 588.065 360.000 588.065 C 368.592 588.065 375.524 581.134 375.524 572.541 M 401.372 572.541 C 401.372 549.642 382.899 531.169 360.000 531.169 C 337.101 531.169 318.628 549.642 318.628 572.541 C 318.628 595.441 337.101 613.914 360.000 613.914 C 382.899 613.914 401.372 595.441 401.372 572.541 M 463.360 572.541 C 463.350 572.536 421.351 522.494 360.000 522.494 C 298.649 522.494 256.650 572.536 256.640 572.541 C 256.650 572.546 298.649 622.588 360.000 622.588 C 421.351 622.588 463.350 572.546 463.360 572.541 M 554.204 343.393 C 554.204 334.800 547.272 327.869 538.680 327.869 C 530.088 327.868 523.156 334.800 523.156 343.393 C 523.156 351.985 530.088 358.917 538.680 358.917 C 547.272 358.917 554.204 351.985 554.204 343.393 M 580.052 343.393 C 580.052 320.494 561.579 302.021 538.680 302.021 C 515.781 302.021 497.308 320.494 497.308 343.393 C 497.308 366.292 515.781 384.765 538.680 384.765 C 561.579 384.765 580.052 366.292 580.052 343.393 M 642.040 343.393 C 642.030 343.388 600.031 293.346 538.680 293.346 C 477.329 293.346 435.330 343.388 435.320 343.393 C 435.330 343.398 477.329 393.440 538.680 393.440 C 600.031 393.440 642.030 343.398 642.040 343.393 M 165.796 343.393 C 165.796 334.800 172.728 327.868 181.320 327.869 C 189.913 327.869 196.844 334.800 196.844 343.393 C 196.844 351.985 189.913 358.917 181.320 358.917 C 172.728 358.917 165.796 351.985 165.796 343.393 M 139.948 343.393 C 139.948 320.494 158.421 302.021 181.320 302.021 C 204.220 302.021 222.693 320.494 222.693 343.393 C 222.693 366.292 204.220 384.765 181.320 384.765 C 158.421 384.765 139.948 366.292 139.948 343.393 M 77.960 343.393 C 77.970 343.388 119.969 293.346 181.320 293.346 C 242.671 293.346 284.670 343.388 284.680 343.393 C 284.670 343.398 242.671 393.440 181.320 393.440 C 119.969 393.440 77.970 343.398 77.960 343.393 M 179.776 242.696 C 79.651 242.696 39.601 302.771 39.601 342.821 C 39.601 523.333 179.776 663.219 360.000 663.219 C 540.224 663.219 680.399 523.333 680.399 342.821 C 680.399 302.771 640.349 242.696 540.224 242.696 C 460.125 242.696 397.178 305.507 391.888 314.341 C 386.585 323.198 398.840 479.319 398.841 479.335 C 398.837 479.336 372.941 486.769 360.000 486.769 C 347.059 486.769 321.163 479.336 321.159 479.335 C 321.160 479.319 333.415 323.198 328.112 314.341 C 322.822 305.507 259.875 242.696 179.776 242.696 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 149.189 C 351.407 149.189 344.476 156.121 344.476 164.713 C 344.476 173.306 351.407 180.237 360.000 180.237 C 368.592 180.237 375.524 173.305 375.524 164.713 C 375.524 156.121 368.592 149.189 360.000 149.189 M 360.000 123.341 C 337.101 123.341 318.628 141.814 318.628 164.713 C 318.628 187.612 337.101 206.085 360.000 206.085 C 382.899 206.085 401.372 187.612 401.372 164.713 C 401.372 141.814 382.899 123.341 360.000 123.341 M 360.000 61.353 C 359.995 61.363 309.953 103.362 309.953 164.713 C 309.953 226.064 359.995 268.062 360.000 268.073 C 360.005 268.062 410.047 226.064 410.047 164.713 C 410.047 103.362 360.005 61.363 360.000 61.353 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 39.601 342.821 C 39.601 162.596 179.776 22.422 360.000 22.422 C 540.224 22.422 680.399 162.596 680.399 342.821 C 680.399 523.045 540.224 663.219 360.000 663.219 C 179.776 663.219 39.601 523.045 39.601 342.821 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 39.601 342.821 C 39.601 523.333 179.776 663.219 360.000 663.219 C 540.224 663.219 680.399 523.333 680.399 342.821 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":262.585,\\\"max\\\":457.415},\\\"y\\\":{\\\"min\\\":63.363,\\\"max\\\":265.134}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":705.909,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":22.716,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":41.014,\\\"y\\\":343.733,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999874030844323,\\\"y\\\":0.005019329880869008}},{\\\"point\\\":{\\\"x\\\":680.005,\\\"y\\\":343.733,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999874011682236,\\\"y\\\":0.005019711627401636}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":587.215,\\\"y\\\":570.483,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129387585883934,\\\"y\\\":0.7012263019186036}},{\\\"point\\\":{\\\"x\\\":133.889,\\\"y\\\":570.53,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987295668057304,\\\"y\\\":0.7153859045798122}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":586.729,\\\"y\\\":117.086,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314054370598631,\\\"y\\\":-0.7754528831922952}},{\\\"point\\\":{\\\"x\\\":134.041,\\\"y\\\":117.163,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817598307345952,\\\"y\\\":-0.7315760611151352}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":661.078,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"face_nest\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":165.143,\\\"max\\\":554.857},\\\"y\\\":{\\\"min\\\":165.143,\\\"max\\\":554.857}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"face_nest\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"face\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 552.857 C 466.745 552.857 552.857 466.745 552.857 360.000 C 552.857 253.255 466.745 167.143 360.000 167.143 C 253.255 167.143 167.143 253.255 167.143 360.000 C 167.143 466.745 253.255 552.857 360.000 552.857 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":173.729,\\\"max\\\":356.626},\\\"y\\\":{\\\"min\\\":268.551,\\\"max\\\":451.449}},{\\\"x\\\":{\\\"min\\\":363.374,\\\"max\\\":546.271},\\\"y\\\":{\\\"min\\\":268.551,\\\"max\\\":451.449}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":685.547,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":360.027,\\\"y\\\":184.025,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005095357237546288,\\\"y\\\":-0.9999870185830523}},{\\\"point\\\":{\\\"x\\\":271.989,\\\"y\\\":207.615,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.504406589298403,\\\"y\\\":-0.8634662660882313}},{\\\"point\\\":{\\\"x\\\":448.011,\\\"y\\\":207.615,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.504406589298403,\\\"y\\\":-0.8634662660882313}},{\\\"point\\\":{\\\"x\\\":207.587,\\\"y\\\":272.036,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8685280541802166,\\\"y\\\":-0.4956400095855124}},{\\\"point\\\":{\\\"x\\\":512.413,\\\"y\\\":272.036,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8685280541802166,\\\"y\\\":-0.4956400095855124}},{\\\"point\\\":{\\\"x\\\":184.025,\\\"y\\\":360.027,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999870185830523,\\\"y\\\":0.005095357237546288}},{\\\"point\\\":{\\\"x\\\":535.975,\\\"y\\\":360.027,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999870185830523,\\\"y\\\":0.005095357237546302}},{\\\"point\\\":{\\\"x\\\":207.615,\\\"y\\\":448.011,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8634662660882313,\\\"y\\\":0.504406589298403}},{\\\"point\\\":{\\\"x\\\":512.385,\\\"y\\\":448.011,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.863466266088232,\\\"y\\\":0.5044065892984019}},{\\\"point\\\":{\\\"x\\\":272.036,\\\"y\\\":512.413,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.4956400095855124,\\\"y\\\":0.8685280541802166}},{\\\"point\\\":{\\\"x\\\":447.964,\\\"y\\\":512.413,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.4956400095855124,\\\"y\\\":0.8685280541802166}},{\\\"point\\\":{\\\"x\\\":360.027,\\\"y\\\":535.975,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005095357237546302,\\\"y\\\":0.9999870185830523}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"feather\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":262.24,\\\"max\\\":457.76},\\\"y\\\":{\\\"min\\\":17.28,\\\"max\\\":641.392}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"frond_leaf\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"frond\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 394.477 56.528 C 394.474 56.524 371.503 31.696 360.015 19.280 C 360.015 19.342 360.015 639.330 360.015 639.392 C 360.024 639.382 438.136 563.069 446.579 542.860 C 450.607 533.219 453.136 481.353 453.137 481.347 C 453.137 481.342 455.498 425.087 455.498 425.081 C 455.498 425.075 455.760 368.820 455.760 368.814 C 455.760 368.809 452.875 314.652 452.874 314.646 C 452.874 314.641 448.492 256.549 448.492 256.543 C 448.491 256.538 440.963 201.594 440.962 201.588 C 440.961 201.583 430.285 145.590 430.284 145.584 C 430.283 145.579 417.508 95.880 417.507 95.875 C 417.505 95.871 394.479 56.532 394.477 56.528 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.015 19.280 C 360.015 19.342 360.015 639.330 360.015 639.392 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.015 19.280 C 360.015 19.342 360.015 639.330 360.015 639.392 C 360.007 639.382 281.867 563.071 273.421 542.860 C 269.392 533.219 266.864 481.353 266.863 481.347 C 266.863 481.342 264.502 425.087 264.502 425.081 C 264.502 425.075 264.240 368.820 264.240 368.814 C 264.240 368.809 267.125 314.652 267.126 314.646 C 267.126 314.641 271.508 256.549 271.508 256.543 C 271.509 256.538 279.037 201.594 279.038 201.588 C 279.039 201.583 289.715 145.590 289.716 145.584 C 289.717 145.579 302.492 95.880 302.493 95.875 C 302.495 95.871 325.521 56.532 325.523 56.528 C 325.526 56.524 360.012 19.283 360.015 19.280 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 394.477 56.528 C 382.990 79.675 360.019 125.963 360.015 125.970 C 360.015 125.976 360.015 184.969 360.015 184.975 C 360.021 184.966 398.343 125.575 417.507 95.875 C 417.508 95.880 430.283 145.579 430.284 145.584 C 406.861 177.333 360.022 240.823 360.015 240.832 C 360.015 240.838 360.015 293.020 360.015 293.025 C 360.023 293.016 413.980 232.067 440.962 201.588 C 440.963 201.594 448.491 256.538 448.492 256.543 C 419.000 288.110 360.024 351.234 360.015 351.244 C 360.015 351.249 360.015 409.456 360.015 409.462 C 360.025 409.452 421.921 346.252 452.874 314.646 C 452.875 314.652 455.760 368.809 455.760 368.814 C 423.845 401.769 360.025 467.670 360.015 467.680 C 360.015 467.686 360.015 525.893 360.015 525.898 C 360.025 525.888 423.670 458.687 455.498 425.081 C 455.498 425.087 453.137 481.342 453.137 481.347 C 422.096 515.604 360.025 584.107 360.015 584.117 C 360.015 584.122 360.015 639.386 360.015 639.392 C 360.015 639.330 360.015 19.342 360.015 19.280 C 360.015 19.290 360.015 125.960 360.015 125.970 M 360.015 525.898 C 360.015 525.904 360.015 584.111 360.015 584.117 M 360.015 409.462 C 360.015 409.468 360.015 467.674 360.015 467.680 M 360.015 293.025 C 360.015 293.031 360.015 351.238 360.015 351.244 M 360.015 184.975 C 360.015 184.981 360.015 240.827 360.015 240.832 M 446.579 542.860 C 438.136 563.069 360.024 639.382 360.015 639.392 M 453.137 481.347 C 453.136 481.353 450.607 533.219 446.579 542.860 M 455.760 368.814 C 455.760 368.820 455.498 425.075 455.498 425.081 M 448.492 256.543 C 448.492 256.549 452.874 314.641 452.874 314.646 M 430.284 145.584 C 430.285 145.590 440.961 201.583 440.962 201.588 M 394.477 56.528 C 394.479 56.532 417.505 95.871 417.507 95.875 M 360.015 19.280 C 360.019 19.283 394.474 56.524 394.477 56.528 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.015 125.970 C 360.012 125.963 337.020 79.675 325.523 56.528 C 325.526 56.524 360.012 19.283 360.015 19.280 C 360.015 19.290 360.015 125.960 360.015 125.970 C 360.015 125.976 360.015 184.969 360.015 184.975 C 360.010 184.966 321.667 125.575 302.493 95.875 C 302.495 95.871 325.521 56.532 325.523 56.528 M 360.015 240.832 C 360.008 240.823 313.149 177.333 289.716 145.584 C 289.717 145.579 302.492 95.880 302.493 95.875 M 360.015 293.025 C 360.007 293.016 306.030 232.067 279.038 201.588 C 279.039 201.583 289.715 145.590 289.716 145.584 M 360.015 351.244 C 360.006 351.234 301.010 288.110 271.508 256.543 C 271.509 256.538 279.037 201.594 279.038 201.588 M 360.015 409.462 C 360.006 409.452 298.089 346.252 267.126 314.646 C 267.126 314.641 271.508 256.549 271.508 256.543 M 360.015 467.680 C 360.006 467.670 296.165 401.769 264.240 368.814 C 264.240 368.809 267.125 314.652 267.126 314.646 M 360.015 525.898 C 360.006 525.888 296.340 458.687 264.502 425.081 C 264.502 425.075 264.240 368.820 264.240 368.814 M 360.015 584.117 C 360.006 584.107 297.914 515.604 266.863 481.347 C 266.863 481.342 264.502 425.087 264.502 425.081 M 273.421 542.860 C 269.392 533.219 266.864 481.353 266.863 481.347 M 360.015 639.392 C 360.007 639.382 281.867 563.071 273.421 542.860 M 360.015 584.117 C 360.015 584.122 360.015 639.386 360.015 639.392 C 360.015 639.330 360.015 19.342 360.015 19.280 M 360.015 525.898 C 360.015 525.904 360.015 584.111 360.015 584.117 M 360.015 467.680 C 360.015 467.686 360.015 525.893 360.015 525.898 M 360.015 409.462 C 360.015 409.468 360.015 467.674 360.015 467.680 M 360.015 351.244 C 360.015 351.249 360.015 409.456 360.015 409.462 M 360.015 293.025 C 360.015 293.031 360.015 351.238 360.015 351.244 M 360.015 240.832 C 360.015 240.838 360.015 293.020 360.015 293.025 M 360.015 184.975 C 360.015 184.981 360.015 240.827 360.015 240.832 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":702.972,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":17.368,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":162.643,\\\"y\\\":330.161,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872590020044,\\\"y\\\":0.005047953412839069}},{\\\"point\\\":{\\\"x\\\":557.357,\\\"y\\\":330.161,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872590020044,\\\"y\\\":0.005047953412839034}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":533.075,\\\"y\\\":542.212,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6389108486823514,\\\"y\\\":0.7692807858227044}},{\\\"point\\\":{\\\"x\\\":186.783,\\\"y\\\":542.256,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6237624424621819,\\\"y\\\":0.7816139810505012}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":533.196,\\\"y\\\":118.322,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5539340237528295,\\\"y\\\":-0.8325605667631634}},{\\\"point\\\":{\\\"x\\\":187.392,\\\"y\\\":118.394,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6057313141419982,\\\"y\\\":-0.7956692623620747}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":633.96,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"fire\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":168.94726309618682,\\\"max\\\":528.6748422496752},\\\"y\\\":{\\\"min\\\":53.733,\\\"max\\\":653.5776833162997}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"fire\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"fire\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#9448877F-C06B-43B6-86DE-CF1ABCA428C6_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 346.787 651.576 C 205.454 652.158 90.213 501.712 244.220 371.101 C 216.541 464.032 245.347 512.915 269.862 499.310 C 321.089 470.879 289.492 346.193 248.875 293.379 C 222.305 258.831 251.282 198.683 287.811 178.787 C 259.845 220.824 279.046 279.861 302.873 283.148 C 323.774 286.031 337.491 238.385 347.584 210.678 C 369.575 150.310 321.442 129.224 360.353 55.733 C 369.799 125.299 430.990 195.865 391.971 275.106 C 378.259 302.955 363.845 349.791 395.506 376.230 C 423.077 399.252 464.833 310.222 438.775 278.966 C 567.447 347.619 361.733 459.669 431.405 504.439 C 479.238 535.176 477.221 452.701 510.895 424.950 C 554.690 540.342 509.625 650.905 346.787 651.576 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 336.808 641.236 C 298.776 637.412 245.785 611.154 225.908 578.505 C 184.028 509.713 209.107 469.856 209.105 469.846 C 209.111 469.852 210.661 534.492 269.596 534.817 C 289.611 534.927 316.831 465.918 317.764 446.322 C 319.823 403.062 310.538 382.697 302.812 356.493 C 296.411 334.779 273.155 287.115 273.152 287.108 C 273.157 287.110 298.903 316.811 321.643 307.141 C 361.343 290.258 377.129 186.448 377.135 186.436 C 377.134 186.445 371.657 251.816 367.160 279.547 C 363.881 299.768 350.339 325.483 352.822 346.309 C 364.250 442.123 448.818 370.146 448.827 370.148 C 448.822 370.155 438.779 397.003 400.659 438.480 C 373.014 468.560 392.245 534.161 423.063 542.659 C 469.003 555.327 500.348 509.056 500.356 509.053 C 500.347 509.065 510.400 592.927 413.123 632.417 C 390.940 641.422 359.452 643.512 336.808 641.236 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 320.450 624.575 C 246.147 598.073 237.119 550.507 237.111 550.500 C 237.117 550.500 276.940 581.091 300.961 553.861 C 321.688 530.365 336.780 488.529 341.289 457.524 C 343.667 441.169 339.794 418.891 337.010 402.601 C 332.721 377.508 326.727 330.949 326.726 330.942 C 326.727 330.947 337.000 368.779 343.849 382.494 C 350.411 395.634 365.845 415.400 380.495 414.956 C 391.286 414.629 379.375 438.478 379.375 438.480 C 379.374 438.484 368.936 463.645 367.053 477.688 C 364.640 495.677 358.035 523.123 368.173 538.178 C 399.070 584.060 458.900 563.940 458.909 563.942 C 458.904 563.948 431.806 606.641 413.372 616.325 C 388.596 629.340 346.810 633.977 320.450 624.575 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":230.146,\\\"max\\\":489.854},\\\"y\\\":{\\\"min\\\":413.041,\\\"max\\\":650.755}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":688.175,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":60.399,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":182.529,\\\"y\\\":449.432,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873200064072,\\\"y\\\":0.005035854088752084}},{\\\"point\\\":{\\\"x\\\":517.233,\\\"y\\\":449.432,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873200064072,\\\"y\\\":0.005035854088752063}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":481.315,\\\"y\\\":611.717,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129335762692849,\\\"y\\\":0.7012315707581112}},{\\\"point\\\":{\\\"x\\\":230.857,\\\"y\\\":611.765,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987254201015092,\\\"y\\\":0.7153899547127913}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":259.018,\\\"y\\\":201.078,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817084818456935,\\\"y\\\":-0.7316239100655744}},{\\\"point\\\":{\\\"x\\\":472.974,\\\"y\\\":305.177,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314091670147453,\\\"y\\\":-0.7754498460956359}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.957,\\\"y\\\":648.014,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"9448877F-C06B-43B6-86DE-CF1ABCA428C6_0\\\",\\\"cx\\\":\\\"43.42%\\\",\\\"cy\\\":\\\"83.52%\\\",\\\"r\\\":\\\"118.33%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"28.24%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"fire_swirl\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":173.7729406819721,\\\"max\\\":580.3897987017871},\\\"y\\\":{\\\"min\\\":21.992,\\\"max\\\":656.86209197185}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"fire_swirl\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"fire_swirl_3\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 547.049 327.735 C 555.272 386.829 544.910 395.166 529.649 412.286 C 546.542 418.966 600.438 457.929 570.502 517.508 C 544.229 569.797 454.956 582.370 413.359 534.522 C 385.719 502.728 381.243 454.779 400.228 417.827 C 434.590 350.947 460.252 356.912 466.078 323.763 C 471.479 293.037 446.754 277.282 449.711 251.206 C 454.367 210.139 470.359 196.287 470.362 196.282 C 470.365 196.288 473.423 230.562 500.774 256.374 C 528.668 282.699 544.370 308.484 547.049 327.735 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 547.049 327.735 C 555.272 386.829 544.910 395.166 529.649 412.286 C 546.542 418.966 600.438 457.929 570.502 517.508 C 544.229 569.797 454.956 582.370 413.359 534.522 C 385.719 502.728 381.243 454.779 400.228 417.827 C 434.590 350.947 460.252 356.912 466.078 323.763 C 471.479 293.037 446.754 277.282 449.711 251.206 C 454.367 210.139 470.359 196.287 470.362 196.282 C 470.365 196.288 473.423 230.562 500.774 256.374 C 528.668 282.699 544.370 308.484 547.049 327.735 M 476.607 409.390 C 493.293 404.417 517.787 407.596 529.649 412.286 M 450.952 427.681 C 455.588 420.534 471.532 410.902 476.607 409.390 M 480.760 515.126 C 434.784 509.371 425.559 466.831 450.952 427.681 M 523.826 465.990 C 537.666 493.235 516.678 519.621 480.760 515.126 M 482.914 460.066 C 495.333 445.071 516.585 451.738 523.826 465.990 M 496.384 477.783 C 487.905 488.811 473.954 470.885 482.914 460.066 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 239.062 249.155 C 160.206 323.471 159.470 410.704 206.686 493.281 C 193.328 514.891 186.116 547.816 196.573 576.299 C 210.916 615.366 250.702 647.566 289.266 654.361 C 343.510 663.919 395.496 625.984 414.699 592.975 C 455.663 522.562 426.046 472.712 407.779 445.115 C 388.897 416.590 364.079 413.653 350.510 404.333 C 301.456 370.640 290.486 341.215 294.783 291.690 C 305.475 168.450 278.695 156.188 278.694 156.175 C 278.690 156.184 281.349 209.301 239.062 249.155 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 239.062 249.155 C 160.206 323.471 159.470 410.704 206.686 493.281 C 193.328 514.891 186.116 547.816 196.573 576.299 C 210.916 615.366 250.702 647.566 289.266 654.361 C 343.510 663.919 395.496 625.984 414.699 592.975 C 455.663 522.562 426.046 472.712 407.779 445.115 C 388.897 416.590 364.079 413.653 350.510 404.333 C 301.456 370.640 290.486 341.215 294.783 291.690 C 305.475 168.450 278.695 156.188 278.694 156.175 C 278.690 156.184 281.349 209.301 239.062 249.155 M 367.690 497.387 C 339.471 426.689 252.436 419.267 206.686 493.281 M 282.907 587.194 C 334.836 611.549 387.405 546.781 367.690 497.387 M 267.747 511.440 C 237.029 530.567 254.641 573.937 282.907 587.194 M 309.048 537.288 C 315.883 517.564 294.048 495.064 267.747 511.440 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 440.663 159.660 C 449.212 221.097 438.439 229.765 422.573 247.564 C 439.481 256.097 496.169 295.016 465.047 356.958 C 437.732 411.322 344.918 424.393 301.670 374.647 C 272.935 341.592 268.281 291.741 288.019 253.324 C 323.744 183.792 350.424 189.993 356.482 155.530 C 362.096 123.584 336.389 107.205 339.464 80.094 C 344.305 37.398 360.931 22.998 360.933 22.992 C 360.937 22.998 364.117 58.632 392.553 85.468 C 421.554 112.837 437.878 139.645 440.663 159.660 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 440.663 159.660 C 449.212 221.097 438.439 229.765 422.573 247.564 C 439.481 256.097 496.169 295.016 465.047 356.958 C 437.732 411.322 344.918 424.393 301.670 374.647 C 272.935 341.592 268.281 291.741 288.019 253.324 C 323.744 183.792 350.424 189.993 356.482 155.530 C 362.096 123.584 336.389 107.205 339.464 80.094 C 344.305 37.398 360.931 22.998 360.933 22.992 C 360.937 22.998 364.117 58.632 392.553 85.468 C 421.554 112.837 437.878 139.645 440.663 159.660 M 367.428 244.551 C 382.774 238.474 408.019 240.219 422.573 247.564 M 340.755 263.567 C 347.129 254.894 362.308 246.578 367.428 244.551 M 371.745 354.481 C 323.945 348.498 312.027 302.663 340.755 263.567 M 416.519 303.397 C 430.909 331.722 409.087 359.156 371.745 354.481 M 373.985 297.238 C 384.567 279.982 408.991 288.579 416.519 303.397 M 387.988 315.658 C 379.173 327.123 368.871 305.577 373.985 297.238 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 468.961 200.312 C 451.344 282.708 510.791 280.717 512.176 338.763 C 512.874 368.045 498.924 388.408 476.607 409.390 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 280.553 161.787 C 280.553 161.795 289.504 209.547 277.676 236.309 C 265.991 262.748 218.989 295.258 248.300 379.700 C 263.731 424.155 281.663 442.460 281.666 442.467 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.478 27.181 C 341.162 112.847 402.968 110.775 404.408 171.125 C 405.134 201.567 390.630 222.738 367.428 244.551 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":700.722,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":26.07,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":211.538,\\\"y\\\":292.05,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999874728093985,\\\"y\\\":0.005005419490153414}},{\\\"point\\\":{\\\"x\\\":508.462,\\\"y\\\":292.05,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999874728093985,\\\"y\\\":0.005005419490153421}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":549.443,\\\"y\\\":574.973,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129121482047388,\\\"y\\\":0.7012533557439168}},{\\\"point\\\":{\\\"x\\\":170.186,\\\"y\\\":575.065,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986774464303269,\\\"y\\\":0.7154368077262991}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":643.382,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"fish\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":24.536572042871473,\\\"max\\\":645.2085195747563},\\\"y\\\":{\\\"min\\\":195.10785222666556,\\\"max\\\":524.8921477733345}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"fish\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"fish\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 202.245 285.722 C 202.261 284.937 213.442 227.802 230.522 213.696 C 243.065 203.337 274.384 190.108 286.016 201.480 C 305.024 220.062 274.973 274.395 252.084 287.911 C 239.786 295.173 201.955 300.001 202.245 285.722 M 368.180 310.938 C 367.917 310.452 400.088 267.623 419.712 263.534 C 435.533 260.237 469.434 265.005 473.508 280.644 C 478.561 300.042 441.600 323.960 421.976 328.049 C 406.155 331.346 375.867 325.154 368.180 310.938 M 368.180 405.107 C 367.917 405.593 400.088 448.423 419.712 452.512 C 435.533 455.809 469.434 451.041 473.508 435.402 C 478.561 416.004 441.600 392.086 421.976 387.997 C 406.155 384.700 375.867 390.891 368.180 405.107 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 427.301 401.299 C 439.678 411.425 452.055 421.552 464.432 431.679 M 412.449 405.349 C 424.376 416.601 436.303 427.853 448.230 439.105 M 394.896 409.400 C 406.598 420.652 418.300 431.904 430.002 443.155 M 427.301 313.535 C 439.228 302.734 451.155 291.932 463.082 281.130 M 407.723 310.160 C 420.776 298.458 433.828 286.756 446.880 275.055 M 391.521 308.135 C 403.673 295.983 415.825 283.831 427.977 271.679 M 251.880 270.528 C 262.629 249.565 273.379 228.602 284.129 207.639 M 234.247 274.176 C 243.507 252.119 252.768 230.062 262.029 208.005 M 216.613 275.392 C 223.777 256.780 230.941 238.169 238.105 219.557 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 114.271 307.632 C 124.949 307.632 133.563 316.246 133.563 326.924 C 133.563 337.602 124.949 346.216 114.271 346.216 C 103.593 346.216 94.979 337.602 94.979 326.924 C 94.979 316.246 103.593 307.632 114.271 307.632 M 640.003 455.925 C 657.127 438.920 600.065 390.341 600.065 360.808 C 600.065 331.275 657.127 282.696 640.003 265.691 C 622.012 247.825 571.074 301.524 541.482 310.851 C 527.063 315.395 504.780 322.181 489.695 321.185 C 441.358 317.995 410.983 264.947 333.347 256.474 C 328.119 255.903 322.901 255.445 317.187 255.054 C 236.327 249.515 160.790 269.038 146.355 274.256 C 130.732 279.904 42.478 303.727 27.095 357.827 C 25.311 364.101 27.900 371.904 33.454 379.705 C 64.819 423.755 136.721 438.364 146.355 441.399 C 159.576 445.563 238.071 466.013 317.266 460.605 C 323.138 460.205 328.248 459.751 333.347 459.181 C 410.960 450.497 441.254 394.780 489.695 394.469 C 505.237 394.370 526.954 405.244 541.482 410.765 C 570.485 421.787 622.012 473.790 640.003 455.925 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 230.522 506.304 C 243.065 516.663 274.384 529.892 286.016 518.520 C 305.024 499.938 274.973 445.606 252.084 432.089 C 239.786 424.827 216.509 433.562 202.245 434.278 C 202.245 434.278 213.442 492.198 230.522 506.304 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 199.284 381.320 C 188.122 419.642 155.795 441.611 155.791 441.617 M 196.319 318.057 C 196.319 318.063 208.793 348.675 199.284 381.320 M 202.245 434.278 C 202.245 434.278 213.442 492.198 230.522 506.304 C 243.065 516.663 274.384 529.892 286.016 518.520 C 305.024 499.938 274.973 445.606 252.084 432.089 C 239.786 424.827 216.509 433.562 202.245 434.278 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 563.286 367.814 C 573.014 368.219 582.743 368.625 592.472 369.030 M 562.678 380.583 C 575.041 383.420 587.405 386.258 599.768 389.095 M 560.854 392.136 C 578.892 400.243 596.931 408.350 614.969 416.457 M 557.206 405.512 C 581.730 419.497 606.254 433.482 630.779 447.467 M 563.894 354.437 C 573.623 353.221 583.351 352.005 593.080 350.789 M 563.286 340.452 C 575.447 337.412 587.608 334.372 599.768 331.332 M 560.246 328.291 C 578.487 320.792 596.728 313.293 614.969 305.794 M 557.206 316.739 C 581.730 302.754 606.254 288.769 630.779 274.784 M 243.052 437.423 C 257.387 458.729 271.722 480.035 286.058 501.341 M 228.859 439.937 C 243.375 465.139 257.891 490.341 272.407 515.544 M 214.032 441.428 C 224.093 463.694 234.155 485.961 244.216 508.227 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 36.115 381.191 C 51.722 381.393 67.328 381.596 82.934 381.799 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":213.312,\\\"max\\\":385.754},\\\"y\\\":{\\\"min\\\":279.078,\\\"max\\\":422.947}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":701.029,\\\"y\\\":361.689,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":130.503,\\\"y\\\":277.124,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":326.135,\\\"y\\\":254.261,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.004942649128457798,\\\"y\\\":-0.9999877850351938}},{\\\"point\\\":{\\\"x\\\":326.135,\\\"y\\\":461.839,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.004941538946871695,\\\"y\\\":0.9999877905218827}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":500.099,\\\"y\\\":318.725,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.0116696700709083,\\\"y\\\":-0.9999319070818954}},{\\\"point\\\":{\\\"x\\\":500.099,\\\"y\\\":396.491,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.0116696700709083,\\\"y\\\":0.9999319070818954}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":598.638,\\\"y\\\":361.111,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"fish_head\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":74.13132435510332,\\\"max\\\":592.424},\\\"y\\\":{\\\"min\\\":69.84812527137808,\\\"max\\\":650.151874728622}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"fish_head\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"fish_head\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 436.976 101.192 C 459.164 82.867 514.567 59.466 535.143 79.582 C 568.767 112.454 515.608 208.566 475.118 232.477 C 453.364 245.323 386.442 253.863 386.954 228.605 C 386.983 227.216 406.763 126.146 436.976 101.192 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 474.757 201.726 C 493.773 164.643 512.789 127.560 531.805 90.477 M 443.565 208.180 C 459.947 169.161 476.329 130.143 492.711 91.125 M 412.372 210.330 C 425.045 177.407 437.718 144.484 450.390 111.561 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 590.285 174.354 C 590.241 282.109 590.228 423.481 590.424 537.968 C 450.332 547.535 311.476 511.359 288.087 503.992 C 271.045 498.624 143.853 472.779 88.370 394.858 C 78.545 381.059 73.963 367.255 77.119 356.157 C 104.331 260.454 260.450 218.312 288.087 208.321 C 313.623 199.090 447.245 164.554 590.285 174.354 M 231.332 335.617 C 212.442 335.617 197.204 320.379 197.204 301.490 C 197.204 282.600 212.442 267.362 231.332 267.362 C 250.221 267.362 265.458 282.601 265.458 301.490 C 265.458 320.379 250.221 335.617 231.332 335.617 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 436.976 618.808 C 459.164 637.133 514.567 660.534 535.143 640.418 C 568.767 607.546 515.608 511.434 475.118 487.523 C 453.364 474.677 412.187 490.130 386.954 491.395 C 386.954 491.395 406.763 593.854 436.976 618.808 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 381.717 397.714 C 361.971 465.505 304.787 504.368 304.779 504.379 M 376.472 285.803 C 376.473 285.815 398.538 339.966 381.717 397.714 M 386.954 491.395 C 386.954 491.395 406.763 593.854 436.976 618.808 C 459.164 637.133 514.567 660.534 535.143 640.418 C 568.767 607.546 515.608 511.434 475.118 487.523 C 453.364 474.677 412.187 490.130 386.954 491.395 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 459.141 496.960 C 484.500 534.649 509.858 572.339 535.217 610.028 M 434.035 501.405 C 459.713 545.988 485.391 590.570 511.069 635.153 M 407.805 504.044 C 425.604 543.432 443.403 582.821 461.201 622.209 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 93.077 397.486 C 120.684 397.844 148.291 398.203 175.898 398.561 \\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":314.301,\\\"max\\\":568.031},\\\"y\\\":{\\\"min\\\":216.886,\\\"max\\\":460.128}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":73.029,\\\"y\\\":366.148,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":302.448,\\\"y\\\":537.928,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005019578839417357,\\\"y\\\":0.9999874018347805}},{\\\"point\\\":{\\\"x\\\":551.234,\\\"y\\\":537.928,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005074138081758049,\\\"y\\\":0.9999871264785}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":549.981,\\\"y\\\":173.627,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.00501930498637395,\\\"y\\\":-0.9999874032093873}},{\\\"point\\\":{\\\"x\\\":300.785,\\\"y\\\":176.168,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005019578839414248,\\\"y\\\":-0.9999874018347807}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":591.974,\\\"y\\\":360,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":589.712,\\\"y\\\":360,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"fish_tail\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":87.6238222836559,\\\"max\\\":668.3718163549055},\\\"y\\\":{\\\"min\\\":172.354,\\\"max\\\":539.968}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"fish_tail\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"fish_tail\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 179.856 273.212 C 179.391 272.351 236.300 196.588 271.013 189.354 C 299.001 183.523 358.970 191.957 366.177 219.622 C 375.116 253.937 309.733 296.247 275.019 303.480 C 247.032 309.312 193.453 298.359 179.856 273.212 M 179.856 439.793 C 179.391 440.653 236.299 516.418 271.013 523.651 C 299.001 529.483 358.970 521.049 366.177 493.384 C 375.116 459.069 309.733 416.759 275.019 409.526 C 247.032 403.694 193.453 414.646 179.856 439.793 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 284.439 433.056 C 306.334 450.970 328.228 468.884 350.122 486.797 M 258.166 440.222 C 279.264 460.126 300.363 480.030 321.461 499.934 M 227.116 447.388 C 247.816 467.291 268.516 487.195 289.217 507.099 M 284.439 277.805 C 305.537 258.697 326.636 239.590 347.734 220.482 M 249.806 271.834 C 272.895 251.134 295.984 230.434 319.073 209.734 M 221.145 268.251 C 242.641 246.755 264.137 225.259 285.634 203.763 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 89.651 174.354 C 89.607 282.109 89.594 423.481 89.790 537.968 C 100.177 537.260 109.216 536.457 118.237 535.448 C 255.532 520.086 309.122 421.525 394.812 420.975 C 422.306 420.799 460.722 440.035 486.422 449.802 C 537.727 469.300 628.877 561.292 660.701 529.689 C 690.994 499.607 590.052 413.673 590.052 361.429 C 590.052 309.186 690.994 223.252 660.701 193.169 C 628.877 161.566 538.769 256.558 486.422 273.057 C 460.916 281.096 421.498 293.099 394.812 291.338 C 309.306 285.694 255.573 191.855 118.237 176.865 C 108.989 175.856 99.758 175.045 89.651 174.354 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 524.992 373.823 C 542.201 374.540 559.411 375.257 576.621 375.974 M 523.916 396.411 C 545.787 401.430 567.658 406.449 589.528 411.469 M 520.690 416.847 C 552.599 431.189 584.509 445.530 616.418 459.871 M 514.236 440.510 C 557.619 465.249 601.002 489.988 644.384 514.727 M 526.068 350.160 C 543.277 348.009 560.487 345.857 577.697 343.706 M 524.992 325.421 C 546.504 320.043 568.016 314.664 589.528 309.286 M 519.614 303.908 C 551.882 290.643 584.150 277.377 616.418 264.111 M 514.236 283.472 C 557.619 258.733 601.002 233.994 644.384 209.256 \\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":101.148,\\\"max\\\":294.987},\\\"y\\\":{\\\"min\\\":258.035,\\\"max\\\":451.873}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":590.259,\\\"y\\\":358.315,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999659775591774,\\\"y\\\":-0.008248861989319263}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":407.022,\\\"y\\\":242.306,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005051376835057794,\\\"y\\\":-0.9999872417146483}},{\\\"point\\\":{\\\"x\\\":407.022,\\\"y\\\":477.694,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005051376835057801,\\\"y\\\":0.9999872417146483}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":90.341,\\\"y\\\":360,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":90.14,\\\"y\\\":360,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"fish_tail_curved\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":27.24417946458257,\\\"max\\\":701.6027791450713},\\\"y\\\":{\\\"min\\\":79.93028799313547,\\\"max\\\":603.41454879365}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"fish_tail_curved_half\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"fish_tail\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 315.705 98.377 C 316.395 97.880 388.049 138.568 398.135 167.707 C 406.267 191.200 405.638 243.860 382.575 253.142 C 353.970 264.654 310.230 212.950 300.145 183.810 C 292.013 160.317 295.522 112.892 315.705 98.377 M 98.421 90.624 C 97.652 90.261 34.602 143.313 29.989 173.801 C 26.269 198.382 36.473 250.047 60.840 254.976 C 91.064 261.089 124.659 202.286 129.272 171.797 C 132.992 147.217 120.909 101.222 98.421 90.624 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 109.295 181.107 C 94.792 200.978 80.290 220.849 65.788 240.719 M 101.811 158.639 C 85.542 177.914 69.274 197.189 53.005 216.465 M 94.098 132.023 C 77.810 150.953 61.522 169.883 45.234 188.812 M 323.333 189.090 C 342.152 205.170 360.971 221.250 379.790 237.329 M 324.645 158.557 C 345.058 176.177 365.471 193.798 385.883 211.418 M 324.559 133.439 C 345.482 149.598 366.405 165.756 387.328 181.915 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.104 81.948 C 273.359 81.917 160.866 81.910 69.766 82.070 C 93.156 379.793 157.898 560.546 308.695 595.578 C 391.414 614.795 462.978 585.980 510.353 517.665 C 547.594 463.963 717.133 437.744 698.121 387.839 C 684.904 353.147 580.297 396.213 539.917 375.395 C 499.537 354.576 473.761 243.702 438.019 253.738 C 392.147 266.618 442.309 399.583 434.574 457.372 C 431.485 480.450 417.151 502.322 389.450 499.017 C 316.812 490.352 325.313 398.817 328.101 324.294 C 329.631 283.403 344.342 213.366 359.104 81.948 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 517.328 427.945 C 526.821 415.821 536.314 403.697 545.806 391.572 M 531.683 435.994 C 547.250 422.577 562.817 409.159 578.384 395.741 M 547.977 447.523 C 574.155 429.764 600.333 412.004 626.511 394.244 M 561.020 461.049 C 600.698 438.862 640.377 416.675 680.055 394.488 M 500.360 418.576 C 507.338 405.011 514.316 391.447 521.294 377.882 M 483.484 409.548 C 488.792 391.373 494.099 373.197 499.406 355.021 M 465.605 405.133 C 468.805 375.501 472.005 345.868 475.204 316.235 M 448.559 402.038 C 447.023 358.945 445.486 315.853 443.950 272.760 \\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":126.699,\\\"max\\\":311.678},\\\"y\\\":{\\\"min\\\":90.093,\\\"max\\\":364.456}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":214.435,\\\"y\\\":82.433,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":216.979,\\\"y\\\":548.351,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986900482112895,\\\"y\\\":0.7154245009296969}},{\\\"point\\\":{\\\"x\\\":484.21,\\\"y\\\":548.852,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129446361714129,\\\"y\\\":0.7012203261132779}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":355.923,\\\"y\\\":85.568,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.631455011940419,\\\"y\\\":-0.7754125146625668}},{\\\"point\\\":{\\\"x\\\":72.147,\\\"y\\\":85.621,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817513083387288,\\\"y\\\":-0.731584003090849}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":214.435,\\\"y\\\":82.456,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"flame\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":193.72210696287632,\\\"max\\\":527.3338795756015},\\\"y\\\":{\\\"min\\\":29.847,\\\"max\\\":690.153}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"flame\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"flame\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#47C62D7B-B90D-48B8-B995-E8C8D6323170_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 31.847 C 313.603 111.130 320.782 195.697 362.316 247.481 C 422.618 322.666 416.941 385.419 357.131 396.225 C 288.123 408.692 254.659 304.833 284.690 208.747 C 204.463 286.404 193.581 353.443 196.024 417.557 C 201.783 568.720 323.303 598.331 360.000 688.153 C 406.809 604.283 553.571 543.039 520.538 359.912 C 495.266 219.805 368.959 186.994 360.000 31.847 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"flame_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 502.010 362.213 C 478.376 240.689 394.920 239.211 351.978 82.276 C 334.204 151.030 352.134 205.163 383.838 245.914 C 453.470 335.415 434.097 410.682 363.171 419.804 C 299.966 427.933 246.979 368.108 257.321 270.962 C 219.509 333.816 213.156 372.402 216.845 414.391 C 229.001 552.762 328.534 568.474 360.000 645.746 C 400.706 573.006 532.838 520.734 502.010 362.213 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":269.456,\\\"max\\\":450.544},\\\"y\\\":{\\\"min\\\":396.685,\\\"max\\\":577.772}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":701.786,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":29.88,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":196.389,\\\"y\\\":410.914,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872752351093,\\\"y\\\":0.005044736649405886}},{\\\"point\\\":{\\\"x\\\":523.611,\\\"y\\\":410.914,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872752351092,\\\"y\\\":0.0050447366494058635}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":465.889,\\\"y\\\":604.158,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128578758000718,\\\"y\\\":0.7013085261921529}},{\\\"point\\\":{\\\"x\\\":253.987,\\\"y\\\":604.189,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986524222519056,\\\"y\\\":0.7154612448494643}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":461.79,\\\"y\\\":167.613,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314396424293217,\\\"y\\\":-0.7754250305276006}},{\\\"point\\\":{\\\"x\\\":258.74,\\\"y\\\":167.663,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817198049942274,\\\"y\\\":-0.7316133592811388}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":686.172,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"47C62D7B-B90D-48B8-B995-E8C8D6323170_0\\\",\\\"x1\\\":\\\"52.57%\\\",\\\"y1\\\":\\\"92.61%\\\",\\\"x2\\\":\\\"-40.48%\\\",\\\"y2\\\":\\\"-23.20%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"20.00%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":false,\\\"invert_nested\\\":true,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"flower\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":91.545,\\\"max\\\":629.534},\\\"y\\\":{\\\"min\\\":21.126,\\\"max\\\":532.98}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"flower_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"flower\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.540 23.126 C 360.540 58.218 448.269 87.971 448.269 145.947 C 448.269 216.131 360.548 303.399 360.540 303.415 C 360.531 303.399 272.810 216.131 272.810 145.947 C 272.810 87.971 360.540 58.218 360.540 23.126 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.540 303.415 C 348.842 256.775 337.145 210.134 325.448 163.493 M 360.540 303.415 C 360.543 303.401 383.934 210.134 395.631 163.493 M 360.540 128.401 C 360.540 186.739 360.540 303.398 360.540 303.415 C 360.531 303.399 272.810 216.131 272.810 145.947 C 272.810 87.971 360.540 58.218 360.540 23.126 C 360.540 58.218 448.269 87.971 448.269 145.947 C 448.269 216.131 360.548 303.399 360.540 303.415 \\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"flower_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 627.534 217.109 C 594.160 227.953 592.973 320.583 537.834 338.499 C 471.085 360.186 360.981 303.726 360.963 303.723 C 360.975 303.710 416.866 193.315 483.614 171.627 C 538.753 153.711 594.160 227.953 627.534 217.109 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.963 303.723 C 401.706 278.185 442.450 252.648 483.193 227.110 M 360.963 303.723 C 360.978 303.722 456.908 297.147 504.881 293.859 M 527.411 249.641 C 471.929 267.668 360.980 303.718 360.963 303.723 C 360.975 303.710 416.866 193.315 483.614 171.627 C 538.753 153.711 594.160 227.953 627.534 217.109 C 594.160 227.953 592.973 320.583 537.834 338.499 C 471.085 360.186 360.981 303.726 360.963 303.723 \\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"flower_3\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 525.551 530.980 C 504.925 502.590 416.461 530.085 382.384 483.181 C 341.131 426.401 360.804 304.239 360.801 304.221 C 360.818 304.228 483.081 323.269 524.334 380.049 C 558.411 426.952 504.925 502.590 525.551 530.980 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.801 304.221 C 397.679 335.078 434.557 365.936 471.435 396.794 M 360.801 304.221 C 360.807 304.234 396.704 393.438 414.656 438.046 M 463.672 445.810 C 429.382 398.614 360.812 304.235 360.801 304.221 C 360.818 304.228 483.081 323.269 524.334 380.049 C 558.411 426.952 504.925 502.590 525.551 530.980 C 504.925 502.590 416.461 530.085 382.384 483.181 C 341.131 426.401 360.804 304.239 360.801 304.221 \\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"flower_4\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 195.528 530.980 C 216.154 502.590 162.668 426.952 196.746 380.049 C 237.999 323.269 360.262 304.228 360.278 304.221 C 360.276 304.239 379.948 426.401 338.695 483.181 C 304.618 530.085 216.154 502.590 195.528 530.980 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.278 304.221 C 342.327 348.829 324.375 393.438 306.424 438.046 M 360.278 304.221 C 360.267 304.230 286.522 365.936 249.644 396.794 M 257.407 445.810 C 291.697 398.614 360.268 304.235 360.278 304.221 C 360.276 304.239 379.948 426.401 338.695 483.181 C 304.618 530.085 216.154 502.590 195.528 530.980 C 216.154 502.590 162.668 426.952 196.746 380.049 C 237.999 323.269 360.262 304.228 360.278 304.221 \\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"flower_5\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 93.545 217.109 C 126.919 227.953 182.327 153.711 237.465 171.627 C 304.214 193.315 360.104 303.710 360.116 303.723 C 360.098 303.726 249.994 360.186 183.245 338.499 C 128.107 320.583 126.919 227.953 93.545 217.109 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.116 303.723 C 312.144 300.435 264.171 297.147 216.199 293.859 M 360.116 303.723 C 360.104 303.715 278.630 252.648 237.886 227.110 M 193.668 249.641 C 249.151 267.668 360.099 303.718 360.116 303.723 C 360.098 303.726 249.994 360.186 183.245 338.499 C 128.107 320.583 126.919 227.953 93.545 217.109 C 126.919 227.953 182.327 153.711 237.465 171.627 C 304.214 193.315 360.104 303.710 360.116 303.723 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":262.156,\\\"max\\\":458.924},\\\"y\\\":{\\\"min\\\":205.477,\\\"max\\\":402.245}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360.54,\\\"y\\\":668.19,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360.54,\\\"y\\\":585.182,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":109.79,\\\"y\\\":223.122,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9510519564609249,\\\"y\\\":-0.3090310277493946}},{\\\"point\\\":{\\\"x\\\":611.29,\\\"y\\\":223.122,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9510458380498793,\\\"y\\\":-0.30904985670277}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":204.739,\\\"y\\\":516.648,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5877631074167142,\\\"y\\\":0.809033083105906}},{\\\"point\\\":{\\\"x\\\":516.341,\\\"y\\\":516.648,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5877190168716862,\\\"y\\\":0.8090651130826113}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360.54,\\\"y\\\":43.972,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"flower_8petal\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":52.755,\\\"max\\\":667.245},\\\"y\\\":{\\\"min\\\":14.632000000000001,\\\"max\\\":629.122}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"flower_8petal\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"flower_8petal_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"url(#F77F9977-CA01-4803-89BE-2EE0D86F6CD9_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 163.959 321.877 C 163.959 430.384 251.493 517.918 360.000 517.918 C 468.507 517.918 556.041 430.384 556.041 321.877 C 556.041 213.369 468.507 125.836 360.000 125.836 C 251.493 125.836 163.959 213.369 163.959 321.877 M 144.159 106.035 C 195.961 123.303 206.927 74.887 278.942 126.122 C 293.572 39.015 335.581 65.471 360.000 16.632 C 384.420 65.471 426.372 39.108 441.236 125.995 C 512.897 75.013 524.040 123.303 575.841 106.035 C 558.574 157.837 606.990 168.803 555.755 240.818 C 642.861 255.448 616.406 297.457 665.245 321.877 C 616.406 346.296 642.767 388.248 555.883 403.113 C 606.863 474.773 558.574 485.916 575.841 537.718 C 524.039 520.450 512.896 568.740 441.235 517.759 C 426.371 604.645 384.420 578.283 360.000 627.122 C 335.581 578.282 293.572 604.738 278.942 517.631 C 206.927 568.866 195.961 520.450 144.159 537.718 C 161.426 485.916 113.136 474.774 164.118 403.112 C 77.232 388.249 103.594 346.296 54.755 321.877 C 103.594 297.457 77.138 255.448 164.246 240.819 C 113.009 168.801 161.427 157.837 144.159 106.035 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":209.061,\\\"max\\\":510.939},\\\"y\\\":{\\\"min\\\":170.938,\\\"max\\\":472.816}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":701.806,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":18.7,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":57.4,\\\"y\\\":322.739,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.999987203394228,\\\"y\\\":0.005058957184122814}},{\\\"point\\\":{\\\"x\\\":662.6,\\\"y\\\":322.739,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.999987203394228,\\\"y\\\":0.005058957184122823}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":574.588,\\\"y\\\":537.498,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129045744828948,\\\"y\\\":0.7012610553006368}},{\\\"point\\\":{\\\"x\\\":145.235,\\\"y\\\":537.542,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987060732834047,\\\"y\\\":0.7154088503484463}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":574.739,\\\"y\\\":108.08,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6313994414689371,\\\"y\\\":-0.7754577650089747}},{\\\"point\\\":{\\\"x\\\":145.99,\\\"y\\\":108.152,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817314607549524,\\\"y\\\":-0.7316024982303702}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":625.55,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"F77F9977-CA01-4803-89BE-2EE0D86F6CD9_0\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"50.00%\\\",\\\"r\\\":\\\"50.00%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"18.82%\\\",\\\"color\\\":\\\"#000000\\\"},{\\\"offset\\\":\\\"84.31%\\\",\\\"color\\\":\\\"#ffffff\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"flower_jacobean_smaller\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":142.786,\\\"max\\\":577.214},\\\"y\\\":{\\\"min\\\":74.048,\\\"max\\\":645.952}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"flower_jacobean\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"flower_jacobean\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 505.912 528.065 C 464.768 506.808 429.084 524.056 403.222 550.494 M 345.939 358.002 C 374.071 352.189 410.949 373.931 425.863 402.443 M 509.194 352.544 C 465.755 357.966 443.217 385.575 430.988 428.054 C 426.325 377.831 387.557 310.786 346.084 280.818 M 292.719 433.133 C 359.850 433.178 404.741 472.580 418.623 515.321 M 473.692 261.304 C 422.458 299.005 412.195 352.643 423.670 394.702 M 430.988 428.054 C 437.315 496.199 406.725 576.714 328.797 643.952 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 427.735 459.670 C 391.257 423.904 363.417 452.714 343.280 391.174 C 375.570 405.567 413.128 372.820 427.735 459.670 M 389.702 582.123 C 425.727 568.555 438.953 625.649 491.396 592.056 C 458.961 580.477 445.064 538.592 389.702 582.123 M 432.734 477.879 C 460.275 466.820 510.864 500.466 531.098 433.751 C 494.990 448.983 460.457 418.832 432.734 477.879 M 357.601 611.712 C 352.295 558.557 285.655 567.186 312.006 488.735 C 333.851 537.035 393.775 526.861 357.601 611.712 M 394.349 329.365 C 394.375 289.759 445.736 288.375 420.063 226.147 C 411.235 253.404 358.893 259.810 394.349 329.365 M 541.180 546.812 C 546.368 537.051 542.680 524.992 532.920 519.804 C 523.159 514.616 511.100 518.305 505.912 528.065 C 500.724 537.825 504.413 549.884 514.173 555.072 C 523.933 560.260 535.992 556.572 541.180 546.812 M 306.528 364.484 C 304.734 353.577 312.086 343.331 322.993 341.537 C 333.900 339.744 344.146 347.096 345.939 358.002 C 347.733 368.909 340.381 379.155 329.474 380.949 C 318.567 382.742 308.321 375.391 306.528 364.484 M 549.130 353.144 C 549.296 342.092 540.514 333.042 529.461 332.876 C 518.409 332.710 509.360 341.492 509.194 352.544 C 509.028 363.596 517.810 372.646 528.862 372.812 C 539.914 372.978 548.964 364.196 549.130 353.144 M 282.303 396.003 C 280.135 392.497 277.232 388.669 273.822 384.949 C 256.930 366.522 249.052 370.991 227.455 355.404 C 238.023 376.334 223.652 389.149 243.972 407.832 C 222.341 404.651 215.848 414.673 189.980 420.357 C 214.179 431.354 217.095 444.408 238.865 446.477 C 221.394 461.637 220.824 475.389 209.296 492.813 C 229.513 484.231 242.628 488.748 261.747 476.327 C 265.896 473.631 269.638 470.684 272.670 467.798 C 293.333 448.141 297.709 420.897 282.303 396.003 M 465.866 223.543 C 466.178 219.433 466.995 214.699 468.312 209.828 C 474.838 185.696 483.889 186.042 495.899 162.269 C 496.140 185.714 514.794 190.485 505.342 216.419 C 523.088 203.647 533.462 209.561 559.047 202.712 C 542.616 223.605 546.029 236.539 527.648 248.387 C 550.134 253.815 556.965 265.765 575.214 275.935 C 553.316 277.612 543.747 287.654 521.058 285.417 C 516.134 284.931 511.456 284.034 507.436 282.866 C 480.048 274.913 463.634 252.734 465.866 223.543 M 325.036 204.377 C 338.896 219.373 337.980 242.651 322.984 256.510 C 307.988 270.370 284.711 269.454 270.851 254.458 C 256.991 239.463 257.907 216.185 272.903 202.325 C 287.899 188.465 311.176 189.382 325.036 204.377 M 300.047 175.968 C 286.421 175.432 272.501 180.142 261.660 190.161 C 250.820 200.180 245.030 213.688 244.494 227.314 C 243.958 240.940 248.667 254.861 258.687 265.701 C 268.706 276.542 282.213 282.331 295.839 282.867 C 309.466 283.404 323.386 278.694 334.227 268.675 C 345.067 258.656 350.857 245.148 351.393 231.522 C 351.930 217.896 347.220 203.975 337.201 193.134 C 327.182 182.294 313.674 176.505 300.047 175.968 M 367.776 200.572 C 369.195 214.487 372.881 255.733 345.584 280.963 C 318.287 306.192 277.459 299.275 263.698 296.767 C 234.410 315.604 215.730 315.235 184.770 328.851 C 197.593 300.843 200.772 271.617 223.016 252.751 C 184.587 251.845 183.516 234.012 144.786 220.703 C 180.447 215.420 183.802 186.004 225.290 194.963 C 202.113 170.611 208.945 153.569 193.147 116.033 C 228.418 136.680 247.403 128.767 269.307 154.281 C 272.858 118.891 289.629 105.980 301.295 76.048 C 308.440 109.054 329.939 122.258 327.093 156.556 C 348.905 135.911 380.100 136.995 405.965 124.410 C 392.614 150.534 386.812 175.894 367.776 200.572 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 272.670 467.798 C 258.084 460.749 249.161 445.189 251.370 428.469 C 253.607 411.540 266.555 398.724 282.303 396.003 C 297.709 420.897 293.333 448.141 272.670 467.798 M 507.436 282.866 C 517.147 269.899 517.914 251.979 508.264 238.148 C 498.492 224.144 481.100 218.717 465.866 223.543 C 463.634 252.734 480.048 274.913 507.436 282.866 M 297.233 117.324 C 298.171 136.872 299.109 156.420 300.047 175.968 C 286.421 175.432 272.501 180.142 261.660 190.161 C 248.444 175.729 235.228 161.296 222.011 146.864 M 379.132 148.253 C 365.155 163.214 351.178 178.174 337.201 193.134 C 327.182 182.294 313.674 176.505 300.047 175.968 M 213.853 299.988 C 228.798 288.559 243.742 277.130 258.687 265.701 C 248.667 254.861 243.958 240.940 244.494 227.314 C 227.313 225.513 210.132 223.711 192.950 221.910 M 261.660 190.161 C 250.820 200.180 245.030 213.688 244.494 227.314 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360.327,\\\"y\\\":661.861,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.028256046500734718,\\\"y\\\":-0.9996007182050983}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":193.993,\\\"y\\\":116.122,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7011123050903227,\\\"y\\\":-0.7130508647010634}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":551.034,\\\"y\\\":353.613,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872880189178,\\\"y\\\":0.0050422019564934075}},{\\\"point\\\":{\\\"x\\\":186.048,\\\"y\\\":420.722,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872880189178,\\\"y\\\":0.005042201956497622}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":538.887,\\\"y\\\":549.623,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6986777434832896,\\\"y\\\":0.7154365176317871}},{\\\"point\\\":{\\\"x\\\":326.503,\\\"y\\\":647.188,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7128673373492072,\\\"y\\\":0.7012989086977476}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":562.465,\\\"y\\\":200.591,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7826379980597337,\\\"y\\\":-0.6224771192526294}}]}},{\\\"name\\\":\\\"foot\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":234.5558443125144,\\\"max\\\":520.864786651902},\\\"y\\\":{\\\"min\\\":25.08370992918838,\\\"max\\\":675.344543336746}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"foot\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"foot\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 518.315 169.263 C 520.086 160.796 518.250 142.721 502.715 138.098 C 492.316 135.003 480.444 153.697 478.979 161.914 C 471.215 205.462 464.646 206.679 462.853 205.789 C 459.837 204.294 463.419 185.333 481.363 126.451 C 486.140 110.774 475.620 95.029 466.801 93.316 C 457.585 91.526 442.325 100.671 440.071 120.071 C 433.910 173.094 420.962 189.577 418.104 188.443 C 415.440 187.385 413.133 175.018 431.235 122.822 C 441.000 94.667 429.168 71.441 415.462 68.990 C 404.315 66.996 388.591 74.941 385.572 103.454 C 378.617 169.124 371.422 178.232 368.170 177.868 C 364.803 177.490 365.954 160.099 377.844 99.342 C 382.604 75.019 367.741 54.074 354.984 53.166 C 344.688 52.434 328.587 67.532 329.189 85.787 C 331.648 160.418 324.662 172.140 319.086 172.150 C 317.531 172.152 315.367 161.280 317.623 135.871 C 320.111 107.852 328.543 83.171 314.494 48.576 C 310.247 38.119 295.520 25.154 274.295 27.324 C 260.623 28.721 245.709 46.535 242.840 57.570 C 236.776 80.892 240.624 103.714 242.947 118.939 C 245.632 136.543 256.838 148.183 255.575 189.559 C 244.406 208.772 232.305 236.558 238.020 290.587 C 245.459 360.910 294.794 369.683 289.283 487.620 C 288.104 512.838 263.888 564.974 268.541 596.579 C 282.593 692.012 406.524 682.611 434.318 652.667 C 455.810 629.512 473.417 583.683 477.849 565.231 C 489.067 518.530 497.237 376.254 507.981 324.711 C 512.119 304.859 520.207 283.486 509.721 220.355 C 514.287 203.550 512.053 199.189 518.315 169.263 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":284.564,\\\"max\\\":469.095},\\\"y\\\":{\\\"min\\\":208.51,\\\"max\\\":393.041}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":700.357,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":353.689,\\\"y\\\":55.145,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":260.673,\\\"y\\\":350.097,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873181281341,\\\"y\\\":0.005036227050270593}},{\\\"point\\\":{\\\"x\\\":503.499,\\\"y\\\":350.097,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873181281341,\\\"y\\\":0.005036227050270614}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":449.617,\\\"y\\\":626.069,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128976981929063,\\\"y\\\":0.7012680456938388}},{\\\"point\\\":{\\\"x\\\":279.442,\\\"y\\\":626.112,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698708874621677,\\\"y\\\":0.7154061144027983}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":259.448,\\\"y\\\":38.596,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817438817763115,\\\"y\\\":-0.7315909237139063}},{\\\"point\\\":{\\\"x\\\":509.705,\\\"y\\\":143.711,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314220402071467,\\\"y\\\":-0.7754393639354688}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":669.923,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"foot_of_god\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":23.548429425323715,\\\"max\\\":692.4282720460413},\\\"y\\\":{\\\"min\\\":260.1431111111112,\\\"max\\\":619.1512644369329}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"foot_of_god\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"foot_of_god\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 654.072 262.144 C 654.072 262.154 654.270 347.456 655.981 358.588 C 659.010 378.295 749.212 563.497 624.924 594.789 C 575.433 607.249 507.115 592.100 450.818 591.985 C 370.679 591.821 376.376 624.749 293.652 596.671 C 277.480 604.083 234.970 629.430 203.166 609.925 C 188.141 600.710 226.935 587.740 252.400 574.926 C 257.029 572.597 170.912 616.609 149.661 597.631 C 133.445 583.150 178.296 566.865 211.090 551.438 C 212.097 550.964 119.096 596.380 102.605 568.457 C 90.607 548.141 142.767 546.367 188.602 524.106 C 157.283 531.243 95.535 560.690 71.548 529.871 C 52.843 505.838 124.441 508.916 163.311 494.991 C 135.755 499.924 53.410 518.544 28.257 457.406 C 20.567 438.714 27.184 397.586 75.313 418.820 C 110.684 434.425 155.217 445.147 178.052 435.740 C 270.337 397.722 407.437 382.185 426.862 353.883 C 433.686 343.940 433.670 305.113 434.010 262.144 C 434.032 262.142 654.050 262.144 654.072 262.144 Z\\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":448.489,\\\"max\\\":638.389},\\\"y\\\":{\\\"min\\\":277.033,\\\"max\\\":482.494}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":549.827,\\\"y\\\":262.277,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":428.632,\\\"y\\\":353.268,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872880189178,\\\"y\\\":0.005042201956497622}},{\\\"point\\\":{\\\"x\\\":655.295,\\\"y\\\":353.268,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872880189178,\\\"y\\\":0.005042201956497622}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":593.985,\\\"y\\\":596.326,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129038061651503,\\\"y\\\":0.701261836374433}},{\\\"point\\\":{\\\"x\\\":307.841,\\\"y\\\":596.374,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987156961473312,\\\"y\\\":0.7153994520247764}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":649.186,\\\"y\\\":263.342,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314312882360851,\\\"y\\\":-0.7754318333912518}},{\\\"point\\\":{\\\"x\\\":435.913,\\\"y\\\":263.413,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.681705589814273,\\\"y\\\":-0.7316266047759431}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":37.31,\\\"y\\\":419.934,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6489024183863071,\\\"y\\\":-0.7608716392483045}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":549.827,\\\"y\\\":262.542,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"globe\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":65.509,\\\"max\\\":651.845},\\\"y\\\":{\\\"min\\\":37.172696206739076,\\\"max\\\":623.522}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"globe\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"circle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#8E8B3F22-3ECA-490A-B60F-ADE6EEC19437_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 571.042 131.078 C 568.948 128.810 566.767 126.628 564.585 124.359 C 536.136 95.953 504.921 74.274 470.445 60.468 C 448.584 51.714 425.578 45.900 401.818 42.129 C 387.925 39.923 373.551 39.052 358.634 39.186 C 302.348 39.691 251.731 53.148 206.963 81.075 C 206.701 81.162 206.265 81.424 206.002 81.598 C 187.240 93.379 169.438 107.691 152.770 124.359 C 124.321 152.808 103.006 184.203 88.803 218.543 C 87.028 222.835 85.364 227.174 83.810 231.558 C 82.257 235.943 80.815 240.373 79.484 244.850 C 76.822 253.803 74.604 262.940 72.830 272.261 C 69.282 290.904 67.509 310.283 67.509 330.398 C 67.510 410.771 95.871 479.363 152.770 536.261 C 209.581 593.073 278.260 621.522 358.634 621.522 C 439.094 621.522 507.687 593.073 564.585 536.261 C 621.396 479.363 649.845 410.771 649.845 330.398 C 649.845 291.695 643.278 255.762 630.144 222.557 C 626.860 214.256 623.167 206.125 619.062 198.164 C 614.958 190.203 610.443 182.411 605.518 174.789 C 595.668 159.544 584.176 144.976 571.042 131.078 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 88.803 218.543 C 87.028 222.835 85.364 227.174 83.810 231.558 M 152.770 124.359 C 124.321 152.808 103.006 184.203 88.803 218.543 M 206.002 81.598 C 187.240 93.379 169.438 107.691 152.770 124.359 M 206.963 81.075 C 206.701 81.162 206.265 81.424 206.002 81.598 M 358.634 39.186 C 302.348 39.691 251.731 53.148 206.963 81.075 M 401.818 42.129 C 387.925 39.923 373.551 39.052 358.634 39.186 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 605.518 174.789 C 595.668 159.544 584.176 144.976 571.042 131.078 C 568.948 128.810 566.767 126.628 564.585 124.359 C 536.136 95.953 504.921 74.274 470.445 60.468 M 619.062 198.164 C 614.958 190.203 610.443 182.411 605.518 174.789 \\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"continents\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 612.909 208.412 C 612.960 208.352 613.018 208.294 613.084 208.237 C 613.084 208.237 612.996 208.237 612.909 208.412 C 613.075 208.999 613.162 209.144 613.258 209.285 C 611.948 209.635 610.988 209.111 610.289 207.714 C 610.115 207.189 609.765 206.840 609.416 206.491 C 603.566 200.727 598.675 194.353 594.572 187.368 C 602.801 194.678 611.038 201.984 619.283 209.285 C 619.187 206.757 619.100 204.225 619.021 201.689 C 619.217 200.761 619.420 199.830 619.632 198.894 C 607.930 176.017 593.523 154.973 576.321 135.849 C 547.418 103.891 513.364 79.179 474.070 61.889 C 470.752 60.318 467.260 59.095 463.679 58.135 C 462.631 57.698 461.671 57.786 460.624 58.135 C 453.813 61.279 446.739 62.152 439.317 60.842 C 438.495 59.479 437.680 58.112 436.872 56.737 C 436.697 56.301 436.435 55.864 436.348 55.428 C 435.911 53.943 435.038 53.245 433.816 53.245 C 429.450 53.070 426.656 55.253 425.346 59.881 C 423.477 60.905 421.614 61.924 419.757 62.938 C 421.061 64.515 422.371 66.087 423.687 67.653 C 422.109 69.609 420.537 71.559 418.971 73.503 C 419.577 76.070 420.187 78.631 420.805 81.187 C 421.416 81.187 422.028 81.187 422.814 81.099 C 425.434 80.838 427.966 81.449 430.148 83.021 C 431.458 80.314 433.554 79.092 436.523 79.528 C 438.059 80.552 439.602 81.571 441.151 82.584 C 441.413 83.021 441.588 83.458 441.588 83.894 C 442.024 86.601 443.509 88.435 446.040 89.308 C 449.272 90.355 452.065 90.181 454.249 88.784 C 454.510 88.173 454.424 87.387 454.161 86.601 C 453.288 84.505 451.629 83.021 449.446 82.148 C 450.843 80.751 452.590 79.965 454.685 79.965 C 457.305 79.877 459.750 80.576 461.758 82.060 C 462.887 82.211 464.022 82.357 465.164 82.497 C 466.124 84.767 466.037 87.125 464.989 89.483 C 464.465 90.443 463.767 91.054 462.631 91.403 C 456.693 93.063 450.581 93.325 444.294 92.102 C 443.246 91.316 442.461 90.269 442.286 88.958 C 441.413 84.418 438.968 82.847 435.038 84.069 C 433.816 85.990 433.729 87.824 435.038 89.832 C 437.309 93.499 436.785 96.469 433.466 98.739 C 433.205 98.476 432.855 98.214 432.680 97.953 C 428.774 98.744 424.874 99.529 420.980 100.310 C 422.021 103.255 423.069 106.195 424.123 109.130 C 421.759 110.008 419.402 110.881 417.051 111.749 C 416.265 111.836 415.478 111.836 414.518 111.836 C 412.073 112.098 410.764 113.146 410.501 115.154 C 414.483 117.139 418.470 119.118 422.464 121.093 C 423.622 121.331 424.787 121.564 425.957 121.791 C 426.213 124.299 426.475 126.802 426.743 129.300 C 420.596 130.149 414.454 130.994 408.319 131.833 C 408.056 131.833 407.794 131.833 407.533 131.833 C 404.040 131.135 400.983 131.745 398.626 133.579 C 399.552 134.516 400.483 135.447 401.420 136.373 C 402.055 139.987 402.695 143.596 403.341 147.201 C 404.033 149.418 404.732 151.630 405.437 153.837 C 406.828 154.163 408.225 154.482 409.628 154.798 C 409.855 155.123 410.088 155.443 410.327 155.758 C 411.922 155.851 413.522 155.938 415.130 156.020 C 415.938 158.179 416.753 160.332 417.574 162.482 C 415.741 166.411 413.208 169.817 410.065 172.698 C 409.105 173.572 407.969 174.270 406.747 174.707 C 402.817 175.842 400.547 178.199 399.849 181.692 C 400.221 181.872 400.599 182.046 400.983 182.216 C 402.730 186.145 402.119 189.813 399.063 193.131 C 395.570 197.060 391.379 199.069 386.488 198.982 C 385.702 198.982 385.091 199.244 384.829 199.942 C 382.035 205.356 378.717 210.508 374.962 215.573 C 374.351 216.271 373.914 217.057 373.478 217.843 C 372.168 220.637 371.906 223.518 372.780 226.487 C 373.565 229.281 374.351 232.076 374.875 234.870 C 375.050 235.743 375.137 236.616 375.137 237.577 C 375.398 249.976 375.662 262.463 376.098 274.862 C 376.796 275.561 377.582 275.998 378.543 276.172 C 379.416 276.347 380.289 276.783 380.900 277.569 C 382.211 278.791 383.520 280.102 384.917 281.324 C 385.354 281.761 385.790 281.936 386.402 281.848 C 388.847 281.586 390.942 282.022 392.776 283.507 C 392.945 284.675 393.119 285.840 393.299 287.000 C 394.603 288.866 395.913 290.729 397.229 292.588 C 400.547 294.859 403.952 297.216 407.183 299.661 C 409.367 301.320 411.724 302.543 414.257 303.416 C 418.273 304.987 421.591 307.433 424.211 310.751 C 427.180 309.004 430.236 307.345 433.379 305.774 C 436.523 304.202 439.841 303.241 443.334 302.979 C 444.906 303.154 445.954 303.940 446.565 305.512 C 447.088 306.909 448.136 307.433 449.708 307.171 C 455.820 306.035 461.671 304.026 467.172 300.883 C 470.752 298.875 474.332 298.177 477.912 298.701 C 478.349 298.788 478.611 298.963 478.698 299.224 C 479.833 304.114 482.715 307.346 487.168 309.179 C 488.652 309.703 490.050 309.878 491.622 309.703 C 493.630 309.528 495.638 309.267 497.647 309.004 C 500.615 309.353 501.925 311.275 501.488 314.505 C 501.227 316.689 500.877 319.046 500.528 321.491 C 499.567 327.341 499.393 333.104 500.266 338.955 C 501.838 341.836 503.584 344.806 505.505 347.513 C 513.015 358.602 515.895 370.477 514.063 383.400 C 514.063 383.925 514.063 384.361 514.238 384.798 C 515.722 387.418 516.333 390.125 516.333 392.918 C 515.635 393.530 514.849 394.228 514.063 394.840 C 512.840 395.975 511.531 397.110 510.133 398.158 C 508.387 399.381 507.252 401.040 506.728 403.135 C 506.204 405.580 505.854 408.025 505.680 410.558 C 505.593 411.954 505.243 413.264 504.545 414.486 C 502.274 418.416 501.925 422.608 503.497 426.887 C 504.458 429.505 505.767 432.125 507.426 434.483 C 509.784 438.063 510.569 442.080 509.697 446.620 C 509.398 446.855 509.108 447.088 508.824 447.319 C 507.601 450.288 506.728 453.431 506.292 456.575 C 505.855 459.543 506.379 462.338 507.688 464.958 C 508.736 467.140 509.435 469.498 509.784 471.769 C 509.958 472.380 509.872 472.991 509.697 473.515 C 507.339 479.278 506.466 485.390 507.077 491.677 C 509.872 492.812 512.928 493.598 516.158 494.035 C 517.643 494.123 519.127 493.773 520.349 492.900 C 521.485 492.289 522.620 491.764 523.668 491.328 C 526.200 490.455 528.732 490.193 531.527 490.542 C 532.662 490.455 533.710 490.018 534.496 489.320 C 536.416 487.923 538.512 486.700 540.608 485.653 C 544.188 483.731 547.943 481.898 551.523 479.976 C 556.413 477.531 559.906 473.602 561.740 468.538 C 562.962 465.220 564.708 462.250 566.891 459.631 C 567.415 459.020 568.026 458.409 568.463 457.797 C 570.297 455.352 571.607 452.558 572.218 449.502 C 578.505 447.144 581.736 442.604 581.998 435.793 C 581.998 434.571 582.085 433.348 582.085 432.126 C 582.260 428.545 583.919 425.576 586.887 423.394 C 588.896 421.908 590.904 420.249 592.912 418.678 C 593.523 418.154 594.310 417.542 594.921 417.106 C 599.025 414.050 601.557 410.120 602.605 405.318 C 602.780 404.358 602.954 403.397 603.041 402.611 C 604.089 394.403 604.526 386.370 604.526 378.336 C 604.526 375.891 604.701 373.446 604.875 371.001 C 605.399 366.548 605.312 362.269 604.439 358.078 C 604.352 357.467 604.351 356.856 604.439 356.419 C 605.661 351.442 607.932 347.251 611.336 343.670 C 611.599 342.361 611.773 341.050 611.861 339.741 C 612.384 334.152 614.568 329.350 618.672 325.246 C 621.117 322.801 622.513 319.745 622.863 316.165 C 623.038 314.593 623.299 313.196 623.911 311.711 C 625.658 307.520 626.617 302.979 626.880 298.351 C 627.054 297.216 627.321 296.021 627.404 294.858 C 628.018 286.301 629.412 277.657 628.451 269.012 C 627.404 270.409 626.094 271.806 624.697 273.028 C 623.213 274.339 621.640 275.648 620.156 276.784 C 618.060 278.530 615.790 279.228 613.345 278.966 C 612.143 275.128 610.951 271.286 609.765 267.440 C 610.717 268.200 611.678 268.957 612.647 269.711 C 613.083 269.536 613.345 269.274 613.608 268.925 C 613.957 268.401 614.393 267.964 614.830 267.615 C 616.751 266.043 618.147 264.035 618.933 261.677 C 621.117 254.692 623.736 247.793 626.705 240.982 C 627.142 240.022 627.229 238.974 627.142 238.013 C 625.920 227.447 622.340 217.842 616.140 209.023 C 615.229 208.737 614.327 208.446 613.433 208.150 C 612.909 208.412 612.909 208.412 612.909 208.587 M 613.433 208.150 C 613.258 208.150 613.170 208.237 613.084 208.237 M 525.414 141.438 C 524.978 141.176 524.541 141.089 524.017 141.001 C 521.048 140.216 518.953 138.382 517.730 135.326 C 516.246 131.483 515.023 127.379 514.063 123.188 C 515.511 123.484 516.966 123.776 518.429 124.061 C 525.240 124.236 531.701 125.808 537.901 128.777 C 542.180 130.872 544.625 134.103 545.411 138.644 C 546.596 140.191 547.790 141.733 548.990 143.271 C 548.118 144.144 547.070 144.494 545.848 144.145 C 543.926 143.708 542.441 142.835 541.307 141.263 C 540.608 140.215 539.560 139.604 538.425 139.167 C 537.814 138.992 537.464 138.644 537.115 138.119 C 536.177 138.270 535.245 138.416 534.321 138.556 C 532.313 141.700 529.343 142.661 525.414 141.438 M 511.531 144.930 C 511.960 143.859 512.397 142.781 512.840 141.699 C 513.102 141.700 513.276 141.700 513.538 141.612 C 515.896 142.049 517.206 143.446 517.381 145.891 C 517.520 146.420 517.665 146.944 517.817 147.463 C 520.401 150.116 522.991 152.765 525.589 155.409 C 527.707 155.618 529.831 155.821 531.964 156.020 C 532.400 156.457 532.837 156.806 533.360 156.980 C 537.639 158.553 542.005 158.640 546.371 157.068 C 546.371 156.806 546.371 156.544 546.371 156.369 C 546.546 154.623 546.807 154.186 547.244 155.234 C 548.547 156.025 549.856 156.811 551.174 157.592 C 551.894 157.800 552.621 158.004 553.356 158.203 C 555.416 164.262 557.482 170.317 559.556 176.366 C 559.382 177.501 558.596 178.200 557.286 178.200 C 555.802 178.549 554.404 179.335 553.356 180.645 C 552.745 181.343 551.872 181.692 550.737 181.431 C 546.459 180.383 542.005 179.334 537.639 178.461 C 536.766 178.199 535.980 177.850 535.369 177.413 C 532.924 175.580 530.217 174.532 527.248 174.008 C 526.600 174.275 525.960 174.537 525.327 174.794 C 521.921 173.397 519.040 173.834 516.508 175.754 C 516.849 178.029 517.199 180.300 517.556 182.565 C 514.318 182.366 511.087 182.162 507.863 181.954 C 507.303 181.405 506.749 180.853 506.204 180.295 C 504.596 179.892 502.995 179.485 501.402 179.072 C 501.402 178.200 501.314 177.413 501.139 176.627 C 500.965 175.667 500.441 175.143 499.655 174.881 C 497.036 174.357 494.678 173.658 492.233 172.524 C 491.709 172.261 491.185 172.087 490.574 171.738 C 487.430 171.825 484.461 171.476 481.580 170.777 C 481.340 167.202 481.107 163.622 480.881 160.037 C 479.419 159.838 477.964 159.634 476.515 159.426 C 475.926 157.771 475.344 156.112 474.769 154.448 C 470.752 153.314 466.910 153.662 463.330 155.584 C 460.710 155.147 458.003 154.798 455.210 154.623 C 452.851 154.361 450.669 155.059 448.747 156.544 C 445.517 159.338 441.936 161.172 437.832 162.307 C 436.348 162.657 435.038 162.744 433.554 162.482 C 428.489 162.394 423.600 161.172 418.884 158.902 C 419.671 157.068 420.805 155.933 422.552 155.671 C 424.036 155.846 425.521 155.933 427.092 155.932 C 431.633 155.932 434.777 154.187 436.348 150.432 C 435.643 149.651 434.945 148.865 434.252 148.074 C 433.292 146.066 433.641 144.319 435.300 143.010 C 437.221 141.437 439.491 140.215 442.024 139.255 C 442.017 138.067 442.017 136.873 442.024 135.675 C 441.290 135.301 440.562 134.923 439.841 134.540 C 440.277 134.190 440.714 134.015 441.063 133.667 C 445.517 133.666 449.883 132.881 454.074 131.396 C 458.178 129.999 462.108 130.261 465.950 132.269 C 468.831 136.199 472.848 137.683 477.825 136.810 C 482.272 140.279 486.725 143.742 491.185 147.201 C 491.528 146.216 491.876 145.226 492.233 144.232 C 493.070 144.121 493.914 144.004 494.765 143.883 C 494.852 142.922 494.241 142.224 493.106 141.699 C 489.439 140.215 486.033 138.382 482.802 136.024 C 481.318 134.976 479.659 134.103 477.825 133.753 C 474.507 132.967 472.673 131.134 472.498 127.990 C 471.793 127.559 471.095 127.123 470.403 126.681 C 475.555 128.164 480.707 129.737 485.771 131.483 C 486.907 131.745 487.867 132.269 488.740 132.967 C 493.979 137.333 499.567 141.613 505.331 145.891 C 505.506 146.328 505.767 146.764 505.942 147.114 C 509.253 150.436 512.572 153.755 515.896 157.068 C 514.434 153.027 512.979 148.981 511.531 144.930 M 569.598 147.026 C 568.987 145.978 568.113 145.280 566.979 144.669 C 564.533 143.533 562.351 141.962 560.342 140.128 C 558.945 138.731 557.374 137.247 555.889 135.849 C 551.611 132.008 549.777 127.379 550.300 121.791 C 552.767 124.591 555.241 127.384 557.722 130.174 C 560.866 132.793 563.922 135.587 566.979 138.382 C 571.170 142.223 574.750 146.328 577.719 150.955 C 579.553 153.750 581.124 156.719 582.347 159.688 C 580.862 159.600 579.553 158.989 578.330 157.679 C 575.186 154.273 572.392 150.694 569.598 147.026 M 569.685 195.401 C 570.471 195.925 571.083 196.624 571.344 197.497 C 574.314 201.077 577.544 204.482 581.037 207.714 C 581.648 208.237 582.172 208.848 582.609 209.634 C 588.371 218.541 593.523 227.884 598.239 237.402 C 602.605 246.221 606.447 255.215 609.940 264.471 C 610.027 264.646 610.027 264.821 609.940 265.170 C 609.066 265.344 608.368 264.733 607.844 263.074 C 607.407 261.852 606.709 260.717 605.836 259.669 C 602.431 255.565 599.200 251.199 596.143 246.658 C 590.118 237.664 584.705 228.320 579.902 218.716 C 578.156 215.223 576.060 211.992 573.790 208.936 C 570.297 204.308 567.153 199.244 564.358 194.092 C 566.367 193.917 568.113 194.353 569.685 195.401 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 464.290 140.652 C 463.760 140.948 463.236 141.239 462.719 141.525 C 463.242 144.494 465.164 146.241 468.656 146.764 C 469.355 143.708 468.220 141.787 465.513 141.001 C 465.076 140.826 464.727 140.652 464.290 140.652 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 488.216 155.584 C 488.740 156.020 489.439 156.282 490.137 156.282 C 490.923 156.282 491.709 156.020 492.233 155.584 C 492.757 155.147 493.106 154.623 493.106 154.099 C 493.106 153.400 492.757 152.877 492.233 152.527 C 491.709 152.091 490.923 151.916 490.137 151.916 C 489.438 151.916 488.740 152.091 488.216 152.527 C 487.605 152.877 487.343 153.400 487.343 154.099 C 487.343 154.623 487.605 155.147 488.216 155.584 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 406.922 95.769 C 407.008 96.119 406.834 96.294 406.572 96.555 C 402.730 99.087 401.595 102.231 403.167 105.898 C 407.934 105.496 412.707 105.089 417.487 104.676 C 418.098 104.676 418.797 104.589 419.408 104.502 C 419.926 103.110 420.450 101.713 420.980 100.310 C 420.107 98.739 419.059 97.341 418.011 96.119 C 415.042 93.062 411.637 91.491 407.707 91.403 C 407.008 92.626 406.660 94.110 406.922 95.769 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 369.985 48.093 C 376.709 47.045 383.432 47.220 390.156 48.791 C 396.181 50.189 400.808 48.617 404.040 44.164 C 403.189 43.325 402.345 42.481 401.508 41.631 C 365.096 36.739 328.770 38.313 292.620 46.259 C 245.642 56.650 204.165 77.782 168.190 109.566 C 156.401 119.870 145.486 131.047 135.269 143.010 C 128.022 151.480 121.386 160.211 115.099 169.468 C 108.986 178.374 103.485 187.717 98.508 197.235 C 93.531 206.841 89.164 216.533 85.410 226.575 C 84.537 229.020 83.664 231.552 82.703 234.084 C 85.235 237.751 86.545 241.856 86.371 246.134 C 86.371 248.142 86.982 249.889 88.292 251.461 C 90.825 254.779 92.919 258.359 94.578 262.201 C 95.102 263.423 95.714 264.646 96.325 265.955 C 97.548 268.314 98.770 270.846 99.993 273.203 C 101.041 275.212 101.389 277.569 101.215 279.927 C 100.691 285.079 102.088 289.357 105.494 292.675 C 107.441 292.097 109.391 291.515 111.345 290.929 C 112.244 294.135 113.146 297.336 114.051 300.535 C 114.051 307.083 113.614 313.633 112.915 320.182 C 112.915 320.530 112.654 320.880 112.304 321.316 C 108.375 325.421 106.367 330.223 106.367 335.812 C 106.367 340.963 106.366 346.028 106.367 351.006 C 106.367 353.712 106.454 356.419 106.716 359.126 C 106.804 360.610 106.716 362.095 106.367 363.667 C 115.972 375.891 122.522 389.600 126.276 404.707 C 126.451 405.406 126.887 406.192 127.411 406.890 C 130.903 411.169 135.182 414.487 140.247 417.019 C 141.295 417.543 142.168 418.242 143.041 419.115 C 147.232 423.742 150.463 429.157 152.646 435.182 C 155.091 442.080 156.489 449.152 157.012 456.400 C 157.100 459.281 157.711 462.163 158.759 464.870 C 159.632 467.315 160.767 469.673 161.990 471.943 C 162.688 473.253 163.299 474.563 163.823 475.785 C 164.434 477.357 165.308 478.754 166.356 480.151 C 167.752 481.985 168.626 483.993 168.975 486.264 C 169.063 486.787 169.324 487.311 169.674 487.748 C 170.721 488.884 171.420 490.018 171.682 491.416 C 171.944 492.550 172.381 493.773 172.817 495.082 C 174.215 498.575 175.786 501.981 177.794 505.211 C 179.541 508.268 181.025 511.586 181.985 514.992 C 182.597 517.087 183.208 519.095 183.819 521.191 C 184.344 523.112 185.042 525.033 186.090 526.954 C 186.963 528.613 188.098 530.273 189.321 531.844 C 197.441 541.799 205.736 551.491 214.207 561.097 C 215.168 562.145 215.953 563.279 216.739 564.502 C 219.882 564.327 222.938 564.764 225.995 565.899 C 229.138 567.122 232.195 568.431 235.251 569.829 C 236.561 570.440 237.871 570.265 239.093 569.392 C 238.919 567.645 238.045 566.336 236.474 565.725 C 232.981 564.327 229.313 563.104 225.645 562.145 C 224.597 561.795 223.550 561.534 222.502 561.534 C 221.192 556.993 220.144 552.364 219.445 547.649 C 219.271 546.514 218.747 545.641 217.961 544.768 C 215.954 542.759 213.770 541.275 211.150 540.402 C 211.088 530.477 211.032 520.552 210.976 510.626 C 211.412 510.277 211.849 509.927 212.286 509.752 C 212.548 509.577 212.809 509.404 213.159 509.316 C 213.509 509.316 213.770 509.316 214.207 509.316 C 214.731 509.404 215.342 509.491 215.953 509.665 C 216.386 510.075 216.822 510.481 217.263 510.888 C 222.327 500.234 228.440 490.193 235.425 481.025 C 236.036 480.151 236.474 479.191 236.474 478.055 C 237.172 469.585 237.434 460.940 237.259 452.471 C 237.172 451.685 237.346 450.986 237.783 450.288 C 238.219 449.240 238.744 448.192 239.355 447.232 C 244.769 445.310 250.270 444.612 255.859 445.136 C 256.295 444.874 256.557 444.700 256.906 444.350 C 260.399 441.644 263.018 438.237 264.764 434.221 C 265.813 431.601 266.511 428.982 266.773 426.275 C 267.123 421.908 267.035 417.542 266.249 413.176 C 265.463 408.287 265.725 403.572 267.123 399.031 C 267.821 396.761 269.043 394.840 270.790 393.093 C 272.886 391.085 274.981 388.814 276.989 386.545 C 279.347 383.925 281.705 380.956 283.975 377.812 C 284.238 377.376 284.412 376.939 284.499 376.416 C 285.285 372.137 285.285 368.032 284.586 363.841 C 284.411 362.531 283.888 361.396 283.015 360.349 C 282.142 359.475 281.705 358.427 281.704 357.205 C 281.704 356.681 281.617 356.332 281.356 355.983 C 281.006 355.633 280.745 355.458 280.308 355.371 C 279.959 355.284 279.609 355.109 279.260 355.109 C 278.911 354.935 278.649 354.847 278.299 354.673 C 277.601 354.498 276.990 354.499 276.204 354.498 C 275.505 354.411 274.981 354.672 274.632 355.371 C 273.147 354.934 271.925 353.538 270.790 351.006 C 269.743 348.822 267.909 347.774 265.202 348.211 C 263.018 348.036 260.836 347.425 258.914 346.202 C 257.692 345.591 256.470 344.893 255.073 344.194 C 254.374 341.225 252.628 339.654 249.658 339.391 C 248.698 339.828 247.737 339.916 246.777 339.915 C 238.744 339.479 231.845 336.598 225.907 331.446 C 224.336 330.136 223.375 328.477 222.852 326.468 C 222.065 323.412 221.454 320.443 220.668 317.562 C 220.494 316.776 220.145 316.164 219.445 315.641 C 216.652 313.371 213.770 311.100 210.889 309.004 C 209.317 307.869 208.094 306.647 207.221 305.076 C 206.523 304.028 205.475 303.067 204.165 302.368 C 202.331 301.408 200.673 300.272 199.362 298.788 C 198.751 298.002 197.791 297.740 196.742 297.740 C 195.782 297.915 194.821 298.264 193.948 298.613 C 193.425 298.963 192.726 299.224 192.028 299.224 C 190.544 299.399 189.146 299.661 187.662 300.097 C 182.685 296.430 178.668 291.802 175.612 285.952 C 175.262 285.254 174.913 284.555 174.389 283.856 C 172.729 281.324 170.722 279.403 168.277 277.832 C 165.919 276.259 163.212 275.648 160.243 275.910 C 157.012 276.172 153.956 276.784 150.900 277.832 C 150.464 277.832 150.027 277.832 149.590 277.832 C 149.005 277.107 148.423 276.380 147.844 275.648 C 148.543 271.807 147.232 269.099 143.827 267.440 C 143.303 267.178 142.779 266.741 142.343 266.305 C 139.723 263.249 137.191 263.424 134.571 266.829 C 133.262 268.488 132.126 270.060 130.904 271.719 C 129.158 274.164 127.410 276.521 125.839 278.879 C 125.315 279.665 124.704 280.451 124.092 281.324 C 122.259 283.507 120.425 285.777 118.679 288.047 C 118.417 288.397 118.068 288.747 117.718 289.095 C 116.551 286.712 115.387 284.325 114.226 281.936 C 112.534 282.695 110.846 283.452 109.161 284.206 C 106.454 283.507 105.320 282.022 105.494 279.490 C 105.843 276.084 105.930 272.854 105.930 269.623 C 105.930 266.043 106.454 262.637 107.415 259.319 C 108.113 257.049 107.852 254.953 106.716 252.945 C 105.287 252.483 103.861 252.017 102.438 251.548 C 104.268 243.169 106.102 234.787 107.939 226.400 C 107.645 225.996 107.353 225.589 107.066 225.177 C 105.756 225.352 104.271 226.400 102.874 228.321 C 100.953 230.853 99.294 233.472 97.897 236.179 C 96.642 236.562 95.391 236.940 94.142 237.315 C 92.483 233.124 93.007 228.757 95.452 224.217 C 98.071 219.414 100.167 214.350 101.652 209.023 C 101.827 208.412 102.175 208.062 102.700 207.801 C 104.359 206.753 105.668 205.356 106.629 203.610 C 109.249 199.069 111.693 194.353 114.226 189.726 C 115.535 187.281 117.544 186.058 120.163 186.058 C 120.338 186.058 120.338 186.058 120.425 186.058 C 121.412 187.431 122.401 188.799 123.394 190.163 C 124.704 190.424 125.839 189.988 126.626 188.853 C 128.022 186.931 129.769 185.622 131.864 184.749 C 132.126 184.661 132.563 184.661 132.999 184.749 C 133.174 187.281 132.475 189.638 130.816 192.083 C 130.554 192.520 130.292 192.957 130.031 193.394 C 128.110 196.712 127.935 200.117 129.332 203.348 C 129.944 204.745 130.292 206.229 130.380 207.889 C 131.512 210.163 132.647 212.433 133.785 214.699 C 134.135 214.350 134.396 214.088 134.571 213.651 C 134.746 213.127 134.833 212.603 134.746 212.080 C 134.746 211.294 134.833 210.508 135.182 209.721 C 135.619 208.500 135.444 207.539 134.484 206.840 C 132.825 206.055 132.476 204.570 133.261 202.562 C 136.055 195.663 139.287 188.940 142.866 182.391 C 146.272 176.017 151.511 171.475 158.409 168.943 C 162.950 167.109 166.618 164.054 169.150 159.775 C 170.547 157.592 171.420 155.059 171.944 152.527 C 172.118 151.829 172.468 151.130 172.992 150.607 C 174.477 148.860 176.397 147.463 178.667 146.328 C 181.287 145.105 183.733 143.883 186.090 142.573 C 187.137 141.962 188.010 141.437 188.709 140.826 C 189.582 140.215 190.019 139.517 190.281 138.644 C 190.630 137.247 191.067 136.111 191.678 134.976 C 192.639 133.143 193.687 131.396 194.821 129.737 C 195.346 129.213 195.695 128.427 196.044 127.467 C 196.307 126.244 197.180 125.371 198.314 124.934 C 199.625 124.411 200.934 124.236 202.419 124.498 C 204.776 124.061 207.046 124.148 209.229 124.585 C 211.761 125.109 214.381 125.458 217.001 125.458 C 221.192 125.808 223.637 124.061 224.249 120.306 C 224.336 119.782 224.511 119.259 224.511 118.822 C 224.773 115.853 225.035 113.059 225.384 110.177 C 225.384 109.741 225.209 109.304 224.860 108.955 C 224.336 108.431 223.899 107.907 223.375 107.470 C 226.019 107.184 228.668 106.894 231.321 106.597 C 231.671 106.859 231.933 107.121 232.020 107.470 C 232.108 107.907 232.282 108.257 232.544 108.518 C 232.718 108.868 232.893 109.130 233.242 109.304 C 233.504 109.566 233.854 109.653 234.290 109.653 C 234.988 109.741 235.600 110.090 236.299 110.352 C 236.735 110.789 237.085 111.312 237.172 111.836 C 237.346 112.360 237.434 112.884 237.608 113.409 C 237.696 114.020 237.608 114.543 237.347 115.067 C 236.997 116.027 236.822 116.988 236.910 117.949 C 241.708 118.507 246.510 119.060 251.318 119.608 C 251.929 117.250 251.928 114.980 251.405 112.709 C 251.055 110.788 250.619 108.955 250.357 107.121 C 250.968 105.724 251.928 104.589 253.151 103.629 C 254.199 102.930 255.247 102.318 256.470 101.969 C 256.644 101.795 256.906 101.795 257.080 101.620 C 257.430 101.184 257.692 100.572 257.605 100.048 C 257.430 98.825 257.343 97.778 256.994 96.730 C 256.470 94.721 255.334 93.062 253.850 91.840 C 251.928 91.840 251.928 90.880 253.588 88.871 C 255.160 87.037 256.819 85.553 258.740 84.156 C 258.740 84.069 258.914 84.069 259.002 83.981 C 257.862 81.338 256.727 78.690 255.596 76.035 C 254.136 78.079 252.681 80.116 251.230 82.148 C 250.702 79.708 250.178 77.263 249.658 74.813 C 247.651 74.114 245.642 74.376 243.721 75.860 C 240.839 77.869 238.045 80.314 235.513 82.846 C 234.901 82.933 234.290 82.846 233.679 82.584 C 232.893 82.322 232.108 82.322 231.321 82.584 C 230.623 82.846 230.186 83.283 229.749 83.981 C 229.488 84.767 229.226 85.466 228.876 86.078 C 226.083 88.348 222.938 90.007 219.533 91.141 C 218.834 91.316 218.136 91.578 217.263 91.840 C 215.953 92.189 214.818 91.840 213.770 91.055 C 212.897 89.133 213.246 87.387 214.905 86.078 C 221.018 81.537 227.130 76.909 233.068 72.368 C 235.076 70.883 237.172 70.360 239.355 70.883 C 239.555 72.606 239.758 74.324 239.966 76.035 C 244.157 75.599 247.388 73.241 249.833 69.049 C 250.881 67.041 252.540 65.993 254.723 65.644 C 256.295 65.382 257.779 65.208 259.176 65.208 C 260.050 65.033 260.923 64.859 261.709 64.684 C 261.709 65.993 261.272 67.042 260.486 68.002 C 259.962 68.701 259.176 69.137 258.303 69.399 C 257.343 69.661 256.469 70.098 255.771 70.796 C 255.684 70.970 255.596 71.145 255.596 71.233 C 255.945 73.415 257.255 74.638 259.439 74.726 C 261.272 74.376 263.018 73.765 264.591 72.717 C 265.202 72.368 266.075 72.106 266.948 72.106 C 270.266 72.455 272.186 70.796 272.711 67.304 C 272.886 66.867 273.061 66.430 273.235 65.993 C 275.238 66.698 277.247 67.397 279.260 68.089 C 282.141 68.177 283.538 66.779 283.626 63.811 C 283.801 58.572 286.507 55.602 291.834 54.904 C 292.096 54.816 292.358 54.643 292.533 54.293 C 293.494 52.546 294.017 50.713 294.017 48.617 C 298.233 48.740 302.453 48.856 306.678 48.966 C 306.761 50.078 306.848 51.184 306.941 52.284 C 307.110 52.639 307.284 52.989 307.464 53.332 C 303.621 57.523 299.344 61.366 294.890 64.945 C 290.699 68.177 289.738 72.019 291.922 76.560 C 292.533 77.782 293.231 79.004 294.192 79.965 C 294.803 80.576 295.414 81.100 296.287 81.537 C 296.637 81.711 297.073 81.973 297.510 82.148 C 300.566 80.401 303.447 78.481 306.329 76.385 C 307.115 75.686 308.075 75.249 309.210 74.900 C 314.100 73.328 318.292 70.622 321.523 66.779 C 321.872 66.430 322.309 66.343 322.832 66.430 C 327.286 66.866 331.652 66.517 335.931 65.208 C 338.463 64.597 340.558 63.374 342.479 61.540 C 344.226 59.620 346.408 59.095 349.116 59.794 C 350.076 59.968 350.949 59.794 351.823 59.270 C 352.958 58.572 354.006 58.135 355.140 57.698 C 354.553 56.831 353.971 55.958 353.394 55.079 C 358.919 52.756 364.449 50.428 369.985 48.093 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 622.165 394.665 C 621.632 394.696 621.109 394.726 620.593 394.752 C 618.846 398.594 616.576 402.175 613.782 405.406 C 611.861 407.763 609.940 410.295 608.106 412.915 C 606.797 414.661 605.749 416.669 604.875 418.678 C 604.352 419.988 603.915 421.210 603.478 422.608 C 601.469 428.720 599.548 435.007 597.541 441.207 C 595.794 446.882 594.396 452.645 593.523 458.497 C 597.453 454.916 601.033 451.248 604.439 447.319 C 605.312 446.184 606.185 445.136 607.058 443.913 C 609.329 440.770 610.900 437.277 611.686 433.260 C 613.432 424.267 616.402 415.710 620.681 407.501 C 622.776 403.484 623.212 399.206 622.165 394.665 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 147.320 240.458 C 149.586 238.221 151.856 235.980 154.131 233.735 C 151.857 233.390 149.586 233.040 147.320 232.686 C 145.424 232.836 143.532 232.982 141.644 233.124 C 140.418 234.670 139.196 236.213 137.976 237.751 C 141.087 238.657 144.202 239.560 147.320 240.458 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 154.568 238.101 C 154.480 238.188 154.568 238.363 154.654 238.363 C 155.963 240.546 157.885 241.419 160.505 241.070 C 160.094 239.968 159.686 238.861 159.283 237.751 C 157.708 237.872 156.136 237.989 154.568 238.101 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 119.901 216.271 C 120.043 216.682 120.189 217.090 120.338 217.493 C 122.172 219.152 123.831 220.899 125.403 222.820 C 126.363 223.955 126.887 225.177 126.887 226.487 C 127.149 230.679 129.069 233.822 132.562 235.743 C 133.436 235.743 134.221 235.481 135.007 235.045 C 136.753 234.258 137.627 233.036 137.802 231.377 C 137.802 231.202 137.802 231.115 137.802 230.941 C 135.968 226.225 132.999 222.383 128.895 219.327 C 127.760 218.629 126.712 217.930 125.839 217.318 C 124.092 216.009 122.084 215.660 119.901 216.271 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 397.840 86.078 C 397.753 86.252 397.578 86.426 397.491 86.601 C 396.181 88.783 396.617 90.880 398.801 92.626 C 395.483 91.665 393.386 92.714 392.252 95.682 C 390.942 99.525 390.767 103.105 391.815 106.597 C 394.697 105.200 397.054 103.191 399.149 100.659 C 401.333 97.953 401.245 95.333 398.888 92.626 C 401.595 93.849 403.953 93.325 405.612 91.055 C 404.738 86.776 402.119 85.118 397.840 86.078 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":212.688,\\\"max\\\":504.667},\\\"y\\\":{\\\"min\\\":184.364,\\\"max\\\":476.343}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":358.677,\\\"y\\\":701.029,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":358.677,\\\"y\\\":36.72,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":63.36,\\\"y\\\":331.256,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999869891268289,\\\"y\\\":0.0051011348795355635}},{\\\"point\\\":{\\\"x\\\":653.994,\\\"y\\\":331.256,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999869891268289,\\\"y\\\":0.0051011348795355635}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":568.101,\\\"y\\\":540.846,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128838074391485,\\\"y\\\":0.7012821665286114}},{\\\"point\\\":{\\\"x\\\":149.081,\\\"y\\\":540.889,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987062292667334,\\\"y\\\":0.7154086980068547}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":568.248,\\\"y\\\":121.763,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6313945384208971,\\\"y\\\":-0.7754617571823011}},{\\\"point\\\":{\\\"x\\\":149.818,\\\"y\\\":121.834,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.681693569027433,\\\"y\\\":-0.7316378051649877}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":358.677,\\\"y\\\":626.784,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"8E8B3F22-3ECA-490A-B60F-ADE6EEC19437_0\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"49.99%\\\",\\\"r\\\":\\\"63.14%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"61.57%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"goat\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":13.50635484243,\\\"max\\\":705.8752923127654},\\\"y\\\":{\\\"min\\\":55.117,\\\"max\\\":627.2227333210717}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"goat\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"goat\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 157.344 121.781 C 157.335 121.787 84.166 148.070 69.800 176.618 C 65.774 184.618 69.358 203.697 78.864 205.293 C 89.158 207.021 116.037 198.838 116.040 198.837 C 116.038 198.839 89.401 219.219 89.399 219.221 C 89.399 219.222 91.978 225.215 95.955 226.564 C 99.459 227.752 104.496 225.062 104.497 225.062 C 104.497 225.064 98.134 231.306 105.231 239.357 C 107.638 242.087 120.304 245.335 120.305 245.336 C 120.304 245.334 113.364 236.280 113.993 231.421 C 114.756 225.524 133.756 221.744 130.462 213.278 C 129.636 211.154 155.355 219.500 155.358 219.500 C 155.360 219.500 170.482 220.303 175.868 219.043 C 180.024 218.070 190.276 212.488 190.277 212.488 C 190.276 212.488 179.924 218.843 175.653 220.055 C 170.695 221.462 156.487 220.828 156.587 221.379 C 160.877 244.873 145.431 275.806 132.500 351.686 C 126.434 387.286 151.376 414.683 151.378 414.689 C 151.380 414.690 169.315 427.813 169.317 427.815 C 169.320 427.816 201.792 438.983 201.795 438.984 C 201.792 438.983 169.471 427.809 169.468 427.808 C 169.466 427.806 147.175 411.825 147.173 411.823 C 147.169 411.821 112.457 393.454 108.394 393.723 C 100.768 394.228 72.180 429.815 44.064 441.796 C 41.381 442.940 40.164 455.794 38.285 459.688 C 34.890 466.724 16.380 475.013 19.004 487.656 C 25.864 520.716 13.929 530.896 15.685 530.962 C 27.262 531.401 37.341 516.885 37.344 516.884 C 37.343 516.887 26.265 546.897 27.597 546.124 C 64.278 524.835 66.579 494.147 66.583 494.142 C 66.581 494.141 47.146 491.893 45.925 479.922 C 44.400 464.972 62.059 479.696 68.820 458.547 C 70.610 452.946 78.151 465.619 79.057 468.904 C 79.852 471.787 75.286 481.815 76.176 481.359 C 103.950 467.132 69.318 435.210 108.818 417.253 C 111.381 416.088 127.561 427.429 132.704 429.819 C 139.399 432.930 165.280 442.944 165.284 442.945 C 165.287 442.945 201.936 440.158 201.939 440.157 C 201.936 440.158 166.217 444.326 166.214 444.327 C 166.210 444.328 132.026 446.351 126.580 451.978 C 119.110 459.697 130.613 517.746 117.046 536.660 C 112.875 542.474 125.041 547.250 127.298 560.272 C 128.635 567.983 129.083 582.127 133.725 584.026 C 167.643 597.902 170.439 613.371 170.687 612.830 C 175.419 602.518 171.699 590.597 171.699 590.595 C 171.701 590.597 185.694 612.250 185.848 610.735 C 190.398 566.045 161.661 551.838 161.659 551.832 C 161.657 551.833 152.796 564.579 146.721 562.368 C 138.577 559.404 141.288 544.383 142.672 538.201 C 143.746 533.401 147.107 524.033 153.202 522.352 C 160.647 520.299 173.792 533.127 173.795 533.128 C 173.793 533.126 168.146 507.156 162.119 504.933 C 145.435 498.782 143.786 493.215 142.165 474.579 C 141.662 468.792 180.338 470.443 215.740 466.891 C 219.225 466.541 234.841 474.150 244.185 464.903 C 246.192 462.917 255.422 420.204 255.423 420.200 C 255.422 420.204 245.634 464.299 245.633 464.304 C 245.641 464.304 295.237 475.939 331.846 470.609 C 366.091 465.623 411.954 450.564 411.962 450.562 C 411.961 450.560 405.396 439.017 403.597 433.810 C 401.477 427.675 399.262 412.180 399.262 412.177 C 399.262 412.179 401.955 426.904 404.133 432.721 C 406.241 438.353 413.343 450.486 413.621 450.824 C 432.631 473.966 478.591 481.144 478.598 481.147 C 478.594 481.149 442.652 507.345 442.648 507.347 C 442.647 507.349 430.899 509.087 426.616 520.133 C 424.627 525.263 432.000 537.066 431.384 540.038 C 429.733 547.998 419.499 569.587 426.110 577.093 C 443.406 596.728 444.008 622.488 444.956 621.706 C 451.160 616.583 456.502 599.331 456.503 599.329 C 456.504 599.332 457.576 627.857 459.893 625.025 C 485.613 593.602 467.685 559.549 467.686 559.542 C 467.684 559.542 444.371 569.606 446.251 551.103 C 447.861 535.254 458.120 546.179 459.893 522.735 C 460.142 519.440 473.311 520.358 471.206 535.153 C 469.106 549.912 485.388 552.467 485.390 552.468 C 485.389 552.466 476.145 540.032 481.675 533.954 C 487.164 527.920 492.653 511.606 486.178 503.889 C 483.741 500.984 525.500 489.768 525.504 489.766 C 525.506 489.766 538.386 497.621 550.072 488.080 C 556.695 482.672 555.062 467.647 555.063 467.645 C 555.059 467.646 527.106 475.494 517.069 477.289 C 507.530 478.995 480.027 481.232 480.024 481.232 C 480.027 481.232 507.708 478.774 517.276 476.869 C 527.411 474.851 551.927 467.259 555.487 465.986 C 559.878 464.415 592.961 453.146 600.394 446.352 C 606.051 441.180 604.266 459.075 597.641 532.894 C 595.443 557.382 611.822 544.680 622.912 562.073 C 627.830 569.787 632.688 583.253 638.367 584.309 C 654.636 587.335 687.844 605.005 688.689 603.520 C 689.076 602.838 676.777 581.863 676.776 581.861 C 676.779 581.862 704.834 601.962 703.850 598.105 C 692.330 552.964 671.365 543.963 671.362 543.958 C 671.359 543.959 649.474 559.880 640.604 555.729 C 626.000 548.893 642.251 537.081 627.173 521.510 C 624.254 518.496 633.496 507.250 644.242 518.770 C 651.927 527.009 667.028 513.635 667.030 513.635 C 667.028 513.634 655.670 518.615 645.113 503.709 C 640.154 496.706 630.846 492.233 623.206 490.540 C 618.500 489.498 625.588 443.913 625.588 443.908 C 625.588 443.905 647.670 428.341 631.940 415.593 C 612.290 399.669 599.688 424.142 598.704 424.471 C 579.692 430.831 538.018 431.985 538.160 427.000 C 540.391 348.668 504.613 297.187 504.610 297.174 C 504.617 297.174 545.829 324.690 578.283 303.007 C 614.899 278.544 596.962 232.785 596.964 232.778 C 596.959 232.781 578.656 258.116 550.373 269.333 C 523.211 280.106 504.572 277.204 466.467 279.416 C 426.791 281.720 398.251 329.455 329.151 331.701 C 269.279 333.647 241.198 306.418 235.006 287.736 C 224.352 255.592 226.047 208.316 231.699 195.448 C 236.937 183.527 234.728 166.362 234.728 166.359 C 234.733 166.362 250.137 188.837 277.317 195.245 C 330.564 207.798 362.066 160.697 349.872 158.573 C 335.376 156.048 322.134 168.200 274.459 159.259 C 257.339 156.049 230.281 139.117 228.068 136.481 C 218.293 124.839 212.133 121.970 212.131 121.969 C 212.131 121.966 205.809 113.601 207.717 97.979 C 209.310 84.933 220.632 59.015 220.633 59.012 C 220.630 59.014 202.563 69.760 194.361 82.900 C 183.683 100.006 183.356 117.704 183.355 117.708 C 183.356 117.702 171.540 105.338 190.152 57.117 C 148.142 91.049 157.347 121.775 157.344 121.781 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 285.840 174.056 C 305.935 176.650 324.854 169.019 344.360 166.501 M 231.171 151.894 C 231.177 151.896 265.751 171.462 285.840 174.056 M 190.152 57.117 C 148.142 91.049 157.347 121.775 157.344 121.781 C 157.335 121.787 84.166 148.070 69.800 176.618 C 65.774 184.618 69.358 203.697 78.864 205.293 C 89.158 207.021 116.037 198.838 116.040 198.837 C 116.038 198.839 89.401 219.219 89.399 219.221 C 89.399 219.222 91.978 225.215 95.955 226.564 C 99.459 227.752 104.496 225.062 104.497 225.062 C 104.497 225.064 98.134 231.306 105.231 239.357 C 107.638 242.087 120.304 245.335 120.305 245.336 C 120.304 245.334 113.364 236.280 113.993 231.421 C 114.756 225.524 133.756 221.744 130.462 213.278 C 129.636 211.154 155.355 219.500 155.358 219.500 C 155.360 219.500 170.482 220.303 175.868 219.043 C 180.024 218.070 190.276 212.488 190.277 212.488 C 190.276 212.488 179.924 218.843 175.653 220.055 C 170.695 221.462 156.487 220.828 156.587 221.379 C 160.877 244.873 145.431 275.806 132.500 351.686 C 126.434 387.286 151.376 414.683 151.378 414.689 C 151.380 414.690 169.315 427.813 169.317 427.815 C 169.466 427.806 147.175 411.825 147.173 411.823 C 147.169 411.821 112.457 393.454 108.394 393.723 C 100.768 394.228 72.180 429.815 44.064 441.796 C 41.381 442.940 40.164 455.794 38.285 459.688 C 34.890 466.724 16.380 475.013 19.004 487.656 C 25.864 520.716 13.929 530.896 15.685 530.962 C 27.262 531.401 37.341 516.885 37.344 516.884 C 37.343 516.887 26.265 546.897 27.597 546.124 C 64.278 524.835 66.579 494.147 66.583 494.142 C 66.581 494.141 47.146 491.893 45.925 479.922 C 44.400 464.972 62.059 479.696 68.820 458.547 C 70.610 452.946 78.151 465.619 79.057 468.904 C 79.852 471.787 75.286 481.815 76.176 481.359 C 103.950 467.132 69.318 435.210 108.818 417.253 C 111.381 416.088 127.561 427.429 132.704 429.819 C 139.399 432.930 165.280 442.944 165.284 442.945 C 165.287 442.945 201.936 440.158 201.939 440.157 C 201.936 440.158 166.217 444.326 166.214 444.327 C 166.210 444.328 132.026 446.351 126.580 451.978 C 119.110 459.697 130.613 517.746 117.046 536.660 C 112.875 542.474 125.041 547.250 127.298 560.272 C 128.635 567.983 129.083 582.127 133.725 584.026 C 167.643 597.902 170.439 613.371 170.687 612.830 C 175.419 602.518 171.699 590.597 171.699 590.595 C 171.701 590.597 185.694 612.250 185.848 610.735 C 190.398 566.045 161.661 551.838 161.659 551.832 C 161.657 551.833 152.796 564.579 146.721 562.368 C 138.577 559.404 141.288 544.383 142.672 538.201 C 143.746 533.401 147.107 524.033 153.202 522.352 C 160.647 520.299 173.792 533.127 173.795 533.128 C 173.793 533.126 168.146 507.156 162.119 504.933 C 145.435 498.782 143.786 493.215 142.165 474.579 C 141.662 468.792 180.338 470.443 215.740 466.891 C 219.225 466.541 234.841 474.150 244.185 464.903 C 246.192 462.917 255.422 420.204 255.423 420.200 C 255.422 420.204 245.634 464.299 245.633 464.304 C 245.641 464.304 295.237 475.939 331.846 470.609 C 366.091 465.623 411.954 450.564 411.962 450.562 C 411.961 450.560 405.396 439.017 403.597 433.810 C 401.477 427.675 399.262 412.180 399.262 412.177 C 399.262 412.179 401.955 426.904 404.133 432.721 C 406.241 438.353 413.343 450.486 413.621 450.824 C 432.631 473.966 478.591 481.144 478.598 481.147 C 478.594 481.149 442.652 507.345 442.648 507.347 C 442.647 507.349 430.899 509.087 426.616 520.133 C 424.627 525.263 432.000 537.066 431.384 540.038 C 429.733 547.998 419.499 569.587 426.110 577.093 C 443.406 596.728 444.008 622.488 444.956 621.706 C 451.160 616.583 456.502 599.331 456.503 599.329 C 456.504 599.332 457.576 627.857 459.893 625.025 C 485.613 593.602 467.685 559.549 467.686 559.542 C 467.684 559.542 444.371 569.606 446.251 551.103 C 447.861 535.254 458.120 546.179 459.893 522.735 C 460.142 519.440 473.311 520.358 471.206 535.153 C 469.106 549.912 485.388 552.467 485.390 552.468 C 485.389 552.466 476.145 540.032 481.675 533.954 C 487.164 527.920 492.653 511.606 486.178 503.889 C 483.741 500.984 525.500 489.768 525.504 489.766 C 525.506 489.766 538.386 497.621 550.072 488.080 C 556.695 482.672 555.062 467.647 555.063 467.645 C 555.059 467.646 527.106 475.494 517.069 477.289 C 507.530 478.995 480.027 481.232 480.024 481.232 C 480.027 481.232 507.708 478.774 517.276 476.869 C 527.411 474.851 551.927 467.259 555.487 465.986 C 559.878 464.415 592.961 453.146 600.394 446.352 C 606.051 441.180 604.266 459.075 597.641 532.894 C 595.443 557.382 611.822 544.680 622.912 562.073 C 627.830 569.787 632.688 583.253 638.367 584.309 C 654.636 587.335 687.844 605.005 688.689 603.520 C 689.076 602.838 676.777 581.863 676.776 581.861 C 676.779 581.862 704.834 601.962 703.850 598.105 C 692.330 552.964 671.365 543.963 671.362 543.958 C 671.359 543.959 649.474 559.880 640.604 555.729 C 626.000 548.893 642.251 537.081 627.173 521.510 C 624.254 518.496 633.496 507.250 644.242 518.770 C 651.927 527.009 667.028 513.635 667.030 513.635 C 667.028 513.634 655.670 518.615 645.113 503.709 C 640.154 496.706 630.846 492.233 623.206 490.540 C 618.500 489.498 625.588 443.913 625.588 443.908 C 625.588 443.905 647.670 428.341 631.940 415.593 C 612.290 399.669 599.688 424.142 598.704 424.471 C 579.692 430.831 538.018 431.985 538.160 427.000 C 540.391 348.668 504.613 297.187 504.610 297.174 C 504.617 297.174 545.829 324.690 578.283 303.007 C 614.899 278.544 596.962 232.785 596.964 232.778 C 596.959 232.781 578.656 258.116 550.373 269.333 C 523.211 280.106 504.572 277.204 466.467 279.416 C 426.791 281.720 398.251 329.455 329.151 331.701 C 269.279 333.647 241.198 306.418 235.006 287.736 C 224.352 255.592 226.047 208.316 231.699 195.448 C 236.937 183.527 234.728 166.362 234.728 166.359 C 234.733 166.362 250.137 188.837 277.317 195.245 C 330.564 207.798 362.066 160.697 349.872 158.573 C 335.376 156.048 322.134 168.200 274.459 159.259 C 257.339 156.049 230.281 139.117 228.068 136.481 C 218.293 124.839 212.133 121.970 212.131 121.969 C 212.131 121.966 205.809 113.601 207.717 97.979 C 209.310 84.933 220.632 59.015 220.633 59.012 C 220.630 59.014 202.563 69.760 194.361 82.900 C 183.683 100.006 183.356 117.704 183.355 117.708 C 183.356 117.702 171.540 105.338 190.152 57.117 M 201.795 438.984 C 201.792 438.983 169.471 427.809 169.468 427.808 C 169.320 427.816 201.792 438.983 201.795 438.984 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 182.358 117.728 C 182.356 117.729 175.893 121.097 170.026 121.913 C 162.572 122.950 162.001 122.060 157.988 122.133 M 184.635 118.608 C 184.636 118.609 188.324 121.445 196.012 122.792 C 203.503 124.105 211.791 122.204 211.793 122.204 M 503.214 295.298 C 503.220 295.298 543.895 300.478 566.967 286.487 C 595.845 268.974 596.950 236.959 596.953 236.954 M 657.675 588.455 C 657.675 588.454 662.084 581.090 661.995 575.104 C 661.863 566.300 654.534 555.865 654.534 555.863 M 23.502 500.495 C 23.504 500.495 32.215 503.350 38.031 502.066 C 45.404 500.438 53.737 492.250 53.739 492.249 M 436.598 588.063 C 436.599 588.062 446.280 585.653 451.127 580.602 C 455.861 575.669 457.409 564.111 457.410 564.109 M 151.372 591.347 C 151.373 591.346 158.756 586.183 160.546 580.209 C 163.205 571.334 157.530 558.988 157.530 558.986 M 254.958 418.819 C 254.965 418.820 291.763 429.811 318.920 428.991 C 353.243 427.954 398.662 410.556 398.670 410.554 M 183.590 219.034 C 184.475 263.725 168.985 283.427 168.793 353.242 C 168.683 393.029 208.449 401.536 208.453 401.541 C 208.453 401.545 204.118 438.773 204.118 438.777 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 491.919 310.095 C 491.921 310.103 513.835 352.203 513.613 388.687 C 513.365 429.542 491.667 444.223 492.864 444.570 C 540.027 458.245 587.385 438.909 593.150 435.847 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 156.089 161.766 C 155.570 154.955 160.645 149.042 167.455 148.522 C 174.266 148.003 180.179 153.078 180.699 159.888 C 181.218 166.699 176.143 172.612 169.333 173.132 C 162.522 173.652 156.609 168.577 156.089 161.766 M 133.495 167.603 C 133.498 167.600 141.169 147.234 167.810 141.379 C 182.249 138.206 208.365 156.183 208.369 156.184 C 208.366 156.187 189.432 180.026 171.990 182.565 C 147.833 186.082 133.498 167.604 133.495 167.603 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 90.004 174.724 C 96.764 172.949 98.246 176.597 99.721 179.689 C 101.013 182.397 93.230 182.782 87.898 183.877 C 83.999 184.679 82.657 187.217 82.657 187.217 C 82.657 187.216 81.026 177.081 90.004 174.724 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":412.942,\\\"max\\\":492.241},\\\"y\\\":{\\\"min\\\":328.992,\\\"max\\\":408.291}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":322.963,\\\"y\\\":671.138,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":331.605,\\\"y\\\":330.036,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":133.656,\\\"y\\\":360.936,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999869423966429,\\\"y\\\":0.005110287292651839}},{\\\"point\\\":{\\\"x\\\":533.07,\\\"y\\\":360.936,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999869423966429,\\\"y\\\":0.005110287292651861}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":469.879,\\\"y\\\":582.683,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129335762692849,\\\"y\\\":0.7012315707581112}},{\\\"point\\\":{\\\"x\\\":135.206,\\\"y\\\":583.965,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986883991125055,\\\"y\\\":0.7154261114507943}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":146.477,\\\"y\\\":124.491,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5123703016030172,\\\"y\\\":-0.8587646208567474}},{\\\"point\\\":{\\\"x\\\":217.531,\\\"y\\\":126.951,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314454286031308,\\\"y\\\":-0.7754203187279841}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":593.778,\\\"y\\\":247.79,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.42632319145155145,\\\"y\\\":-0.9045709128811096}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"goat_fore\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":13.934734135126346,\\\"max\\\":354.4963633292218},\\\"y\\\":{\\\"min\\\":44.406,\\\"max\\\":603.4417631469097}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"goat_fore\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"goat_fore\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 329.190 320.648 C 329.162 346.721 329.143 381.346 329.100 417.097 C 329.101 431.326 329.101 445.650 329.115 460.421 C 293.052 464.574 245.783 453.087 245.775 453.086 C 245.776 453.082 255.552 409.041 255.553 409.037 C 255.552 409.041 246.333 451.701 244.329 453.684 C 234.997 462.920 219.400 455.321 215.919 455.670 C 180.561 459.217 141.934 457.568 142.436 463.348 C 144.055 481.961 145.702 487.521 162.365 493.665 C 168.385 495.885 174.025 521.822 174.026 521.825 C 174.024 521.824 160.895 509.012 153.460 511.062 C 147.372 512.741 144.015 522.097 142.942 526.892 C 141.560 533.066 138.852 548.068 146.986 551.028 C 153.054 553.236 161.904 540.507 161.905 540.506 C 161.908 540.512 190.609 554.701 186.065 599.335 C 185.911 600.848 171.935 579.222 171.933 579.220 C 171.933 579.222 175.649 591.129 170.923 601.428 C 170.675 601.968 167.882 586.518 134.007 572.660 C 129.371 570.763 128.923 556.636 127.588 548.935 C 125.333 535.929 113.182 531.159 117.348 525.352 C 130.898 506.462 119.409 448.485 126.871 440.775 C 132.309 435.156 166.451 433.135 166.455 433.134 C 166.459 433.134 202.132 428.970 202.136 428.970 C 202.132 428.970 165.530 431.754 165.526 431.754 C 165.523 431.753 139.673 421.751 132.987 418.644 C 127.850 416.257 111.690 404.930 109.130 406.094 C 69.680 424.028 104.268 455.911 76.530 470.120 C 75.640 470.575 80.200 460.560 79.406 457.680 C 78.502 454.400 70.970 441.742 69.182 447.336 C 62.429 468.459 44.792 453.753 46.315 468.685 C 47.535 480.641 66.946 482.886 66.948 482.887 C 66.944 482.892 64.646 513.542 28.011 534.804 C 26.680 535.576 37.744 505.604 37.745 505.601 C 37.743 505.602 27.676 520.100 16.113 519.662 C 14.360 519.595 26.280 509.428 19.428 476.409 C 16.808 463.781 35.294 455.503 38.685 448.476 C 40.562 444.587 41.777 431.749 44.457 430.606 C 72.538 418.640 101.091 383.097 108.707 382.593 C 112.765 382.324 147.434 400.669 147.438 400.671 C 147.440 400.672 169.703 416.634 169.705 416.635 C 169.708 416.636 201.989 427.797 201.992 427.798 C 201.989 427.797 169.557 416.644 169.554 416.642 C 169.552 416.641 151.639 403.534 151.637 403.533 C 151.636 403.527 126.724 376.164 132.783 340.608 C 145.698 264.822 161.125 233.928 156.840 210.464 C 156.740 209.913 170.931 210.546 175.882 209.141 C 180.148 207.931 190.487 201.584 190.488 201.583 C 190.487 201.584 180.248 207.159 176.097 208.130 C 170.718 209.389 155.614 208.587 155.612 208.587 C 155.610 208.587 129.922 200.251 130.748 202.372 C 134.038 210.828 115.061 214.603 114.299 220.493 C 113.670 225.346 120.603 234.389 120.603 234.390 C 120.602 234.390 107.952 231.146 105.548 228.419 C 98.459 220.378 104.814 214.143 104.814 214.142 C 104.813 214.142 99.783 216.828 96.283 215.642 C 92.311 214.295 89.736 208.309 89.735 208.309 C 89.738 208.307 116.341 187.952 116.344 187.950 C 116.340 187.951 89.495 196.124 79.214 194.397 C 69.719 192.803 66.140 173.748 70.161 165.758 C 84.509 137.246 157.587 110.995 157.596 110.989 C 157.599 110.983 148.405 80.296 190.363 46.406 C 171.775 94.567 183.575 106.915 183.575 106.921 C 183.576 106.918 183.902 89.242 194.567 72.157 C 202.759 59.033 220.804 48.300 220.806 48.298 C 220.805 48.302 209.497 74.187 207.906 87.217 C 206.001 102.820 212.315 111.174 212.315 111.177 C 212.317 111.178 218.469 114.044 228.232 125.671 C 230.443 128.304 257.466 145.215 274.565 148.421 C 322.181 157.351 335.406 145.214 349.884 147.735 C 362.064 149.857 330.601 196.899 277.420 184.362 C 250.274 177.962 234.888 155.515 234.884 155.512 C 234.884 155.515 237.090 172.658 231.859 184.565 C 226.213 197.417 224.521 244.634 235.161 276.737 C 241.346 295.397 269.392 322.592 329.190 320.648 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 151.631 579.972 C 151.632 579.970 159.006 574.814 160.794 568.847 C 163.450 559.983 157.782 547.653 157.782 547.650 M 329.190 320.648 C 329.162 346.721 329.143 381.346 329.100 417.097 C 329.101 431.326 329.101 445.650 329.115 460.421 C 293.052 464.574 245.783 453.087 245.775 453.086 C 245.776 453.082 255.552 409.041 255.553 409.037 C 255.552 409.041 246.333 451.701 244.329 453.684 C 234.997 462.920 219.400 455.321 215.919 455.670 C 180.561 459.217 141.934 457.568 142.436 463.348 C 144.055 481.961 145.702 487.521 162.365 493.665 C 168.385 495.885 174.025 521.822 174.026 521.825 C 174.024 521.824 160.895 509.012 153.460 511.062 C 147.372 512.741 144.015 522.097 142.942 526.892 C 141.560 533.066 138.852 548.068 146.986 551.028 C 153.054 553.236 161.904 540.507 161.905 540.506 C 161.908 540.512 190.609 554.701 186.065 599.335 C 185.911 600.848 171.935 579.222 171.933 579.220 C 171.933 579.222 175.649 591.129 170.923 601.428 C 170.675 601.968 167.882 586.518 134.007 572.660 C 129.371 570.763 128.923 556.636 127.588 548.935 C 125.333 535.929 113.182 531.159 117.348 525.352 C 130.898 506.462 119.409 448.485 126.871 440.775 C 132.309 435.156 166.451 433.135 166.455 433.134 C 166.459 433.134 202.132 428.970 202.136 428.970 C 202.132 428.970 165.530 431.754 165.526 431.754 C 165.523 431.753 139.673 421.751 132.987 418.644 C 127.850 416.257 111.690 404.930 109.130 406.094 C 69.680 424.028 104.268 455.911 76.530 470.120 C 75.640 470.575 80.200 460.560 79.406 457.680 C 78.502 454.400 70.970 441.742 69.182 447.336 C 62.429 468.459 44.792 453.753 46.315 468.685 C 47.535 480.641 66.946 482.886 66.948 482.887 C 66.944 482.892 64.646 513.542 28.011 534.804 C 26.680 535.576 37.744 505.604 37.745 505.601 C 37.743 505.602 27.676 520.100 16.113 519.662 C 14.360 519.595 26.280 509.428 19.428 476.409 C 16.808 463.781 35.294 455.503 38.685 448.476 C 40.562 444.587 41.777 431.749 44.457 430.606 C 72.538 418.640 101.091 383.097 108.707 382.593 C 112.765 382.324 147.434 400.669 147.438 400.671 C 147.440 400.672 169.703 416.634 169.705 416.635 C 169.708 416.636 201.989 427.797 201.992 427.798 C 201.989 427.797 169.557 416.644 169.554 416.642 C 169.552 416.641 151.639 403.534 151.637 403.533 C 151.636 403.527 126.724 376.164 132.783 340.608 C 145.698 264.822 161.125 233.928 156.840 210.464 C 156.740 209.913 170.931 210.546 175.882 209.141 C 180.148 207.931 190.487 201.584 190.488 201.583 C 190.487 201.584 180.248 207.159 176.097 208.130 C 170.718 209.389 155.614 208.587 155.612 208.587 C 155.610 208.587 129.922 200.251 130.748 202.372 C 134.038 210.828 115.061 214.603 114.299 220.493 C 113.670 225.346 120.603 234.389 120.603 234.390 C 120.602 234.390 107.952 231.146 105.548 228.419 C 98.459 220.378 104.814 214.143 104.814 214.142 C 104.813 214.142 99.783 216.828 96.283 215.642 C 92.311 214.295 89.736 208.309 89.735 208.309 C 89.738 208.307 116.341 187.952 116.344 187.950 C 116.340 187.951 89.495 196.124 79.214 194.397 C 69.719 192.803 66.140 173.748 70.161 165.758 C 84.509 137.246 157.587 110.995 157.596 110.989 C 157.599 110.983 148.405 80.296 190.363 46.406 C 171.775 94.567 183.575 106.915 183.575 106.921 C 183.576 106.918 183.902 89.242 194.567 72.157 C 202.759 59.033 220.804 48.300 220.806 48.298 C 220.805 48.302 209.497 74.187 207.906 87.217 C 206.001 102.820 212.315 111.174 212.315 111.177 C 212.317 111.178 218.469 114.044 228.232 125.671 C 230.443 128.304 257.466 145.215 274.565 148.421 C 322.181 157.351 335.406 145.214 349.884 147.735 C 362.064 149.857 330.601 196.899 277.420 184.362 C 250.274 177.962 234.888 155.515 234.884 155.512 C 234.884 155.515 237.090 172.658 231.859 184.565 C 226.213 197.417 224.521 244.634 235.161 276.737 C 241.346 295.397 269.392 322.592 329.190 320.648 M 170.263 111.122 C 162.818 112.157 162.247 111.268 158.240 111.341 M 182.579 106.942 C 182.577 106.942 176.122 110.306 170.263 111.122 M 196.216 111.999 C 203.698 113.310 211.975 111.411 211.977 111.411 M 184.853 107.821 C 184.854 107.821 188.537 110.654 196.216 111.999 M 38.432 490.801 C 45.795 489.176 54.118 480.998 54.120 480.997 M 23.921 489.232 C 23.922 489.233 32.622 492.084 38.432 490.801 M 318.971 417.817 C 322.399 417.714 325.938 417.447 329.100 417.097 M 255.089 407.658 C 255.095 407.659 291.848 418.636 318.971 417.817 M 208.642 390.401 C 208.641 390.405 204.312 427.587 204.312 427.591 M 169.031 342.162 C 168.921 381.900 208.638 390.396 208.642 390.401 M 183.809 208.121 C 184.693 252.757 169.223 272.434 169.031 342.162 M 285.933 163.199 C 306.002 165.790 324.897 158.169 344.380 155.654 M 231.331 141.065 C 231.337 141.067 265.868 160.609 285.933 163.199 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 156.343 150.925 C 155.824 144.122 160.893 138.216 167.695 137.697 C 174.497 137.179 180.403 142.247 180.922 149.049 C 181.441 155.852 176.372 161.758 169.570 162.276 C 162.768 162.795 156.862 157.727 156.343 150.925 M 133.776 156.754 C 133.780 156.751 141.441 136.410 168.049 130.563 C 182.471 127.394 208.554 145.348 208.558 145.350 C 208.554 145.352 189.644 169.162 172.224 171.698 C 148.097 175.210 133.780 156.756 133.776 156.754 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 90.340 163.866 C 97.091 162.093 98.572 165.738 100.045 168.826 C 101.335 171.530 93.561 171.914 88.237 173.008 C 84.343 173.809 83.002 176.344 83.002 176.344 C 83.002 176.343 81.373 166.221 90.340 163.866 Z\\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":329.312,\\\"y\\\":385.244,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":74.66,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":32.83,\\\"y\\\":360.616,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872861335325,\\\"y\\\":0.005042575858889187}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":128.088,\\\"y\\\":593.231,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987156961473306,\\\"y\\\":0.7153994520247768}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":128.244,\\\"y\\\":128.234,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817129699095076,\\\"y\\\":-0.7316197281765705}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":328.826,\\\"y\\\":385.419,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true}},{\\\"name\\\":\\\"goat_head\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":4.632,\\\"max\\\":716.158},\\\"y\\\":{\\\"min\\\":31.146594126977348,\\\"max\\\":676.901}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"goat_head\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"goat_head\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 327.736 581.000 C 327.737 581.002 337.451 594.968 339.367 607.995 C 340.811 617.815 334.682 620.335 337.150 630.039 C 340.027 641.352 346.848 640.710 351.940 651.215 C 356.820 661.281 359.123 674.899 359.124 674.901 C 359.125 674.898 370.016 657.669 371.363 641.958 C 371.817 636.650 369.158 634.505 370.283 628.513 C 372.514 616.620 379.138 616.394 382.879 604.886 C 386.345 594.222 386.376 580.324 386.376 580.324 C 386.376 580.324 327.742 581.000 327.736 581.000 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 278.261 81.193 C 330.637 126.107 350.644 241.102 350.568 242.077 C 350.570 242.077 369.969 242.128 369.971 242.128 C 369.978 242.112 390.373 126.534 443.209 81.630 C 496.376 36.444 561.722 14.095 640.165 61.990 C 706.939 102.761 713.153 209.779 713.160 209.794 C 713.152 209.785 682.197 148.074 630.602 125.777 C 566.983 98.283 513.495 112.209 486.736 156.194 C 472.997 178.779 460.101 256.053 460.098 256.063 C 460.100 256.064 476.035 270.941 476.037 270.942 C 476.042 270.939 513.889 247.251 528.609 243.690 C 543.079 240.189 572.088 246.010 586.817 243.844 C 599.790 241.936 626.633 219.892 635.932 229.137 C 648.901 242.030 619.212 281.379 606.085 294.112 C 591.339 308.418 546.339 310.196 531.819 324.732 C 525.637 330.920 523.079 349.316 516.901 355.508 C 511.368 361.052 489.475 369.130 489.472 369.131 C 489.472 369.139 495.811 426.499 486.994 443.310 C 480.917 454.897 453.592 463.881 446.964 475.161 C 440.667 485.876 445.489 512.569 438.847 523.075 C 435.291 528.701 422.010 533.498 418.261 538.998 C 413.158 546.488 413.819 565.513 409.040 573.214 C 403.915 581.473 389.619 595.044 380.441 598.247 C 375.480 599.977 365.152 598.206 359.898 598.192 C 354.352 598.177 343.436 599.999 338.213 598.135 C 329.058 594.867 314.828 581.237 309.747 572.951 C 305.009 565.225 305.770 546.204 300.707 538.687 C 296.988 533.167 283.732 528.300 280.205 522.655 C 273.620 512.114 278.583 485.447 272.343 474.698 C 265.774 463.384 239.538 456.265 232.482 442.636 C 222.244 422.863 230.396 368.453 230.396 368.446 C 230.393 368.444 208.544 360.250 203.041 354.677 C 196.895 348.452 194.434 330.044 188.285 323.822 C 173.842 309.210 128.853 307.193 114.182 292.810 C 101.123 280.008 71.643 240.502 84.680 227.678 C 94.028 218.483 120.754 240.668 133.716 242.645 C 148.434 244.889 177.473 239.221 191.924 242.799 C 206.625 246.438 244.346 270.326 244.351 270.329 C 244.353 270.327 260.367 255.535 260.368 255.534 C 260.768 254.566 247.947 178.184 234.340 155.526 C 207.832 111.389 154.401 97.191 90.637 124.348 C 38.925 146.372 7.643 207.918 7.635 207.926 C 7.642 207.911 14.423 100.928 81.412 60.511 C 160.107 13.032 225.295 35.772 278.261 81.193 M 266.863 389.085 C 276.360 397.952 307.910 402.889 307.914 402.890 C 307.913 402.886 303.733 369.010 295.468 361.770 C 287.022 354.370 252.121 354.807 252.117 354.807 C 252.119 354.810 258.681 381.445 266.863 389.085 M 452.896 389.578 C 443.353 398.394 411.778 403.164 411.774 403.165 C 411.775 403.161 416.133 369.308 424.437 362.111 C 432.922 354.756 467.819 355.378 467.824 355.378 C 467.822 355.381 461.119 381.981 452.896 389.578 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 278.261 81.193 C 330.637 126.107 350.644 241.102 350.568 242.077 C 350.570 242.077 369.969 242.128 369.971 242.128 C 369.978 242.112 390.373 126.534 443.209 81.630 C 496.376 36.444 561.722 14.095 640.165 61.990 C 706.939 102.761 713.153 209.779 713.160 209.794 C 713.152 209.785 682.197 148.074 630.602 125.777 C 566.983 98.283 513.495 112.209 486.736 156.194 C 472.997 178.779 460.101 256.053 460.098 256.063 C 460.100 256.064 476.035 270.941 476.037 270.942 C 476.042 270.939 513.889 247.251 528.609 243.690 C 543.079 240.189 572.088 246.010 586.817 243.844 C 599.790 241.936 626.633 219.892 635.932 229.137 C 648.901 242.030 619.212 281.379 606.085 294.112 C 591.339 308.418 546.339 310.196 531.819 324.732 C 525.637 330.920 523.079 349.316 516.901 355.508 C 511.368 361.052 489.475 369.130 489.472 369.131 C 489.472 369.139 495.811 426.499 486.994 443.310 C 480.917 454.897 453.592 463.881 446.964 475.161 C 440.667 485.876 445.489 512.569 438.847 523.075 C 435.291 528.701 422.010 533.498 418.261 538.998 C 413.158 546.488 413.819 565.513 409.040 573.214 C 403.915 581.473 389.619 595.044 380.441 598.247 C 375.480 599.977 365.152 598.206 359.898 598.192 C 354.352 598.177 343.436 599.999 338.213 598.135 C 329.058 594.867 314.828 581.237 309.747 572.951 C 305.009 565.225 305.770 546.204 300.707 538.687 C 296.988 533.167 283.732 528.300 280.205 522.655 C 273.620 512.114 278.583 485.447 272.343 474.698 C 265.774 463.384 239.538 456.265 232.482 442.636 C 222.244 422.863 230.396 368.453 230.396 368.446 C 230.393 368.444 208.544 360.250 203.041 354.677 C 196.895 348.452 194.434 330.044 188.285 323.822 C 173.842 309.210 128.853 307.193 114.182 292.810 C 101.123 280.008 71.643 240.502 84.680 227.678 C 94.028 218.483 120.754 240.668 133.716 242.645 C 148.434 244.889 177.473 239.221 191.924 242.799 C 206.625 246.438 244.346 270.326 244.351 270.329 C 244.353 270.327 260.367 255.535 260.368 255.534 C 260.768 254.566 247.947 178.184 234.340 155.526 C 207.832 111.389 154.401 97.191 90.637 124.348 C 38.925 146.372 7.643 207.918 7.635 207.926 C 7.642 207.911 14.423 100.928 81.412 60.511 C 160.107 13.032 225.295 35.772 278.261 81.193 M 416.976 353.040 C 427.272 344.265 451.500 345.856 468.762 342.264 M 383.032 481.839 C 377.720 448.190 391.049 375.137 416.976 353.040 M 397.793 510.412 C 397.831 502.186 384.315 489.964 383.032 481.839 M 383.487 537.765 C 401.069 545.353 397.757 518.306 397.793 510.412 M 387.519 511.526 C 403.604 516.811 368.368 531.239 383.487 537.765 M 377.177 537.748 C 382.071 532.454 370.438 505.913 387.519 511.526 M 362.319 545.698 C 365.081 542.389 374.252 540.913 377.177 537.748 M 358.965 554.820 C 361.446 554.969 360.726 547.607 362.319 545.698 M 356.613 545.683 C 358.051 547.621 356.556 554.676 358.965 554.820 M 341.797 537.655 C 344.705 540.835 354.044 542.222 356.613 545.683 M 331.595 511.378 C 348.704 505.855 336.931 532.334 341.797 537.655 M 335.487 537.638 C 350.641 531.192 315.481 516.578 331.595 511.378 M 321.326 510.209 C 321.321 518.104 317.866 545.133 335.487 537.638 M 336.238 481.715 C 334.913 489.833 321.331 501.984 321.326 510.209 M 302.977 352.739 C 328.608 375.179 341.729 448.094 336.238 481.715 M 249.134 340.641 C 249.139 340.643 292.357 343.441 302.977 352.739 M 311.704 264.800 C 335.788 260.706 350.515 242.070 350.519 242.068 M 260.526 255.643 C 260.531 255.643 285.274 269.294 311.704 264.800 M 266.863 389.085 C 276.360 397.952 307.910 402.889 307.914 402.890 C 307.913 402.886 303.733 369.010 295.468 361.770 C 287.022 354.370 252.121 354.807 252.117 354.807 C 252.119 354.810 258.681 381.445 266.863 389.085 M 408.714 265.057 C 387.597 259.806 370.423 242.523 370.419 242.520 M 459.941 256.170 C 459.935 256.171 432.899 271.071 408.714 265.057 M 452.896 389.578 C 443.353 398.394 411.778 403.164 411.774 403.165 C 411.775 403.161 416.133 369.308 424.437 362.111 C 432.922 354.756 467.819 355.378 467.824 355.378 C 467.822 355.381 461.119 381.981 452.896 389.578 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 301.912 514.723 C 301.912 514.723 308.556 518.320 309.885 520.451 C 313.762 526.661 308.862 542.420 312.093 548.989 C 315.377 555.667 326.831 565.649 333.726 568.449 C 339.953 570.977 353.253 569.650 359.973 569.660 C 366.402 569.669 379.115 570.968 385.085 568.585 C 391.997 565.826 403.501 555.901 406.821 549.240 C 410.087 542.688 405.270 526.903 409.179 520.713 C 410.520 518.590 417.183 515.028 417.183 515.028 M 100.028 245.979 C 100.156 245.069 116.797 259.016 123.394 262.020 C 140.798 269.944 180.986 266.867 196.395 278.192 C 214.192 291.271 238.420 353.622 238.424 353.629 M 597.036 263.273 C 603.518 260.311 613.148 245.091 619.905 247.355 M 523.951 279.059 C 539.420 267.815 579.644 271.223 597.036 263.273 M 481.523 354.273 C 481.527 354.265 506.085 292.044 523.951 279.059 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 466.615 224.698 C 466.610 224.699 439.573 239.599 415.389 233.585 C 394.271 228.334 377.097 211.050 377.094 211.048 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 474.587 192.541 C 474.582 192.541 447.926 202.738 425.946 194.880 C 405.955 187.733 390.443 170.013 390.439 170.010 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 481.782 166.966 C 481.778 166.965 458.218 168.536 440.265 158.710 C 421.523 148.453 408.539 128.771 408.536 128.768 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 495.499 146.073 C 495.496 146.071 475.594 135.565 462.694 120.276 C 449.639 104.804 438.902 86.476 438.899 86.473 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 515.753 125.923 C 515.751 125.919 504.028 108.477 495.906 91.038 C 487.833 73.706 478.212 56.240 478.210 56.237 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 544.344 114.719 C 544.343 114.715 537.957 95.032 533.404 75.562 C 528.965 56.581 521.072 37.720 521.070 37.716 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 570.243 111.458 C 570.243 111.454 575.479 91.933 574.513 73.785 C 573.500 54.749 566.061 36.946 566.061 36.942 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 597.061 114.728 C 597.063 114.725 607.056 100.668 612.401 86.001 C 618.580 69.047 615.627 49.299 615.628 49.296 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 622.392 121.183 C 622.394 121.181 635.233 111.481 643.157 99.446 C 651.391 86.942 651.766 70.116 651.767 70.113 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 643.697 131.497 C 643.699 131.495 657.688 126.904 667.560 118.356 C 675.273 111.676 678.364 100.543 678.365 100.541 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 666.006 148.061 C 666.008 148.060 675.812 148.243 683.217 144.154 C 691.536 139.559 695.149 128.852 695.150 128.851 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 683.591 167.084 C 683.592 167.083 689.285 166.265 694.214 164.479 C 699.701 162.489 704.223 158.009 704.224 158.008 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 697.852 185.852 C 697.852 185.852 701.645 186.389 704.820 185.322 C 707.682 184.361 709.611 181.444 709.612 181.444 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 254.852 224.137 C 254.858 224.138 281.814 239.181 306.031 233.295 C 327.176 228.156 344.441 210.964 344.445 210.961 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 247.051 191.938 C 247.055 191.939 273.658 202.276 295.679 194.535 C 315.707 187.494 331.313 169.856 331.317 169.854 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 239.991 166.326 C 239.995 166.325 263.546 168.021 281.551 158.290 C 300.347 148.133 313.435 128.519 313.439 128.516 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 226.385 145.361 C 226.388 145.358 246.345 134.958 259.326 119.738 C 272.463 104.335 283.297 86.064 283.299 86.061 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 206.238 125.103 C 206.240 125.099 218.054 107.720 226.269 90.324 C 234.434 73.035 244.148 55.621 244.149 55.617 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 177.707 113.748 C 177.708 113.744 184.198 94.095 188.854 74.650 C 193.393 55.692 201.386 36.874 201.388 36.870 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 151.825 110.351 C 151.825 110.347 146.692 90.798 147.754 72.655 C 148.868 53.625 156.401 35.861 156.402 35.858 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 124.990 113.479 C 124.988 113.476 115.070 99.365 109.802 84.671 C 103.714 67.684 106.771 47.953 106.770 47.949 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 99.625 119.799 C 99.623 119.797 86.836 110.029 78.975 97.953 C 70.808 85.406 70.522 68.577 70.521 68.574 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 78.266 130.000 C 78.264 129.999 64.299 125.333 54.473 116.733 C 46.795 110.013 43.763 98.863 43.762 98.861 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 55.869 146.446 C 55.868 146.445 46.063 146.577 38.680 142.448 C 30.385 137.809 26.829 127.083 26.828 127.082 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 38.184 165.375 C 38.183 165.375 32.495 164.527 27.576 162.714 C 22.098 160.696 17.600 156.192 17.599 156.191 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 23.825 184.067 C 23.824 184.067 20.029 184.585 16.859 183.501 C 14.002 182.525 12.088 179.598 12.088 179.598 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 266.863 389.085 C 276.360 397.952 307.910 402.889 307.914 402.890 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 307.914 402.890 C 307.913 402.886 303.733 369.010 295.468 361.770 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 295.468 361.770 C 287.022 354.370 252.121 354.807 252.117 354.807 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 252.117 354.807 C 252.119 354.810 258.681 381.445 266.863 389.085 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 452.896 389.578 C 443.353 398.394 411.778 403.164 411.774 403.165 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 411.774 403.165 C 411.775 403.161 416.133 369.308 424.437 362.111 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 424.437 362.111 C 432.922 354.756 467.819 355.378 467.824 355.378 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 467.824 355.378 C 467.822 355.381 461.119 381.981 452.896 389.578 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 266.863 389.085 C 276.360 397.952 307.910 402.889 307.914 402.890 C 307.913 402.886 303.733 369.010 295.468 361.770 C 287.022 354.370 252.121 354.807 252.117 354.807 C 252.119 354.810 258.681 381.445 266.863 389.085 M 452.896 389.578 C 443.353 398.394 411.778 403.164 411.774 403.165 C 411.775 403.161 416.133 369.308 424.437 362.111 C 432.922 354.756 467.819 355.378 467.824 355.378 C 467.822 355.381 461.119 381.981 452.896 389.578 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 334.168 510.743 C 337.782 510.587 340.525 513.255 340.893 517.957 C 341.222 522.160 341.141 527.432 338.776 527.826 C 335.648 528.348 336.882 523.079 328.671 517.321 C 325.740 515.266 331.026 510.878 334.168 510.743 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 385.188 510.878 C 381.574 510.703 378.816 513.356 378.424 518.057 C 378.073 522.257 378.126 527.530 380.489 527.937 C 383.614 528.475 382.408 523.199 390.649 517.485 C 393.591 515.445 388.328 511.030 385.188 510.878 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 260.366 255.501 C 261.522 256.604 285.886 269.341 311.701 264.767 C 335.757 260.505 350.512 242.037 350.516 242.034 C 349.650 240.082 330.620 126.073 278.259 81.160 C 225.298 35.732 160.104 12.999 81.409 60.478 C 14.421 100.895 7.640 207.878 7.632 207.893 C 7.641 207.885 38.923 146.338 90.635 124.315 C 154.398 97.158 207.830 111.356 234.337 155.493 C 247.945 178.151 260.766 254.532 260.366 255.501 M 408.712 265.024 C 432.637 271.464 459.933 258.126 460.096 256.029 C 460.098 256.020 472.995 178.746 486.734 156.161 C 513.492 112.176 566.980 98.250 630.599 125.744 C 682.194 148.041 713.150 209.752 713.158 209.760 C 713.151 209.746 706.936 102.728 640.162 61.957 C 561.720 14.062 496.374 36.411 443.207 81.596 C 390.371 126.500 369.976 242.079 369.969 242.095 C 369.427 243.483 387.423 259.294 408.712 265.024 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"6\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 260.366 255.501 C 261.522 256.604 285.886 269.341 311.701 264.767 C 335.757 260.505 350.512 242.037 350.516 242.034 C 349.650 240.082 330.620 126.073 278.259 81.160 C 225.298 35.732 160.104 12.999 81.409 60.478 C 14.421 100.895 7.640 207.878 7.632 207.893 C 7.641 207.885 38.923 146.338 90.635 124.315 C 154.398 97.158 207.830 111.356 234.337 155.493 C 247.945 178.151 260.766 254.532 260.366 255.501 M 408.712 265.024 C 432.637 271.464 459.933 258.126 460.096 256.029 C 460.098 256.020 472.995 178.746 486.734 156.161 C 513.492 112.176 566.980 98.250 630.599 125.744 C 682.194 148.041 713.150 209.752 713.158 209.760 C 713.151 209.746 706.936 102.728 640.162 61.957 C 561.720 14.062 496.374 36.411 443.207 81.596 C 390.371 126.500 369.976 242.079 369.969 242.095 C 369.427 243.483 387.423 259.294 408.712 265.024 M 16.856 183.468 C 14.000 182.491 12.086 179.565 12.085 179.564 M 23.822 184.034 C 23.822 184.034 20.026 184.552 16.856 183.468 M 27.573 162.682 C 22.096 160.663 17.598 156.158 17.597 156.158 M 38.182 165.342 C 38.181 165.342 32.492 164.494 27.573 162.682 M 38.677 142.414 C 30.383 137.776 26.827 127.050 26.825 127.049 M 55.867 146.413 C 55.865 146.413 46.061 146.543 38.677 142.414 M 54.471 116.700 C 46.793 109.980 43.761 98.830 43.760 98.828 M 78.264 129.967 C 78.262 129.966 64.297 125.301 54.471 116.700 M 78.973 97.919 C 70.806 85.372 70.520 68.544 70.519 68.541 M 99.623 119.766 C 99.621 119.764 86.834 109.996 78.973 97.919 M 109.800 84.638 C 103.711 67.652 106.768 47.920 106.768 47.916 M 124.987 113.446 C 124.986 113.443 115.067 99.332 109.800 84.638 M 147.752 72.622 C 148.866 53.592 156.399 35.828 156.400 35.825 M 151.823 110.318 C 151.822 110.314 146.690 90.765 147.752 72.622 M 188.852 74.617 C 193.391 55.659 201.384 36.841 201.385 36.837 M 177.704 113.715 C 177.705 113.711 184.195 94.062 188.852 74.617 M 226.267 90.291 C 234.431 73.002 244.145 55.588 244.147 55.584 M 206.235 125.070 C 206.238 125.066 218.052 107.687 226.267 90.291 M 259.324 119.704 C 272.460 104.302 283.294 86.032 283.297 86.028 M 226.383 145.327 C 226.386 145.325 246.343 134.925 259.324 119.704 M 281.549 158.257 C 300.345 148.099 313.433 128.486 313.436 128.483 M 239.988 166.292 C 239.993 166.292 263.544 167.988 281.549 158.257 M 295.676 194.502 C 315.704 187.461 331.311 169.823 331.314 169.820 M 247.048 191.905 C 247.053 191.906 273.655 202.243 295.676 194.502 M 306.028 233.262 C 327.173 228.123 344.438 210.930 344.442 210.928 M 254.850 224.104 C 254.855 224.105 281.812 239.148 306.028 233.262 M 704.818 185.289 C 707.679 184.328 709.609 181.411 709.609 181.411 M 697.849 185.819 C 697.850 185.819 701.642 186.356 704.818 185.289 M 694.211 164.445 C 699.699 162.456 704.221 157.976 704.222 157.975 M 683.589 167.050 C 683.590 167.050 689.282 166.232 694.211 164.445 M 683.215 144.120 C 691.534 139.526 695.147 128.819 695.148 128.818 M 666.004 148.028 C 666.006 148.028 675.809 148.210 683.215 144.120 M 667.557 118.323 C 675.271 111.643 678.362 100.510 678.363 100.508 M 643.694 131.464 C 643.697 131.462 657.686 126.871 667.557 118.323 M 643.155 99.413 C 651.388 86.909 651.764 70.083 651.765 70.080 M 622.390 121.150 C 622.392 121.148 635.230 111.448 643.155 99.413 M 612.399 85.968 C 618.578 69.014 615.625 49.267 615.625 49.263 M 597.059 114.695 C 597.060 114.692 607.054 100.635 612.399 85.968 M 574.511 73.752 C 573.498 54.716 566.059 36.913 566.058 36.909 M 570.240 111.425 C 570.241 111.422 575.477 91.900 574.511 73.752 M 533.401 75.529 C 528.962 56.548 521.069 37.687 521.068 37.683 M 544.341 114.686 C 544.340 114.682 537.954 94.998 533.401 75.529 M 495.903 91.004 C 487.831 73.673 478.209 56.207 478.208 56.204 M 515.750 125.890 C 515.748 125.886 504.026 108.444 495.903 91.004 M 462.691 120.243 C 449.637 104.770 438.899 86.444 438.897 86.440 M 495.497 146.040 C 495.493 146.037 475.592 135.532 462.691 120.243 M 440.262 158.677 C 421.521 148.420 408.537 128.738 408.534 128.735 M 481.780 166.933 C 481.775 166.932 458.216 168.503 440.262 158.677 M 425.943 194.846 C 405.953 187.700 390.440 169.979 390.437 169.977 M 474.584 192.508 C 474.580 192.508 447.923 202.704 425.943 194.846 M 415.386 233.552 C 394.269 228.301 377.095 211.017 377.091 211.015 M 466.612 224.665 C 466.607 224.665 439.571 239.566 415.386 233.552 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 583.268 286.755 C 567.752 296.297 533.465 297.678 524.819 303.194 C 515.284 309.278 481.527 354.268 481.523 354.273 C 481.527 354.265 506.085 292.044 523.951 279.059 C 539.420 267.815 579.644 271.223 597.036 263.273 C 603.518 260.311 613.148 245.091 619.905 247.355 C 620.225 247.462 597.017 278.301 583.268 286.755 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 194.817 302.321 C 186.216 296.735 151.921 295.196 136.456 285.573 C 122.752 277.045 99.708 246.084 100.028 245.979 C 100.156 245.069 116.797 259.016 123.394 262.020 C 140.798 269.944 180.986 266.867 196.395 278.192 C 214.192 291.271 238.420 353.622 238.424 353.629 C 237.381 353.623 204.261 308.454 194.817 302.321 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":309.133,\\\"max\\\":411.074},\\\"y\\\":{\\\"min\\\":254.299,\\\"max\\\":356.24}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":359.05,\\\"y\\\":703.201,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.002667230779173959,\\\"y\\\":-0.9999964429336591}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360.272,\\\"y\\\":241.686,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.0026660647306193668,\\\"y\\\":-0.9999964460431107}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":96.421,\\\"y\\\":261.773,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999970136864601,\\\"y\\\":0.002443894056995616}},{\\\"point\\\":{\\\"x\\\":624.149,\\\"y\\\":263.17,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999703365847544,\\\"y\\\":0.007702334099007542}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":237.778,\\\"y\\\":445.852,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7006339603446322,\\\"y\\\":0.7135208851966397}},{\\\"point\\\":{\\\"x\\\":480.995,\\\"y\\\":446.448,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7110579337831328,\\\"y\\\":0.7031334260324011}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":128.753,\\\"y\\\":42.854,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6797889561889565,\\\"y\\\":-0.7334077822354553}},{\\\"point\\\":{\\\"x\\\":593.631,\\\"y\\\":44.005,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6335240945223662,\\\"y\\\":-0.7737229618278212}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.157,\\\"y\\\":662.924,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.002624211226579388,\\\"y\\\":0.9999965567517911}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"goat_hind\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":327.1,\\\"max\\\":705.4472723262684},\\\"y\\\":{\\\"min\\\":219.848,\\\"max\\\":615.8052909309959}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"goat_hind\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"goat_hind\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 329.100 417.097 C 329.101 431.107 329.101 445.209 329.115 459.751 C 329.687 459.690 330.785 459.543 331.882 459.383 C 366.083 454.405 411.890 439.363 411.898 439.361 C 411.897 439.359 405.339 427.830 403.543 422.630 C 401.426 416.502 399.213 401.027 399.213 401.025 C 399.214 401.027 401.903 415.732 404.078 421.543 C 406.183 427.167 413.277 439.286 413.554 439.623 C 432.541 462.737 478.444 469.905 478.450 469.908 C 478.447 469.911 442.549 496.073 442.546 496.076 C 442.544 496.077 430.810 497.813 426.533 508.846 C 424.547 513.970 431.910 525.758 431.295 528.726 C 429.646 536.676 419.424 558.239 426.028 565.735 C 443.302 585.345 443.904 611.074 444.850 610.292 C 451.046 605.176 456.382 587.946 456.383 587.943 C 456.384 587.946 457.455 616.435 459.769 613.608 C 485.457 582.223 467.551 548.213 467.552 548.206 C 467.550 548.205 444.266 558.257 446.143 539.777 C 447.751 523.948 457.998 534.860 459.769 511.444 C 460.018 508.154 473.170 509.070 471.068 523.847 C 468.970 538.587 485.232 541.139 485.234 541.141 C 485.233 541.139 476.001 528.721 481.524 522.649 C 487.006 516.623 492.488 500.329 486.021 492.622 C 483.587 489.721 525.294 478.518 525.298 478.517 C 525.300 478.517 538.164 486.362 549.836 476.833 C 556.451 471.432 554.820 456.426 554.820 456.424 C 554.816 456.424 526.898 464.262 516.874 466.055 C 507.347 467.759 479.878 469.993 479.874 469.993 C 479.878 469.993 507.524 467.539 517.081 465.636 C 527.203 463.620 551.688 456.037 555.244 454.766 C 559.630 453.197 592.671 441.942 600.094 435.156 C 605.745 429.991 603.962 447.864 597.346 521.591 C 595.151 546.049 611.509 533.362 622.585 550.734 C 627.497 558.438 632.349 571.887 638.021 572.942 C 654.270 575.965 687.436 593.612 688.280 592.129 C 688.667 591.448 676.383 570.499 676.382 570.497 C 676.385 570.498 704.405 590.573 703.422 586.720 C 691.917 541.636 670.978 532.646 670.974 532.641 C 670.971 532.642 649.114 548.544 640.255 544.397 C 625.669 537.570 641.900 525.773 626.840 510.221 C 623.926 507.211 633.156 495.979 643.888 507.485 C 651.564 515.713 666.646 502.356 666.648 502.356 C 666.646 502.355 655.302 507.330 644.759 492.442 C 639.805 485.447 630.509 480.980 622.879 479.290 C 618.178 478.249 625.257 432.720 625.257 432.716 C 625.258 432.713 647.312 417.168 631.602 404.436 C 611.976 388.531 599.389 412.974 598.407 413.302 C 579.418 419.655 537.796 420.808 537.938 415.828 C 540.166 337.594 504.434 286.177 504.430 286.164 C 504.438 286.165 545.598 313.646 578.012 291.990 C 614.582 267.557 596.667 221.855 596.669 221.848 C 596.664 221.852 578.384 247.154 550.136 258.358 C 523.008 269.117 504.392 266.219 466.334 268.429 C 426.707 270.729 398.204 318.405 329.190 320.648 C 329.162 346.721 329.143 381.346 329.100 417.097 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 436.503 576.691 C 436.504 576.690 446.172 574.284 451.014 569.239 C 455.742 564.313 457.288 552.769 457.289 552.767 M 329.100 417.097 C 361.870 413.480 398.615 399.405 398.622 399.403 M 492.699 433.377 C 539.803 447.035 587.102 427.723 592.860 424.665 M 513.422 377.563 C 513.174 418.367 491.504 433.030 492.699 433.377 M 491.755 299.069 C 491.757 299.077 513.644 341.124 513.422 377.563 M 566.709 275.490 C 595.552 257.999 596.656 226.024 596.659 226.019 M 503.036 284.291 C 503.042 284.290 543.666 289.464 566.709 275.490 M 661.619 563.748 C 661.487 554.956 654.168 544.533 654.167 544.531 M 657.305 577.083 C 657.305 577.082 661.708 569.727 661.619 563.748 M 329.100 417.097 C 329.101 431.107 329.101 445.209 329.115 459.751 C 329.687 459.690 330.785 459.543 331.882 459.383 C 366.083 454.405 411.890 439.363 411.898 439.361 C 411.897 439.359 405.339 427.830 403.543 422.630 C 401.426 416.502 399.213 401.027 399.213 401.025 C 399.214 401.027 401.903 415.732 404.078 421.543 C 406.183 427.167 413.277 439.286 413.554 439.623 C 432.541 462.737 478.444 469.905 478.450 469.908 C 478.447 469.911 442.549 496.073 442.546 496.076 C 442.544 496.077 430.810 497.813 426.533 508.846 C 424.547 513.970 431.910 525.758 431.295 528.726 C 429.646 536.676 419.424 558.239 426.028 565.735 C 443.302 585.345 443.904 611.074 444.850 610.292 C 451.046 605.176 456.382 587.946 456.383 587.943 C 456.384 587.946 457.455 616.435 459.769 613.608 C 485.457 582.223 467.551 548.213 467.552 548.206 C 467.550 548.205 444.266 558.257 446.143 539.777 C 447.751 523.948 457.998 534.860 459.769 511.444 C 460.018 508.154 473.170 509.070 471.068 523.847 C 468.970 538.587 485.232 541.139 485.234 541.141 C 485.233 541.139 476.001 528.721 481.524 522.649 C 487.006 516.623 492.488 500.329 486.021 492.622 C 483.587 489.721 525.294 478.518 525.298 478.517 C 525.300 478.517 538.164 486.362 549.836 476.833 C 556.451 471.432 554.820 456.426 554.820 456.424 C 554.816 456.424 526.898 464.262 516.874 466.055 C 507.347 467.759 479.878 469.993 479.874 469.993 C 479.878 469.993 507.524 467.539 517.081 465.636 C 527.203 463.620 551.688 456.037 555.244 454.766 C 559.630 453.197 592.671 441.942 600.094 435.156 C 605.745 429.991 603.962 447.864 597.346 521.591 C 595.151 546.049 611.509 533.362 622.585 550.734 C 627.497 558.438 632.349 571.887 638.021 572.942 C 654.270 575.965 687.436 593.612 688.280 592.129 C 688.667 591.448 676.383 570.499 676.382 570.497 C 676.385 570.498 704.405 590.573 703.422 586.720 C 691.917 541.636 670.978 532.646 670.974 532.641 C 670.971 532.642 649.114 548.544 640.255 544.397 C 625.669 537.570 641.900 525.773 626.840 510.221 C 623.926 507.211 633.156 495.979 643.888 507.485 C 651.564 515.713 666.646 502.356 666.648 502.356 C 666.646 502.355 655.302 507.330 644.759 492.442 C 639.805 485.447 630.509 480.980 622.879 479.290 C 618.178 478.249 625.257 432.720 625.257 432.716 C 625.258 432.713 647.312 417.168 631.602 404.436 C 611.976 388.531 599.389 412.974 598.407 413.302 C 579.418 419.655 537.796 420.808 537.938 415.828 C 540.166 337.594 504.434 286.177 504.430 286.164 C 504.438 286.165 545.598 313.646 578.012 291.990 C 614.582 267.557 596.667 221.855 596.669 221.848 C 596.664 221.852 578.384 247.154 550.136 258.358 C 523.008 269.117 504.392 266.219 466.334 268.429 C 426.707 270.729 398.204 318.405 329.190 320.648 C 329.162 346.721 329.143 381.346 329.100 417.097 \\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":328.826,\\\"y\\\":394.517,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":309.784,\\\"y\\\":608.53,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":636.954,\\\"y\\\":361.19,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872861335325,\\\"y\\\":-0.005042575858884966}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":541.696,\\\"y\\\":128.574,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6987527618690044,\\\"y\\\":-0.7153632488326741}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":541.54,\\\"y\\\":593.572,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.681712969909508,\\\"y\\\":0.73161972817657}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":329.312,\\\"y\\\":394.342,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true}},{\\\"name\\\":\\\"goat_horn\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":193.574,\\\"max\\\":571.994},\\\"y\\\":{\\\"min\\\":23.944,\\\"max\\\":700.1946353240007}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"goat_horn\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"goat_horn\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 252.376 221.785 C 252.372 221.794 207.722 319.241 207.718 319.251 C 207.716 319.264 195.575 428.225 195.574 428.237 C 195.576 428.253 216.175 560.677 216.177 560.690 C 216.188 560.715 271.887 687.743 271.892 687.753 C 271.902 687.755 319.760 702.030 375.180 697.195 C 455.663 690.173 492.194 657.847 492.206 657.843 C 492.200 657.835 431.916 588.464 417.005 563.792 C 409.232 550.931 375.545 477.694 369.698 453.680 C 365.553 436.659 358.437 390.074 358.557 359.092 C 358.659 332.680 362.902 303.095 370.147 272.728 C 377.334 242.607 385.629 216.049 395.208 193.955 C 406.679 167.499 423.514 138.527 436.148 121.012 C 448.453 103.953 471.073 84.436 481.946 76.009 C 518.330 47.810 569.990 25.953 569.994 25.944 C 569.989 25.949 456.700 51.908 456.679 51.913 C 456.671 51.917 381.387 89.082 381.378 89.087 C 381.371 89.093 309.070 148.344 309.061 148.351 C 309.055 148.358 252.381 221.778 252.376 221.785 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 456.679 51.913 C 456.680 51.915 454.943 61.463 462.011 68.928 C 470.396 77.785 481.944 76.008 481.946 76.009 C 518.330 47.810 569.990 25.953 569.994 25.944 C 569.989 25.949 456.700 51.908 456.679 51.913 C 456.671 51.917 381.387 89.082 381.378 89.087 C 381.381 89.089 391.264 107.724 403.895 115.739 C 418.074 124.735 436.144 121.012 436.148 121.012 C 448.453 103.953 471.073 84.436 481.946 76.009 M 309.061 148.351 C 309.065 148.354 321.428 169.361 348.372 183.163 C 373.035 195.795 395.204 193.953 395.208 193.955 C 406.679 167.499 423.514 138.527 436.148 121.012 M 216.177 560.690 C 216.188 560.692 261.121 583.956 325.456 583.318 C 382.210 582.755 416.996 563.794 417.005 563.792 C 409.232 550.931 375.545 477.694 369.698 453.680 C 369.690 453.681 336.584 469.493 289.076 464.261 C 231.654 457.938 195.583 428.240 195.574 428.237 C 195.576 428.253 216.175 560.677 216.177 560.690 C 216.188 560.715 271.887 687.743 271.892 687.753 C 271.902 687.755 319.760 702.030 375.180 697.195 C 455.663 690.173 492.194 657.847 492.206 657.843 C 492.200 657.835 431.916 588.464 417.005 563.792 M 207.718 319.251 C 207.725 319.255 235.396 351.365 285.502 362.790 C 326.619 372.165 358.550 359.093 358.557 359.092 C 358.659 332.680 362.902 303.095 370.147 272.728 C 370.141 272.727 342.220 273.965 309.046 260.039 C 272.700 244.780 252.382 221.789 252.376 221.785 C 252.381 221.778 309.055 148.358 309.061 148.351 C 309.070 148.344 381.371 89.093 381.378 89.087 M 370.147 272.728 C 377.334 242.607 385.629 216.049 395.208 193.955 M 369.698 453.680 C 365.553 436.659 358.437 390.074 358.557 359.092 M 207.718 319.251 C 207.716 319.264 195.575 428.225 195.574 428.237 M 252.376 221.785 C 252.372 221.794 207.722 319.241 207.718 319.251 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":348.406,\\\"y\\\":612.113,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.3782256275869897,\\\"y\\\":-0.9257134408856921}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":552.343,\\\"y\\\":32.937,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9254549058477407,\\\"y\\\":-0.3788577797041384}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":382.659,\\\"y\\\":90.162,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.2617019520261627,\\\"y\\\":-0.9651487389546215}},{\\\"point\\\":{\\\"x\\\":433.717,\\\"y\\\":120.244,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9992947638549813,\\\"y\\\":-0.03754963291454629}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":209.068,\\\"y\\\":319.556,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6333810356497829,\\\"y\\\":-0.773840076294326}},{\\\"point\\\":{\\\"x\\\":358.077,\\\"y\\\":356.465,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9231699885127755,\\\"y\\\":-0.3843919514106948}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":473.984,\\\"y\\\":663.517,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.774559082713944,\\\"y\\\":0.6325015631485299}},{\\\"point\\\":{\\\"x\\\":292.515,\\\"y\\\":688.357,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.04456534445297293,\\\"y\\\":0.9990064714874414}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":387.291,\\\"y\\\":690.646,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.40035993775899475,\\\"y\\\":0.9163579651193162}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"goddess\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":233.904,\\\"max\\\":486.096},\\\"y\\\":{\\\"min\\\":11.855163037794128,\\\"max\\\":675.9580914866756}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"goddess\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"goddess_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"0\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.974 98.943 C 343.640 98.933 334.071 111.922 333.561 124.555 C 332.995 138.551 342.472 144.795 350.168 154.715 C 353.315 158.772 355.826 168.448 350.192 171.168 C 341.877 175.183 331.698 171.298 321.717 170.275 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"0\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.974 98.943 C 343.640 98.933 334.071 111.922 333.561 124.555 C 332.995 138.551 342.472 144.795 350.168 154.715 C 353.315 158.772 355.826 168.448 350.192 171.168 C 341.877 175.183 331.698 171.298 321.717 170.275 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 335.028 245.057 C 325.596 245.052 317.992 237.438 317.997 228.006 C 318.003 218.575 325.616 210.970 335.048 210.976 C 344.480 210.982 352.084 218.595 352.078 228.026 C 352.073 237.458 344.460 245.062 335.028 245.057 M 384.627 245.086 C 394.058 245.092 401.672 237.488 401.677 228.056 C 401.683 218.625 394.079 211.011 384.647 211.005 C 375.215 211.000 367.602 218.604 367.597 228.036 C 367.591 237.468 375.195 245.081 384.627 245.086 M 350.192 171.168 C 341.877 175.183 331.647 171.711 321.717 170.275 C 301.455 167.345 276.419 141.690 267.786 114.463 C 255.829 76.754 277.269 37.993 314.501 32.105 C 320.474 31.160 328.365 31.729 327.466 28.266 C 327.120 26.934 317.974 28.966 318.366 26.517 C 318.674 24.596 328.483 23.831 328.773 21.842 C 329.107 19.554 318.760 24.663 315.898 20.604 C 318.861 18.283 325.283 16.862 325.695 16.064 C 328.113 11.381 304.893 15.292 297.952 17.310 C 244.098 32.965 235.904 82.305 235.904 100.040 C 235.904 162.088 297.503 197.732 305.694 249.056 C 315.030 307.557 272.211 285.620 268.338 373.307 C 265.833 430.015 316.483 612.208 331.673 653.705 C 333.997 660.053 338.585 673.479 340.030 673.904 C 341.526 674.345 341.484 670.808 343.004 671.442 C 344.398 672.023 345.847 674.107 346.564 673.908 C 347.969 673.518 348.801 670.231 349.789 670.446 C 350.916 670.690 352.322 674.010 353.098 673.912 C 354.720 673.708 360.129 673.449 360.130 673.449 C 360.130 673.449 364.805 673.504 366.165 673.920 C 366.860 674.133 368.762 671.540 369.822 671.379 C 370.633 671.256 371.538 673.694 372.699 673.924 C 373.460 674.075 374.681 671.588 376.145 671.003 C 377.888 670.305 377.567 674.350 379.233 673.927 C 380.690 673.558 385.104 660.047 387.493 653.738 C 401.365 617.106 452.803 425.935 451.283 373.416 C 448.801 287.644 402.921 307.177 413.672 249.117 C 422.763 200.023 484.096 162.088 484.096 100.040 C 484.096 82.305 484.096 37.992 422.048 17.310 C 415.400 15.094 392.810 11.930 395.135 16.479 C 395.461 17.116 400.453 18.518 402.780 20.404 C 400.871 22.525 393.124 20.091 392.988 21.855 C 392.651 26.250 400.613 22.233 400.746 26.213 C 400.840 29.021 392.337 27.552 392.538 29.003 C 393.172 33.572 403.129 30.630 407.643 31.469 C 442.731 37.992 464.107 79.672 454.071 109.187 C 443.076 141.525 421.117 165.175 394.039 170.518 C 385.575 172.188 376.741 174.545 369.549 171.180 C 363.883 168.528 366.441 158.781 369.593 154.727 C 377.301 144.815 386.559 138.590 386.236 124.586 C 385.945 111.914 376.309 98.952 359.974 98.943 C 343.640 98.933 334.071 111.922 333.561 124.555 C 332.995 138.551 342.472 144.795 350.168 154.715 C 353.315 158.772 355.826 168.448 350.192 171.168 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.130 673.449 C 360.043 599.150 359.957 524.851 359.870 450.552 M 335.028 245.057 C 325.596 245.052 317.992 237.438 317.997 228.006 C 318.003 218.575 325.616 210.970 335.048 210.976 C 344.480 210.982 352.084 218.595 352.078 228.026 C 352.073 237.458 344.460 245.062 335.028 245.057 M 384.627 245.086 C 394.058 245.092 401.672 237.488 401.677 228.056 C 401.683 218.625 394.079 211.011 384.647 211.005 C 375.215 211.000 367.602 218.604 367.597 228.036 C 367.591 237.468 375.195 245.081 384.627 245.086 M 350.168 154.715 C 353.315 158.772 355.826 168.448 350.192 171.168 C 355.826 168.448 353.315 158.772 350.168 154.715 C 342.472 144.795 332.995 138.551 333.561 124.555 C 334.071 111.922 343.640 98.933 359.974 98.943 C 343.640 98.933 334.071 111.922 333.561 124.555 C 332.995 138.551 342.472 144.795 350.168 154.715 C 353.315 158.772 355.826 168.448 350.192 171.168 C 341.877 175.183 331.698 171.298 321.717 170.275 C 331.647 171.711 341.877 175.183 350.192 171.168 C 341.877 175.183 331.698 171.298 321.717 170.275 C 301.455 167.345 276.419 141.690 267.786 114.463 C 255.829 76.754 277.269 37.993 314.501 32.105 C 320.474 31.160 328.365 31.729 327.466 28.266 C 327.120 26.934 317.974 28.966 318.366 26.517 C 318.674 24.596 328.483 23.831 328.773 21.842 C 329.107 19.554 318.760 24.663 315.898 20.604 C 318.861 18.283 325.283 16.862 325.695 16.064 C 328.113 11.381 304.893 15.292 297.952 17.310 C 244.098 32.965 235.904 82.305 235.904 100.040 C 235.904 162.088 297.503 197.732 305.694 249.056 C 315.030 307.557 272.211 285.620 268.338 373.307 C 265.833 430.015 316.483 612.208 331.673 653.705 C 333.997 660.053 338.585 673.479 340.030 673.904 C 341.526 674.345 341.484 670.808 343.004 671.442 C 344.398 672.023 345.847 674.107 346.564 673.908 C 347.969 673.518 348.801 670.231 349.789 670.446 C 350.916 670.690 352.322 674.010 353.098 673.912 C 354.720 673.708 360.129 673.449 360.130 673.449 C 360.130 673.449 364.805 673.504 366.165 673.920 C 366.860 674.133 368.762 671.540 369.822 671.379 C 370.633 671.256 371.538 673.694 372.699 673.924 C 373.460 674.075 374.681 671.588 376.145 671.003 C 377.888 670.305 377.567 674.350 379.233 673.927 C 380.690 673.558 385.104 660.047 387.493 653.738 C 401.365 617.106 452.803 425.935 451.283 373.416 C 448.801 287.644 402.921 307.177 413.672 249.117 C 422.763 200.023 484.096 162.088 484.096 100.040 C 484.096 82.305 484.096 37.992 422.048 17.310 C 415.400 15.094 392.810 11.930 395.135 16.479 C 395.461 17.116 400.453 18.518 402.780 20.404 C 400.871 22.525 393.124 20.091 392.988 21.855 C 392.651 26.250 400.613 22.233 400.746 26.213 C 400.840 29.021 392.337 27.552 392.538 29.003 C 393.172 33.572 403.129 30.630 407.643 31.469 C 442.731 37.992 464.107 79.672 454.071 109.187 C 443.076 141.525 421.117 165.175 394.039 170.518 C 385.575 172.188 376.741 174.545 369.549 171.180 C 363.883 168.528 366.441 158.781 369.593 154.727 C 377.301 144.815 386.559 138.590 386.236 124.586 C 385.945 111.914 376.309 98.952 359.974 98.943 C 343.640 98.933 334.071 111.922 333.561 124.555 C 332.995 138.551 342.472 144.795 350.168 154.715 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":705.553,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":52.465,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":302.79,\\\"y\\\":251.972,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871406597504,\\\"y\\\":0.005071342537883254}},{\\\"point\\\":{\\\"x\\\":415.859,\\\"y\\\":251.972,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871421587849,\\\"y\\\":0.0050710469437982835}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":451.499,\\\"y\\\":407.389,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712926292385503,\\\"y\\\":0.7012389761168873}},{\\\"point\\\":{\\\"x\\\":269.672,\\\"y\\\":407.438,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987403772390102,\\\"y\\\":0.7153753456863647}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":475.293,\\\"y\\\":108.804,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314398940630276,\\\"y\\\":-0.7754248256186234}},{\\\"point\\\":{\\\"x\\\":245.524,\\\"y\\\":108.886,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817125147396821,\\\"y\\\":-0.7316201522971457}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":669.656,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":288.388,\\\"max\\\":431.612},\\\"y\\\":{\\\"min\\\":306.647,\\\"max\\\":449.872}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"hand\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":108.39032273780617,\\\"max\\\":649.7220418051177},\\\"y\\\":{\\\"min\\\":15.06228443585303,\\\"max\\\":667.7268482178374}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#AFB1A2DB-6DEB-4733-95CB-27EF552C2187_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 330.775 665.643 C 368.272 666.965 429.519 652.471 452.152 635.137 C 490.759 605.568 531.385 552.528 539.682 537.641 C 546.815 524.843 580.722 452.333 593.638 428.473 C 607.923 402.086 650.409 361.537 647.588 346.589 C 645.487 335.457 617.073 329.003 604.956 334.373 C 586.818 342.410 567.787 363.099 562.899 367.266 C 543.667 383.659 502.684 462.924 488.613 460.263 C 472.376 457.192 463.193 429.194 457.662 413.837 C 453.117 401.219 453.946 315.809 454.566 302.412 C 455.267 287.271 468.550 188.821 469.912 177.368 C 471.093 167.428 486.770 81.150 482.423 68.732 C 481.003 64.675 475.597 42.758 459.397 41.422 C 445.645 40.288 438.008 53.686 435.996 56.351 C 427.693 67.348 417.264 158.702 414.940 168.925 C 412.591 179.261 397.595 274.953 384.927 280.747 C 383.034 281.612 369.468 279.024 367.903 277.652 C 357.648 268.664 358.571 175.108 357.952 164.751 C 357.242 152.860 361.980 48.141 353.975 34.685 C 352.184 31.675 345.255 16.394 330.780 17.085 C 318.099 17.691 310.762 31.767 309.097 34.685 C 301.519 47.970 305.853 150.127 305.177 161.744 C 304.550 172.517 305.936 269.969 295.168 279.199 C 293.309 280.793 277.212 283.445 275.050 282.295 C 264.014 276.421 258.129 189.425 256.485 180.056 C 254.872 170.866 246.901 89.309 239.457 79.564 C 237.317 76.764 227.033 61.281 214.274 64.599 C 202.315 67.709 195.706 89.440 194.577 93.493 C 191.323 105.183 206.846 184.305 207.562 193.510 C 208.480 205.301 218.514 309.284 210.615 322.671 C 209.471 324.610 197.792 334.093 195.562 333.786 C 182.812 332.028 171.305 239.673 169.235 230.102 C 167.505 222.107 159.070 152.714 153.356 142.169 C 151.799 139.294 140.008 127.087 129.202 129.725 C 118.967 132.223 112.099 150.379 111.009 153.847 C 106.846 167.099 125.005 257.790 126.377 268.269 C 129.012 288.385 146.701 462.573 154.341 488.120 C 159.655 505.891 177.554 592.494 220.451 627.399 C 260.329 659.848 303.420 664.679 330.775 665.643 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":200.529,\\\"max\\\":445.312},\\\"y\\\":{\\\"min\\\":336.721,\\\"max\\\":586.252}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":336.997,\\\"y\\\":700.893,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":331.634,\\\"y\\\":15.811,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":128.419,\\\"y\\\":129.23,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.23449435379461295,\\\"y\\\":-0.9721174816031481}},{\\\"point\\\":{\\\"x\\\":636.55,\\\"y\\\":335.88,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7474386837698489,\\\"y\\\":-0.6643308016375544}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":224.491,\\\"y\\\":633.439,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7129368852544249,\\\"y\\\":0.7012282065374431}},{\\\"point\\\":{\\\"x\\\":452.69,\\\"y\\\":635.631,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6987313789440864,\\\"y\\\":0.7153841346290086}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":462.155,\\\"y\\\":41.47,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.21236335414943666,\\\"y\\\":-0.9771907724771048}},{\\\"point\\\":{\\\"x\\\":214.08,\\\"y\\\":62.6,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.1869688548911045,\\\"y\\\":-0.9823658418841267}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":336.892,\\\"y\\\":661.806,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"AFB1A2DB-6DEB-4733-95CB-27EF552C2187_0\\\",\\\"cx\\\":\\\"42.03%\\\",\\\"cy\\\":\\\"67.36%\\\",\\\"r\\\":\\\"122.67%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"26.27%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"hand_card\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":119.085,\\\"max\\\":486.97339982175345},\\\"y\\\":{\\\"min\\\":17.405,\\\"max\\\":660.9529553872665}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_card\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"card\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 349.893 21.856 C 348.197 19.909 342.461 19.405 342.460 19.405 C 342.439 19.405 130.136 19.405 130.115 19.405 C 130.114 19.405 125.733 19.898 123.875 21.467 C 122.082 22.982 121.085 27.461 121.085 27.461 C 121.085 27.493 121.085 348.614 121.085 348.646 C 121.085 348.647 121.825 352.060 124.771 354.435 C 127.119 356.328 131.241 355.889 131.242 355.889 C 131.264 355.889 351.764 356.447 351.786 356.447 C 351.786 356.415 351.786 28.881 351.786 28.848 C 351.786 28.847 352.397 24.731 349.893 21.856 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_holding\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 481.586 528.847 C 486.701 542.191 493.000 635.387 442.904 655.672 C 405.605 670.774 364.096 629.738 353.493 613.819 C 339.325 592.550 329.258 536.545 322.420 531.384 C 320.113 529.642 293.254 525.677 293.251 525.676 C 293.254 525.677 315.520 527.983 321.787 533.286 C 330.062 540.290 331.982 555.987 331.298 557.382 C 329.276 561.508 300.228 564.186 288.812 557.383 C 266.512 544.094 258.973 518.913 259.642 513.628 C 261.717 497.253 265.730 492.408 278.666 482.556 C 285.217 477.566 331.927 483.824 331.932 483.824 C 331.927 483.824 285.674 477.003 277.398 483.190 C 259.058 496.900 256.702 518.440 264.081 530.115 C 273.411 544.878 237.379 530.175 234.278 511.091 C 228.043 472.727 252.972 437.329 264.081 432.460 C 272.255 428.878 336.364 436.899 336.371 436.899 C 336.364 436.898 274.942 429.739 265.349 431.826 C 256.473 433.758 240.334 461.369 236.814 471.776 C 234.353 479.052 232.558 506.433 229.839 506.018 C 204.398 502.136 207.556 447.909 210.181 437.533 C 215.629 415.996 247.834 392.892 253.935 387.437 C 270.629 372.514 359.823 392.510 359.834 392.510 C 359.823 392.510 281.313 369.936 253.935 387.437 C 250.128 389.871 233.773 391.513 233.771 391.514 C 233.768 391.516 207.446 406.896 200.669 409.631 C 180.951 417.588 152.471 398.733 163.255 389.974 C 184.578 372.656 203.053 355.843 213.351 351.292 C 241.673 338.779 278.523 331.443 295.153 334.805 C 336.982 343.259 409.978 353.034 424.515 368.413 C 440.866 385.713 458.165 467.742 481.586 528.847 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":150.186,\\\"max\\\":321.948},\\\"y\\\":{\\\"min\\\":47.194,\\\"max\\\":324.358}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":455.099,\\\"y\\\":700.077,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.336100184214079,\\\"y\\\":-0.9418262399037639}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":233.68,\\\"y\\\":20.625,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":121.73,\\\"y\\\":195.256,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999874248983487,\\\"y\\\":0.005014982070704996}},{\\\"point\\\":{\\\"x\\\":350.972,\\\"y\\\":195.256,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999874248983487,\\\"y\\\":0.005014982070704982}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":362.548,\\\"y\\\":624.794,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.712899988476634,\\\"y\\\":0.701265717421018}},{\\\"point\\\":{\\\"x\\\":471.639,\\\"y\\\":624.83,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6987335557481552,\\\"y\\\":0.7153820084902468}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":168.066,\\\"y\\\":401.91,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7800167753493046,\\\"y\\\":0.625758603755212}},{\\\"point\\\":{\\\"x\\\":457.748,\\\"y\\\":460.749,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8780833190833396,\\\"y\\\":-0.47850776874319}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":439.547,\\\"y\\\":653.267,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.336066945032441,\\\"y\\\":0.9418381009794422}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"hand_card_2\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":160.387,\\\"max\\\":482.1444053271335},\\\"y\\\":{\\\"min\\\":15.488,\\\"max\\\":680.3340380063905}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_card_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"finger\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"5\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 180.865 359.799 C 193.314 331.589 209.616 312.259 211.303 311.098 C 221.590 304.018 278.344 279.264 299.235 282.013 C 320.616 284.826 360.073 284.883 353.347 296.894 C 342.344 316.540 293.153 310.420 293.147 310.422 C 293.142 310.424 244.451 334.770 244.447 334.772 C 244.443 334.778 227.430 379.695 209.950 396.324 C 185.539 419.548 176.908 368.764 180.865 359.799 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"card\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 380.919 19.830 C 379.299 17.970 373.821 17.489 373.821 17.488 C 373.800 17.488 171.032 17.488 171.012 17.488 C 171.011 17.489 166.826 17.959 165.052 19.459 C 163.339 20.906 162.388 25.183 162.387 25.183 C 162.387 25.214 162.387 331.913 162.387 331.944 C 162.388 331.945 163.094 335.205 165.908 337.473 C 168.150 339.280 172.087 338.861 172.088 338.862 C 172.108 338.862 372.696 339.374 372.716 339.374 C 372.717 339.373 377.370 339.414 380.276 337.352 C 383.384 335.146 383.136 328.023 383.136 328.022 C 383.136 327.992 382.728 26.538 382.728 26.508 C 382.728 26.507 383.311 22.576 380.919 19.830 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_holding\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 417.303 521.177 C 382.694 489.263 289.227 393.201 293.027 332.857 C 293.479 325.676 285.593 328.028 285.592 328.027 C 285.594 328.027 298.124 329.633 299.928 329.687 C 305.003 329.837 319.896 318.754 317.787 312.542 C 315.543 305.934 298.221 308.685 291.545 310.360 C 252.610 320.125 205.320 355.192 195.967 392.621 C 191.615 410.034 339.528 605.062 365.984 620.052 C 408.598 644.197 424.605 527.910 417.303 521.177 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 359.385 666.262 C 302.250 616.649 225.742 566.248 213.736 544.349 C 203.552 525.773 171.871 380.274 175.704 370.632 C 178.120 364.555 256.919 304.737 264.521 302.267 C 271.490 300.002 363.164 296.189 367.259 304.476 C 369.309 308.625 363.858 322.912 346.109 333.001 C 340.759 336.042 290.121 342.235 281.495 343.525 C 273.636 344.701 227.628 378.464 227.623 378.468 C 227.633 378.465 292.440 346.195 335.320 354.408 C 342.410 355.766 407.008 355.541 409.446 364.839 C 411.465 372.539 404.181 388.039 386.700 393.143 C 375.524 396.406 308.886 391.654 298.594 395.534 C 296.138 396.460 281.462 407.736 281.460 407.738 C 281.466 407.739 336.517 421.488 339.997 422.485 C 364.826 429.598 376.744 468.997 376.748 469.001 C 376.757 469.011 448.759 490.179 473.447 569.036 C 482.447 597.786 487.445 643.534 454.280 666.841 C 422.200 689.385 367.108 672.968 359.385 666.262 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 227.623 378.468 C 206.178 396.640 214.368 432.333 209.059 476.272 M 251.968 403.596 C 238.362 409.512 215.483 506.186 215.479 506.196 M 281.460 407.738 C 281.457 407.737 261.351 399.516 251.968 403.596 M 313.034 501.562 C 371.833 482.169 431.738 547.756 431.750 547.760 M 282.673 476.775 C 282.676 476.777 311.496 502.070 313.034 501.562 M 287.584 448.106 C 285.109 447.647 282.674 476.772 282.673 476.775 M 323.436 452.500 C 319.766 451.381 291.918 448.910 287.584 448.106 M 345.258 466.898 C 344.202 465.818 329.615 454.384 323.436 452.500 M 376.748 469.001 C 365.600 477.508 347.553 469.244 345.258 466.898 M 454.280 666.841 C 422.200 689.385 367.108 672.968 359.385 666.262 C 302.250 616.649 225.742 566.248 213.736 544.349 C 203.552 525.773 171.871 380.274 175.704 370.632 C 178.120 364.555 256.919 304.737 264.521 302.267 C 271.490 300.002 363.164 296.189 367.259 304.476 C 369.309 308.625 363.858 322.912 346.109 333.001 C 340.759 336.042 290.121 342.235 281.495 343.525 C 273.636 344.701 227.628 378.464 227.623 378.468 C 227.633 378.465 292.440 346.195 335.320 354.408 C 342.410 355.766 407.008 355.541 409.446 364.839 C 411.465 372.539 404.181 388.039 386.700 393.143 C 375.524 396.406 308.886 391.654 298.594 395.534 C 296.138 396.460 281.462 407.736 281.460 407.738 C 281.466 407.739 336.517 421.488 339.997 422.485 C 364.826 429.598 376.744 468.997 376.748 469.001 C 376.757 469.011 448.759 490.179 473.447 569.036 C 482.447 597.786 487.445 643.534 454.280 666.841 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":189.172,\\\"max\\\":355.239},\\\"y\\\":{\\\"min\\\":46.145,\\\"max\\\":297.121}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":442.313,\\\"y\\\":699.76,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.2862787859448257,\\\"y\\\":-0.9581463649766443}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":269.925,\\\"y\\\":18.654,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":163.004,\\\"y\\\":185.443,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872972826314,\\\"y\\\":0.005040364409279444}},{\\\"point\\\":{\\\"x\\\":381.95,\\\"y\\\":185.443,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872972826314,\\\"y\\\":0.005040364409279429}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":340.795,\\\"y\\\":651.867,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7129108010945265,\\\"y\\\":0.7012547252480801}},{\\\"point\\\":{\\\"x\\\":467.188,\\\"y\\\":651.901,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6986557813877585,\\\"y\\\":0.7154579646166926}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":437.432,\\\"y\\\":507.795,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7196981204144021,\\\"y\\\":-0.6942871275430483}},{\\\"point\\\":{\\\"x\\\":216.455,\\\"y\\\":547.231,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7800177573620175,\\\"y\\\":0.6257573796607826}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":416.496,\\\"y\\\":675.74,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"hand_card_3\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":169.966,\\\"max\\\":438.94312999072326},\\\"y\\\":{\\\"min\\\":6.343,\\\"max\\\":673.4853966356794}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_card_3\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"Layer_1\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 202.133 468.700 C 198.503 453.097 230.501 349.594 236.338 341.426 C 241.111 334.747 300.302 289.609 324.846 279.949 C 334.576 276.120 407.950 267.427 410.311 270.177 C 411.185 271.196 426.708 285.464 408.720 301.996 C 392.597 316.814 346.913 326.310 346.907 326.312 C 346.902 326.315 298.857 353.059 298.013 354.135 C 297.157 355.227 282.476 409.035 282.475 409.041 C 282.476 409.035 297.328 356.571 299.088 353.711 C 299.851 352.471 346.794 327.517 346.798 327.515 C 346.803 327.514 372.364 313.338 390.215 322.281 C 399.868 327.117 424.102 377.925 424.862 381.995 C 426.343 389.916 424.733 394.160 418.991 397.515 C 417.459 398.410 397.583 403.312 385.229 392.116 C 376.502 384.208 363.614 360.521 363.612 360.517 C 363.607 360.522 318.275 406.650 318.270 406.654 C 318.275 406.650 363.626 361.633 363.630 361.629 C 363.632 361.632 376.940 384.228 385.617 392.014 C 399.064 404.080 418.053 398.171 418.056 398.171 C 418.057 398.172 425.026 399.389 427.249 408.245 C 428.343 412.607 420.571 472.544 410.745 479.375 C 396.227 489.469 384.480 472.939 381.980 468.366 C 375.092 455.770 379.048 421.129 379.048 421.124 C 379.048 421.123 380.837 412.466 380.837 412.466 C 380.837 412.466 379.139 420.464 379.139 420.465 C 379.138 420.464 370.450 414.136 370.449 414.135 C 370.448 414.137 360.431 432.107 360.430 432.109 C 360.432 432.111 377.558 451.587 377.559 451.589 C 377.560 451.591 378.509 462.102 381.991 468.937 C 383.884 472.652 396.635 489.633 410.090 480.178 C 419.034 473.893 426.981 421.896 426.982 421.890 C 426.983 421.894 438.751 445.104 436.704 465.925 C 436.058 472.492 423.824 496.816 399.462 508.917 C 397.040 510.119 378.927 507.842 375.489 502.182 C 372.040 496.503 383.588 472.943 383.589 472.940 C 383.588 472.943 370.985 496.220 374.748 502.905 C 377.965 508.620 399.328 508.998 400.343 510.532 C 437.876 567.222 442.575 598.248 431.226 626.997 C 414.086 670.420 377.548 669.070 323.839 669.953 C 266.037 670.902 226.040 571.485 202.133 468.700 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"card\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 386.816 10.645 C 385.223 8.816 379.837 8.343 379.837 8.343 C 379.817 8.343 180.465 8.343 180.445 8.343 C 180.445 8.343 176.330 8.806 174.586 10.280 C 172.902 11.703 171.966 15.907 171.966 15.908 C 171.966 15.938 171.966 317.470 171.966 317.500 C 171.966 317.500 172.661 320.705 175.427 322.936 C 177.632 324.713 181.503 324.301 181.503 324.301 C 181.523 324.301 378.731 324.804 378.750 324.804 C 378.751 324.804 383.326 324.844 386.183 322.817 C 389.239 320.648 388.995 313.645 388.995 313.644 C 388.995 313.615 388.594 17.240 388.594 17.210 C 388.594 17.209 389.167 13.345 386.816 10.645 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"Layer_10\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 403.385 617.066 C 412.674 598.887 412.142 557.257 388.271 510.475 C 372.391 479.351 339.068 461.667 338.087 459.372 C 337.196 457.287 335.504 403.877 335.546 394.349 C 335.605 381.194 327.046 330.799 322.974 324.144 C 320.065 319.391 312.649 294.797 283.200 292.325 C 259.526 290.337 261.023 330.567 260.903 331.135 C 260.723 331.988 269.917 369.328 269.846 397.785 C 269.844 398.372 267.122 439.568 265.340 459.278 C 260.850 508.907 235.311 539.303 240.098 580.955 C 241.866 596.340 240.697 631.411 303.952 668.772 C 381.803 683.247 393.715 635.991 403.385 617.066 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":198.299,\\\"max\\\":361.568},\\\"y\\\":{\\\"min\\\":36.517,\\\"max\\\":286.916}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":277.692,\\\"y\\\":9.489,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":172.572,\\\"y\\\":173.467,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873985582148,\\\"y\\\":0.005020231545848447}},{\\\"point\\\":{\\\"x\\\":387.829,\\\"y\\\":173.467,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.999987398558215,\\\"y\\\":0.005020231545848464}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":279.877,\\\"y\\\":651.666,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7129034259466664,\\\"y\\\":0.7012622229048887}},{\\\"point\\\":{\\\"x\\\":417.828,\\\"y\\\":651.703,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6986375999278468,\\\"y\\\":0.7154757186425391}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":357.923,\\\"y\\\":668.936,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":235.006,\\\"y\\\":567.952,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872716102187,\\\"y\\\":0.005045455138106748}},{\\\"point\\\":{\\\"x\\\":429.435,\\\"y\\\":567.952,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872688175807,\\\"y\\\":0.0050460085964960395}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":358.567,\\\"y\\\":705.781,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"hand_claddagh\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":143.57333377789251,\\\"max\\\":648.7617622853768},\\\"y\\\":{\\\"min\\\":116.69633341433779,\\\"max\\\":582.0173658388165}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_claddagh\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_claddagh\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 535.658 137.208 C 467.548 115.573 398.684 109.620 326.333 134.104 C 206.146 174.777 145.336 132.792 150.780 158.927 C 156.831 187.970 179.613 206.519 253.553 201.396 C 372.506 193.153 376.934 244.296 382.606 288.233 C 386.134 315.562 373.695 356.954 366.775 367.388 C 303.415 462.916 239.952 494.279 154.642 534.139 C 136.006 542.847 139.182 574.018 213.744 555.247 C 244.015 547.626 324.560 506.065 396.326 439.154 C 401.212 434.599 322.360 512.085 223.242 556.302 C 186.474 572.705 235.217 589.769 285.510 568.967 C 403.452 520.184 471.889 456.814 468.093 460.262 C 432.709 492.399 393.847 517.532 307.673 562.635 C 289.430 572.183 314.275 582.468 355.166 577.410 C 438.307 567.127 533.718 476.466 529.305 481.370 C 499.397 514.598 432.475 554.446 391.049 570.023 C 383.892 572.714 413.993 594.044 478.646 566.856 C 569.258 528.753 593.527 482.551 623.805 418.490 C 646.116 371.285 652.140 311.864 643.456 266.809 C 632.819 211.619 614.262 162.177 535.658 137.208 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":8.989,\\\"max\\\":442.404},\\\"y\\\":{\\\"min\\\":202.575,\\\"max\\\":517.425}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":707.612,\\\"y\\\":315.382,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":448.967,\\\"y\\\":119.322,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":645.596,\\\"y\\\":316.251,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871265050049,\\\"y\\\":0.005074132858282649}},{\\\"point\\\":{\\\"x\\\":148.251,\\\"y\\\":548.932,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8977715541444479,\\\"y\\\":0.4404613905543397}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":605.42,\\\"y\\\":176.664,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7012908259996556,\\\"y\\\":-0.7128752887909081}},{\\\"point\\\":{\\\"x\\\":313.501,\\\"y\\\":572.39,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.799839122590576,\\\"y\\\":0.6002144433229991}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":156.926,\\\"y\\\":155.359,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.774524310187776,\\\"y\\\":-0.6325441430668296}},{\\\"point\\\":{\\\"x\\\":219.83,\\\"y\\\":572.924,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7577135679347677,\\\"y\\\":0.6525872730658819}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":596.436,\\\"y\\\":467.308,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7070789735384192,\\\"y\\\":0.7071345877411566}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"hand_fist\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":111.47747720494829,\\\"max\\\":625.6019185987444},\\\"y\\\":{\\\"min\\\":16.992073002875472,\\\"max\\\":660.1137506042829}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_fist\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_fist\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 356.982 658.100 C 477.243 658.823 521.995 630.939 554.830 597.087 C 583.319 567.715 603.693 523.034 611.502 502.523 C 619.607 481.235 626.041 396.452 622.700 358.816 C 620.368 332.542 598.039 281.156 598.033 281.138 C 598.033 281.127 603.860 234.127 605.189 171.402 C 605.521 155.697 595.254 117.688 587.377 108.009 C 535.045 43.703 477.716 60.184 477.705 60.179 C 477.698 60.175 454.505 21.087 404.142 19.077 C 356.635 17.181 340.282 47.660 340.276 47.662 C 340.267 47.662 315.029 24.060 255.395 43.578 C 230.785 51.633 220.496 90.533 220.492 90.538 C 220.482 90.541 154.985 72.451 122.424 120.108 C 113.329 133.419 113.677 207.843 118.679 246.697 C 124.656 293.125 83.255 509.311 165.730 593.288 C 221.151 649.719 309.654 657.816 356.982 658.100 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 340.276 47.662 C 360.933 56.445 363.680 144.451 365.026 179.501 C 365.700 197.070 365.196 213.603 364.940 226.175 C 380.644 225.678 437.446 218.974 455.503 217.102 C 463.739 216.249 482.459 210.279 482.462 210.278 C 487.663 158.647 487.576 67.865 477.705 60.179 M 240.350 335.913 C 237.326 348.082 202.459 378.238 159.563 346.891 C 121.960 319.413 130.977 285.634 117.558 246.997 M 220.492 90.538 C 232.344 104.946 234.266 126.501 240.462 194.982 C 241.150 202.591 242.255 210.461 242.973 219.272 C 245.623 219.644 247.885 220.885 250.265 221.599 C 270.198 227.584 345.139 226.800 364.940 226.175 M 598.033 281.138 C 563.189 201.763 482.474 210.285 482.462 210.278 M 242.973 219.272 C 215.953 216.143 186.242 248.129 208.762 293.575 C 215.584 307.343 227.250 328.465 240.350 335.913 C 241.203 337.175 242.223 337.843 243.332 338.367 C 281.228 356.296 353.416 362.366 371.879 361.445 C 385.735 360.753 447.912 356.938 447.920 356.937 C 447.919 356.946 432.429 390.434 444.276 448.562 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":196.469,\\\"max\\\":527.606},\\\"y\\\":{\\\"min\\\":365.662,\\\"max\\\":603.681}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":701.926,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":389.799,\\\"y\\\":17.681,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":118.475,\\\"y\\\":259.777,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999874193383655,\\\"y\\\":0.005016090608824136}},{\\\"point\\\":{\\\"x\\\":596.6,\\\"y\\\":259.777,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999874193383655,\\\"y\\\":0.00501609060882416}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":165.609,\\\"y\\\":592.56,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7129525332410661,\\\"y\\\":0.7012122969152398}},{\\\"point\\\":{\\\"x\\\":553.262,\\\"y\\\":592.6,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6987416409929204,\\\"y\\\":0.7153741113169533}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":548.474,\\\"y\\\":80.321,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6517430560672007,\\\"y\\\":-0.7584398386610407}},{\\\"point\\\":{\\\"x\\\":143.841,\\\"y\\\":96.556,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.66215006199955,\\\"y\\\":-0.7493712667256411}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360.043,\\\"y\\\":655.36,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"hand_half\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":185.09862953199126,\\\"max\\\":549.814},\\\"y\\\":{\\\"min\\\":14.205493741792967,\\\"max\\\":542}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_half\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"Hand_open_3/4\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 193.830 540.000 C 193.830 539.997 192.786 518.898 192.842 514.995 C 193.134 494.556 194.482 382.960 194.841 345.108 C 195.125 315.199 180.493 258.608 190.753 247.444 C 198.609 238.897 226.799 249.236 234.256 260.587 C 245.439 277.608 250.349 306.047 252.251 312.361 C 259.734 337.206 252.439 442.082 264.684 433.941 C 274.796 427.219 273.292 399.891 275.243 385.527 C 277.029 372.367 275.324 288.425 275.413 275.145 C 275.489 263.833 276.342 189.731 276.514 181.125 C 276.721 170.766 274.008 80.332 279.743 67.980 C 281.599 63.982 288.375 41.803 305.045 41.480 C 319.190 41.207 326.222 55.371 328.013 58.289 C 335.428 70.375 332.765 165.244 333.268 176.021 C 333.791 187.238 332.613 298.407 339.231 298.538 C 345.891 298.671 347.890 186.139 347.495 175.393 C 347.052 163.381 342.085 58.900 347.565 44.082 C 349.005 40.187 350.788 17.015 367.950 16.224 C 384.571 15.459 391.394 38.644 393.325 42.602 C 399.902 56.081 400.246 155.643 401.006 167.030 C 401.781 178.651 403.252 294.292 410.108 293.931 C 416.869 293.575 414.047 179.712 413.230 168.530 C 412.546 159.159 409.709 76.886 415.377 65.915 C 417.036 62.704 424.214 45.025 437.710 45.822 C 450.363 46.570 461.347 67.130 463.252 71.002 C 468.479 81.629 467.520 160.321 468.087 169.313 C 468.980 183.489 472.564 323.482 480.171 324.004 C 485.740 324.386 479.502 230.531 480.270 220.572 C 481.028 210.740 475.455 142.109 477.482 128.389 C 478.202 123.521 485.683 107.906 497.524 107.513 C 508.234 107.158 519.089 124.199 520.972 127.381 C 528.157 139.521 532.689 233.257 533.564 243.955 C 535.497 267.614 546.138 460.230 546.851 502.916 C 547.139 520.165 547.814 539.996 547.814 540.000 C 547.778 540.000 193.865 540.000 193.830 540.000 Z\\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":285.858,\\\"max\\\":505.701},\\\"y\\\":{\\\"min\\\":302.824,\\\"max\\\":517.79}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":367.814,\\\"y\\\":539.495,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":368.601,\\\"y\\\":16.427,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":195.81,\\\"y\\\":447.176,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872880189178,\\\"y\\\":-0.0050422019564934075}},{\\\"point\\\":{\\\"x\\\":540.505,\\\"y\\\":447.177,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872880189178,\\\"y\\\":-0.005042201956497622}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":367.814,\\\"y\\\":540.217,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":194.653,\\\"y\\\":540.217,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}},{\\\"point\\\":{\\\"x\\\":540.974,\\\"y\\\":540.217,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"hand_holding_fingers\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":154.91554323520373,\\\"max\\\":612.8561658055753},\\\"y\\\":{\\\"min\\\":61.73272867410894,\\\"max\\\":654.6856911064222}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_hold_fingers\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"Hand_hold_fingers\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 605.801 366.784 C 604.898 343.064 600.751 283.573 599.036 259.898 C 597.982 245.334 596.826 208.498 593.736 194.227 C 590.189 177.845 579.100 135.579 567.827 123.174 C 562.965 117.824 547.421 102.439 539.273 107.401 C 527.752 114.415 534.813 126.127 534.861 131.573 C 534.981 145.046 547.230 177.346 548.951 190.709 C 550.739 204.583 552.123 239.941 550.312 253.812 C 548.831 265.157 550.851 301.720 536.282 303.490 C 527.252 304.587 526.005 234.414 521.276 215.118 C 517.864 201.198 508.074 166.319 501.673 153.496 C 493.470 137.065 466.662 98.759 453.129 86.345 C 446.429 80.198 425.738 59.943 418.496 64.356 C 406.075 71.924 413.424 90.867 419.430 102.755 C 425.469 114.711 446.279 144.910 452.155 157.838 C 458.282 171.319 470.516 206.729 472.931 221.339 C 476.134 240.716 482.259 309.202 473.157 309.956 C 465.326 310.605 454.129 253.722 447.799 238.054 C 440.631 220.311 423.161 174.979 411.810 159.574 C 397.289 139.868 351.712 95.329 328.792 86.735 C 322.087 84.221 302.477 77.922 296.563 84.447 C 292.206 89.254 301.889 107.483 305.246 113.242 C 314.696 129.453 356.259 155.862 366.760 171.413 C 376.605 185.992 391.638 228.159 396.011 245.199 C 399.825 260.056 411.345 309.699 404.880 313.837 C 396.028 319.505 369.583 265.460 334.060 250.859 C 317.595 244.092 269.968 234.862 247.721 241.494 C 234.441 245.454 200.898 260.474 190.303 269.930 C 182.536 276.863 155.774 291.580 164.180 308.968 C 169.585 320.151 198.797 311.116 208.371 309.051 C 219.525 306.644 243.861 288.565 255.090 287.422 C 269.586 285.947 303.278 291.248 314.511 298.552 C 330.473 308.932 354.175 353.002 361.080 370.747 C 371.281 396.967 389.622 469.628 380.403 496.209 C 374.040 514.558 337.211 552.855 318.567 558.293 C 304.085 562.517 277.553 555.978 251.765 545.240 C 241.410 540.928 220.712 521.499 210.165 509.555 C 185.941 482.123 153.280 500.645 157.245 513.358 C 163.253 532.617 196.484 574.711 212.414 587.620 C 239.979 609.958 324.670 645.094 359.792 650.126 C 399.758 655.853 502.855 653.715 544.788 625.405 C 571.648 607.271 602.099 548.000 607.384 502.841 C 615.527 433.260 606.947 396.919 605.801 366.784 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":42.762,\\\"max\\\":325.348},\\\"y\\\":{\\\"min\\\":315.6,\\\"max\\\":495.338}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":424.229,\\\"y\\\":681.754,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":417.165,\\\"y\\\":65.457,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5272135313420024,\\\"y\\\":-0.8497328358783692}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":537.981,\\\"y\\\":629.378,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129335762692849,\\\"y\\\":0.7012315707581112}},{\\\"point\\\":{\\\"x\\\":306.585,\\\"y\\\":633.634,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987263029800354,\\\"y\\\":0.7153890923992705}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":605.913,\\\"y\\\":363.325,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.911453922250488,\\\"y\\\":-0.41140217259295203}},{\\\"point\\\":{\\\"x\\\":612.044,\\\"y\\\":456.675,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9939665456436754,\\\"y\\\":0.1096836639667888}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":298.977,\\\"y\\\":85.854,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8620141691587011,\\\"y\\\":-0.5068841802321651}},{\\\"point\\\":{\\\"x\\\":539.75,\\\"y\\\":107.761,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.48901600976324044,\\\"y\\\":-0.8722748088734641}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":425.038,\\\"y\\\":649.97,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"hand_open_3_4\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":40.21237811612145,\\\"max\\\":714.0464835200017},\\\"y\\\":{\\\"min\\\":177.0708819917752,\\\"max\\\":543.3452785736977}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_open_3_4\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"Hand_open_3/4\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 42.215 358.272 C 42.003 328.303 54.674 278.727 70.556 262.410 C 112.466 219.353 191.815 187.964 212.635 184.810 C 227.975 182.486 312.842 186.467 341.570 186.812 C 371.516 187.172 428.178 172.445 439.356 182.719 C 447.914 190.584 437.562 218.810 426.197 226.276 C 409.154 237.473 380.680 242.389 374.358 244.293 C 349.483 251.785 244.476 244.481 252.626 256.742 C 259.357 266.867 286.804 264.812 301.101 267.314 C 314.008 269.572 396.542 275.617 409.613 276.520 C 425.875 277.643 532.510 283.642 544.913 283.647 C 555.481 283.650 647.417 272.428 660.207 277.843 C 664.271 279.564 686.417 286.486 686.740 303.177 C 687.014 317.340 672.773 324.287 669.910 326.173 C 657.780 334.165 561.057 339.817 550.024 340.471 C 538.814 341.136 427.366 340.418 427.354 340.418 C 427.366 340.419 539.913 349.448 550.652 348.692 C 562.869 347.832 668.883 334.582 684.135 339.725 C 688.076 341.054 711.236 342.953 712.028 360.136 C 712.794 376.778 689.518 383.487 685.617 385.543 C 672.026 392.706 570.655 401.085 559.026 402.269 C 547.425 403.451 431.979 411.382 431.967 411.383 C 431.979 411.383 546.373 411.761 557.524 410.493 C 567.055 409.410 650.958 402.064 662.275 407.622 C 665.523 409.217 683.191 416.471 682.393 429.983 C 681.644 442.652 661.014 453.563 657.181 455.557 C 646.408 461.160 565.934 464.509 556.740 465.418 C 541.917 466.883 394.845 481.532 394.829 481.533 C 394.840 481.533 494.735 478.455 505.418 478.620 C 515.578 478.777 585.511 465.276 599.723 466.793 C 604.622 467.316 620.232 475.004 620.625 486.859 C 620.981 497.583 603.857 508.350 600.733 510.337 C 588.482 518.130 492.986 530.769 482.005 531.980 C 458.586 534.562 253.449 545.971 224.729 539.260 C 206.166 534.923 117.438 515.502 81.535 471.443 C 48.211 430.550 42.415 386.356 42.215 358.272 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":125.948,\\\"max\\\":576.154},\\\"y\\\":{\\\"min\\\":209.571,\\\"max\\\":495.085}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":15.411,\\\"y\\\":379.068,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":329.086,\\\"y\\\":184.318,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":51.178,\\\"y\\\":302.073,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873181281341,\\\"y\\\":0.005036227050270598}},{\\\"point\\\":{\\\"x\\\":685.515,\\\"y\\\":302.073,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873200064072,\\\"y\\\":0.0050358540887562725}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":554.552,\\\"y\\\":518.354,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129355307283227,\\\"y\\\":0.7012295836779314}},{\\\"point\\\":{\\\"x\\\":156.951,\\\"y\\\":518.395,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987333317777815,\\\"y\\\":0.7153822272482877}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":437.466,\\\"y\\\":182.002,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.631445428603132,\\\"y\\\":-0.7754203187279831}},{\\\"point\\\":{\\\"x\\\":204.715,\\\"y\\\":186.955,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.21188539139013307,\\\"y\\\":-0.9772945210710281}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":44.984,\\\"y\\\":379.068,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"hand_point\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":151.2409449151704,\\\"max\\\":582.1958754455674},\\\"y\\\":{\\\"min\\\":13.26116207424166,\\\"max\\\":672.4735748487225}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_point\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_point\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 470.929 634.844 C 577.785 549.185 531.429 383.658 538.718 341.937 C 547.727 290.360 586.664 250.483 579.267 234.236 C 567.285 207.920 520.035 228.673 494.645 269.841 C 453.050 337.285 465.988 395.843 461.969 447.776 C 464.484 287.525 475.655 94.573 461.667 43.207 C 460.250 38.004 446.571 12.392 426.417 15.526 C 399.838 19.658 399.281 57.922 398.835 72.836 C 395.842 172.870 390.477 275.287 390.474 275.296 C 390.469 275.292 372.484 260.712 359.653 260.163 C 320.877 258.504 312.194 276.071 308.015 273.720 C 294.727 266.244 276.621 256.282 247.086 276.874 C 236.718 284.102 233.586 296.499 233.584 296.502 C 233.571 296.510 186.373 282.793 163.111 335.349 C 154.185 355.517 149.142 400.943 157.506 489.558 C 178.590 712.930 406.511 686.483 470.929 634.844 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 390.474 275.296 C 407.488 292.085 418.787 346.492 419.198 358.570 C 419.584 369.919 422.649 419.177 397.887 438.552 C 379.311 453.086 346.685 452.450 335.903 442.197 M 264.894 444.268 C 272.164 453.155 304.130 461.952 322.388 450.737 C 356.693 429.667 348.330 375.271 343.856 344.435 C 337.385 299.844 322.314 284.052 308.015 273.720 M 195.903 370.458 C 210.869 367.056 221.136 375.885 220.701 407.185 M 233.584 296.502 C 233.588 296.514 288.189 295.881 272.641 417.381 C 270.158 436.780 258.026 465.273 231.042 470.387 C 187.232 478.690 175.693 434.964 175.190 418.546 C 174.461 394.724 177.149 374.155 195.903 370.458 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":231.662,\\\"max\\\":462.764},\\\"y\\\":{\\\"min\\\":430.591,\\\"max\\\":619.124}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":346.099,\\\"y\\\":700.218,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":428.539,\\\"y\\\":16.937,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":158.126,\\\"y\\\":486.828,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872931587463,\\\"y\\\":0.005041182504468998}},{\\\"point\\\":{\\\"x\\\":540.473,\\\"y\\\":486.828,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872931587463,\\\"y\\\":0.005041182504468965}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":220.865,\\\"y\\\":625.5,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7129256664097725,\\\"y\\\":0.7012396125249784}},{\\\"point\\\":{\\\"x\\\":470.235,\\\"y\\\":625.547,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6987322514833304,\\\"y\\\":0.715383282399747}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":574.523,\\\"y\\\":236.35,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6817683387979059,\\\"y\\\":-0.7315681323108217}},{\\\"point\\\":{\\\"x\\\":190.852,\\\"y\\\":304.584,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6314434020564988,\\\"y\\\":-0.7754219689945048}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":345.58,\\\"y\\\":661.576,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"hand_point_2\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":153.50026729617127,\\\"max\\\":591.2642925883827},\\\"y\\\":{\\\"min\\\":16.645489372265892,\\\"max\\\":668.0097000527071}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_point_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_point\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 336.803 665.922 C 375.004 667.269 437.732 652.926 460.458 634.844 C 493.745 608.359 527.120 572.180 534.658 547.497 C 544.227 516.165 538.160 390.721 547.454 346.916 C 558.531 294.704 596.635 252.853 588.003 236.833 C 580.194 222.341 537.303 230.683 524.031 244.640 C 505.052 264.598 491.113 300.928 486.835 308.752 C 480.652 320.062 466.159 365.828 466.157 365.834 C 466.157 365.829 465.588 332.343 464.574 318.536 C 464.374 315.809 463.028 298.603 462.918 295.871 C 462.257 279.428 463.476 171.615 463.403 159.094 C 463.340 148.484 467.957 55.653 461.667 43.207 C 459.692 39.300 451.335 17.873 434.794 18.667 C 420.753 19.341 414.858 33.913 413.131 36.844 C 405.800 49.280 403.303 145.406 402.264 156.341 C 401.229 167.235 390.478 275.285 390.474 275.296 C 390.469 275.292 363.736 260.796 359.653 260.163 C 331.510 255.799 311.837 274.378 308.015 273.720 C 286.516 270.018 267.082 262.623 247.086 276.874 C 236.556 284.378 233.329 296.989 233.327 296.992 C 233.314 297.000 185.612 284.652 163.111 338.317 C 154.749 358.260 153.352 464.843 158.553 489.558 C 164.303 516.879 181.993 592.488 224.408 626.960 C 265.053 659.995 308.934 664.940 336.803 665.922 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":223.193,\\\"max\\\":441.339},\\\"y\\\":{\\\"min\\\":349.825,\\\"max\\\":582.492}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":346.099,\\\"y\\\":700.218,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":436.916,\\\"y\\\":17.984,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":158.126,\\\"y\\\":486.828,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872931587463,\\\"y\\\":0.005041182504468998}},{\\\"point\\\":{\\\"x\\\":540.473,\\\"y\\\":486.828,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872931587463,\\\"y\\\":0.005041182504468965}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":220.865,\\\"y\\\":625.5,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7129256664097725,\\\"y\\\":0.7012396125249784}},{\\\"point\\\":{\\\"x\\\":470.235,\\\"y\\\":625.547,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6987322514833304,\\\"y\\\":0.715383282399747}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":584.994,\\\"y\\\":283.467,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6816893618253572,\\\"y\\\":-0.7316417251456734}},{\\\"point\\\":{\\\"x\\\":198.182,\\\"y\\\":305.631,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6314434020564988,\\\"y\\\":-0.7754219689945048}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":345.58,\\\"y\\\":661.576,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"hand_relaxed\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":59.98972586878001,\\\"max\\\":660.4612521911711},\\\"y\\\":{\\\"min\\\":103.84299585427446,\\\"max\\\":593.1817439900437}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_relaxed\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"finger\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 568.725 366.567 C 596.473 340.411 613.764 313.947 617.517 305.492 C 622.903 293.357 657.622 238.289 658.365 215.900 C 659.692 175.916 647.227 91.110 625.356 108.052 C 588.428 136.657 604.320 213.796 604.318 213.807 C 604.313 213.813 559.257 276.670 559.252 276.677 C 559.247 276.684 514.742 323.810 505.549 354.934 C 492.417 399.390 558.914 375.815 568.725 366.567 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 205.120 377.191 C 292.497 332.549 426.295 345.490 468.050 232.178 C 482.703 192.411 481.492 200.785 484.557 190.602 C 493.480 160.952 490.465 165.828 493.892 154.741 C 511.664 97.235 553.579 150.566 531.232 223.590 C 510.598 291.018 497.334 348.492 463.637 392.957 C 452.587 407.538 239.404 526.482 208.587 529.793 C 141.860 536.961 193.001 383.383 205.120 377.191 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_holding\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 188.820 590.621 C 289.044 564.066 413.577 548.232 441.561 528.536 C 465.298 511.830 592.070 351.957 593.173 337.783 C 593.868 328.850 533.027 207.714 525.167 200.088 C 517.959 193.096 407.486 133.086 397.448 140.810 C 392.422 144.677 390.507 165.542 406.253 188.663 C 410.999 195.632 469.556 233.808 479.389 240.600 C 488.347 246.788 524.571 316.086 524.576 316.094 C 524.564 316.084 464.313 237.280 406.608 221.508 C 397.067 218.900 317.736 179.643 309.125 189.610 C 301.994 197.864 301.602 221.327 320.028 238.155 C 331.807 248.912 416.650 283.278 426.970 294.262 C 429.433 296.883 440.682 319.611 440.684 319.614 C 440.676 319.612 364.656 303.306 359.773 302.432 C 324.937 296.200 286.502 337.475 286.495 337.479 C 286.477 337.485 185.129 320.077 107.174 402.188 C 78.753 432.124 44.999 485.387 71.734 534.071 C 97.593 581.162 175.273 594.211 188.820 590.621 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 524.576 316.094 C 539.990 351.389 508.377 390.355 488.394 447.612 M 479.464 332.315 C 492.631 347.803 462.440 480.535 462.438 480.550 M 440.684 319.614 C 440.688 319.615 470.383 321.634 479.464 332.315 M 345.226 415.981 C 284.595 356.643 171.324 401.177 171.306 401.176 M 397.532 403.809 C 397.527 403.810 346.812 417.534 345.226 415.981 M 408.790 365.578 C 412.112 366.507 397.534 403.805 397.532 403.809 M 362.035 349.350 C 367.224 350.188 402.974 363.952 408.790 365.578 M 326.502 353.893 C 328.452 353.202 353.298 347.938 362.035 349.350 M 286.495 337.479 C 295.076 354.671 322.264 355.394 326.502 353.893 M 71.734 534.071 C 97.593 581.162 175.273 594.211 188.820 590.621 C 289.044 564.066 413.577 548.232 441.561 528.536 C 465.298 511.830 592.070 351.957 593.173 337.783 C 593.868 328.850 533.027 207.714 525.167 200.088 C 517.959 193.096 407.486 133.086 397.448 140.810 C 392.422 144.677 390.507 165.542 406.253 188.663 C 410.999 195.632 469.556 233.808 479.389 240.600 C 488.347 246.788 524.571 316.086 524.576 316.094 C 524.564 316.084 464.313 237.280 406.608 221.508 C 397.067 218.900 317.736 179.643 309.125 189.610 C 301.994 197.864 301.602 221.327 320.028 238.155 C 331.807 248.912 416.650 283.278 426.970 294.262 C 429.433 296.883 440.682 319.611 440.684 319.614 C 440.676 319.612 364.656 303.306 359.773 302.432 C 324.937 296.200 286.502 337.475 286.495 337.479 C 286.477 337.485 185.129 320.077 107.174 402.188 C 78.753 432.124 44.999 485.387 71.734 534.071 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":66.591,\\\"y\\\":581.789,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.678987996897905,\\\"y\\\":-0.7341493717688319}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":630.135,\\\"y\\\":111.369,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.02170191662641029,\\\"y\\\":-0.9997644856738713}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":400.249,\\\"y\\\":145.927,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6357227773956298,\\\"y\\\":-0.7719174504442728}},{\\\"point\\\":{\\\"x\\\":106.818,\\\"y\\\":405.52,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8321070751417062,\\\"y\\\":-0.5546150155730682}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":64.87,\\\"y\\\":507.903,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9423576018699376,\\\"y\\\":0.3346074568773692}},{\\\"point\\\":{\\\"x\\\":220.376,\\\"y\\\":584.131,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.3312241814281665,\\\"y\\\":0.9435520874001821}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":311.003,\\\"y\\\":197.243,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8614570375196354,\\\"y\\\":-0.5078304564595288}},{\\\"point\\\":{\\\"x\\\":436.477,\\\"y\\\":530.442,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.4246930668934619,\\\"y\\\":0.9053373950813174}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":112.844,\\\"y\\\":567.818,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.4403643856219724,\\\"y\\\":0.8978191398470979}}],\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":524.177,\\\"max\\\":619.892},\\\"y\\\":{\\\"min\\\":48.755,\\\"max\\\":192.279}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"hand_side\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":67.27710931429715,\\\"max\\\":691.5841152489813},\\\"y\\\":{\\\"min\\\":415.35445310136134,\\\"max\\\":620.6439650763804}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_side\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hand_side_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 623.862 512.821 C 624.706 508.808 631.363 496.281 641.924 489.585 C 662.620 476.464 692.156 480.633 689.405 498.046 C 683.125 537.783 544.394 602.193 425.408 616.610 C 342.439 626.662 264.906 595.343 148.446 611.433 C 85.333 620.153 4.147 496.776 155.448 432.380 C 193.774 416.068 284.069 413.746 309.363 422.000 C 390.205 448.380 433.296 444.122 461.792 440.300 C 515.516 433.095 456.530 522.288 389.713 495.386 C 371.297 487.971 334.554 465.279 334.538 465.250 C 334.543 465.261 433.029 521.038 433.039 521.049 C 433.043 521.047 461.209 482.931 488.193 481.349 C 510.596 480.035 513.728 496.229 503.161 518.014 C 523.365 489.773 537.168 480.781 551.860 479.590 C 576.199 477.617 570.713 494.034 570.320 510.150 C 576.712 494.842 589.741 479.733 609.085 479.522 C 631.466 479.277 634.249 488.066 623.862 512.821 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 433.039 521.049 C 425.391 525.865 391.418 553.875 326.813 571.102 M 623.862 512.821 C 619.490 517.818 609.192 550.067 552.433 586.762 M 570.320 510.150 C 551.132 550.686 504.466 588.586 465.434 608.454 M 503.161 518.014 C 467.066 561.966 453.539 592.734 366.830 617.524 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 334.538 465.250 C 279.584 462.770 283.887 451.128 224.698 468.982 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":160.947,\\\"max\\\":592.196},\\\"y\\\":{\\\"min\\\":144.099,\\\"max\\\":483.223}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":21.552,\\\"y\\\":512.895,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":691.018,\\\"y\\\":496.986,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":147.991,\\\"y\\\":434.11,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005030602735163205,\\\"y\\\":-0.9999873464380042}},{\\\"point\\\":{\\\"x\\\":147.991,\\\"y\\\":612.12,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005030602735163225,\\\"y\\\":0.9999873464380042}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"hands_claddagh\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":17.171973113898062,\\\"max\\\":702.8282066943178},\\\"y\\\":{\\\"min\\\":200.33909102598173,\\\"max\\\":511.1650061501673}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hands_claddagh\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hands_claddagh_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#41483E29-D288-4F4E-BC28-FF05B80DC496_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 626.761 214.957 C 581.558 200.598 535.856 196.647 487.839 212.897 C 408.076 239.889 367.718 212.026 371.331 229.370 C 375.347 248.645 390.467 260.956 439.538 257.556 C 518.482 252.085 521.421 286.027 525.186 315.187 C 527.527 333.324 519.272 360.794 514.679 367.719 C 472.630 431.117 430.511 451.932 373.894 478.386 C 361.526 484.165 363.634 504.852 413.118 492.394 C 433.208 487.336 486.662 459.754 534.291 415.347 C 537.534 412.324 485.202 463.749 419.422 493.094 C 395.020 503.980 427.369 515.305 460.747 501.499 C 539.020 469.124 584.440 427.068 581.920 429.356 C 558.437 450.685 532.646 467.364 475.455 497.297 C 463.348 503.634 479.837 510.460 506.975 507.103 C 562.153 500.278 625.474 440.110 622.544 443.365 C 602.696 465.417 558.282 491.862 530.789 502.200 C 526.039 503.986 546.016 518.142 588.924 500.099 C 649.060 474.811 665.167 444.148 685.261 401.633 C 700.068 370.305 704.066 330.870 698.302 300.968 C 691.243 264.341 678.928 231.527 626.761 214.957 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#41483E29-D288-4F4E-BC28-FF05B80DC496_1)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 93.239 214.957 C 138.442 200.598 184.144 196.648 232.161 212.897 C 311.924 239.890 352.282 212.026 348.669 229.371 C 344.653 248.646 329.534 260.956 280.462 257.556 C 201.518 252.085 198.579 286.027 194.814 315.187 C 192.473 333.324 200.728 360.794 205.321 367.719 C 247.371 431.117 289.489 451.932 346.106 478.386 C 358.474 484.165 356.366 504.852 306.882 492.394 C 286.792 487.336 233.338 459.754 185.709 415.347 C 182.466 412.324 234.798 463.749 300.579 493.094 C 324.980 503.980 292.631 515.305 259.254 501.500 C 180.980 469.124 135.560 427.068 138.080 429.356 C 161.563 450.684 187.354 467.365 244.545 497.297 C 256.652 503.634 240.164 510.460 213.026 507.103 C 157.847 500.279 94.526 440.110 97.456 443.365 C 117.305 465.417 161.718 491.862 189.211 502.200 C 193.961 503.986 173.984 518.142 131.076 500.099 C 70.940 474.812 54.833 444.149 34.739 401.634 C 19.933 370.306 15.934 330.870 21.698 300.968 C 28.757 264.341 41.073 231.528 93.239 214.957 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":221.276,\\\"max\\\":498.724},\\\"y\\\":{\\\"min\\\":249.94,\\\"max\\\":476.896}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":685.952,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":218.997,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":20.195,\\\"y\\\":352.724,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999874716149617,\\\"y\\\":0.005005658110200264}},{\\\"point\\\":{\\\"x\\\":699.805,\\\"y\\\":352.724,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999874716149617,\\\"y\\\":0.005005658110200251}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":557.475,\\\"y\\\":505.785,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129291530323832,\\\"y\\\":0.7012360677806929}},{\\\"point\\\":{\\\"x\\\":162.362,\\\"y\\\":505.826,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987239451408815,\\\"y\\\":0.715391395312218}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":672.152,\\\"y\\\":239.74,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6313950247982124,\\\"y\\\":-0.7754613611651227}},{\\\"point\\\":{\\\"x\\\":48.871,\\\"y\\\":239.846,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817551651614339,\\\"y\\\":-0.7315804089611109}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":494.662,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"41483E29-D288-4F4E-BC28-FF05B80DC496_0\\\",\\\"cx\\\":\\\"2.81%\\\",\\\"cy\\\":\\\"53.15%\\\",\\\"r\\\":\\\"135.11%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"44.31%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"41483E29-D288-4F4E-BC28-FF05B80DC496_1\\\",\\\"cx\\\":\\\"93.40%\\\",\\\"cy\\\":\\\"53.52%\\\",\\\"r\\\":\\\"124.49%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"44.31%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"hands_giving\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":36.497836568261874,\\\"max\\\":683.5024027514594},\\\"y\\\":{\\\"min\\\":325.29194601014933,\\\"max\\\":627.6807737195982}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hands_giving\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hands_giving\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 636.405 394.733 C 636.401 394.728 653.728 360.025 655.910 356.724 C 661.013 349.007 675.452 341.537 680.013 346.336 C 690.288 357.149 645.883 467.807 593.539 519.897 C 555.517 557.734 500.880 566.792 444.758 617.229 C 416.538 642.591 335.899 610.387 387.514 527.172 C 401.544 504.553 432.183 460.302 445.920 451.084 C 473.674 432.459 502.280 402.296 516.030 404.819 C 518.668 405.303 532.966 403.120 513.976 439.626 C 507.114 452.817 459.014 468.477 459.892 502.959 C 460.058 509.503 508.484 495.546 535.415 483.453 C 544.170 479.521 552.470 453.978 558.839 437.300 C 564.232 423.179 548.107 407.520 553.044 388.542 C 554.394 383.354 559.243 376.432 560.762 376.219 C 565.617 375.539 581.955 417.589 581.955 417.589 C 581.954 417.589 583.060 413.616 583.874 411.635 C 585.022 408.843 575.143 374.686 579.541 358.570 C 581.538 351.253 587.791 343.730 589.694 343.581 C 595.614 343.119 609.473 396.082 609.473 396.082 C 609.470 396.080 618.808 354.090 628.242 338.773 C 634.168 329.152 645.608 325.781 646.271 327.901 C 652.958 330.391 636.413 394.736 636.405 394.733 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 581.955 417.589 C 575.297 443.240 570.371 455.897 567.882 473.872 M 609.473 396.082 C 598.338 424.372 591.638 445.256 588.105 464.723 M 636.405 394.733 C 636.403 394.738 625.641 422.310 616.671 436.934 C 598.183 467.078 575.732 471.468 554.041 479.737 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 83.595 394.733 C 83.599 394.728 66.272 360.025 64.090 356.724 C 58.987 349.006 44.548 341.537 39.987 346.336 C 29.713 357.149 74.117 467.808 126.461 519.897 C 164.483 557.734 219.120 566.792 275.242 617.229 C 303.462 642.591 384.101 610.387 332.486 527.171 C 318.457 504.553 287.817 460.303 274.080 451.084 C 246.326 432.459 217.721 402.296 203.970 404.819 C 201.332 405.303 187.034 403.120 206.024 439.626 C 212.886 452.817 260.986 468.477 260.109 502.959 C 259.942 509.503 211.516 495.546 184.585 483.452 C 175.830 479.521 167.530 453.978 161.161 437.300 C 155.768 423.179 171.893 407.520 166.956 388.542 C 165.606 383.354 160.757 376.432 159.238 376.219 C 154.383 375.539 138.046 417.589 138.046 417.589 C 138.046 417.589 136.940 413.616 136.126 411.635 C 134.978 408.843 144.857 374.686 140.459 358.570 C 138.462 351.253 132.209 343.730 130.306 343.581 C 124.386 343.119 110.528 396.082 110.528 396.082 C 110.531 396.080 101.192 354.090 91.758 338.773 C 85.832 329.152 74.392 325.781 73.729 327.900 C 67.043 330.391 83.587 394.736 83.595 394.733 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 138.046 417.589 C 144.703 443.240 149.630 455.897 152.118 473.872 M 110.528 396.082 C 121.662 424.371 128.362 445.256 131.895 464.723 M 83.595 394.733 C 83.597 394.737 94.359 422.310 103.329 436.934 C 121.817 467.078 144.268 471.468 165.959 479.737 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":90.822,\\\"max\\\":629.178},\\\"y\\\":{\\\"min\\\":22.695,\\\"max\\\":402.567}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":700.525,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":22.821,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":126.534,\\\"y\\\":517.277,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999875210409112,\\\"y\\\":0.004995774459821558}},{\\\"point\\\":{\\\"x\\\":593.466,\\\"y\\\":517.277,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999875210409112,\\\"y\\\":0.004995774459821588}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":455.59,\\\"y\\\":605.681,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128524106543025,\\\"y\\\":0.7013140812962118}},{\\\"point\\\":{\\\"x\\\":264.331,\\\"y\\\":605.7,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6985828790616139,\\\"y\\\":0.7155291476117424}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":674.419,\\\"y\\\":352.856,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314263432095678,\\\"y\\\":-0.7754358600819239}},{\\\"point\\\":{\\\"x\\\":46.602,\\\"y\\\":352.962,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817416104610104,\\\"y\\\":-0.7315930402662589}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":641.812,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"hands_pair\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":48.131262457592456,\\\"max\\\":671.8696504755745},\\\"y\\\":{\\\"min\\\":64.84074212802682,\\\"max\\\":657.2070612272415}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hands_pair\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hands_pair\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#13F30A84-193E-47E3-BAAC-AE10ED73DE8E_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 540.224 C 360.000 554.341 348.527 672.227 518.534 651.799 C 664.232 634.292 668.644 508.347 669.825 489.147 C 670.829 472.820 654.627 384.551 648.853 354.814 C 643.583 327.677 644.543 273.869 633.038 265.867 C 624.322 259.803 601.212 274.630 596.809 286.246 C 590.208 303.666 591.513 330.035 591.032 336.048 C 589.044 360.900 603.290 452.824 603.287 452.836 C 603.287 452.835 569.604 456.472 556.837 460.785 C 547.021 464.100 524.602 477.323 524.599 477.325 C 524.602 477.323 545.587 464.124 554.872 460.802 C 567.350 456.338 600.482 452.593 600.486 452.592 C 600.482 452.558 562.359 120.380 557.098 109.764 C 555.308 106.151 547.782 86.336 532.544 86.955 C 519.614 87.480 514.008 100.818 512.496 103.561 C 506.100 115.163 523.079 324.899 523.081 324.910 C 523.078 324.899 507.850 109.269 504.047 93.036 C 503.108 89.028 499.056 66.582 482.028 66.843 C 465.608 67.095 458.976 89.885 458.432 94.197 C 455.856 114.588 465.722 325.999 465.719 326.010 C 465.721 325.999 456.626 127.015 452.686 114.138 C 451.719 110.976 443.473 95.548 431.194 97.016 C 419.682 98.392 410.772 117.763 409.253 121.406 C 405.342 130.790 413.082 342.087 413.082 342.100 C 413.082 342.091 408.329 185.836 405.904 174.413 C 404.873 169.556 395.583 154.903 383.646 155.515 C 372.176 156.103 360.255 174.732 360.243 178.695 C 360.065 235.144 360.000 500.174 360.000 540.224 C 360.000 554.398 372.300 672.059 201.466 653.157 C 55.610 637.018 51.356 509.704 50.176 490.504 C 49.171 474.177 65.373 385.908 71.147 356.171 C 76.417 329.034 75.457 275.226 86.962 267.224 C 95.678 261.160 118.789 275.987 123.191 287.603 C 129.793 305.023 128.487 331.392 128.968 337.405 C 130.955 362.257 116.710 454.182 116.713 454.193 C 116.713 454.193 150.465 456.444 163.163 460.770 C 173.145 464.171 195.398 478.681 195.402 478.682 C 195.399 478.681 174.586 464.203 165.128 460.787 C 152.723 456.307 119.518 453.950 119.514 453.949 C 119.518 453.915 157.641 121.737 162.902 111.121 C 164.692 107.508 172.218 87.693 187.456 88.312 C 200.386 88.838 205.992 102.175 207.504 104.918 C 213.901 116.520 196.921 326.256 196.919 326.267 C 196.922 326.256 212.150 110.626 215.953 94.393 C 216.892 90.384 220.944 67.940 237.972 68.201 C 254.392 68.453 261.024 91.242 261.568 95.554 C 264.144 115.945 254.278 327.356 254.281 327.368 C 254.279 327.356 263.374 128.372 267.314 115.495 C 268.281 112.333 276.527 96.905 288.806 98.373 C 300.317 99.749 309.228 119.120 310.747 122.763 C 314.658 132.147 306.918 343.444 306.918 343.458 C 306.918 343.449 311.671 187.193 314.096 175.770 C 315.127 170.913 324.417 156.261 336.354 156.873 C 347.824 157.461 359.745 176.089 359.757 180.052 C 359.932 236.289 360.000 500.174 360.000 540.224 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":147.6,\\\"max\\\":572.4},\\\"y\\\":{\\\"min\\\":254.74,\\\"max\\\":543.657}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":685.952,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":59.273,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":51.498,\\\"y\\\":488.928,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872946144645,\\\"y\\\":0.005040893734668171}},{\\\"point\\\":{\\\"x\\\":668.502,\\\"y\\\":488.928,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872946144645,\\\"y\\\":0.00504089373466816}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":526.885,\\\"y\\\":664.49,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.008322641416734831,\\\"y\\\":0.9999653662201748}},{\\\"point\\\":{\\\"x\\\":193.132,\\\"y\\\":667.064,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.011755325855804579,\\\"y\\\":0.9999309037698674}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"13F30A84-193E-47E3-BAAC-AE10ED73DE8E_0\\\",\\\"cx\\\":\\\"48.89%\\\",\\\"cy\\\":\\\"57.46%\\\",\\\"r\\\":\\\"86.47%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"44.71%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"handshake\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":6.447596035636888,\\\"max\\\":715.7041230064607},\\\"y\\\":{\\\"min\\\":30.11737049453511,\\\"max\\\":537.1137207320655}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"handshake\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"handshake\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 8.578 182.349 C 10.925 252.312 46.766 275.520 78.376 314.430 C 97.215 303.252 111.520 287.401 136.461 285.250 C 147.249 284.320 157.355 292.470 160.897 296.298 C 172.057 308.359 168.338 334.782 168.338 334.786 C 177.600 326.090 205.715 297.231 216.745 290.928 C 225.398 285.983 250.852 280.106 261.265 290.585 C 281.809 311.258 261.135 350.491 261.135 350.497 C 267.066 344.161 294.817 341.784 305.497 355.284 C 318.708 371.982 298.474 416.691 298.474 416.697 C 303.793 410.817 323.822 407.931 340.860 418.249 C 359.005 429.236 354.536 456.141 328.429 494.230 C 345.175 505.127 385.507 527.027 441.234 521.692 C 472.772 518.672 466.385 483.095 466.387 483.091 C 466.393 483.092 507.029 500.638 524.537 484.879 C 544.814 466.627 537.769 444.204 537.771 444.200 C 537.776 444.200 573.048 453.562 587.579 438.884 C 606.648 419.622 600.969 393.079 600.971 393.074 C 600.975 393.073 635.785 393.852 645.858 380.759 C 652.895 371.613 660.787 336.926 647.856 315.769 C 647.843 315.760 557.184 258.200 511.848 229.416 C 467.487 211.522 445.901 184.840 404.869 163.263 C 381.379 150.911 347.225 120.038 334.249 134.745 C 307.806 164.716 230.583 234.352 193.129 183.668 C 179.776 165.599 280.205 57.384 280.208 57.353 C 285.139 51.718 193.680 22.855 117.017 35.126 C 85.040 40.245 4.778 69.052 8.578 182.349 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 466.387 483.091 C 434.970 465.577 403.553 448.063 372.136 430.549 M 537.771 444.200 C 497.530 416.714 457.289 389.228 417.049 361.742 M 600.971 393.074 C 552.854 361.922 504.737 330.770 456.621 299.618 M 8.578 182.349 C 10.925 252.312 46.766 275.520 78.376 314.430 C 97.215 303.252 111.520 287.401 136.461 285.250 C 147.249 284.320 157.355 292.470 160.897 296.298 C 172.057 308.359 168.338 334.782 168.338 334.786 C 177.600 326.090 205.715 297.231 216.745 290.928 C 225.398 285.983 250.852 280.106 261.265 290.585 C 281.809 311.258 261.135 350.491 261.135 350.497 C 267.066 344.161 294.817 341.784 305.497 355.284 C 318.708 371.982 298.474 416.691 298.474 416.697 C 303.793 410.817 323.822 407.931 340.860 418.249 C 359.005 429.236 354.536 456.141 328.429 494.230 C 345.175 505.127 385.507 527.027 441.234 521.692 C 472.772 518.672 466.385 483.095 466.387 483.091 C 466.393 483.092 507.029 500.638 524.537 484.879 C 544.814 466.627 537.769 444.204 537.771 444.200 C 537.776 444.200 573.048 453.562 587.579 438.884 C 606.648 419.622 600.969 393.079 600.971 393.074 C 600.975 393.073 635.785 393.852 645.858 380.759 C 652.895 371.613 660.787 336.926 647.856 315.769 C 647.843 315.760 557.184 258.200 511.848 229.416 C 467.487 211.522 445.901 184.840 404.869 163.263 C 381.379 150.911 347.225 120.038 334.249 134.745 C 307.806 164.716 230.583 234.352 193.129 183.668 C 179.776 165.599 280.205 57.384 280.208 57.353 C 285.139 51.718 193.680 22.855 117.017 35.126 C 85.040 40.245 4.778 69.052 8.578 182.349 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 404.869 163.263 C 445.901 184.840 467.487 211.522 511.848 229.416 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 511.848 229.416 C 557.184 258.200 647.843 315.760 647.856 315.769 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 280.208 57.353 C 280.205 57.384 179.776 165.599 193.129 183.668 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 193.129 183.668 C 230.583 234.352 307.806 164.716 334.249 134.745 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 334.249 134.745 C 347.225 120.038 381.379 150.911 404.869 163.263 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 404.869 163.263 C 445.901 184.840 467.487 211.522 511.848 229.416 C 557.184 258.200 647.843 315.760 647.856 315.769 C 647.862 315.763 691.490 282.732 701.011 263.188 C 719.716 224.789 714.963 149.739 704.547 121.874 C 681.092 59.127 623.020 35.516 561.604 33.408 C 537.087 32.567 504.891 42.383 449.174 42.600 C 417.831 42.722 313.120 39.648 288.355 53.012 C 287.493 53.478 280.209 57.352 280.208 57.353 C 280.205 57.384 179.776 165.599 193.129 183.668 C 230.583 234.352 307.806 164.716 334.249 134.745 C 347.225 120.038 381.379 150.911 404.869 163.263 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 511.848 229.416 C 525.195 234.800 585.493 222.238 585.501 222.237 M 404.869 163.263 C 445.901 184.840 467.487 211.522 511.848 229.416 C 557.184 258.200 647.843 315.760 647.856 315.769 C 647.862 315.763 691.490 282.732 701.011 263.188 C 719.716 224.789 714.963 149.739 704.547 121.874 C 681.092 59.127 623.020 35.516 561.604 33.408 C 537.087 32.567 504.891 42.383 449.174 42.600 C 417.831 42.722 313.120 39.648 288.355 53.012 C 287.493 53.478 280.209 57.352 280.208 57.353 C 280.205 57.384 179.776 165.599 193.129 183.668 C 230.583 234.352 307.806 164.716 334.249 134.745 C 347.225 120.038 381.379 150.911 404.869 163.263 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 298.474 416.697 C 303.793 410.817 323.822 407.931 340.860 418.249 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 340.860 418.249 C 359.005 429.236 354.536 456.141 328.429 494.230 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 245.139 529.348 C 225.717 516.933 233.039 484.877 233.038 484.873 C 250.157 478.187 286.900 429.489 298.474 416.697 C 303.793 410.817 323.822 407.931 340.860 418.249 C 359.005 429.236 354.536 456.141 328.429 494.230 C 327.892 495.013 303.414 521.481 291.583 529.470 C 284.097 534.525 260.514 539.176 245.139 529.348 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 305.497 355.284 C 318.708 371.982 298.474 416.691 298.474 416.697 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 298.474 416.697 C 286.900 429.489 250.157 478.187 233.038 484.873 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 261.135 350.497 C 267.066 344.161 294.817 341.784 305.497 355.284 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 305.497 355.284 C 318.708 371.982 298.474 416.691 298.474 416.697 C 286.900 429.489 250.157 478.187 233.038 484.873 C 223.049 488.774 197.692 501.965 177.905 484.022 C 161.404 469.060 171.125 438.464 171.124 438.460 C 194.318 430.638 240.088 372.982 261.135 350.497 C 267.066 344.161 294.817 341.784 305.497 355.284 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 171.124 438.460 C 194.318 430.638 240.088 372.982 261.135 350.497 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 261.135 350.497 C 261.135 350.491 281.809 311.258 261.265 290.585 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 261.265 290.585 C 250.852 280.106 225.398 285.983 216.745 290.928 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 216.745 290.928 C 205.715 297.231 177.600 326.090 168.338 334.786 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 168.338 334.786 C 158.383 344.133 131.252 380.363 118.025 383.759 C 118.025 383.764 96.781 416.317 115.944 435.430 C 136.526 455.959 160.940 441.894 171.124 438.460 C 194.318 430.638 240.088 372.982 261.135 350.497 C 261.135 350.491 281.809 311.258 261.265 290.585 C 250.852 280.106 225.398 285.983 216.745 290.928 C 205.715 297.231 177.600 326.090 168.338 334.786 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 160.897 296.298 C 172.057 308.359 168.338 334.782 168.338 334.786 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 168.338 334.786 C 158.383 344.133 131.252 380.363 118.025 383.759 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 78.376 314.430 C 97.215 303.252 111.520 287.401 136.461 285.250 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 136.461 285.250 C 147.249 284.320 157.355 292.470 160.897 296.298 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 160.897 296.298 C 172.057 308.359 168.338 334.782 168.338 334.786 C 158.383 344.133 131.252 380.363 118.025 383.759 C 109.422 385.968 84.419 386.780 73.489 373.647 C 66.744 365.542 65.116 343.294 66.426 335.951 C 67.267 331.238 73.453 317.350 78.376 314.430 C 97.215 303.252 111.520 287.401 136.461 285.250 C 147.249 284.320 157.355 292.470 160.897 296.298 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":666.725,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":47.617,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":77.088,\\\"y\\\":310.93,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871186514683,\\\"y\\\":0.005075680361732248}},{\\\"point\\\":{\\\"x\\\":642.912,\\\"y\\\":310.93,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871186514683,\\\"y\\\":0.005075680361732277}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":547.32,\\\"y\\\":439.109,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128787909887463,\\\"y\\\":0.7012872659320312}},{\\\"point\\\":{\\\"x\\\":172.526,\\\"y\\\":439.148,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986858742534463,\\\"y\\\":0.7154285772309471}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":665.637,\\\"y\\\":74.437,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314481500353969,\\\"y\\\":-0.7754181025852277}},{\\\"point\\\":{\\\"x\\\":55.366,\\\"y\\\":74.54,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817310895168949,\\\"y\\\":-0.7316028441621228}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":506.158,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"harp\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":74.90458693436454,\\\"max\\\":645.1120675389463},\\\"y\\\":{\\\"min\\\":24.534211255600543,\\\"max\\\":620.375}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"harp\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"harp\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 263.700 553.151 C 263.700 399.615 263.700 246.079 263.700 92.543 M 291.880 553.151 C 291.880 399.615 291.880 246.079 291.880 92.543 M 320.060 553.151 C 320.060 399.615 320.060 246.079 320.060 92.543 M 348.240 553.151 C 348.240 399.615 348.240 246.079 348.240 92.543 M 460.960 92.543 C 460.960 246.079 460.960 399.615 460.960 553.151 M 432.780 92.543 C 432.780 246.079 432.780 399.615 432.780 553.151 M 404.600 92.543 C 404.600 246.079 404.600 399.615 404.600 553.151 M 376.420 92.543 C 376.420 246.079 376.420 399.615 376.420 553.151 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 259.040 553.151 C 259.040 399.615 259.040 246.079 259.040 92.543 M 287.220 553.151 C 287.220 399.615 287.220 246.079 287.220 92.543 M 315.400 553.151 C 315.400 399.615 315.400 246.079 315.400 92.543 M 343.580 553.151 C 343.580 399.615 343.580 246.079 343.580 92.543 M 456.300 92.543 C 456.300 246.079 456.300 399.615 456.300 553.151 M 428.120 92.543 C 428.120 246.079 428.120 399.615 428.120 553.151 M 399.940 92.543 C 399.940 246.079 399.940 399.615 399.940 553.151 M 371.760 92.543 C 371.760 246.079 371.760 399.615 371.760 553.151 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 223.684 82.462 C 223.711 82.462 496.289 82.462 496.316 82.462 C 496.316 82.464 496.316 104.208 496.316 104.211 C 496.289 104.211 223.711 104.211 223.684 104.211 C 223.684 104.208 223.684 82.464 223.684 82.462 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 641.693 387.820 C 635.514 318.449 595.982 216.512 563.272 167.837 C 642.332 167.343 631.671 89.317 625.755 72.770 C 618.177 51.575 578.407 8.463 513.642 34.813 C 472.596 51.513 446.359 102.341 494.348 182.123 C 568.821 305.936 626.285 529.526 360.000 537.185 C 93.243 530.996 151.178 305.936 225.652 182.123 C 273.641 102.341 247.404 51.513 206.358 34.813 C 141.593 8.463 101.823 51.575 94.245 72.770 C 88.329 89.317 77.669 167.343 156.728 167.837 C 124.018 216.512 84.486 318.449 78.307 387.820 C 62.343 567.031 184.320 615.079 360.000 618.375 C 537.360 614.098 657.657 567.031 641.693 387.820 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 641.693 387.820 C 635.514 318.449 595.982 216.512 563.272 167.837 C 552.581 167.904 530.158 155.126 523.914 127.593 C 513.370 81.106 551.572 61.163 577.178 84.405 C 587.719 93.972 587.255 118.820 566.919 119.757 M 360.000 618.375 C 537.360 614.098 657.657 567.031 641.693 387.820 M 78.307 387.820 C 62.343 567.031 184.320 615.079 360.000 618.375 M 156.728 167.837 C 124.018 216.512 84.486 318.449 78.307 387.820 M 625.755 72.770 C 631.671 89.317 642.332 167.343 563.272 167.837 M 513.642 34.813 C 578.407 8.463 618.177 51.575 625.755 72.770 M 494.348 182.123 C 446.359 102.341 472.596 51.513 513.642 34.813 M 360.000 537.185 C 626.285 529.526 568.821 305.936 494.348 182.123 M 225.652 182.123 C 151.178 305.936 93.243 530.996 360.000 537.185 M 206.358 34.813 C 247.404 51.513 273.641 102.341 225.652 182.123 M 94.245 72.770 C 101.823 51.575 141.593 8.463 206.358 34.813 M 156.728 167.837 C 77.669 167.343 88.329 89.317 94.245 72.770 M 196.086 127.593 C 189.842 155.126 167.419 167.904 156.728 167.837 M 142.822 84.405 C 168.428 61.163 206.630 81.106 196.086 127.593 M 153.081 119.757 C 132.745 118.820 132.281 93.972 142.822 84.405 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":269.531,\\\"max\\\":450.469},\\\"y\\\":{\\\"min\\\":236.125,\\\"max\\\":417.063}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":697.379,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":85.643,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":91.256,\\\"y\\\":327.447,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873250332783,\\\"y\\\":0.0050348557862656355}},{\\\"point\\\":{\\\"x\\\":628.744,\\\"y\\\":327.447,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873229744396,\\\"y\\\":0.005035264681590769}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":553.966,\\\"y\\\":577.61,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128578473018842,\\\"y\\\":0.7013085551596556}},{\\\"point\\\":{\\\"x\\\":165.874,\\\"y\\\":577.65,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986612749143499,\\\"y\\\":0.7154526000617059}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":608.451,\\\"y\\\":51.155,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314674762445839,\\\"y\\\":-0.7754023642247267}},{\\\"point\\\":{\\\"x\\\":112.375,\\\"y\\\":51.24,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.681717156817465,\\\"y\\\":-0.7316158268522571}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":614.949,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"head_beast\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":6.5329999999999995,\\\"max\\\":660.883},\\\"y\\\":{\\\"min\\\":125.695,\\\"max\\\":552.9632506230632}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"head_beast\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"beast_head\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 301.955 354.039 C 302.968 335.493 318.746 321.349 337.293 322.361 C 355.839 323.374 369.984 339.151 368.972 357.698 C 367.959 376.244 352.180 390.389 333.634 389.377 C 315.087 388.364 300.942 372.586 301.955 354.039 M 78.471 401.235 C 78.864 394.046 84.979 388.564 92.167 388.956 C 99.356 389.349 104.839 395.464 104.446 402.653 C 104.053 409.841 97.937 415.323 90.749 414.930 C 83.561 414.537 78.079 408.423 78.471 401.235 M 340.795 450.055 C 340.787 450.057 264.264 474.244 264.256 474.246 C 264.255 474.244 250.762 454.771 250.760 454.769 C 250.760 454.772 243.362 481.166 243.361 481.168 C 243.357 481.169 206.622 490.551 206.617 490.552 C 206.616 490.549 189.701 463.589 189.699 463.586 C 189.698 463.589 177.131 498.998 177.130 499.002 C 177.126 499.002 143.794 506.746 143.791 506.746 C 143.788 506.744 119.554 475.566 119.552 475.563 C 119.551 475.567 110.801 514.536 110.800 514.540 C 110.795 514.542 58.857 531.990 58.852 531.992 C 58.879 531.994 237.234 558.197 325.635 549.010 C 370.856 544.311 422.216 543.026 458.118 515.133 C 483.122 495.707 498.659 463.700 506.262 432.963 C 511.869 410.293 504.313 362.755 504.313 362.748 C 504.323 362.744 565.380 351.886 602.046 317.020 C 643.961 277.163 658.877 207.558 658.883 207.547 C 658.875 207.556 617.053 256.932 569.212 285.471 C 536.301 305.104 493.115 315.256 493.107 315.260 C 493.108 315.259 489.381 309.770 489.381 309.770 C 489.387 309.764 534.208 293.133 557.445 261.731 C 586.938 221.877 588.875 160.787 588.880 160.778 C 588.872 160.786 559.797 214.147 518.477 244.601 C 488.254 266.876 445.135 276.703 445.128 276.707 C 445.120 276.706 377.226 275.483 360.603 275.975 C 335.655 276.713 275.156 271.800 202.280 297.988 C 119.446 327.753 60.546 382.901 48.079 394.072 C 31.455 411.291 8.538 439.054 8.533 439.059 C 8.539 439.059 68.693 440.605 68.699 440.605 C 68.701 440.609 85.865 485.603 85.867 485.607 C 85.869 485.603 103.735 441.463 103.737 441.459 C 103.741 441.459 142.734 444.454 142.737 444.455 C 142.739 444.459 158.986 482.792 158.987 482.796 C 158.989 482.792 175.795 447.274 175.797 447.271 C 175.800 447.271 211.293 448.275 211.296 448.275 C 211.298 448.277 223.383 478.635 223.383 478.638 C 223.385 478.635 235.584 449.879 235.585 449.876 C 235.596 449.876 340.785 450.055 340.795 450.055 M 441.833 259.386 C 441.824 259.385 391.676 254.099 361.699 255.884 C 330.638 257.734 287.076 261.134 287.068 261.135 C 287.065 261.124 263.601 152.437 263.599 152.427 C 263.606 152.431 327.934 205.342 327.941 205.348 C 327.945 205.340 364.182 127.704 364.185 127.695 C 364.189 127.703 398.963 205.069 398.966 205.076 C 398.972 205.071 461.669 147.013 461.675 147.007 C 461.673 147.019 441.835 259.374 441.833 259.386 M 231.719 371.974 C 231.730 371.977 289.242 405.436 343.599 398.690 C 392.684 392.598 437.581 350.821 437.590 350.817 C 437.580 350.813 387.008 306.552 335.759 310.320 C 279.203 314.478 231.729 371.968 231.719 371.974 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":614.643,\\\"y\\\":423.648,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999997917760632,\\\"y\\\":0.000645327692162592}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":364.566,\\\"y\\\":134.923,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.0006665184033805056,\\\"y\\\":-0.9999997778765843}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":506.748,\\\"y\\\":422.555,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9998599239942854,\\\"y\\\":-0.01673715597531346}},{\\\"point\\\":{\\\"x\\\":15.565,\\\"y\\\":433.25,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9996405701835485,\\\"y\\\":0.026809148496552655}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":442.672,\\\"y\\\":520.242,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7133741057204163,\\\"y\\\":0.7007834082565}},{\\\"point\\\":{\\\"x\\\":275.858,\\\"y\\\":544.897,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6982387039682787,\\\"y\\\":0.7158650098172828}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":655.062,\\\"y\\\":214.683,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.46859196402090336,\\\"y\\\":-0.8834147221181184}},{\\\"point\\\":{\\\"x\\\":113.81,\\\"y\\\":342.323,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6822074218011658,\\\"y\\\":-0.731158692514427}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":493.97,\\\"y\\\":464.069,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9049892509925728,\\\"y\\\":0.42543443159657657}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"head_half\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":114.205,\\\"max\\\":485.767},\\\"y\\\":{\\\"min\\\":35.90496910211239,\\\"max\\\":683.8585774358978}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"head_half\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"head_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 484.267 37.693 C 484.267 252.564 484.267 682.243 484.267 682.307 C 395.413 683.275 341.558 670.551 307.362 649.745 C 246.239 612.556 224.356 564.263 224.348 564.254 C 224.361 564.249 352.244 513.537 352.257 513.532 C 352.242 513.532 207.201 519.573 207.186 519.574 C 207.186 519.566 205.939 446.561 205.939 446.553 C 205.930 446.552 115.714 429.741 115.705 429.739 C 115.714 429.723 205.900 268.857 205.911 268.842 C 205.911 268.839 223.680 135.533 300.635 89.379 C 398.999 30.386 484.267 37.693 484.267 37.693 M 247.426 307.976 C 247.426 278.694 271.048 255.072 300.330 255.073 C 329.612 255.073 353.233 278.695 353.233 307.976 C 353.233 337.258 329.612 360.880 300.330 360.881 C 271.048 360.881 247.426 337.258 247.426 307.976 Z\\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":484.087,\\\"y\\\":360,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":484.267,\\\"y\\\":37.487,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":305.322,\\\"y\\\":646.188,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987288651222999,\\\"y\\\":0.7153865899252675}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":267.866,\\\"y\\\":112.228,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817261439293559,\\\"y\\\":-0.7316074525886207}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":484.269,\\\"y\\\":360,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":119.584,\\\"y\\\":307.872,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"head_phrenology\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":90.4133603502528,\\\"max\\\":632.7749444641876},\\\"y\\\":{\\\"min\\\":21.17106004449279,\\\"max\\\":624.2697520634891}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"head_phrenology\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"phrenology_head\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 152.524 287.633 C 156.147 302.238 88.253 385.843 92.615 401.283 C 97.248 417.682 135.734 410.314 141.070 418.903 C 144.631 424.634 139.309 453.259 139.308 453.262 C 139.310 453.263 153.403 465.595 153.405 465.596 C 153.403 465.598 141.953 477.928 141.951 477.930 C 141.956 477.933 159.083 482.979 160.452 492.907 C 162.780 509.779 149.885 520.747 148.999 536.077 C 148.582 543.301 163.459 562.590 169.263 566.912 C 183.751 577.703 244.448 576.642 259.125 587.175 C 274.043 597.881 276.696 618.030 278.507 619.243 C 289.265 626.449 539.228 619.470 535.760 612.045 C 481.452 495.761 502.549 461.334 523.426 432.999 C 538.737 412.220 609.052 393.580 627.385 275.299 C 644.570 164.422 601.681 17.634 376.298 23.332 C 161.098 28.773 135.255 218.034 152.524 287.633 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 187.764 288.514 C 186.381 294.867 188.795 303.331 191.966 310.306 C 215.684 308.385 250.311 300.849 250.315 300.848 C 250.309 300.846 212.318 285.852 191.912 277.102 C 189.654 281.496 188.817 283.673 187.764 288.514 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 187.764 288.514 C 186.381 294.867 188.795 303.331 191.966 310.306 C 184.107 310.943 181.744 313.149 177.045 314.749 M 191.912 277.102 C 189.654 281.496 188.817 283.673 187.764 288.514 M 250.315 300.848 C 250.311 300.849 215.684 308.385 191.966 310.306 M 191.912 277.102 C 212.318 285.852 250.309 300.846 250.315 300.848 M 177.192 268.252 C 177.193 268.252 186.673 274.855 191.912 277.102 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 173.668 255.036 C 173.672 255.037 200.526 258.356 216.837 263.846 C 240.466 271.799 255.014 282.641 274.102 292.038 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 211.011 570.877 C 211.021 570.875 270.996 565.542 305.769 546.844 C 359.561 517.920 412.409 433.891 412.420 433.880 M 148.807 404.929 C 141.447 404.415 136.786 405.926 130.473 405.793 C 127.373 405.727 121.430 404.039 120.807 403.045 C 119.069 400.270 124.635 397.365 148.807 404.929 C 157.664 407.700 152.267 415.348 160.452 416.260 C 166.106 416.890 172.744 411.124 173.668 409.212 C 176.929 402.459 169.452 386.550 165.738 383.663 C 162.793 381.372 144.597 381.901 144.594 381.901 C 144.596 381.901 163.000 380.995 164.954 381.796 C 173.812 385.427 184.058 395.791 187.764 400.402 C 192.824 406.698 199.510 424.483 205.384 436.523 M 153.405 465.596 C 169.850 465.890 202.736 466.477 202.741 466.477 C 202.737 466.476 171.121 453.940 163.977 453.262 C 157.858 452.682 147.597 449.948 139.308 453.262 C 139.310 453.263 153.403 465.595 153.405 465.596 C 153.403 465.598 141.953 477.928 141.951 477.930 C 148.914 480.582 156.124 479.941 169.263 477.930 C 177.603 476.654 191.581 470.295 202.741 466.477 M 196.574 452.381 C 196.575 452.384 207.645 471.605 214.194 477.930 C 220.382 483.907 230.639 488.502 238.862 493.788 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 422.603 328.061 C 422.602 328.059 408.899 312.200 415.830 301.201 C 423.672 288.758 437.741 290.973 445.788 294.544 C 453.123 297.799 458.937 310.714 459.935 318.677 C 461.889 334.260 454.639 361.476 441.627 370.271 C 428.850 378.908 410.008 394.402 410.005 394.404 M 408.341 337.817 C 408.340 337.813 389.290 315.315 399.187 299.537 C 407.526 286.242 421.542 270.042 448.285 275.404 C 461.116 277.977 474.301 298.301 476.578 311.187 C 480.751 334.805 467.545 376.699 444.956 388.579 C 413.667 405.034 410.720 427.809 393.362 423.530 C 376.193 419.298 376.720 396.071 376.718 396.069 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":259.34,\\\"max\\\":528.667},\\\"y\\\":{\\\"min\\\":62.677,\\\"max\\\":247.778}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":403.498,\\\"y\\\":698.212,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":391.415,\\\"y\\\":27.04,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":98.32,\\\"y\\\":291.294,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871013667536,\\\"y\\\":0.005079084574791125}},{\\\"point\\\":{\\\"x\\\":624.097,\\\"y\\\":291.294,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871013667536,\\\"y\\\":0.005079084574791125}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":475.359,\\\"y\\\":613.432,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129235173444495,\\\"y\\\":0.7012417973974585}},{\\\"point\\\":{\\\"x\\\":319.387,\\\"y\\\":613.474,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698719373887511,\\\"y\\\":0.7153958600343201}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":595.123,\\\"y\\\":111.828,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314336149631736,\\\"y\\\":-0.7754299387401408}},{\\\"point\\\":{\\\"x\\\":188.4,\\\"y\\\":111.897,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6816936760421852,\\\"y\\\":-0.7316377054554339}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":404.707,\\\"y\\\":617.399,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"heart\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":84.30632860953916,\\\"max\\\":636.5351384914495},\\\"y\\\":{\\\"min\\\":49.24692767805864,\\\"max\\\":573.59}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"heart\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"heart\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 571.590 C 359.986 571.576 264.512 485.308 215.135 437.833 C 156.142 381.114 87.829 317.946 86.339 229.389 C 85.161 159.389 115.841 76.768 177.971 58.756 C 316.105 18.712 359.982 151.870 360.000 151.879 C 360.018 151.870 403.810 19.007 542.029 58.756 C 604.326 76.672 635.647 159.244 634.505 229.389 C 633.060 318.108 567.079 384.439 504.865 437.833 C 449.824 485.072 360.014 571.576 360.000 571.590 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":228.244,\\\"max\\\":491.756},\\\"y\\\":{\\\"min\\\":171.389,\\\"max\\\":422.633}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":691.105,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":51.737,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":86.84,\\\"y\\\":251.081,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873742953272,\\\"y\\\":0.005025062182389534}},{\\\"point\\\":{\\\"x\\\":634.96,\\\"y\\\":251.081,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.99998737224848,\\\"y\\\":0.0050254694884832325}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":209.002,\\\"y\\\":430.723,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987086530327686,\\\"y\\\":0.7154063308198594}},{\\\"point\\\":{\\\"x\\\":511.528,\\\"y\\\":430.723,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6986671641912012,\\\"y\\\":0.715446848955969}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":136.18,\\\"y\\\":83.621,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7106239558628789,\\\"y\\\":-0.7035720242830816}},{\\\"point\\\":{\\\"x\\\":582.768,\\\"y\\\":83.621,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7106640765571198,\\\"y\\\":-0.703531499146425}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.961,\\\"y\\\":563.538,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"heart_break\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":80.58662183695435,\\\"max\\\":637.4597327583255},\\\"y\\\":{\\\"min\\\":47.747143088405466,\\\"max\\\":569.238}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"heart_break\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"heart\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 380.815 206.592 C 380.813 206.587 363.532 148.545 363.531 148.540 C 363.549 148.530 408.019 16.992 544.904 57.491 C 606.598 75.745 637.060 157.936 635.395 227.548 C 633.289 315.591 567.300 380.927 505.147 433.451 C 450.159 479.919 360.367 565.096 360.353 565.109 C 360.355 565.101 379.736 479.187 379.738 479.178 C 379.733 479.170 336.276 396.676 336.271 396.668 C 336.277 396.660 396.958 322.977 396.964 322.969 C 396.958 322.963 336.277 265.387 336.271 265.381 C 336.275 265.376 380.810 206.598 380.815 206.592 M 353.634 150.670 C 353.635 150.676 366.285 208.481 366.286 208.487 C 366.282 208.492 322.687 267.971 322.683 267.977 C 322.689 267.982 384.278 324.586 384.285 324.592 C 384.279 324.599 324.777 399.239 324.771 399.246 C 324.776 399.255 369.540 481.047 369.545 481.055 C 369.543 481.064 357.083 567.229 357.082 567.238 C 357.068 567.225 261.600 482.386 212.203 435.673 C 153.186 379.863 84.866 317.729 82.659 229.848 C 80.915 160.381 110.686 78.126 172.203 59.739 C 308.974 18.860 353.616 150.661 353.634 150.670 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":691.105,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":51.737,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":79.748,\\\"y\\\":250.931,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871329730828,\\\"y\\\":0.005072857998594662}},{\\\"point\\\":{\\\"x\\\":640.252,\\\"y\\\":250.931,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871329730828,\\\"y\\\":0.005072857998594622}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":204.671,\\\"y\\\":434.632,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986951857902244,\\\"y\\\":0.7154194834875297}},{\\\"point\\\":{\\\"x\\\":514.031,\\\"y\\\":434.632,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6986951857902266,\\\"y\\\":0.7154194834875274}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":130.203,\\\"y\\\":79.688,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7106649806055683,\\\"y\\\":-0.7035305859313348}},{\\\"point\\\":{\\\"x\\\":586.881,\\\"y\\\":79.688,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7107042129163689,\\\"y\\\":-0.70349095356154}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.961,\\\"y\\\":568.597,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"horse\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":27.950825890703815,\\\"max\\\":683.489},\\\"y\\\":{\\\"min\\\":102.05258167121329,\\\"max\\\":658.9796007087407}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"horse\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"horse\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 42.183 248.617 C 42.234 250.215 43.115 252.151 41.600 252.661 C 39.343 253.421 38.506 249.964 38.225 247.600 C 37.923 245.061 37.970 241.290 40.520 241.483 C 45.351 241.848 42.091 245.751 42.183 248.617 M 30.909 106.283 C 30.910 106.285 45.881 129.793 45.883 129.795 C 45.882 129.798 38.230 153.343 38.229 153.346 C 38.230 153.346 42.961 157.441 42.962 157.441 C 42.961 157.449 33.260 234.916 33.259 234.924 C 33.259 234.924 30.042 239.059 29.965 241.731 C 29.321 264.101 50.832 265.611 51.682 263.712 C 52.070 262.843 57.754 242.975 57.754 242.975 C 57.754 242.978 55.815 266.310 55.815 266.312 C 55.816 266.312 62.709 264.635 64.183 263.786 C 67.425 261.920 76.954 252.120 77.716 250.140 C 78.508 248.084 76.727 230.214 76.726 230.212 C 76.728 230.211 88.446 216.575 88.447 216.573 C 88.449 216.573 97.936 220.890 106.548 211.967 C 120.322 197.696 113.609 167.549 113.610 167.545 C 113.610 167.548 120.840 191.446 115.399 202.989 C 112.359 209.439 135.479 218.848 145.766 263.502 C 146.473 266.569 141.021 280.457 144.093 296.746 C 147.102 312.696 157.450 320.809 158.088 325.400 C 158.622 329.238 152.991 341.507 153.668 351.692 C 154.832 369.202 168.344 395.113 168.345 395.118 C 168.341 395.121 140.445 416.836 129.082 426.445 C 122.035 432.405 107.138 441.813 105.825 447.172 C 103.940 454.862 112.987 470.773 123.813 488.093 C 127.155 493.440 130.955 526.307 135.404 533.872 C 138.181 538.594 151.048 551.325 156.329 554.622 C 162.849 558.694 190.802 566.255 190.805 566.256 C 190.805 566.253 193.420 548.411 190.699 540.889 C 187.800 532.874 173.400 520.125 173.398 520.123 C 173.397 520.124 160.860 524.793 159.828 524.710 C 153.867 524.229 158.258 514.183 157.053 511.132 C 154.410 504.438 145.293 496.464 140.412 485.683 C 136.210 476.402 133.286 460.498 133.285 460.496 C 133.291 460.492 195.647 425.811 195.653 425.807 C 195.654 425.808 205.629 428.483 205.630 428.483 C 205.632 428.486 210.284 440.699 216.601 451.993 C 221.068 459.979 226.630 467.352 226.631 467.353 C 226.632 467.356 234.923 499.908 234.921 499.934 C 234.920 499.941 232.194 504.632 232.237 508.099 C 232.373 518.899 243.210 532.513 243.211 532.515 C 243.212 532.520 251.588 585.928 251.589 585.933 C 251.588 585.935 246.561 590.561 245.292 596.832 C 244.375 601.368 246.236 605.887 246.236 605.888 C 246.234 605.889 231.635 614.341 228.166 617.741 C 222.922 622.881 210.162 644.993 210.160 644.996 C 210.163 644.997 222.196 649.050 233.731 648.521 C 248.194 647.858 262.689 641.153 262.692 641.152 C 262.692 641.151 268.107 629.178 268.063 625.728 C 268.026 622.883 263.272 617.844 263.480 613.063 C 263.962 601.966 268.162 613.682 273.446 613.021 C 279.470 612.268 279.753 604.842 279.753 604.841 C 279.752 604.837 268.689 558.687 268.688 558.682 C 268.688 558.679 264.023 526.090 264.022 526.086 C 264.023 526.085 266.617 514.050 266.679 511.579 C 266.888 503.269 259.256 466.882 258.321 462.691 C 257.691 459.866 249.533 430.437 249.532 430.434 C 249.529 430.434 220.171 424.336 220.168 424.336 C 220.171 424.336 249.118 429.207 249.121 429.208 C 249.129 429.207 289.221 434.915 329.749 427.964 C 380.722 419.221 422.107 395.735 425.646 394.948 C 426.869 394.675 460.420 390.524 460.423 390.523 C 460.420 390.524 425.860 395.998 425.857 395.999 C 425.857 396.002 423.020 412.422 427.958 424.307 C 435.721 442.994 463.532 460.463 463.709 469.684 C 463.881 478.690 430.683 515.418 430.680 515.423 C 430.676 515.426 405.979 538.585 396.391 548.634 C 391.436 553.827 390.730 575.977 390.172 578.106 C 389.891 579.179 385.704 588.483 385.703 592.620 C 385.701 602.068 397.616 625.183 397.617 625.186 C 397.619 625.185 408.001 620.186 413.934 613.590 C 419.884 606.973 423.768 596.087 423.769 596.085 C 423.768 596.082 412.409 581.380 414.599 569.849 C 416.533 559.673 425.046 561.883 427.234 558.019 C 429.346 554.290 428.238 544.541 430.790 541.696 C 445.212 525.617 482.597 487.915 502.375 485.248 C 505.031 484.890 509.696 472.168 498.968 463.409 C 481.492 449.140 491.416 426.919 491.416 426.915 C 491.413 426.912 464.156 391.559 464.153 391.556 C 464.156 391.559 490.906 425.968 490.909 425.971 C 490.912 425.973 523.184 442.527 526.421 445.261 C 528.744 447.223 537.155 462.374 544.635 467.835 C 553.821 474.541 568.728 478.038 570.293 482.979 C 573.921 494.427 594.981 528.744 597.474 537.375 C 600.418 547.574 607.106 603.336 604.114 608.920 C 603.340 610.366 591.915 616.523 589.060 619.858 C 583.817 625.981 574.393 650.717 574.392 650.720 C 574.394 650.721 586.815 656.799 595.256 656.975 C 605.049 657.179 619.688 650.531 619.691 650.531 C 619.691 650.529 621.442 636.029 621.442 636.027 C 621.442 636.027 626.296 632.688 626.855 630.569 C 628.055 626.018 620.494 618.929 621.053 615.115 C 623.067 601.392 635.063 615.741 634.761 607.282 C 633.445 570.434 624.956 580.855 614.615 520.090 C 612.842 509.668 613.222 475.873 609.877 470.280 C 607.797 466.802 591.531 460.447 584.733 451.962 C 571.958 436.016 560.364 422.889 563.367 397.541 C 565.152 382.470 577.305 389.835 586.724 349.880 C 591.756 328.532 586.420 277.410 586.420 277.403 C 586.422 277.404 606.890 289.428 610.584 296.630 C 625.786 326.264 589.075 342.051 600.395 423.285 C 606.595 467.770 650.034 512.313 681.489 516.722 C 652.223 480.859 658.863 447.571 652.803 408.720 C 646.353 367.366 662.868 327.309 636.994 293.046 C 620.651 271.406 570.953 260.256 570.946 260.253 C 570.940 260.251 537.750 236.699 505.610 235.159 C 480.181 233.941 458.565 242.222 405.127 254.605 C 365.293 263.835 328.682 255.219 312.683 246.838 C 298.860 239.597 263.828 179.607 246.187 161.047 C 224.267 137.985 178.668 103.799 130.558 104.054 C 90.877 104.265 58.148 118.851 58.141 118.853 C 58.139 118.852 50.196 112.112 43.941 109.416 C 39.023 107.296 30.910 106.284 30.909 106.283 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 56.046 164.173 C 60.201 164.156 63.567 167.493 63.584 171.648 C 63.602 175.802 60.264 179.168 56.110 179.186 C 51.955 179.203 48.589 175.866 48.572 171.711 C 48.554 167.556 51.892 164.190 56.046 164.173 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":173.557,\\\"max\\\":561.307},\\\"y\\\":{\\\"min\\\":262.696,\\\"max\\\":394.202}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":682.761,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":511.23,\\\"y\\\":235.99,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":116.139,\\\"y\\\":453.421,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986883991125039,\\\"y\\\":0.7154261114507957}},{\\\"point\\\":{\\\"x\\\":608.894,\\\"y\\\":482.287,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129699922269453,\\\"y\\\":0.7011945451755235}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":355.089,\\\"y\\\":257.247,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.46744872398951726,\\\"y\\\":-0.8840201866702887}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":40.797,\\\"y\\\":144.396,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9699024360631261,\\\"y\\\":-0.24349386957131725}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":669.839,\\\"y\\\":507.468,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7559672324467892,\\\"y\\\":0.654609458736079}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"horse_fore\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":28.360895568642515,\\\"max\\\":362.057},\\\"y\\\":{\\\"min\\\":134.2415909796156,\\\"max\\\":682.0804999787528}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"horse_fore\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"horse_fore\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.986 290.269 C 359.993 339.304 359.996 398.194 360.057 452.727 C 350.746 455.434 340.477 457.917 329.786 459.750 C 289.309 466.693 249.267 460.992 249.259 460.992 C 249.256 460.992 220.345 456.127 220.342 456.126 C 220.345 456.127 249.667 462.217 249.670 462.217 C 249.671 462.221 257.818 491.612 258.448 494.434 C 259.382 498.619 267.003 534.962 266.795 543.261 C 266.733 545.729 264.142 557.749 264.142 557.750 C 264.142 557.754 268.801 590.302 268.802 590.306 C 268.803 590.310 279.852 636.403 279.853 636.408 C 279.853 636.409 279.570 643.825 273.554 644.578 C 268.276 645.238 264.081 633.536 263.600 644.619 C 263.393 649.394 268.141 654.426 268.177 657.268 C 268.222 660.714 262.813 672.672 262.813 672.673 C 262.810 672.674 248.334 679.371 233.888 680.033 C 222.367 680.561 210.349 676.513 210.347 676.512 C 210.348 676.510 223.093 654.425 228.330 649.291 C 231.795 645.895 246.376 637.454 246.378 637.452 C 246.377 637.452 244.519 632.939 245.435 628.408 C 246.702 622.145 251.723 617.524 251.724 617.523 C 251.723 617.518 243.358 564.176 243.357 564.171 C 243.356 564.169 232.532 550.573 232.396 539.786 C 232.353 536.323 235.076 531.638 235.076 531.631 C 235.078 531.604 226.798 499.094 226.797 499.090 C 226.796 499.089 221.241 491.726 216.779 483.750 C 210.470 472.469 205.824 460.271 205.822 460.269 C 205.821 460.269 195.859 457.597 195.858 457.596 C 195.851 457.600 133.573 492.238 133.567 492.241 C 133.568 492.244 136.488 508.128 140.685 517.397 C 145.560 528.165 154.666 536.129 157.306 542.815 C 158.509 545.862 154.124 555.896 160.077 556.376 C 161.107 556.459 173.629 551.795 173.630 551.795 C 173.632 551.797 188.014 564.530 190.910 572.535 C 193.628 580.047 191.016 597.867 191.016 597.870 C 191.012 597.869 163.095 590.318 156.582 586.251 C 151.308 582.957 138.457 570.242 135.684 565.527 C 131.240 557.971 127.444 525.145 124.106 519.804 C 113.294 502.506 104.259 486.615 106.141 478.934 C 107.453 473.582 122.331 464.186 129.369 458.234 C 140.718 448.636 168.580 426.948 168.584 426.945 C 168.582 426.941 155.087 401.062 153.924 383.573 C 153.248 373.401 158.872 361.147 158.339 357.313 C 157.702 352.728 147.366 344.625 144.362 328.695 C 141.293 312.427 146.738 298.556 146.033 295.493 C 135.758 250.894 112.667 241.497 115.703 235.055 C 121.137 223.526 113.917 199.658 113.917 199.655 C 113.916 199.659 120.620 229.769 106.863 244.022 C 98.262 252.934 88.787 248.622 88.785 248.622 C 88.784 248.624 77.080 262.243 77.079 262.244 C 77.079 262.246 78.858 280.094 78.067 282.147 C 77.306 284.125 67.788 293.913 64.551 295.777 C 63.079 296.624 56.194 298.299 56.193 298.299 C 56.194 298.297 58.130 274.994 58.130 274.992 C 58.130 274.992 52.453 294.835 52.065 295.702 C 51.217 297.600 29.733 296.091 30.375 273.749 C 30.452 271.081 33.665 266.951 33.665 266.950 C 33.666 266.942 43.355 189.572 43.356 189.564 C 43.356 189.563 38.630 185.474 38.629 185.473 C 38.630 185.471 46.273 161.955 46.274 161.952 C 46.272 161.950 31.320 138.472 31.318 138.470 C 31.319 138.470 39.423 139.481 44.334 141.598 C 50.582 144.291 58.515 151.023 58.516 151.024 C 58.523 151.022 91.212 136.454 130.843 136.243 C 178.893 135.989 224.436 170.132 246.329 193.166 C 263.948 211.702 298.936 271.617 312.742 278.850 C 322.329 283.872 339.328 288.979 359.986 290.269 M 38.625 279.611 C 38.324 277.075 38.371 273.308 40.918 273.501 C 45.742 273.866 42.486 277.764 42.578 280.626 C 42.630 282.223 43.510 284.156 41.996 284.666 C 39.742 285.424 38.906 281.972 38.625 279.611 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 56.425 196.287 C 60.574 196.270 63.935 199.603 63.953 203.753 C 63.970 207.902 60.637 211.264 56.488 211.281 C 52.338 211.299 48.976 207.965 48.959 203.816 C 48.942 199.666 52.275 196.305 56.425 196.287 Z\\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":187.951,\\\"max\\\":333.104},\\\"y\\\":{\\\"min\\\":296.539,\\\"max\\\":441.692}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":359.947,\\\"y\\\":367.484,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":127.778,\\\"y\\\":135.69,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":42.247,\\\"y\\\":190.527,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871895724672,\\\"y\\\":0.005061688548150914}},{\\\"point\\\":{\\\"x\\\":151.178,\\\"y\\\":385.669,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871895724672,\\\"y\\\":0.005061688548150921}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":346.843,\\\"y\\\":288.96,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005061688548145167,\\\"y\\\":-0.9999871895724672}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.71,\\\"y\\\":367.266,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":346.843,\\\"y\\\":477.161,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005061688548145167,\\\"y\\\":0.9999871895724672}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"horse_hind\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":357.986,\\\"max\\\":683.089},\\\"y\\\":{\\\"min\\\":265.06664476806264,\\\"max\\\":685.995045988136}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"horse_hind\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"horse_hind\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.986 290.269 C 359.993 339.304 359.996 398.194 360.057 452.727 C 396.390 442.166 422.772 427.397 425.564 426.775 C 426.786 426.503 460.295 422.356 460.299 422.356 C 460.295 422.357 425.778 427.824 425.775 427.825 C 425.775 427.828 422.942 444.227 427.873 456.098 C 435.627 474.761 463.403 492.209 463.580 501.418 C 463.752 510.413 430.595 547.096 430.592 547.100 C 430.588 547.104 405.922 570.233 396.346 580.270 C 391.397 585.457 390.692 607.579 390.135 609.705 C 389.854 610.778 385.672 620.070 385.671 624.202 C 385.669 633.637 397.569 656.724 397.570 656.727 C 397.572 656.726 407.941 651.733 413.866 645.145 C 419.810 638.537 423.689 627.664 423.690 627.662 C 423.689 627.660 412.343 612.975 414.531 601.459 C 416.462 591.295 424.965 593.503 427.150 589.643 C 429.259 585.919 428.153 576.182 430.702 573.341 C 445.107 557.281 482.444 519.626 502.198 516.963 C 504.850 516.605 509.509 503.900 498.795 495.152 C 481.341 480.900 491.253 458.706 491.252 458.703 C 491.249 458.699 464.026 423.391 464.023 423.387 C 464.026 423.391 490.743 457.757 490.746 457.760 C 490.749 457.762 522.981 474.296 526.214 477.026 C 528.534 478.986 536.934 494.117 544.405 499.571 C 553.579 506.269 568.468 509.762 570.032 514.697 C 573.655 526.131 594.689 560.405 597.178 569.025 C 600.119 579.211 606.799 634.904 603.811 640.481 C 603.037 641.926 591.626 648.075 588.775 651.405 C 583.539 657.521 574.127 682.226 574.125 682.229 C 574.127 682.229 587.201 683.986 595.524 683.995 C 604.797 684.006 619.365 682.040 619.368 682.040 C 619.368 682.039 621.117 667.556 621.117 667.555 C 621.117 667.554 625.965 664.220 626.523 662.103 C 627.721 657.557 620.170 650.478 620.729 646.669 C 622.740 632.963 634.721 647.293 634.419 638.845 C 633.105 602.043 624.626 612.451 614.298 551.761 C 612.527 541.353 612.907 507.600 609.566 502.014 C 607.488 498.540 591.243 492.193 584.454 483.718 C 571.694 467.792 560.114 454.682 563.114 429.365 C 564.897 414.313 577.035 421.668 586.441 381.763 C 591.467 360.442 586.138 309.383 586.138 309.376 C 586.141 309.378 606.583 321.387 610.273 328.580 C 625.456 358.176 588.790 373.944 600.096 455.077 C 606.288 499.507 649.673 543.994 681.089 548.398 C 651.859 512.579 658.491 479.332 652.439 440.531 C 645.997 399.228 662.491 359.221 636.649 325.000 C 620.327 303.387 570.690 292.251 570.684 292.248 C 570.677 292.246 537.529 268.723 505.429 267.185 C 480.032 265.969 458.443 274.240 405.071 286.607 C 389.157 290.294 373.758 291.130 359.986 290.269 Z\\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":429.779,\\\"max\\\":555.621},\\\"y\\\":{\\\"min\\\":287.321,\\\"max\\\":413.163}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360.399,\\\"y\\\":369.228,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360.168,\\\"y\\\":368.999,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":378.616,\\\"y\\\":291.336,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.0051377182719439885,\\\"y\\\":-0.9999868018383833}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":498.201,\\\"y\\\":267.736,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"hourglass\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":189.5579603512383,\\\"max\\\":530.3095733740247},\\\"y\\\":{\\\"min\\\":21.274,\\\"max\\\":639.819}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hourglass\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hourglass\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 523.280 196.453 C 511.439 257.961 443.739 297.043 421.031 315.531 C 406.106 326.851 405.824 337.073 420.569 345.621 C 441.836 362.135 507.623 387.013 523.280 464.639 C 533.552 515.568 523.119 637.801 523.118 637.819 C 523.102 637.819 358.814 637.242 358.798 637.242 C 358.781 637.242 194.424 636.665 194.407 636.665 C 194.408 636.647 186.657 515.261 196.720 464.639 C 209.610 399.799 269.704 366.815 294.813 349.119 C 314.229 335.436 313.715 328.598 293.633 311.973 C 267.517 290.353 210.053 259.409 196.720 196.453 C 185.956 145.627 196.881 23.291 196.882 23.274 C 198.242 24.638 361.186 23.851 361.202 23.851 C 361.219 23.851 525.576 24.428 525.593 24.428 C 525.593 24.445 533.037 145.772 523.280 196.453 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 216.892 187.438 C 276.285 189.705 298.750 256.642 361.129 256.411 C 422.715 256.183 446.158 188.560 503.108 187.438 C 510.678 145.549 503.108 44.344 503.108 44.330 C 503.094 44.330 360.014 44.330 360.000 44.330 C 359.986 44.330 218.085 45.509 216.892 44.330 C 216.892 44.344 210.412 151.096 216.892 187.438 C 225.589 236.217 292.009 287.369 360.000 330.546 C 428.945 285.134 493.849 238.674 503.108 187.438 M 216.892 473.654 C 229.680 413.088 296.768 372.196 360.000 330.546 C 423.326 370.761 489.206 410.900 503.108 473.654 C 506.807 490.351 506.875 526.597 506.929 530.529 C 507.010 536.484 503.108 616.754 503.108 616.763 C 503.094 616.763 360.014 616.763 360.000 616.763 C 359.986 616.763 216.906 616.763 216.892 616.763 C 216.892 616.755 213.310 532.878 213.310 532.870 C 213.310 532.864 213.215 491.068 216.892 473.654 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 489.225 C 418.700 488.785 440.874 530.525 506.929 530.529 C 507.010 536.484 503.108 616.754 503.108 616.763 C 503.094 616.763 360.014 616.763 360.000 616.763 C 359.986 616.763 216.906 616.763 216.892 616.763 C 216.892 616.755 213.310 532.878 213.310 532.870 C 284.082 531.686 301.138 489.666 360.000 489.225 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 216.892 187.438 C 276.285 189.705 298.750 256.642 361.129 256.411 C 422.715 256.183 446.158 188.560 503.108 187.438 C 493.849 238.674 428.945 285.134 360.000 330.546 C 292.009 287.369 225.589 236.217 216.892 187.438 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 339.659 C 360.000 339.659 360.000 344.580 360.000 344.580 M 360.000 359.345 C 360.000 359.345 360.000 364.266 360.000 364.266 M 360.000 379.031 C 360.000 379.031 360.000 383.952 360.000 383.952 M 360.000 398.717 C 360.000 398.717 360.000 403.638 360.000 403.638 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 418.582 C 360.000 418.582 360.000 423.503 360.000 423.504 M 360.000 438.268 C 360.000 438.269 360.000 443.189 360.000 443.190 M 360.000 457.954 C 360.000 457.954 360.000 462.875 360.000 462.875 M 360.000 477.640 C 360.000 477.640 360.000 482.561 360.000 482.562 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":688.229,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":25.095,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":232.438,\\\"y\\\":331.396,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.999987215219683,\\\"y\\\":0.00505661914555356}},{\\\"point\\\":{\\\"x\\\":487.562,\\\"y\\\":331.396,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.999987215219683,\\\"y\\\":0.005056619145553571}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":521.426,\\\"y\\\":634.965,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128475518456736,\\\"y\\\":0.701319020009888}},{\\\"point\\\":{\\\"x\\\":198.441,\\\"y\\\":634.999,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986772677634046,\\\"y\\\":0.7154369822078418}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":523.168,\\\"y\\\":24.877,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314517658655274,\\\"y\\\":-0.7754151580832729}},{\\\"point\\\":{\\\"x\\\":197.41,\\\"y\\\":24.933,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817795944708411,\\\"y\\\":-0.7315576426797655}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":635.6,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":307.992,\\\"max\\\":412.008},\\\"y\\\":{\\\"min\\\":508.224,\\\"max\\\":612.24}}]}},{\\\"name\\\":\\\"house\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":176.434,\\\"max\\\":695.316},\\\"y\\\":{\\\"min\\\":29.945,\\\"max\\\":610.586}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"house\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"house_3\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 307.155 58.728 C 307.168 58.750 392.968 207.905 435.875 282.494 C 435.875 282.527 435.875 608.554 435.875 608.586 C 412.454 600.235 365.618 583.535 365.611 583.532 C 365.598 583.527 236.735 537.579 236.722 537.574 C 236.716 537.572 178.440 516.793 178.434 516.791 C 178.434 516.758 178.434 190.731 178.434 190.698 C 178.447 190.685 307.142 58.741 307.155 58.728 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 435.875 282.494 C 435.875 282.527 435.875 608.554 435.875 608.586 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 435.875 282.494 C 435.875 282.527 435.875 608.554 435.875 608.586 C 435.901 608.578 693.290 522.523 693.316 522.514 C 693.316 522.484 693.316 226.096 693.316 226.067 C 693.290 226.072 435.901 282.489 435.875 282.494 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 693.316 226.067 C 693.290 226.072 435.901 282.489 435.875 282.494 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 435.875 282.494 C 392.968 207.905 307.168 58.750 307.155 58.728 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 564.595 31.945 C 564.608 31.964 650.409 161.360 693.316 226.067 C 693.290 226.072 435.901 282.489 435.875 282.494 C 392.968 207.905 307.168 58.750 307.155 58.728 C 392.968 49.800 564.570 31.948 564.595 31.945 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 365.611 583.532 C 365.598 583.527 236.735 537.579 236.722 537.574 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 365.498 291.109 C 365.498 291.138 365.573 486.058 365.611 583.532 C 365.598 583.527 236.735 537.579 236.722 537.574 C 236.740 440.120 236.778 245.240 236.778 245.211 C 236.790 245.216 365.486 291.104 365.498 291.109 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 638.519 445.989 C 638.513 445.991 574.885 467.275 574.879 467.277 C 574.872 467.279 511.244 488.564 511.238 488.566 C 511.238 488.558 511.238 415.290 511.238 415.282 C 511.238 415.275 511.238 342.006 511.238 341.999 C 511.245 341.997 574.872 325.608 574.879 325.607 C 574.885 325.605 638.513 309.216 638.519 309.214 C 638.519 309.221 638.519 377.590 638.519 377.597 C 638.519 377.604 638.519 445.982 638.519 445.989 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 574.879 325.607 C 574.879 372.830 574.879 420.054 574.879 467.277 M 511.238 415.282 C 553.665 402.721 596.092 390.159 638.519 377.597 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":202.981,\\\"max\\\":365.233},\\\"y\\\":{\\\"min\\\":291.567,\\\"max\\\":579.099}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":434.652,\\\"y\\\":689.367,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":434.652,\\\"y\\\":44.638,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":174.904,\\\"y\\\":312.863,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872416708515,\\\"y\\\":0.005051385505163669}},{\\\"point\\\":{\\\"x\\\":694.4,\\\"y\\\":312.863,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872416708515,\\\"y\\\":0.005051385505163642}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":590.331,\\\"y\\\":556.837,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.3662945332737488,\\\"y\\\":0.930498960178767}},{\\\"point\\\":{\\\"x\\\":288.223,\\\"y\\\":557.435,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.38611017392132174,\\\"y\\\":0.9224526728209133}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":620.208,\\\"y\\\":116.114,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8106385202018457,\\\"y\\\":-0.5855469149137084}},{\\\"point\\\":{\\\"x\\\":242.808,\\\"y\\\":124.186,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817267728855348,\\\"y\\\":-0.7316068665144377}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":434.652,\\\"y\\\":606.431,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"infinity\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":30.975087328840694,\\\"max\\\":689.0249126711592},\\\"y\\\":{\\\"min\\\":231.10882135209928,\\\"max\\\":488.8392069437084}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"infinity\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"infinity\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 550.966 437.261 C 488.765 429.238 401.658 359.640 401.643 359.632 C 403.289 358.599 510.985 281.541 558.741 282.739 C 586.994 283.448 635.935 310.453 636.488 357.571 C 637.186 416.974 581.208 441.162 550.966 437.261 M 569.431 486.825 C 497.012 487.774 427.117 441.006 360.031 390.953 C 294.176 440.136 223.658 487.783 150.569 486.825 C 77.519 485.867 32.742 407.261 32.976 362.429 C 33.271 305.989 78.050 230.560 161.259 233.175 C 227.550 235.259 296.906 281.948 360.151 328.636 C 424.364 281.096 493.057 235.240 558.741 233.175 C 641.950 230.560 686.729 305.989 687.024 362.429 C 687.258 407.261 642.481 485.867 569.431 486.825 M 169.034 437.261 C 210.666 431.090 262.229 401.148 318.302 359.592 C 262.329 317.688 209.474 281.529 161.259 282.739 C 133.006 283.448 84.065 310.453 83.512 357.571 C 82.814 416.974 142.924 441.131 169.034 437.261 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.031 390.953 C 374.472 380.168 401.153 359.940 401.643 359.632 M 318.302 359.592 C 331.939 349.466 345.861 338.971 360.151 328.636 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":111.276,\\\"max\\\":230.324},\\\"y\\\":{\\\"min\\\":300.476,\\\"max\\\":419.524}},{\\\"x\\\":{\\\"min\\\":489.676,\\\"max\\\":608.724},\\\"y\\\":{\\\"min\\\":300.476,\\\"max\\\":419.524}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":517.689,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":238.309,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":31.9,\\\"y\\\":360.935,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873200064072,\\\"y\\\":0.005035854088752079}},{\\\"point\\\":{\\\"x\\\":688.1,\\\"y\\\":360.935,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873200064072,\\\"y\\\":0.005035854088752106}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":592.672,\\\"y\\\":481.368,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129335762692828,\\\"y\\\":0.7012315707581133}},{\\\"point\\\":{\\\"x\\\":127.136,\\\"y\\\":481.416,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987254201015092,\\\"y\\\":0.7153899547127913}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":592.835,\\\"y\\\":237.519,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314091670147428,\\\"y\\\":-0.775449846095638}},{\\\"point\\\":{\\\"x\\\":127.956,\\\"y\\\":237.598,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817481203990742,\\\"y\\\":-0.731586973867311}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":387.704,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"key\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":102.625,\\\"max\\\":695.481},\\\"y\\\":{\\\"min\\\":272.089,\\\"max\\\":558.087}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"key\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"key\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 671.833 490.988 C 671.820 476.530 671.795 447.620 671.795 447.615 C 671.790 447.615 642.880 447.615 628.422 447.615 C 628.422 440.387 628.422 433.158 628.422 425.929 C 642.880 425.929 671.790 425.929 671.795 425.929 C 671.797 425.927 693.481 425.929 693.481 404.243 C 693.481 382.556 671.797 382.559 671.795 382.556 C 671.753 382.556 256.182 382.556 256.182 382.556 C 257.342 377.606 260.937 362.783 260.810 352.182 C 260.292 308.961 225.941 274.089 182.718 274.089 C 139.494 274.089 104.625 308.958 104.625 352.182 C 104.625 372.064 112.004 390.179 124.419 404.271 C 112.004 418.306 104.625 436.422 104.625 456.304 C 104.625 499.528 139.494 534.397 182.718 534.397 C 225.942 534.397 260.240 499.524 260.810 456.304 C 260.950 445.738 259.313 435.575 256.022 425.932 C 358.093 425.931 460.916 425.930 563.363 425.929 C 563.363 433.158 563.363 440.387 563.363 447.615 C 548.906 447.615 519.995 447.615 519.991 447.615 C 519.991 447.620 519.953 490.984 519.953 490.988 C 519.955 490.988 541.675 490.988 541.677 490.988 C 541.677 490.990 541.677 512.672 541.677 512.674 C 541.675 512.674 519.954 512.674 519.952 512.674 C 519.952 512.679 519.991 556.043 519.991 556.047 C 519.997 556.047 563.363 556.073 585.050 556.085 C 585.050 534.386 585.050 490.994 585.050 490.988 C 585.052 490.988 606.734 490.988 606.736 490.988 C 606.736 490.994 606.736 534.387 606.736 556.087 C 628.422 556.074 671.788 556.047 671.795 556.047 C 671.795 556.043 671.833 512.679 671.833 512.674 C 671.830 512.674 650.111 512.674 650.109 512.674 C 650.109 512.672 650.109 490.990 650.109 490.988 C 650.111 490.988 664.592 490.988 671.833 490.988 M 156.687 456.304 C 156.687 470.712 168.310 482.335 182.718 482.335 C 197.126 482.335 208.748 470.712 208.749 456.304 C 208.749 441.896 197.126 430.273 182.718 430.273 C 168.310 430.273 156.687 441.896 156.687 456.304 M 182.718 326.150 C 168.310 326.150 156.687 337.774 156.687 352.182 C 156.687 366.589 168.310 378.212 182.718 378.212 C 197.126 378.212 208.748 366.589 208.749 352.182 C 208.749 337.774 197.126 326.150 182.718 326.150 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":320.59,\\\"max\\\":492.177},\\\"y\\\":{\\\"min\\\":318.449,\\\"max\\\":490.036}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":22.297,\\\"y\\\":404.243,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":122.098,\\\"y\\\":404.243,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":406.413,\\\"y\\\":245.573,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005052603142554274,\\\"y\\\":-0.999987235519276}},{\\\"point\\\":{\\\"x\\\":406.414,\\\"y\\\":562.912,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.004966542615667106,\\\"y\\\":0.9999876666511677}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":608.611,\\\"y\\\":202.859,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7154080382322661,\\\"y\\\":-0.6987069048124975}},{\\\"point\\\":{\\\"x\\\":608.569,\\\"y\\\":605.46,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7012596679619376,\\\"y\\\":0.7129059391602183}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":205.976,\\\"y\\\":203.568,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7315875748298992,\\\"y\\\":-0.6817474755028482}},{\\\"point\\\":{\\\"x\\\":205.908,\\\"y\\\":605.602,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7754508351924095,\\\"y\\\":0.6314079522776019}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":691.806,\\\"y\\\":404.243,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"knife\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":325.86875000000003,\\\"max\\\":460.435},\\\"y\\\":{\\\"min\\\":13.766,\\\"max\\\":630.2975}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"knife\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"knife\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 344.344 626.340 C 322.377 609.940 322.377 428.024 344.344 411.624 C 347.839 409.015 375.009 409.015 378.504 411.624 C 400.472 428.024 400.472 609.940 378.504 626.340 C 375.009 628.950 347.839 628.950 344.344 626.340 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 333.346 442.770 C 333.346 442.727 333.346 15.809 333.346 15.766 C 333.359 15.804 435.495 35.627 458.435 395.839 C 436.954 396.004 391.234 391.312 390.447 441.808 C 390.415 443.870 333.352 442.769 333.346 442.770 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360.041,\\\"y\\\":696.393,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":338.03,\\\"y\\\":23.778,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":331.998,\\\"y\\\":314.711,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999870191221446,\\\"y\\\":0.00509525143714989}},{\\\"point\\\":{\\\"x\\\":452.998,\\\"y\\\":314.711,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999870191221446,\\\"y\\\":0.00509525143714989}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":384.623,\\\"y\\\":605.053,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712888023628259,\\\"y\\\":0.7012778805633292}},{\\\"point\\\":{\\\"x\\\":338.465,\\\"y\\\":605.081,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986644194875873,\\\"y\\\":0.715449529276575}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":407.26,\\\"y\\\":118.488,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314421897670692,\\\"y\\\":-0.7754229561872465}},{\\\"point\\\":{\\\"x\\\":336.5,\\\"y\\\":118.554,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.681717049764949,\\\"y\\\":-0.7316159266034155}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360.041,\\\"y\\\":619.031,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"knight_1\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":71.137,\\\"max\\\":674.6125581927513},\\\"y\\\":{\\\"min\\\":12.947,\\\"max\\\":642.545}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"knight_1_3\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"sword_3\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 384.712 71.856 C 384.712 71.857 381.807 79.938 381.807 79.939 C 381.806 79.940 378.901 88.022 378.901 88.023 C 378.885 88.017 219.430 30.159 219.414 30.153 C 219.413 30.151 202.874 15.623 202.872 15.621 C 202.874 15.621 224.878 14.947 224.880 14.947 C 224.896 14.953 384.696 71.850 384.712 71.856 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 389.433 58.722 C 389.432 58.726 374.182 101.152 374.180 101.156 C 374.181 101.156 379.372 103.023 379.373 103.023 C 379.375 103.019 394.624 60.592 394.626 60.588 C 394.625 60.588 389.434 58.722 389.433 58.722 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 407.614 84.830 C 406.559 85.734 405.704 86.927 405.194 88.346 C 404.684 89.764 404.584 91.228 404.821 92.597 C 398.476 90.329 385.593 85.724 385.591 85.723 C 385.592 85.723 388.407 77.888 388.408 77.887 C 388.410 77.888 401.276 82.539 407.614 84.830 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 405.194 88.346 C 404.684 89.764 404.584 91.228 404.821 92.597 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 407.614 84.830 C 406.559 85.734 405.704 86.927 405.194 88.346 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 405.194 88.346 C 404.684 89.764 404.584 91.228 404.821 92.597 C 405.341 95.411 407.289 97.869 410.169 98.905 C 414.468 100.450 419.183 98.229 420.729 93.930 C 422.274 89.630 420.052 84.916 415.753 83.370 C 412.873 82.335 409.806 82.991 407.614 84.830 C 406.559 85.734 405.704 86.927 405.194 88.346 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 381.807 79.939 C 326.052 59.899 270.298 39.858 214.544 19.817 \\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"horse\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 593.811 252.475 C 592.205 252.216 590.701 253.303 590.442 254.908 C 590.183 256.513 591.269 258.017 592.875 258.276 C 594.480 258.535 595.984 257.449 596.243 255.844 C 596.502 254.238 595.416 252.734 593.811 252.475 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 407.561 88.402 C 403.355 93.161 397.438 87.912 397.437 87.912 C 397.437 87.912 398.408 92.209 393.054 94.747 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 381.114 311.804 C 394.009 287.329 424.578 271.005 441.097 274.395 C 441.064 288.519 441.553 338.447 441.553 338.453 C 441.547 338.456 400.016 354.762 388.012 360.367 C 379.847 348.824 370.607 334.229 381.114 311.804 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 441.097 274.395 C 424.578 271.005 394.009 287.329 381.114 311.804 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 391.867 249.302 C 408.983 231.246 427.190 228.133 449.396 228.291 C 445.023 246.428 441.130 260.374 441.097 274.395 C 424.578 271.005 394.009 287.329 381.114 311.804 C 379.499 303.685 372.689 277.843 391.867 249.302 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 449.396 228.291 C 427.190 228.133 408.983 231.246 391.867 249.302 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 404.605 208.883 C 432.674 188.431 451.242 192.570 464.954 195.612 C 457.135 206.108 452.008 217.456 449.396 228.291 C 427.190 228.133 408.983 231.246 391.867 249.302 C 390.700 241.570 393.935 218.475 404.605 208.883 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 464.954 195.612 C 451.242 192.570 432.674 188.431 404.605 208.883 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 431.361 167.503 C 452.707 162.339 472.582 167.412 483.398 179.141 C 476.696 183.634 470.178 188.599 464.954 195.612 C 451.242 192.570 432.674 188.431 404.605 208.883 C 407.071 187.814 421.061 172.848 431.361 167.503 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 483.398 179.141 C 472.582 167.412 452.707 162.339 431.361 167.503 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 460.947 144.890 C 487.648 142.413 500.905 155.417 510.495 168.014 C 501.642 170.236 492.338 173.146 483.398 179.141 C 472.582 167.412 452.707 162.339 431.361 167.503 C 435.177 159.842 448.500 147.239 460.947 144.890 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 510.495 168.014 C 500.905 155.417 487.648 142.413 460.947 144.890 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 500.511 131.441 C 517.842 135.621 527.319 147.609 530.358 165.374 C 523.889 165.535 517.368 166.289 510.495 168.014 C 500.905 155.417 487.648 142.413 460.947 144.890 C 468.412 135.734 490.443 129.185 500.511 131.441 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 530.358 165.374 C 527.319 147.609 517.842 135.621 500.511 131.441 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 543.754 132.626 C 554.635 150.311 550.600 158.479 548.535 166.285 C 542.620 165.505 536.777 165.214 530.358 165.374 C 527.319 147.609 517.842 135.621 500.511 131.441 C 515.287 124.309 531.009 124.633 543.754 132.626 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 548.535 166.285 C 550.600 158.479 554.635 150.311 543.754 132.626 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 566.045 146.585 C 567.308 156.686 563.045 162.851 556.715 167.918 C 554.159 167.946 551.573 166.685 548.535 166.285 C 550.600 158.479 554.635 150.311 543.754 132.626 C 553.818 133.150 562.370 141.783 566.045 146.585 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 566.045 146.585 C 567.308 156.686 563.045 162.851 556.715 167.918 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 556.715 167.918 C 577.428 167.696 582.187 183.815 589.937 204.819 C 596.791 194.181 608.465 181.207 597.779 160.605 C 591.713 148.910 574.306 142.844 566.045 146.585 C 567.308 156.686 563.045 162.851 556.715 167.918 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 256.395 386.185 C 220.301 381.682 238.857 406.359 206.653 410.386 C 201.521 380.039 216.969 368.548 235.107 364.710 C 248.804 365.837 252.690 382.412 256.395 386.185 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 235.107 364.710 C 216.969 368.548 201.521 380.039 206.653 410.386 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 200.335 358.285 C 209.182 352.937 226.268 351.887 235.107 364.710 C 216.969 368.548 201.521 380.039 206.653 410.386 C 208.786 423.002 208.005 449.095 187.479 454.608 C 179.139 415.037 171.380 377.735 200.335 358.285 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 187.479 454.608 C 179.139 415.037 171.380 377.735 200.335 358.285 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 163.622 368.569 C 137.757 400.736 169.114 464.963 163.348 525.813 C 184.636 511.751 193.295 482.206 187.479 454.608 C 179.139 415.037 171.380 377.735 200.335 358.285 C 180.831 353.703 168.822 363.286 163.622 368.569 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 163.622 368.569 C 137.757 400.736 169.114 464.963 163.348 525.813 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 163.348 525.813 C 159.508 566.342 136.327 576.425 124.496 574.348 C 145.395 505.536 116.603 432.490 136.754 392.086 C 141.982 381.600 150.299 368.081 163.622 368.569 C 137.757 400.736 169.114 464.963 163.348 525.813 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 136.754 392.086 C 116.603 432.490 145.395 505.536 124.496 574.348 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 124.496 574.348 C 111.203 599.431 90.449 608.063 73.137 591.500 C 116.087 547.668 95.456 483.742 103.769 442.621 C 107.894 422.216 117.846 403.419 136.754 392.086 C 116.603 432.490 145.395 505.536 124.496 574.348 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 73.137 591.500 C 116.087 547.668 95.456 483.742 103.769 442.621 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 270.036 439.542 C 268.593 403.776 365.798 370.600 387.522 439.968 C 389.415 446.012 386.580 466.963 378.110 490.635 C 365.089 527.025 314.254 537.080 314.261 552.843 C 314.267 565.082 353.265 598.850 361.451 603.480 C 370.381 608.532 390.631 634.758 390.634 634.761 C 390.630 634.761 348.032 634.015 348.027 634.015 C 348.026 634.013 345.957 620.760 340.559 615.276 C 337.424 612.092 329.439 617.191 327.079 611.033 C 316.239 582.752 281.425 559.030 284.080 548.881 C 285.996 541.560 305.493 519.102 304.559 498.796 C 303.872 483.877 271.144 466.984 270.036 439.542 M 525.301 386.717 C 525.302 386.713 528.519 354.450 528.519 354.446 C 528.527 354.443 570.389 345.572 602.462 325.231 C 612.136 319.096 617.545 330.883 620.331 333.487 C 625.869 338.663 654.868 372.508 665.151 383.484 C 668.309 386.855 668.088 400.476 672.184 412.671 C 674.702 420.168 665.302 443.064 665.301 443.067 C 665.299 443.065 646.679 420.243 646.677 420.240 C 646.678 420.238 657.044 406.692 655.122 401.151 C 652.477 393.521 642.304 399.090 641.654 394.151 C 639.388 376.936 612.696 346.498 608.433 345.653 C 603.361 344.647 551.266 385.932 551.261 385.936 C 551.258 385.936 525.304 386.716 525.301 386.717 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 610.428 371.987 C 594.063 373.512 572.638 374.181 554.056 374.824 C 554.221 349.609 541.965 324.080 527.270 308.703 C 521.070 283.545 513.281 230.702 538.301 220.464 C 548.501 234.808 564.686 241.059 564.688 241.061 C 564.689 241.063 569.726 252.303 573.985 264.421 C 574.443 265.723 582.505 266.640 582.506 266.640 C 582.506 266.639 582.946 254.351 582.946 254.350 C 582.947 254.351 592.020 267.094 592.021 267.096 C 592.022 267.095 600.044 262.107 600.828 258.283 C 601.787 253.608 589.570 191.734 586.542 182.555 C 582.590 170.577 574.038 165.942 574.037 165.941 C 574.036 165.938 566.124 139.077 566.123 139.074 C 566.122 139.077 559.049 161.997 559.048 162.000 C 559.038 162.002 500.580 144.810 460.389 188.682 C 432.744 218.861 439.668 278.740 425.500 321.626 C 413.590 357.673 359.634 353.084 311.075 358.527 C 236.447 366.891 233.935 398.917 234.888 439.087 C 235.899 481.700 269.477 482.760 264.850 509.772 C 263.024 520.434 232.779 533.252 226.170 541.889 C 216.358 554.712 251.487 568.806 254.027 608.336 C 254.536 616.268 261.459 612.177 266.479 616.423 C 275.010 623.637 276.207 640.467 276.208 640.469 C 276.213 640.469 321.498 640.545 321.502 640.545 C 321.499 640.542 301.406 612.461 292.095 608.179 C 269.420 597.752 252.943 557.843 253.509 555.011 C 259.701 524.025 312.449 547.408 336.496 487.867 C 348.565 457.984 343.951 421.639 343.952 421.633 C 343.952 421.637 346.388 453.790 344.833 459.974 C 352.934 455.488 363.050 459.748 395.099 464.197 C 467.977 474.314 511.807 449.027 544.831 409.010 C 540.093 411.540 530.317 414.470 527.792 414.297 C 520.711 413.811 509.671 404.677 509.669 404.676 C 509.671 404.677 520.471 414.007 528.354 414.098 C 537.259 414.200 597.251 386.656 601.223 391.467 C 605.379 396.501 584.587 433.891 583.401 441.058 C 583.148 442.586 586.951 447.533 583.123 452.285 C 581.986 453.696 565.372 456.811 565.371 456.811 C 565.370 456.814 556.844 482.548 556.843 482.551 C 556.846 482.550 578.490 479.948 582.364 475.614 C 592.470 464.306 603.826 458.351 603.586 450.749 C 603.037 433.332 614.515 395.561 621.381 386.283 C 623.345 383.629 618.855 371.201 610.428 371.987 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 554.056 374.824 C 538.809 375.292 525.609 375.681 518.765 375.507 M 610.428 371.987 C 594.063 373.512 572.638 374.181 554.056 374.824 C 554.221 349.609 541.965 324.080 527.270 308.703 C 521.070 283.545 513.281 230.702 538.301 220.464 C 548.501 234.808 564.686 241.059 564.688 241.061 C 564.689 241.063 569.726 252.303 573.985 264.421 C 574.443 265.723 582.505 266.640 582.506 266.640 C 582.506 266.639 582.946 254.351 582.946 254.350 C 582.947 254.351 592.020 267.094 592.021 267.096 C 592.022 267.095 600.044 262.107 600.828 258.283 C 601.787 253.608 589.570 191.734 586.542 182.555 C 582.590 170.577 574.038 165.942 574.037 165.941 C 574.036 165.938 566.124 139.077 566.123 139.074 C 566.122 139.077 559.049 161.997 559.048 162.000 C 559.038 162.002 500.580 144.810 460.389 188.682 C 432.744 218.861 439.668 278.740 425.500 321.626 C 413.590 357.673 359.634 353.084 311.075 358.527 C 236.447 366.891 233.935 398.917 234.888 439.087 C 235.899 481.700 269.477 482.760 264.850 509.772 C 263.024 520.434 232.779 533.252 226.170 541.889 C 216.358 554.712 251.487 568.806 254.027 608.336 C 254.536 616.268 261.459 612.177 266.479 616.423 C 275.010 623.637 276.207 640.467 276.208 640.469 C 276.213 640.469 321.498 640.545 321.502 640.545 C 321.499 640.542 301.406 612.461 292.095 608.179 C 269.420 597.752 252.943 557.843 253.509 555.011 C 259.701 524.025 312.449 547.408 336.496 487.867 C 348.565 457.984 343.951 421.639 343.952 421.633 C 343.952 421.637 346.388 453.790 344.833 459.974 C 352.934 455.488 363.050 459.748 395.099 464.197 C 467.977 474.314 511.807 449.027 544.831 409.010 C 540.093 411.540 530.317 414.470 527.792 414.297 C 520.711 413.811 509.671 404.677 509.669 404.676 C 509.671 404.677 520.471 414.007 528.354 414.098 C 537.259 414.200 597.251 386.656 601.223 391.467 C 605.379 396.501 584.587 433.891 583.401 441.058 C 583.148 442.586 586.951 447.533 583.123 452.285 C 581.986 453.696 565.372 456.811 565.371 456.811 C 565.370 456.814 556.844 482.548 556.843 482.551 C 556.846 482.550 578.490 479.948 582.364 475.614 C 592.470 464.306 603.826 458.351 603.586 450.749 C 603.037 433.332 614.515 395.561 621.381 386.283 C 623.345 383.629 618.855 371.201 610.428 371.987 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 573.100 201.139 C 576.970 198.344 577.838 192.967 575.043 189.097 C 572.247 185.226 566.870 184.359 563.000 187.154 C 559.130 189.949 558.263 195.326 561.058 199.196 C 563.853 203.066 569.230 203.934 573.100 201.139 M 581.440 212.420 C 581.439 212.418 588.012 200.124 578.424 186.848 C 568.836 173.572 555.099 175.945 555.097 175.944 C 555.097 175.946 548.526 188.239 558.114 201.515 C 567.702 214.791 581.437 212.419 581.440 212.420 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"knight_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 316.839 324.837 C 312.158 272.178 300.168 264.005 285.420 229.260 C 287.466 227.636 289.071 226.325 290.709 224.960 C 294.161 227.835 324.792 243.399 348.242 235.060 C 369.463 227.513 377.700 209.811 380.185 196.127 C 382.716 199.586 383.918 203.184 386.780 208.349 C 397.365 227.455 407.041 260.189 390.288 321.194 C 378.240 328.804 340.352 335.596 316.839 324.837 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 593.811 252.475 C 592.205 252.216 590.701 253.303 590.442 254.908 C 590.183 256.513 591.269 258.017 592.875 258.276 C 594.480 258.535 595.984 257.449 596.243 255.844 C 596.502 254.238 595.416 252.734 593.811 252.475 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 290.709 224.960 C 289.071 226.325 287.466 227.636 285.420 229.260 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 192.894 219.832 C 192.902 219.830 239.481 261.738 271.625 202.704 C 278.348 212.265 282.918 218.471 290.709 224.960 C 289.071 226.325 287.466 227.636 285.420 229.260 C 235.022 269.619 217.477 255.916 186.677 230.655 C 158.613 238.118 138.559 224.371 137.808 220.247 C 152.611 220.285 192.889 219.832 192.894 219.832 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 380.185 196.127 C 382.716 199.586 383.918 203.184 386.780 208.349 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 396.558 108.380 C 411.766 129.907 399.165 162.571 380.626 180.953 C 380.774 184.194 381.354 189.687 380.185 196.127 C 382.716 199.586 383.918 203.184 386.780 208.349 C 412.382 187.639 443.607 136.898 409.976 101.415 C 407.238 98.526 405.504 97.130 405.503 97.129 C 405.504 97.128 415.334 79.649 415.335 79.647 C 415.333 79.646 392.402 67.466 392.400 67.465 C 392.399 67.466 389.129 77.064 389.129 77.065 C 389.128 77.067 383.065 93.298 383.064 93.300 C 383.066 93.301 391.089 100.638 396.558 108.380 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 389.129 77.065 C 400.228 83.938 411.328 84.138 407.561 88.402 C 403.355 93.161 397.438 87.912 397.437 87.912 C 397.437 87.912 398.408 92.209 393.054 94.747 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 210.523 504.561 C 265.493 520.837 330.465 513.547 386.583 498.993 C 393.792 436.245 381.564 407.031 356.597 380.169 C 335.454 379.977 315.465 376.083 300.524 370.801 C 300.176 370.195 302.698 362.782 305.996 353.988 C 286.098 355.669 276.997 358.444 255.424 367.823 C 259.360 371.747 259.889 382.385 254.179 387.853 C 246.775 394.943 238.035 393.138 234.681 391.872 C 219.876 428.719 236.288 441.005 210.523 504.561 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 408.387 486.071 C 408.388 486.060 429.138 418.201 413.910 369.625 C 422.520 365.957 430.809 361.202 438.522 355.161 C 430.300 345.064 422.428 337.974 415.247 333.432 C 417.670 331.600 420.205 329.510 422.797 327.181 C 431.058 335.774 446.200 337.836 476.224 339.937 C 508.062 342.166 544.073 321.571 544.080 321.569 C 544.083 321.574 549.315 340.969 577.078 371.228 C 499.333 370.537 512.271 455.303 438.612 482.835 C 432.749 485.027 426.668 487.077 420.455 489.101 C 416.314 488.079 408.388 486.071 408.387 486.071 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 541.054 205.397 C 545.574 219.087 559.709 233.278 568.645 241.299 C 565.676 242.124 561.283 243.368 561.283 243.368 C 561.283 243.369 563.727 253.415 563.727 253.416 C 563.727 253.416 565.300 252.997 566.567 252.606 C 555.640 262.405 530.436 282.833 504.311 288.875 C 479.092 294.707 445.379 285.707 430.689 282.371 C 426.194 305.807 420.566 324.774 420.565 324.778 C 420.575 324.778 473.653 340.748 513.626 321.437 C 575.732 291.433 573.831 257.953 572.732 250.458 C 577.031 256.878 589.442 253.539 589.642 246.327 C 594.395 245.234 604.078 242.651 604.080 242.650 C 604.080 242.649 600.151 232.363 600.151 232.362 C 600.149 232.363 593.349 234.435 585.254 236.907 C 580.907 233.631 577.114 236.395 577.114 236.395 C 570.112 229.101 556.600 211.341 551.844 192.807 C 548.821 181.025 556.191 158.853 556.191 158.850 C 556.190 158.850 548.775 157.811 543.394 156.178 C 540.991 162.384 533.485 182.479 541.054 205.397 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 356.597 380.169 C 381.564 407.031 393.792 436.245 386.583 498.993 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 420.455 489.101 C 416.314 488.079 408.388 486.071 408.387 486.071 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 408.387 486.071 C 408.388 486.060 429.138 418.201 413.910 369.625 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 413.910 369.625 C 395.477 377.476 375.574 380.342 356.597 380.169 C 381.564 407.031 393.792 436.245 386.583 498.993 C 386.202 501.610 385.769 504.970 385.281 508.425 C 409.748 507.761 460.075 499.167 460.083 499.166 C 460.079 499.165 433.546 492.443 420.455 489.101 C 416.314 488.079 408.388 486.071 408.387 486.071 C 408.388 486.060 429.138 418.201 413.910 369.625 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 380.626 180.953 C 380.774 184.194 381.354 189.687 380.185 196.127 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 380.185 196.127 C 377.700 209.811 369.463 227.513 348.242 235.060 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 348.242 235.060 C 324.792 243.399 294.161 227.835 290.709 224.960 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 290.709 224.960 C 282.918 218.471 278.348 212.265 271.625 202.704 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 379.679 177.219 C 381.124 176.667 380.514 178.483 380.626 180.953 C 380.774 184.194 381.354 189.687 380.185 196.127 C 377.700 209.811 369.463 227.513 348.242 235.060 C 324.792 243.399 294.161 227.835 290.709 224.960 C 282.918 218.471 278.348 212.265 271.625 202.704 C 269.501 199.684 267.569 195.445 267.569 195.445 C 267.574 195.444 313.345 192.395 313.350 192.394 C 313.352 192.390 293.760 173.498 289.059 158.758 C 291.742 143.067 310.283 123.032 310.285 123.028 C 310.289 123.030 342.136 130.076 347.701 141.997 C 347.699 142.001 348.877 157.286 345.667 187.119 C 356.474 184.251 369.478 181.120 379.679 177.219 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 304.877 157.395 C 304.882 157.393 355.562 143.002 355.567 143.001 C 355.567 143.004 357.745 176.131 357.746 176.135 C 357.741 176.134 309.258 169.861 307.462 168.023 C 307.199 167.754 304.878 157.396 304.877 157.395 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 316.502 161.957 C 329.841 160.707 343.180 159.457 356.519 158.207 M 307.462 168.023 C 307.199 167.754 304.878 157.396 304.877 157.395 C 304.882 157.393 355.562 143.002 355.567 143.001 C 355.567 143.004 357.745 176.131 357.746 176.135 C 357.741 176.134 309.258 169.861 307.462 168.023 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 390.288 321.194 C 378.240 328.804 340.352 335.596 316.839 324.837 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 305.996 353.988 C 302.698 362.782 300.176 370.195 300.524 370.801 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 300.524 370.801 C 315.465 376.083 335.454 379.977 356.597 380.169 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 356.597 380.169 C 375.574 380.342 395.477 377.476 413.910 369.625 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 413.910 369.625 C 422.520 365.957 430.809 361.202 438.522 355.161 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 438.522 355.161 C 430.300 345.064 422.428 337.974 415.247 333.432 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 390.288 321.194 C 378.240 328.804 340.352 335.596 316.839 324.837 C 316.838 324.840 309.741 343.401 305.996 353.988 C 302.698 362.782 300.176 370.195 300.524 370.801 C 315.465 376.083 335.454 379.977 356.597 380.169 C 375.574 380.342 395.477 377.476 413.910 369.625 C 422.520 365.957 430.809 361.202 438.522 355.161 C 430.300 345.064 422.428 337.974 415.247 333.432 C 404.698 325.118 391.204 321.158 390.288 321.194 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 216.287 495.916 C 269.623 511.157 332.420 503.506 386.583 488.907 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 411.810 481.417 C 418.023 479.392 424.042 477.169 429.967 475.151 C 502.625 450.397 497.473 360.826 569.393 363.063 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 422.967 316.133 C 427.711 317.051 476.955 330.926 514.586 312.311 C 563.967 287.884 573.297 257.849 572.732 250.938 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":370.15,\\\"y\\\":701.327,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":564.777,\\\"y\\\":131.608,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":669.405,\\\"y\\\":435.246,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6987074925455911,\\\"y\\\":0.7154074642192746}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":591.822,\\\"y\\\":176.834,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9993779728571953,\\\"y\\\":-0.03526566840204562}}],\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":318.807,\\\"max\\\":392.028},\\\"y\\\":{\\\"min\\\":239.964,\\\"max\\\":313.185}},{\\\"x\\\":{\\\"min\\\":253.808,\\\"max\\\":355.782},\\\"y\\\":{\\\"min\\\":390.071,\\\"max\\\":492.044}},{\\\"x\\\":{\\\"min\\\":81.467,\\\"max\\\":243.396},\\\"y\\\":{\\\"min\\\":57.222,\\\"max\\\":219.15}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":484.709,\\\"y\\\":522.818,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6987074925455931,\\\"y\\\":0.7154074642192727}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":false,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"knot_3pt\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":50.91776523223947,\\\"max\\\":669.0579908121013},\\\"y\\\":{\\\"min\\\":25.384241628995266,\\\"max\\\":608.757}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"knot_3pt\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"knot_3pt\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 457.480 270.352 C 442.893 215.912 409.765 166.440 360.481 131.825 C 354.761 127.806 348.469 123.787 341.940 120.017 C 328.882 112.478 315.433 106.259 302.676 101.655 C 253.215 83.795 201.688 82.340 153.977 95.124 C 140.030 98.861 126.410 103.814 113.088 110.031 C 114.339 124.394 116.871 138.795 120.640 152.864 C 133.424 200.576 160.449 244.471 200.648 278.377 C 196.306 301.094 194.601 324.512 195.451 347.880 C 161.921 326.601 125.220 291.278 97.457 244.876 C 69.694 198.474 50.871 140.994 53.096 75.399 C 100.492 38.698 159.680 26.181 215.821 27.474 C 271.962 28.766 325.057 43.868 360.268 62.403 C 364.218 64.481 367.924 66.516 371.603 68.639 C 388.525 78.409 404.164 89.532 418.463 101.791 C 466.333 142.831 499.178 196.604 514.822 254.987 C 516.853 262.569 518.595 270.229 520.025 277.846 C 503.113 292.220 484.530 304.070 465.012 313.228 C 463.738 298.571 461.217 284.298 457.480 270.352 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.268 62.403 C 364.218 64.481 367.924 66.516 371.603 68.639 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 371.603 68.639 C 388.525 78.409 404.164 89.532 418.463 101.791 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 520.025 277.846 C 503.113 292.220 484.530 304.070 465.012 313.228 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 255.495 313.268 C 253.633 334.692 254.607 356.886 258.427 378.501 C 318.134 399.519 381.125 401.077 439.508 385.434 C 447.091 383.402 454.595 381.080 461.947 378.595 C 484.192 370.678 505.649 360.684 525.003 347.853 C 553.073 329.242 589.643 295.547 618.649 249.311 C 647.654 203.076 669.095 144.301 666.904 75.534 C 626.000 49.910 579.623 36.651 536.174 31.753 C 492.726 26.854 452.205 30.317 423.014 38.139 C 412.239 41.026 401.622 44.499 391.164 48.547 C 380.705 52.594 370.406 57.217 360.268 62.403 C 364.218 64.481 367.924 66.516 371.603 68.639 C 388.525 78.409 404.164 89.532 418.463 101.791 C 425.239 99.294 431.830 97.455 438.378 95.481 C 495.309 78.318 562.997 92.977 606.885 110.176 C 604.937 136.147 593.388 179.800 574.478 212.552 C 559.743 238.074 541.193 259.980 520.025 277.846 C 503.113 292.220 484.530 304.070 465.012 313.228 C 451.711 319.401 438.091 324.355 424.144 328.092 C 369.704 342.679 310.296 338.727 255.495 313.268 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 302.676 101.655 C 315.433 106.259 328.882 112.478 341.940 120.017 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 341.940 120.017 C 348.469 123.787 354.761 127.806 360.481 131.825 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 255.495 313.268 C 253.633 334.692 254.607 356.886 258.427 378.501 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 461.947 378.595 C 484.192 370.678 505.649 360.684 525.003 347.853 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 195.451 347.880 C 194.601 324.512 196.306 301.094 200.648 278.377 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 200.648 278.377 C 207.006 244.757 218.872 212.178 236.666 181.358 C 254.506 150.457 276.858 123.833 302.676 101.655 C 315.433 106.259 328.882 112.478 341.940 120.017 C 348.469 123.787 354.761 127.806 360.481 131.825 C 331.979 151.648 306.892 178.376 288.044 211.021 C 269.440 243.245 258.868 277.852 255.495 313.268 C 253.633 334.692 254.607 356.886 258.427 378.501 C 259.828 385.452 261.526 392.211 263.151 398.985 C 273.501 442.139 312.641 505.803 360.172 537.553 C 415.546 503.043 451.890 430.858 461.947 378.595 C 484.192 370.678 505.649 360.684 525.003 347.853 C 521.803 385.367 507.858 438.338 481.103 487.809 C 454.349 537.280 413.053 576.320 360.349 606.757 C 309.531 573.948 274.807 540.442 250.832 507.840 C 226.856 475.239 213.630 443.541 205.808 414.350 C 202.863 403.355 200.527 392.198 198.801 381.059 C 197.074 369.920 195.958 358.800 195.451 347.880 C 194.601 324.512 196.306 301.094 200.648 278.377 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":230.455,\\\"max\\\":489.545},\\\"y\\\":{\\\"min\\\":115.013,\\\"max\\\":374.103}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":695.199,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":63.414,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":195.364,\\\"y\\\":348.475,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8685346856331806,\\\"y\\\":0.4956283888681845}},{\\\"point\\\":{\\\"x\\\":525.112,\\\"y\\\":348.475,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8685528772243292,\\\"y\\\":0.495596508729974}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":605.155,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":54.386,\\\"y\\\":77.091,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8660425293174796,\\\"y\\\":-0.49997033653346123}},{\\\"point\\\":{\\\"x\\\":665.062,\\\"y\\\":77.091,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8660425293174787,\\\"y\\\":-0.4999703365334625}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"knot_4pt\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":66.29088940453302,\\\"max\\\":652.2502543572593},\\\"y\\\":{\\\"min\\\":68.58349811385999,\\\"max\\\":653.3311611621826}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"knot_4pt\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"knot_4pt\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 309.863 238.116 C 290.502 240.764 270.639 244.865 250.335 250.793 C 262.587 208.655 282.675 167.289 312.316 135.966 C 322.407 125.300 334.394 115.354 347.708 107.270 C 351.462 104.991 360.172 100.185 360.173 100.184 C 360.201 100.180 507.786 22.068 603.457 119.640 C 664.031 181.418 658.899 287.100 619.805 360.276 C 617.283 355.515 615.056 351.562 612.747 347.697 C 606.038 336.471 598.387 325.795 589.043 316.981 C 611.590 261.931 601.255 190.320 565.856 155.892 C 531.162 122.151 462.013 111.809 407.767 135.875 C 400.686 139.017 393.472 142.032 386.784 145.841 C 377.215 151.293 359.994 165.266 359.991 165.268 C 359.985 165.276 321.663 210.412 309.863 238.116 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 619.805 360.276 C 617.283 355.515 615.056 351.562 612.747 347.697 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 612.747 347.697 C 606.038 336.471 598.387 325.795 589.043 316.981 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 565.856 567.960 C 531.438 601.916 461.762 605.953 407.287 584.246 C 396.967 595.079 385.269 604.783 372.320 612.736 C 368.567 615.040 364.722 617.264 360.034 619.798 C 431.885 657.930 546.137 655.980 595.553 609.607 C 668.282 541.357 660.027 436.163 619.805 360.276 C 617.283 355.515 615.056 351.562 612.747 347.697 C 606.038 336.471 598.387 325.795 589.043 316.981 C 542.399 272.978 485.373 254.553 469.619 250.486 C 475.492 270.659 479.513 290.742 481.983 310.061 C 511.655 322.902 538.680 340.835 558.448 364.517 C 564.533 371.702 569.674 378.982 574.176 386.773 C 578.069 393.513 581.068 400.854 584.083 407.456 C 609.402 462.892 600.696 533.587 565.856 567.960 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.034 619.798 C 364.722 617.264 368.567 615.040 372.320 612.736 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 372.320 612.736 C 385.269 604.783 396.967 595.079 407.287 584.246 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 153.789 567.960 C 118.994 533.547 111.710 462.851 135.916 407.187 C 125.053 396.885 115.302 385.215 107.281 372.309 C 105.013 368.660 102.823 364.921 100.113 360.077 C 60.035 433.224 50.200 536.857 115.749 602.832 C 181.679 669.191 286.159 660.006 360.034 619.798 C 364.722 617.264 368.567 615.040 372.320 612.736 C 385.269 604.783 396.967 595.079 407.287 584.246 C 436.767 553.302 456.974 511.999 469.249 469.551 C 449.216 475.394 429.183 479.446 409.900 481.938 C 397.841 509.593 381.355 535.017 359.947 554.328 C 351.547 562.065 342.777 568.590 333.243 574.165 C 327.146 577.730 320.618 580.736 313.119 584.158 C 259.692 608.539 188.631 602.418 153.789 567.960 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 312.316 135.966 C 322.407 125.300 334.394 115.354 347.708 107.270 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 347.708 107.270 C 351.462 104.991 360.172 100.185 360.173 100.184 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 100.113 360.077 C 102.823 364.921 105.013 368.660 107.281 372.309 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 107.281 372.309 C 115.302 385.215 125.053 396.885 135.916 407.187 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 153.789 155.892 C 188.187 121.702 258.976 109.230 312.316 135.966 C 322.407 125.300 334.394 115.354 347.708 107.270 C 351.462 104.991 360.172 100.185 360.173 100.184 C 320.619 67.416 183.474 49.204 113.490 121.898 C 50.835 186.981 60.687 288.536 100.113 360.077 C 102.823 364.921 105.013 368.660 107.281 372.309 C 115.302 385.215 125.053 396.885 135.916 407.187 C 166.850 436.526 207.952 456.728 250.803 469.390 C 245.014 449.922 240.829 429.848 238.217 410.471 C 210.599 398.922 184.691 382.840 164.325 361.277 C 156.143 352.616 148.491 342.399 142.184 331.106 C 139.123 325.623 137.021 319.593 134.294 314.261 C 107.894 262.650 119.419 190.055 153.789 155.892 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 407.767 135.875 C 400.686 139.017 393.472 142.032 386.784 145.841 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 386.784 145.841 C 377.215 151.293 359.994 165.266 359.991 165.268 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 481.983 310.061 C 479.513 290.742 475.492 270.659 469.619 250.486 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 469.619 250.486 C 457.504 208.512 437.437 167.140 407.767 135.875 C 400.686 139.017 393.472 142.032 386.784 145.841 C 377.215 151.293 359.994 165.266 359.991 165.268 C 369.606 176.596 398.450 210.580 409.984 238.019 C 417.580 255.757 423.246 274.283 427.140 292.791 C 432.256 316.015 434.544 339.121 434.544 360.003 C 434.544 381.070 432.176 404.333 426.759 428.594 C 445.123 425.143 463.612 420.172 481.466 413.385 C 484.045 395.583 485.350 377.118 485.350 360.003 C 485.350 344.722 484.324 328.342 481.983 310.061 C 479.513 290.742 475.492 270.659 469.619 250.486 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 574.176 386.773 C 578.069 393.513 581.068 400.854 584.083 407.456 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 469.249 469.551 C 449.216 475.394 429.183 479.446 409.900 481.938 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 426.759 428.594 C 445.123 425.143 463.612 420.172 481.466 413.385 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 558.448 364.517 C 564.533 371.702 569.674 378.982 574.176 386.773 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 574.176 386.773 C 578.069 393.513 581.068 400.854 584.083 407.456 C 552.574 437.158 511.238 457.304 469.249 469.551 C 449.216 475.394 429.183 479.446 409.900 481.938 C 391.653 484.299 375.295 485.339 360.014 485.339 C 344.325 485.339 327.516 484.234 310.217 481.921 C 302.598 464.119 296.896 445.599 292.914 427.125 C 316.339 432.058 339.274 434.352 360.014 434.533 C 380.845 434.716 404.017 432.870 426.759 428.594 C 445.123 425.143 463.612 420.172 481.466 413.385 C 510.303 402.334 537.264 386.461 558.448 364.517 C 564.533 371.702 569.674 378.982 574.176 386.773 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 333.243 574.165 C 327.146 577.730 320.618 580.736 313.119 584.158 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 250.803 469.390 C 245.014 449.922 240.829 429.848 238.217 410.471 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 292.914 427.125 C 296.896 445.599 302.598 464.119 310.217 481.921 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.947 554.328 C 351.547 562.065 342.777 568.590 333.243 574.165 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 333.243 574.165 C 327.146 577.730 320.618 580.736 313.119 584.158 C 283.730 553.028 263.450 511.922 250.803 469.390 C 245.014 449.922 240.829 429.848 238.217 410.471 C 235.792 392.485 234.678 375.691 234.678 360.003 C 234.678 344.722 235.710 328.351 238.022 310.362 C 255.822 302.656 274.357 296.912 292.703 292.999 C 287.766 316.070 285.483 339.147 285.483 360.003 C 285.483 380.885 287.810 403.925 292.914 427.125 C 296.896 445.599 302.598 464.119 310.217 481.921 C 321.715 508.991 338.155 534.586 359.947 554.328 C 351.547 562.065 342.777 568.590 333.243 574.165 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 134.294 314.261 C 137.021 319.593 139.123 325.623 142.184 331.106 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 142.184 331.106 C 148.491 342.399 156.143 352.616 164.325 361.277 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 238.022 310.362 C 255.822 302.656 274.357 296.912 292.703 292.999 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 427.140 292.791 C 423.246 274.283 417.580 255.757 409.984 238.019 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 309.863 238.116 C 290.502 240.764 270.639 244.865 250.335 250.793 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 250.335 250.793 C 207.584 263.274 165.645 283.935 134.294 314.261 C 137.021 319.593 139.123 325.623 142.184 331.106 C 148.491 342.399 156.143 352.616 164.325 361.277 C 184.536 338.882 210.445 322.109 238.022 310.362 C 255.822 302.656 274.357 296.912 292.703 292.999 C 316.068 287.785 339.132 285.473 360.014 285.473 C 381.081 285.473 404.376 287.823 427.140 292.791 C 423.246 274.283 417.580 255.757 409.984 238.019 C 393.509 235.804 376.144 234.667 360.014 234.667 C 343.884 234.667 326.561 235.830 309.863 238.116 C 290.502 240.764 270.639 244.865 250.335 250.793 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":183.076,\\\"max\\\":535.831},\\\"y\\\":{\\\"min\\\":183.739,\\\"max\\\":536.495}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":359.453,\\\"y\\\":700.713,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":359.453,\\\"y\\\":100.663,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":102.224,\\\"y\\\":361.095,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873384758834,\\\"y\\\":0.005032185203186421}},{\\\"point\\\":{\\\"x\\\":619.826,\\\"y\\\":361.095,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873384758833,\\\"y\\\":0.00503218520318645}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":601.221,\\\"y\\\":604.414,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128949235519685,\\\"y\\\":0.7012708663375606}},{\\\"point\\\":{\\\"x\\\":116.821,\\\"y\\\":604.464,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987294009752026,\\\"y\\\":0.7153860665492686}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":602.749,\\\"y\\\":117.888,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314567850888928,\\\"y\\\":-0.775411070700696}},{\\\"point\\\":{\\\"x\\\":116.984,\\\"y\\\":117.971,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817169768754568,\\\"y\\\":-0.7316159945215712}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.453,\\\"y\\\":618.561,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"ladder\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":128.27175093820705,\\\"max\\\":591.7282490617929},\\\"y\\\":{\\\"min\\\":18.152295309283048,\\\"max\\\":701.8477009135637}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"ladder\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"ladder\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 344.778 31.587 C 344.775 31.586 334.291 15.545 318.021 21.463 C 303.134 26.878 304.871 44.093 304.869 44.095 C 304.894 44.154 549.734 633.651 549.758 633.710 C 549.761 633.711 560.245 649.752 576.515 643.835 C 591.402 638.420 589.665 621.204 589.667 621.202 C 589.642 621.143 344.802 31.646 344.778 31.587 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 549.305 578.321 C 543.412 561.837 526.682 566.904 526.680 566.902 C 526.664 566.907 368.464 616.490 368.449 616.495 C 368.450 616.498 382.052 649.248 382.053 649.251 C 382.069 649.246 540.269 599.664 540.284 599.659 C 540.285 599.657 554.691 593.390 549.305 578.321 M 508.490 480.052 C 502.597 463.567 485.867 468.635 485.865 468.633 C 485.849 468.638 327.649 518.220 327.634 518.225 C 327.635 518.229 341.237 550.979 341.238 550.982 C 341.254 550.977 499.454 501.395 499.469 501.390 C 499.470 501.388 513.877 495.121 508.490 480.052 M 467.675 381.783 C 461.782 365.298 445.052 370.365 445.050 370.364 C 445.034 370.369 286.834 419.952 286.819 419.957 C 286.820 419.960 300.422 452.709 300.424 452.713 C 300.439 452.708 458.639 403.125 458.655 403.120 C 458.656 403.118 473.062 396.852 467.675 381.783 M 426.860 283.514 C 420.967 267.029 404.238 272.096 404.235 272.095 C 404.220 272.100 246.020 321.682 246.004 321.687 C 246.005 321.691 259.607 354.440 259.609 354.443 C 259.624 354.438 417.824 304.856 417.840 304.851 C 417.841 304.849 432.247 298.582 426.860 283.514 M 386.046 185.245 C 380.153 168.760 363.423 173.827 363.420 173.826 C 363.404 173.831 205.205 223.413 205.189 223.418 C 205.190 223.421 218.792 256.171 218.794 256.175 C 218.809 256.170 377.009 206.587 377.025 206.582 C 377.026 206.580 391.432 200.314 386.046 185.245 M 345.231 86.976 C 339.338 70.491 322.608 75.558 322.605 75.557 C 322.589 75.562 164.390 125.144 164.374 125.149 C 164.375 125.152 177.977 157.902 177.979 157.905 C 177.994 157.900 336.194 108.318 336.210 108.313 C 336.211 108.311 350.617 102.045 345.231 86.976 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 170.242 86.290 C 170.239 86.289 159.755 70.247 143.485 76.165 C 128.598 81.580 130.335 98.795 130.333 98.797 C 130.358 98.856 375.198 688.354 375.222 688.412 C 375.225 688.414 385.709 704.455 401.979 698.537 C 416.866 693.122 415.129 675.907 415.131 675.905 C 415.106 675.846 170.266 86.348 170.242 86.290 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":694.407,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":255.525,\\\"y\\\":99.968,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.27007212891184773,\\\"y\\\":-0.9628400932579732}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":467.37,\\\"y\\\":332.825,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9266472453667365,\\\"y\\\":-0.37593201866060755}},{\\\"point\\\":{\\\"x\\\":257.942,\\\"y\\\":395.531,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9228049882200857,\\\"y\\\":0.3852673795121092}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":577.799,\\\"y\\\":633.04,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9261709284207758,\\\"y\\\":0.37710397949133106}},{\\\"point\\\":{\\\"x\\\":393.572,\\\"y\\\":687.685,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.37384093164704446,\\\"y\\\":0.9274928343794737}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":327.19,\\\"y\\\":29.345,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.28876765724251,\\\"y\\\":-0.9573992062513276}},{\\\"point\\\":{\\\"x\\\":142.524,\\\"y\\\":89.054,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.908887076806783,\\\"y\\\":-0.41704230194744124}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":470.501,\\\"y\\\":622.032,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.38064377930345644,\\\"y\\\":0.9247217491102833}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"lamb_head\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":1.9986348114116232,\\\"max\\\":718.0013651885882},\\\"y\\\":{\\\"min\\\":131.56683394383313,\\\"max\\\":589.357}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"lamb_head2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"lamb_head2_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.301 587.357 C 368.386 587.357 392.221 585.924 403.327 575.477 C 411.675 567.625 415.206 543.334 415.207 543.331 C 415.218 543.317 499.924 499.084 517.935 408.457 C 534.633 324.437 506.649 277.960 503.983 263.112 C 509.961 257.100 515.982 253.841 523.525 251.920 C 545.233 250.793 571.805 260.007 592.710 255.414 C 634.562 246.220 693.999 218.477 712.907 186.231 C 735.969 146.901 624.013 129.099 579.431 134.518 C 545.808 138.604 489.292 193.912 489.283 193.918 C 489.277 193.915 432.703 146.874 361.398 147.096 C 292.908 147.311 230.723 193.915 230.718 193.918 C 230.709 193.912 174.193 138.604 140.569 134.518 C 95.987 129.099 -15.969 146.901 7.093 186.231 C 26.001 218.478 85.438 246.220 127.291 255.414 C 148.196 260.007 174.767 250.793 196.475 251.920 C 204.018 253.841 210.040 257.100 216.017 263.112 C 213.352 277.960 185.368 324.437 202.066 408.457 C 220.077 499.084 304.783 543.317 304.793 543.331 C 304.794 543.334 305.465 565.757 316.673 575.477 C 327.701 585.040 346.718 587.357 359.301 587.357 M 244.090 322.502 C 258.606 330.330 302.241 326.002 302.242 325.996 C 302.239 325.991 297.969 290.250 268.184 279.174 C 240.322 268.815 215.348 291.053 215.343 291.055 C 215.346 291.058 232.712 316.366 244.090 322.502 M 475.910 322.502 C 461.394 330.330 417.759 326.002 417.758 325.996 C 417.761 325.991 422.031 290.250 451.816 279.174 C 479.678 268.814 504.652 291.053 504.657 291.055 C 504.654 291.058 487.288 316.366 475.910 322.502 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 224.973 247.316 C 225.755 239.415 227.922 228.162 227.922 228.160 C 227.913 228.154 197.519 174.682 140.569 159.675 C 86.212 145.352 56.156 161.527 35.745 175.049 M 500.618 247.316 C 499.836 239.415 497.669 228.162 497.669 228.160 C 497.678 228.154 528.072 174.682 585.022 159.675 C 639.379 145.352 669.435 161.527 689.846 175.049 M 347.393 478.286 C 347.392 478.286 342.115 479.905 337.321 477.816 C 333.128 475.989 330.961 471.709 330.960 471.708 C 330.962 471.708 343.053 473.432 346.333 474.997 C 350.047 476.769 351.444 486.273 360.115 486.273 C 368.785 486.273 370.182 476.769 373.896 474.997 C 377.176 473.432 389.267 471.708 389.269 471.708 C 389.268 471.709 384.913 476.903 381.318 478.286 C 378.174 479.495 375.310 478.599 372.306 478.755 M 303.727 328.290 C 303.728 328.304 309.875 352.308 322.479 474.751 C 324.027 489.787 358.701 497.301 358.705 497.303 C 358.705 497.307 360.303 533.529 358.603 534.945 C 355.927 537.174 320.308 537.837 301.998 517.474 C 295.232 509.950 295.709 496.512 295.708 496.509 M 416.274 328.290 C 416.273 328.304 415.698 351.042 398.220 475.221 C 396.057 490.587 360.118 497.301 360.115 497.303 C 360.115 497.307 360.185 533.971 361.398 534.945 C 363.305 536.478 399.692 537.837 418.003 517.474 C 424.768 509.950 424.292 496.512 424.292 496.509 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 244.090 322.502 C 258.606 330.330 302.241 326.002 302.242 325.996 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 302.242 325.996 C 302.239 325.991 297.969 290.250 268.184 279.174 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 268.184 279.174 C 240.322 268.815 215.348 291.053 215.343 291.055 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 215.343 291.055 C 215.346 291.058 232.712 316.366 244.090 322.502 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 475.910 322.502 C 461.394 330.330 417.759 326.002 417.758 325.996 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 417.758 325.996 C 417.761 325.991 422.031 290.250 451.816 279.174 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 451.816 279.174 C 479.678 268.814 504.652 291.053 504.657 291.055 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 504.657 291.055 C 504.654 291.058 487.288 316.366 475.910 322.502 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 244.090 322.502 C 258.606 330.330 302.241 326.002 302.242 325.996 C 302.239 325.991 297.969 290.250 268.184 279.174 C 240.322 268.815 215.348 291.053 215.343 291.055 C 215.346 291.058 232.712 316.366 244.090 322.502 M 475.910 322.502 C 461.394 330.330 417.759 326.002 417.758 325.996 C 417.761 325.991 422.031 290.250 451.816 279.174 C 479.678 268.814 504.652 291.053 504.657 291.055 C 504.654 291.058 487.288 316.366 475.910 322.502 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":299.158,\\\"max\\\":420.842},\\\"y\\\":{\\\"min\\\":166.06,\\\"max\\\":287.743}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":647.785,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":147.736,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":198.796,\\\"y\\\":360.936,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999869423966429,\\\"y\\\":0.00511028729265185}},{\\\"point\\\":{\\\"x\\\":523.229,\\\"y\\\":360.936,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999869423966429,\\\"y\\\":0.005110287292651861}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":455.342,\\\"y\\\":513.543,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128965506064748,\\\"y\\\":0.7012692123096449}},{\\\"point\\\":{\\\"x\\\":264.812,\\\"y\\\":513.591,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986883991125071,\\\"y\\\":0.7154261114507926}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":463.651,\\\"y\\\":175.162,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.631445428603132,\\\"y\\\":-0.7754203187279831}},{\\\"point\\\":{\\\"x\\\":260.076,\\\"y\\\":175.241,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817454199674203,\\\"y\\\":-0.7315894903246256}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":586.755,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"leg\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":127.57730249524988,\\\"max\\\":555.6833939019136},\\\"y\\\":{\\\"min\\\":35.68740384101428,\\\"max\\\":702.2798977868451}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"leg\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"leg\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 229.165 693.310 C 232.557 692.550 233.710 696.971 248.325 697.707 C 261.906 698.391 311.189 689.867 324.783 689.536 C 335.650 689.271 377.453 699.366 386.162 692.861 C 390.967 689.272 397.545 666.652 396.886 660.692 C 396.099 653.579 378.506 632.843 375.439 626.378 C 356.433 586.308 340.314 468.549 314.346 417.602 C 300.327 390.096 247.824 364.414 248.800 353.270 C 250.547 333.341 450.913 264.419 491.568 240.113 C 524.011 220.716 571.664 165.500 546.723 107.810 C 527.773 63.977 470.724 15.419 398.908 48.738 C 360.701 66.464 244.626 170.755 217.241 202.757 C 198.305 224.885 134.960 313.673 129.846 342.345 C 128.594 349.370 131.973 375.808 134.702 382.401 C 159.783 443.016 324.762 590.827 319.014 627.084 C 317.439 637.022 275.806 645.391 266.064 647.907 C 257.749 650.054 226.517 653.939 217.943 654.424 C 211.058 653.690 195.944 651.099 180.988 641.488 C 176.095 638.344 162.775 645.259 171.013 658.113 C 175.154 664.575 196.280 662.103 196.283 662.103 C 196.281 662.104 172.434 663.341 174.338 670.083 C 177.654 681.829 201.600 672.078 201.603 672.078 C 201.601 672.079 175.691 674.036 181.653 683.383 C 188.242 693.712 210.245 678.729 210.248 678.728 C 210.246 678.729 188.395 685.049 193.623 692.028 C 199.224 699.505 219.791 687.154 219.794 687.154 C 219.792 687.154 202.251 694.475 204.938 697.234 C 213.213 705.733 226.974 693.800 229.165 693.310 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":428.739,\\\"y\\\":155.344,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6753245261508284,\\\"y\\\":0.7375207009834768}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":439.43,\\\"y\\\":36.042,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":125.707,\\\"y\\\":350.922,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871527828806,\\\"y\\\":0.0050689514880203545}},{\\\"point\\\":{\\\"x\\\":354.547,\\\"y\\\":354.614,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871547863848,\\\"y\\\":0.005068556227472938}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":385.86,\\\"y\\\":694.922,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5860410322104739,\\\"y\\\":0.8102813761686013}},{\\\"point\\\":{\\\"x\\\":209.8,\\\"y\\\":696.107,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5860410322104739,\\\"y\\\":0.8102813761686013}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":350.426,\\\"y\\\":76.84,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7727781591759261,\\\"y\\\":-0.6346762298216841}},{\\\"point\\\":{\\\"x\\\":537.421,\\\"y\\\":90.714,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7932497595550108,\\\"y\\\":-0.608896394278959}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":530.651,\\\"y\\\":204.717,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7071363455967201,\\\"y\\\":0.7070772155402237}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"leg_crouch\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":53.82187553546423,\\\"max\\\":645.9332474442651},\\\"y\\\":{\\\"min\\\":15.320142216916981,\\\"max\\\":695.860981674396}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"leg_crouch\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"leg_crouch\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 640.227 117.265 C 615.441 18.005 519.789 7.119 449.471 23.633 C 193.283 83.797 184.983 178.888 81.079 232.529 C 42.787 252.298 52.737 332.022 79.773 346.309 C 123.482 369.407 162.177 422.063 226.408 471.149 C 287.116 517.542 366.735 559.985 376.593 573.978 C 391.527 595.174 310.985 603.642 296.665 604.730 C 288.205 605.373 234.399 616.544 223.744 615.625 C 175.954 611.502 176.863 598.050 162.048 606.763 C 149.245 614.292 173.391 642.187 183.549 639.001 C 205.512 632.112 225.044 637.146 225.048 637.146 C 225.044 637.147 186.439 633.186 185.126 644.178 C 183.912 654.342 201.532 657.888 207.257 656.023 C 220.982 651.550 227.241 651.887 227.243 651.887 C 227.240 651.888 194.586 657.915 197.083 663.823 C 202.180 675.881 220.744 673.167 225.198 670.061 C 233.913 663.985 245.499 663.440 245.501 663.439 C 245.499 663.441 217.275 672.720 221.477 678.293 C 228.640 687.793 237.350 685.654 242.990 681.932 C 255.665 673.566 262.453 674.993 262.455 674.992 C 262.453 674.993 233.219 684.296 240.738 690.660 C 244.868 694.156 253.620 694.454 255.934 693.146 C 263.255 689.008 278.106 687.194 293.231 689.297 C 343.224 696.248 365.702 687.232 395.910 687.481 C 423.332 687.707 454.744 694.141 489.080 690.617 C 526.592 686.768 521.539 643.015 513.313 627.519 C 508.051 617.606 483.545 594.180 476.139 576.921 C 443.906 501.804 439.466 462.464 371.023 370.803 C 343.342 333.733 255.261 317.831 255.250 317.826 C 255.269 317.820 361.626 313.840 451.383 261.273 C 584.052 319.346 662.301 205.660 640.227 117.265 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":400.321,\\\"max\\\":579.723},\\\"y\\\":{\\\"min\\\":57.636,\\\"max\\\":237.038}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":504.926,\\\"y\\\":135.148,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7071282911194935,\\\"y\\\":0.7070852705992573}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":484.513,\\\"y\\\":15.848,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":58.345,\\\"y\\\":294.822,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873200064072,\\\"y\\\":0.005035854088752079}},{\\\"point\\\":{\\\"x\\\":518.411,\\\"y\\\":651.832,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873181281341,\\\"y\\\":0.005036227050266362}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":571.736,\\\"y\\\":265.431,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129335762692828,\\\"y\\\":0.7012315707581133}},{\\\"point\\\":{\\\"x\\\":246.139,\\\"y\\\":688.601,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698688399112506,\\\"y\\\":0.7154261114507937}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":573.001,\\\"y\\\":34.526,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314454286031345,\\\"y\\\":-0.7754203187279811}},{\\\"point\\\":{\\\"x\\\":165.419,\\\"y\\\":607.583,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817454199674235,\\\"y\\\":-0.7315894903246228}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":641.753,\\\"y\\\":144.12,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"leg_hoof\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":179.522,\\\"max\\\":542.8386173936267},\\\"y\\\":{\\\"min\\\":24.711216587980402,\\\"max\\\":702.517}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"leg_hoof\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"leg_hoof\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 262.448 76.190 C 169.494 168.080 193.768 278.851 211.734 323.283 C 241.223 396.212 358.661 413.649 369.270 448.448 C 375.479 468.815 355.227 546.789 341.215 562.822 C 330.342 575.264 270.288 588.538 257.053 598.429 C 249.890 603.782 224.628 635.767 224.625 635.770 C 224.620 635.777 181.527 697.692 181.522 697.698 C 181.526 697.699 223.554 700.517 223.558 700.517 C 223.567 700.517 309.916 697.699 309.924 697.698 C 309.926 697.693 324.225 643.236 324.227 643.231 C 324.227 643.229 325.669 626.664 328.267 624.326 C 334.214 618.973 366.985 619.613 372.507 625.405 C 401.658 655.982 405.975 530.160 416.746 486.213 C 422.126 464.260 437.431 415.166 466.380 398.813 C 482.836 389.518 404.583 391.842 393.008 324.361 C 373.609 211.278 536.845 251.600 540.832 109.639 C 541.429 88.374 501.552 39.689 453.433 30.871 C 395.511 20.256 311.094 28.100 262.448 76.190 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 255.128 640.832 C 244.605 660.727 234.081 680.622 223.558 700.517 M 224.625 635.770 C 234.792 637.458 255.125 640.831 255.128 640.832 C 255.135 640.832 301.194 642.431 324.227 643.231 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":287.715,\\\"max\\\":445.675},\\\"y\\\":{\\\"min\\\":67.432,\\\"max\\\":225.391}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":393.066,\\\"y\\\":27.348,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":260.543,\\\"y\\\":77.092,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7295033267832964,\\\"y\\\":-0.6839772629350358}},{\\\"point\\\":{\\\"x\\\":529.286,\\\"y\\\":80.376,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6425583644962964,\\\"y\\\":-0.7662367442349945}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":209.953,\\\"y\\\":319.649,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8636009731486428,\\\"y\\\":0.5041759208616741}},{\\\"point\\\":{\\\"x\\\":465.164,\\\"y\\\":396.139,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9673196842576036,\\\"y\\\":-0.2535599109634052}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":267.554,\\\"y\\\":589.29,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.3941511560744527,\\\"y\\\":-0.9190456279016685}},{\\\"point\\\":{\\\"x\\\":385.08,\\\"y\\\":626.265,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5004342649586104,\\\"y\\\":0.8657745355780194}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":367.147,\\\"y\\\":153.724,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987112801562076,\\\"y\\\":0.715403765004402}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":539.29,\\\"y\\\":106.358,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"leg_stand\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":243.2623615072874,\\\"max\\\":465.38953899282956},\\\"y\\\":{\\\"min\\\":13.002510549420778,\\\"max\\\":693.0738781287013}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"leg_stand\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"leg_stand\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 420.848 180.332 C 427.473 176.319 474.052 164.103 461.139 88.009 C 448.829 15.471 376.960 -4.363 322.946 34.582 C 281.169 64.704 277.858 126.194 277.839 148.422 C 277.702 312.789 332.254 355.998 332.833 379.911 C 333.286 398.624 338.529 421.178 349.348 437.199 C 356.553 447.867 363.752 537.610 361.096 618.430 C 360.404 639.470 319.381 640.875 309.424 645.962 C 305.700 647.865 280.642 657.987 275.441 658.852 C 253.021 662.582 251.779 657.159 246.216 663.107 C 241.409 668.247 256.126 677.681 260.314 674.870 C 269.369 668.792 278.921 668.457 278.923 668.457 C 278.921 668.457 260.847 671.840 261.726 677.011 C 262.538 681.793 271.021 681.039 273.372 679.423 C 279.008 675.548 281.898 674.861 281.899 674.860 C 281.898 674.861 267.868 681.983 269.796 684.333 C 273.731 689.128 281.802 685.403 283.409 683.393 C 286.553 679.462 291.745 677.659 291.746 677.659 C 291.745 677.660 280.166 685.665 282.823 687.633 C 287.353 690.989 291.024 688.847 293.087 686.399 C 297.724 680.896 301.000 680.633 301.001 680.633 C 301.000 680.634 288.965 688.785 293.236 690.668 C 295.582 691.702 299.475 690.524 300.474 689.757 C 302.190 688.441 306.187 688.628 310.089 689.062 C 334.519 691.782 345.053 683.627 359.760 683.230 C 373.306 682.864 388.823 688.245 405.738 686.057 C 423.293 683.785 417.788 663.509 415.076 655.733 C 413.641 651.617 411.841 643.350 408.950 632.129 C 400.956 601.105 429.059 555.099 431.967 479.504 C 434.267 419.693 404.753 385.400 404.743 375.510 C 404.731 364.031 430.034 335.974 430.348 253.286 C 430.532 204.594 419.991 180.851 420.848 180.332 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":317.521,\\\"max\\\":428.726},\\\"y\\\":{\\\"min\\\":54.047,\\\"max\\\":165.252}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":375.233,\\\"y\\\":108.659,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7071282911194938,\\\"y\\\":0.707085270599257}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":374.133,\\\"y\\\":18.151,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":325.658,\\\"y\\\":360.935,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999869423966429,\\\"y\\\":0.005110287292651839}},{\\\"point\\\":{\\\"x\\\":416.55,\\\"y\\\":360.935,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999869443305632,\\\"y\\\":0.005109908846835945}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":282.596,\\\"y\\\":141.593,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987254201015092,\\\"y\\\":0.7153899547127912}},{\\\"point\\\":{\\\"x\\\":456.654,\\\"y\\\":141.593,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.698688399112506,\\\"y\\\":0.7154261114507936}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":441.641,\\\"y\\\":47.451,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314193105756881,\\\"y\\\":-0.7754415866021906}},{\\\"point\\\":{\\\"x\\\":308.483,\\\"y\\\":47.537,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817297490845086,\\\"y\\\":-0.7316040932178914}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":680.359,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"lightning\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":162.964,\\\"max\\\":557.036},\\\"y\\\":{\\\"min\\\":40.66,\\\"max\\\":713.77}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"lightning\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"lightning\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 367.454 42.660 C 367.437 42.695 192.844 395.962 192.826 395.997 C 192.838 395.997 313.552 395.997 313.564 395.997 C 313.549 396.029 164.979 711.739 164.964 711.770 C 164.996 711.730 477.610 312.452 477.641 312.412 C 477.628 312.411 344.535 306.221 344.521 306.220 C 344.542 306.194 555.011 43.098 555.036 43.075 C 555.018 43.075 367.473 42.660 367.454 42.660 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":417.01,\\\"y\\\":106.575,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.4200454967041982,\\\"y\\\":0.9075030472117013}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":455.392,\\\"y\\\":39.347,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":234.935,\\\"y\\\":311.104,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8841281581425834,\\\"y\\\":-0.46724447560073185}},{\\\"point\\\":{\\\"x\\\":465.308,\\\"y\\\":316.775,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9378452104224647,\\\"y\\\":-0.3470538305330211}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":202.68,\\\"y\\\":386.62,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698688399112506,\\\"y\\\":0.7154261114507937}},{\\\"point\\\":{\\\"x\\\":409.435,\\\"y\\\":395.382,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128965506064706,\\\"y\\\":0.7012692123096491}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":369.341,\\\"y\\\":44.279,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.681668837288246,\\\"y\\\":-0.731660847845565}},{\\\"point\\\":{\\\"x\\\":542.079,\\\"y\\\":51.051,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7961265155756119,\\\"y\\\":-0.6051302101179836}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":439.926,\\\"y\\\":65.771,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.4020746983099229,\\\"y\\\":-0.915606868136639}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"lion_leg\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":149.972,\\\"max\\\":662.201506272974},\\\"y\\\":{\\\"min\\\":26.97386473974875,\\\"max\\\":690.296}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"lion_leg\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"lion_leg\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 151.972 669.964 C 151.976 669.959 165.005 633.294 188.410 618.173 C 221.922 596.523 260.136 606.992 260.144 606.991 C 260.145 606.995 270.542 651.825 270.543 651.830 C 270.536 651.830 230.857 651.552 200.325 655.715 C 164.811 660.558 151.977 669.963 151.972 669.964 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 382.985 645.308 C 366.701 588.152 311.226 550.952 261.644 563.500 C 195.987 580.117 196.059 628.205 199.272 656.177 C 226.426 657.841 223.491 657.029 269.623 657.785 C 275.083 657.576 388.141 663.406 382.985 645.308 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 197.701 678.560 C 197.705 678.554 210.988 641.165 234.410 624.463 C 270.467 598.750 305.990 612.380 305.997 612.379 C 305.998 612.383 317.966 654.279 317.967 654.283 C 317.959 654.284 274.783 656.848 242.205 664.687 C 208.895 672.701 197.706 678.558 197.701 678.560 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 455.421 615.560 C 377.107 585.244 356.837 534.528 300.939 558.285 C 244.168 582.413 242.731 644.496 250.701 662.758 C 279.045 660.565 283.268 644.505 348.784 665.198 C 409.103 684.248 496.486 631.457 455.421 615.560 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 253.801 688.296 C 253.805 688.290 265.237 648.919 288.597 630.760 C 324.038 603.208 359.937 617.335 359.944 617.333 C 359.945 617.338 367.319 660.833 367.320 660.837 C 367.313 660.838 334.638 663.129 297.146 670.830 C 273.473 675.693 253.805 688.294 253.801 688.296 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 517.438 50.691 C 537.333 62.128 590.503 115.156 581.295 194.137 C 573.765 258.733 475.904 290.251 485.973 309.820 C 503.873 344.612 681.344 384.906 658.108 402.366 C 552.409 481.797 601.135 596.666 515.309 660.570 C 506.066 667.453 482.979 667.046 482.977 667.048 C 482.967 667.053 309.677 670.668 309.573 670.529 C 299.885 657.523 297.425 538.475 426.480 586.549 C 449.964 595.297 486.069 506.515 480.170 464.622 C 474.352 423.306 274.743 404.041 221.291 341.286 C 158.305 267.338 157.497 154.225 262.937 82.156 C 326.450 38.744 438.291 5.186 517.438 50.691 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 423.747 623.552 C 423.745 623.556 420.533 667.320 398.803 667.676 C 380.148 667.981 374.891 668.005 374.889 668.005 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 365.602 296.951 C 380.648 324.524 382.206 333.380 452.762 368.579 C 496.903 390.601 599.541 405.778 598.606 415.764 C 597.359 429.098 561.244 474.842 551.422 504.772 C 538.400 544.450 538.066 597.570 506.381 619.518 C 485.111 634.252 423.815 624.879 423.807 624.880 M 534.263 149.812 C 537.428 190.117 477.212 284.603 365.602 296.951 C 307.099 303.424 268.321 273.139 268.311 273.137 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":266.746,\\\"max\\\":481.571},\\\"y\\\":{\\\"min\\\":85.26,\\\"max\\\":300.084}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":379.04,\\\"y\\\":171.962,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.707106781186548,\\\"y\\\":0.7071067811865468}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":392.179,\\\"y\\\":32.561,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":179.157,\\\"y\\\":229.648,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873200064072,\\\"y\\\":0.005035854088754179}},{\\\"point\\\":{\\\"x\\\":657.732,\\\"y\\\":398.263,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999869443305632,\\\"y\\\":0.005109908846835923}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":507.877,\\\"y\\\":662.43,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128965506064706,\\\"y\\\":0.7012692123096492}},{\\\"point\\\":{\\\"x\\\":214.821,\\\"y\\\":662.478,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986883991125018,\\\"y\\\":0.7154261114507978}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":528.478,\\\"y\\\":59.967,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314454286031346,\\\"y\\\":-0.7754203187279811}},{\\\"point\\\":{\\\"x\\\":274.689,\\\"y\\\":72.918,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817454199674218,\\\"y\\\":-0.7315894903246244}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":560.054,\\\"y\\\":107.492,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9990082435881431,\\\"y\\\":0.04452560210635284}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"lion_tail\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":88.00412143712728,\\\"max\\\":640.6413449865353},\\\"y\\\":{\\\"min\\\":68.75320000425721,\\\"max\\\":682.399}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"lion_tail\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"lion_tail\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 99.676 139.726 C 299.925 99.676 339.975 177.840 339.975 239.851 C 339.975 343.202 219.826 377.981 219.826 480.149 C 219.826 605.447 319.950 680.399 440.100 680.399 C 580.274 680.399 660.374 500.174 600.299 400.050 C 596.122 393.088 666.849 355.975 625.762 282.050 C 604.416 243.645 595.113 211.525 595.110 211.518 C 595.109 211.526 570.276 268.418 587.821 295.400 C 592.192 302.121 579.665 323.496 579.664 323.498 C 579.663 323.490 553.135 291.184 566.645 240.208 C 576.939 201.370 510.164 169.049 510.159 169.042 C 510.160 169.050 546.195 210.187 524.509 249.845 C 507.697 280.590 521.743 328.640 521.743 328.647 C 521.741 328.644 503.482 322.533 501.921 297.273 C 499.670 260.852 463.825 237.266 463.821 237.260 C 463.822 237.268 480.874 275.063 465.318 320.944 C 439.146 398.134 553.726 410.849 560.249 420.075 C 605.192 483.633 548.453 620.324 440.100 620.324 C 339.975 620.324 279.805 549.546 279.900 480.149 C 280.015 396.779 400.050 357.111 400.050 239.851 C 400.050 142.134 339.975 39.601 99.676 79.651 C 84.088 82.249 89.783 141.705 99.676 139.726 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 535.901 385.281 C 535.896 385.279 503.168 381.239 486.743 360.810 C 475.926 347.357 476.694 326.076 476.693 326.073 M 534.614 363.400 C 534.611 363.398 512.882 359.232 501.162 345.393 C 486.966 328.632 490.758 323.256 486.990 301.617 C 484.564 287.682 485.703 272.016 485.703 272.013 M 546.198 349.241 C 546.197 349.236 536.807 324.367 533.559 300.594 C 529.036 267.490 541.097 270.371 546.198 242.409 C 548.523 229.667 543.624 207.660 543.624 207.656 M 569.367 342.806 C 569.365 342.803 555.523 329.231 550.151 313.306 C 544.034 295.170 547.486 273.304 547.485 273.300 M 587.387 350.529 C 587.389 350.525 604.216 336.432 607.820 318.769 C 613.254 292.144 599.803 289.962 596.397 263.003 C 595.162 253.231 595.110 242.411 595.110 242.409 M 596.396 376.271 C 596.398 376.270 608.655 369.685 615.181 359.644 C 625.319 344.049 626.725 340.798 626.001 322.212 C 625.495 309.202 616.992 296.471 616.991 296.469 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":110.893,\\\"y\\\":108.624,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":541.885,\\\"y\\\":199.106,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":223.739,\\\"y\\\":488.367,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871149183707,\\\"y\\\":0.005076415786103876}},{\\\"point\\\":{\\\"x\\\":618.789,\\\"y\\\":488.367,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871149183707,\\\"y\\\":0.005076415786103876}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":551.4,\\\"y\\\":630.432,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128987635006813,\\\"y\\\":0.7012669627176226}},{\\\"point\\\":{\\\"x\\\":294.43,\\\"y\\\":630.489,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987224967101219,\\\"y\\\":0.7153928099940436}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":595.487,\\\"y\\\":225.539,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.0341434127055714,\\\"y\\\":-0.9994169437070882}},{\\\"point\\\":{\\\"x\\\":470.334,\\\"y\\\":245.394,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817454199674192,\\\"y\\\":-0.7315894903246267}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":99.4,\\\"y\\\":108.427,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"lizard\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":197.69237446855652,\\\"max\\\":537.3919234725497},\\\"y\\\":{\\\"min\\\":59.167,\\\"max\\\":672.5862194405734}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"lizard\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"lizard_4\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 431.162 566.451 C 440.166 585.022 430.305 662.284 411.091 669.820 C 407.218 651.327 356.882 530.550 341.561 482.842 C 299.166 350.823 389.844 315.526 394.713 240.608 C 400.747 147.777 347.622 61.185 347.617 61.167 C 347.624 61.186 419.532 138.909 419.120 244.302 C 419.043 264.092 411.286 284.531 401.424 305.755 C 414.838 313.751 434.761 329.480 439.876 328.590 C 446.845 327.378 476.757 287.438 476.757 287.438 C 476.757 287.438 455.656 251.729 460.295 249.079 C 464.094 246.909 480.944 272.090 485.310 272.372 C 490.067 272.680 511.629 247.243 515.297 250.288 C 518.705 253.118 500.299 278.084 501.923 282.205 C 503.637 286.556 534.728 291.592 535.386 296.858 C 535.921 301.130 500.049 294.181 495.422 296.363 C 486.310 300.662 460.110 358.010 450.485 360.990 C 442.811 363.366 384.858 340.037 384.858 340.037 C 379.274 352.770 362.072 390.994 363.923 416.917 C 364.882 430.360 368.598 451.982 370.809 458.913 C 370.809 458.913 427.452 436.959 434.847 438.978 C 445.066 441.769 475.608 499.399 484.463 505.213 C 488.739 508.020 524.612 512.350 522.866 516.286 C 520.714 521.136 489.494 516.977 486.596 520.646 C 483.851 524.123 494.259 553.341 490.179 555.065 C 485.788 556.921 472.495 526.340 467.852 525.260 C 463.591 524.269 440.184 543.508 437.174 540.333 C 433.498 536.456 464.015 508.366 464.015 508.366 C 464.015 508.366 430.318 471.827 423.291 471.052 C 417.562 470.420 381.821 497.678 381.821 497.678 C 386.025 508.138 393.025 541.357 393.026 541.362 C 393.030 541.364 427.259 558.401 431.162 566.451 M 397.041 600.573 C 397.041 593.907 402.418 588.530 409.084 588.530 C 415.750 588.530 421.127 593.907 421.127 600.573 C 421.127 607.239 415.750 612.616 409.084 612.616 C 402.419 612.616 397.041 607.239 397.041 600.573 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 411.091 669.820 C 407.218 651.327 356.882 530.550 341.561 482.842 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 341.561 482.842 C 299.166 350.823 389.844 315.526 394.713 240.608 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 394.713 240.608 C 400.747 147.777 347.622 61.185 347.617 61.167 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 347.617 61.167 C 347.619 61.185 383.314 145.810 367.937 238.280 C 364.787 257.224 352.412 274.330 338.115 293.970 C 323.161 294.364 293.298 300.991 288.654 297.491 C 282.901 293.157 274.706 242.977 274.706 242.977 C 274.706 242.977 306.005 215.760 302.440 211.780 C 299.521 208.521 275.581 227.092 271.349 225.981 C 266.738 224.771 254.314 193.826 249.872 195.557 C 245.745 197.165 255.324 226.666 252.482 230.064 C 249.482 233.650 218.391 228.610 216.103 233.398 C 214.247 237.283 250.712 241.788 254.178 245.551 C 260.931 252.881 258.246 315.822 265.572 322.581 C 269.831 326.512 313.218 330.979 313.218 330.979 C 307.684 342.584 290.592 377.380 289.658 409.892 C 288.969 433.880 299.948 479.887 299.948 479.887 C 286.603 481.003 247.070 488.447 242.132 493.288 C 234.567 500.703 234.011 565.719 228.857 574.974 C 226.369 579.443 196.587 599.903 199.958 602.581 C 204.113 605.882 229.851 587.729 234.119 589.638 C 238.163 591.446 242.480 622.161 246.894 621.798 C 251.645 621.408 249.254 588.148 252.868 585.040 C 256.185 582.187 285.842 588.390 287.038 584.181 C 288.498 579.042 248.438 568.291 248.438 568.291 C 248.438 568.291 261.479 520.460 267.236 516.355 C 271.640 513.215 298.564 517.530 313.836 517.552 C 323.491 538.846 341.841 562.432 341.844 562.437 C 341.842 562.442 324.336 599.406 326.790 608.602 C 332.056 628.331 392.081 677.277 411.091 669.820 C 407.218 651.327 356.882 530.550 341.561 482.842 C 299.166 350.823 389.844 315.526 394.713 240.608 C 400.747 147.777 347.622 61.185 347.617 61.167 M 364.926 628.673 C 358.261 628.673 352.883 623.296 352.883 616.631 C 352.883 609.965 358.261 604.588 364.926 604.588 C 371.592 604.588 376.969 609.965 376.969 616.631 C 376.969 623.296 371.592 628.673 364.926 628.673 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 409.084 588.530 C 415.750 588.530 421.127 593.907 421.127 600.573 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 421.127 600.573 C 421.127 607.239 415.750 612.616 409.084 612.616 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 409.084 612.616 C 402.419 612.616 397.041 607.239 397.041 600.573 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 397.041 600.573 C 397.041 593.907 402.418 588.530 409.084 588.530 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 409.084 588.530 C 415.750 588.530 421.127 593.907 421.127 600.573 C 421.127 607.239 415.750 612.616 409.084 612.616 C 402.419 612.616 397.041 607.239 397.041 600.573 C 397.041 593.907 402.418 588.530 409.084 588.530 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 364.926 604.588 C 371.592 604.588 376.969 609.965 376.969 616.631 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 376.969 616.631 C 376.969 623.296 371.592 628.673 364.926 628.673 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 364.926 628.673 C 358.261 628.673 352.883 623.296 352.883 616.631 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 352.883 616.631 C 352.883 609.965 358.261 604.588 364.926 604.588 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 364.926 604.588 C 371.592 604.588 376.969 609.965 376.969 616.631 C 376.969 623.296 371.592 628.673 364.926 628.673 C 358.261 628.673 352.883 623.296 352.883 616.631 C 352.883 609.965 358.261 604.588 364.926 604.588 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":32.968,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":347.935,\\\"y\\\":61.582,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.3389691633474903,\\\"y\\\":-0.940797484211933}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":267.589,\\\"y\\\":382.145,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873742953272,\\\"y\\\":0.00502506218238954}},{\\\"point\\\":{\\\"x\\\":390.541,\\\"y\\\":382.145,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.99998737224848,\\\"y\\\":0.0050254694884832325}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":488.803,\\\"y\\\":552.56,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.3294729798994259,\\\"y\\\":0.944165004390754}},{\\\"point\\\":{\\\"x\\\":246.582,\\\"y\\\":617.537,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.014915243788232143,\\\"y\\\":0.9998887615643741}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":250.529,\\\"y\\\":197.764,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.33969226512399026,\\\"y\\\":-0.9405366367212563}},{\\\"point\\\":{\\\"x\\\":512.357,\\\"y\\\":252.766,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5195766064241338,\\\"y\\\":-0.854423870252219}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":410.864,\\\"y\\\":671.628,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.3389478690783156,\\\"y\\\":0.9408051562609918}}]}},{\\\"name\\\":\\\"lotus\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":41.753,\\\"max\\\":678.247},\\\"y\\\":{\\\"min\\\":122.178,\\\"max\\\":571.373174370392}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"lotus\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"lotus_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 611.103 531.764 C 611.098 531.761 530.989 470.356 489.753 468.423 C 438.127 466.004 431.011 464.400 360.187 515.582 C 360.187 515.582 403.802 544.986 443.174 559.698 C 470.394 569.869 510.049 573.300 537.101 562.986 C 571.121 550.015 611.096 531.768 611.103 531.764 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 108.713 531.890 C 108.719 531.887 172.103 474.032 230.064 468.549 C 281.516 463.681 289.189 464.000 359.630 515.708 C 359.630 515.708 323.351 542.225 290.252 556.177 C 259.551 569.118 213.864 574.587 182.716 563.112 C 148.552 550.525 108.721 531.893 108.713 531.890 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 607.110 531.483 C 573.724 531.980 525.259 525.672 491.064 507.437 C 459.220 490.456 433.144 486.353 368.487 514.708 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 114.367 532.567 C 147.754 533.065 196.218 526.756 230.413 508.522 C 262.257 491.541 288.334 487.437 352.991 515.792 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 266.519 138.994 C 266.517 139.003 263.174 189.923 248.346 236.404 C 232.160 287.144 215.973 337.884 236.328 408.882 C 260.753 494.079 315.564 524.465 372.362 508.181 C 429.160 491.898 459.546 437.087 435.121 351.890 C 414.767 280.892 374.155 246.435 333.543 211.978 C 299.292 182.918 266.526 139.001 266.519 138.994 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 268.526 145.994 C 302.676 265.111 336.826 384.229 370.976 503.346 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 456.799 138.994 C 456.801 139.003 460.144 189.923 474.972 236.404 C 491.158 287.144 507.345 337.884 486.990 408.882 C 462.565 494.079 407.754 524.465 350.956 508.181 C 294.158 491.898 263.772 437.087 288.197 351.890 C 308.551 280.892 349.163 246.435 389.775 211.978 C 424.026 182.918 456.792 139.001 456.799 138.994 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 454.792 145.994 C 420.642 265.111 386.492 384.229 352.342 503.346 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 103.540 229.743 C 103.543 229.752 123.625 273.939 132.086 319.567 C 141.323 369.377 150.559 419.187 199.531 469.554 C 258.297 529.995 317.901 530.833 358.195 491.655 C 398.489 452.478 399.327 392.874 340.560 332.432 C 291.588 282.064 242.058 271.432 192.527 260.801 C 150.755 251.834 103.549 229.746 103.540 229.743 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 271.823 419.661 C 184.721 353.322 176.505 295.862 107.774 233.857 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 619.463 229.743 C 619.460 229.752 599.378 273.939 590.917 319.567 C 581.681 369.377 572.445 419.187 523.472 469.554 C 464.706 529.995 405.102 530.833 364.808 491.655 C 324.514 452.478 323.676 392.874 382.443 332.432 C 431.415 282.064 480.945 271.432 530.476 260.801 C 572.249 251.834 619.454 229.746 619.463 229.743 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 451.180 419.661 C 538.283 353.322 546.498 295.862 615.230 233.857 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 164.228 169.356 C 164.228 169.366 172.210 217.242 168.593 263.507 C 164.644 314.011 160.694 364.515 194.987 425.827 C 236.139 499.402 293.502 515.613 342.551 488.179 C 391.601 460.744 407.813 403.381 366.661 329.807 C 332.368 268.495 287.268 245.425 242.167 222.355 C 204.130 202.898 164.236 169.362 164.228 169.356 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 278.030 396.310 C 211.029 309.717 217.941 252.085 167.567 174.425 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 555.772 169.356 C 555.772 169.366 547.790 217.242 551.408 263.507 C 555.357 314.011 559.306 364.516 525.013 425.828 C 483.861 499.402 426.498 515.613 377.449 488.179 C 328.399 460.745 312.187 403.382 353.339 329.807 C 387.632 268.495 432.732 245.425 477.833 222.355 C 515.870 202.898 555.764 169.362 555.772 169.356 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 442.283 396.310 C 509.284 309.717 502.372 252.085 552.745 174.425 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 124.178 C 360.005 124.187 377.588 173.149 405.178 214.535 C 435.297 259.713 465.416 304.891 465.416 380.188 C 465.416 470.544 420.237 515.722 360.000 515.722 C 299.763 515.722 254.584 470.544 254.584 380.188 C 254.584 304.891 284.703 259.713 314.822 214.535 C 340.223 176.432 359.995 124.187 360.000 124.178 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 676.247 304.891 C 676.241 304.901 633.405 350.701 616.010 410.306 C 604.982 448.093 567.116 486.457 525.653 500.663 C 466.672 520.871 464.980 525.297 360.000 515.722 C 360.000 515.722 394.874 444.265 435.297 395.247 C 463.243 361.360 512.563 326.894 555.772 319.950 C 610.112 311.217 676.235 304.892 676.247 304.891 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 43.753 304.891 C 43.759 304.901 86.595 350.701 103.990 410.306 C 115.018 448.093 152.884 486.457 194.347 500.663 C 253.328 520.871 255.104 526.180 360.000 515.722 C 360.000 515.722 332.548 453.588 299.763 410.306 C 269.353 370.162 213.677 328.470 164.228 319.950 C 109.990 310.606 43.765 304.892 43.753 304.891 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 131.602 C 360.000 257.933 360.000 384.263 360.000 510.594 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 671.233 308.277 C 627.150 332.861 568.473 377.749 537.490 427.466 C 508.637 473.764 477.601 498.845 371.526 510.594 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 47.260 306.074 C 92.689 330.994 153.406 376.551 185.409 427.466 C 214.440 473.652 245.298 498.845 351.372 510.594 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":219.266,\\\"max\\\":500.734},\\\"y\\\":{\\\"min\\\":356.942,\\\"max\\\":577.466}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":641.162,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360.075,\\\"y\\\":135.296,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":560.045,\\\"y\\\":553.305,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129156690803032,\\\"y\\\":0.7012497763135354}},{\\\"point\\\":{\\\"x\\\":161.076,\\\"y\\\":553.346,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986747268208849,\\\"y\\\":0.7154394636178254}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":49.102,\\\"y\\\":307.788,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9335413117285697,\\\"y\\\":-0.35846983038479185}},{\\\"point\\\":{\\\"x\\\":670.081,\\\"y\\\":307.788,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9335318306924875,\\\"y\\\":-0.35849452029833434}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":552.079,\\\"y\\\":175.947,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314478702936318,\\\"y\\\":-0.7754183303879505}},{\\\"point\\\":{\\\"x\\\":168.749,\\\"y\\\":176.015,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817823603540776,\\\"y\\\":-0.7315550649882911}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":513.324,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"lute\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":230.39463528459757,\\\"max\\\":526.0253694596597},\\\"y\\\":{\\\"min\\\":80.12135276702357,\\\"max\\\":691.3226593098718}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"lute\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"lute\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 524.022 583.983 C 523.567 694.273 411.765 693.251 360.000 687.093 C 404.143 687.093 487.489 677.377 487.604 583.983 C 487.810 417.809 401.543 357.141 360.000 357.141 C 404.393 352.075 524.759 405.258 524.022 583.983 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 403.950 83.044 C 403.959 83.044 493.931 83.044 493.940 83.044 C 493.930 83.054 386.990 178.466 386.980 178.476 C 386.981 178.497 396.545 393.666 396.546 393.687 C 396.539 393.687 323.461 393.687 323.454 393.687 C 323.455 393.666 333.019 178.497 333.020 178.476 C 333.027 178.466 403.943 83.054 403.950 83.044 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 357.141 C 401.543 357.141 487.810 417.809 487.604 583.983 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 487.604 583.983 C 487.489 677.377 404.143 687.093 360.000 687.093 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 357.141 C 401.543 357.141 487.810 417.809 487.604 583.983 C 487.489 677.377 404.143 687.093 360.000 687.093 C 315.857 687.093 232.511 677.377 232.395 583.983 C 232.190 417.809 318.457 357.141 360.000 357.141 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 471.480 C 391.585 471.480 417.065 496.959 417.065 528.544 C 417.065 560.129 391.585 585.609 360.000 585.609 C 328.415 585.609 302.935 560.129 302.935 528.544 C 302.935 496.959 328.415 471.480 360.000 471.480 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 414.846 107.173 C 395.734 130.933 357.516 178.446 357.510 178.454 C 357.510 178.501 357.510 492.492 357.510 649.511 M 408.821 95.532 C 388.001 123.173 346.367 178.445 346.361 178.454 C 346.360 178.501 340.710 492.492 337.885 649.511 M 421.089 119.236 C 403.715 138.975 368.973 178.448 368.968 178.454 C 368.968 178.501 374.413 492.492 377.136 649.511 M 426.409 129.535 C 410.530 145.929 378.777 178.711 378.772 178.716 C 378.773 178.763 394.055 649.469 394.057 649.511 C 394.049 649.511 320.972 649.511 320.964 649.511 C 320.966 649.469 336.760 178.767 336.762 178.720 C 336.768 178.710 381.346 116.597 403.638 85.535 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 427.966 149.591 C 432.965 149.591 436.997 153.624 436.997 158.622 C 436.997 163.621 432.965 167.653 427.966 167.653 C 422.967 167.653 418.935 163.621 418.935 158.622 C 418.935 153.624 422.967 149.591 427.966 149.591 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 459.985 120.035 C 464.984 120.035 469.016 124.067 469.016 129.066 C 469.016 134.064 464.984 138.097 459.985 138.097 C 454.987 138.097 450.954 134.064 450.954 129.066 C 450.954 124.067 454.987 120.035 459.985 120.035 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 492.826 91.300 C 497.824 91.300 501.857 95.332 501.857 100.331 C 501.857 105.329 497.824 109.362 492.826 109.362 C 487.827 109.362 483.794 105.329 483.794 100.331 C 483.794 95.332 487.827 91.300 492.826 91.300 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 335.630 143.348 C 340.534 142.381 345.271 145.556 346.238 150.460 C 347.206 155.365 344.030 160.101 339.126 161.069 C 334.222 162.036 329.485 158.861 328.517 153.956 C 327.550 149.052 330.726 144.316 335.630 143.348 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 357.931 112.170 C 362.835 111.202 367.572 114.378 368.539 119.282 C 369.507 124.186 366.331 128.923 361.427 129.891 C 356.523 130.858 351.786 127.682 350.819 122.778 C 349.852 117.874 353.027 113.138 357.931 112.170 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 382.161 82.285 C 387.066 81.317 391.802 84.493 392.770 89.397 C 393.737 94.301 390.561 99.038 385.657 100.005 C 380.753 100.973 376.017 97.797 375.049 92.893 C 374.082 87.989 377.257 83.252 382.161 82.285 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 417.899 113.072 C 399.429 134.866 362.495 178.447 362.490 178.454 C 362.490 178.501 362.490 492.492 362.490 649.511 M 411.801 101.290 C 391.613 127.011 351.244 178.446 351.238 178.454 C 351.237 178.501 345.655 492.492 342.864 649.511 M 423.996 124.854 C 407.245 142.721 373.747 178.448 373.741 178.454 C 373.742 178.501 379.324 492.492 382.115 649.511 M 429.098 134.731 C 413.812 149.393 383.243 178.712 383.238 178.716 C 383.240 178.763 399.034 649.464 399.036 649.511 C 399.028 649.511 325.951 649.511 325.943 649.511 C 325.945 649.469 341.739 178.767 341.741 178.720 C 341.747 178.711 385.041 120.529 406.691 91.434 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 375.055 92.903 C 374.087 87.999 377.263 83.262 382.167 82.295 C 387.071 81.327 391.807 84.503 392.775 89.407 C 393.742 94.311 390.567 99.048 385.663 100.015 C 380.759 100.983 376.022 97.807 375.055 92.903 M 350.824 122.788 C 349.857 117.884 353.032 113.147 357.936 112.180 C 362.840 111.212 367.577 114.388 368.545 119.292 C 369.512 124.196 366.337 128.933 361.432 129.901 C 356.528 130.868 351.792 127.692 350.824 122.788 M 328.523 153.966 C 327.555 149.062 330.731 144.326 335.635 143.358 C 340.539 142.391 345.276 145.566 346.243 150.470 C 347.211 155.374 344.035 160.111 339.131 161.078 C 334.227 162.046 329.490 158.870 328.523 153.966 M 483.800 100.341 C 483.800 95.342 487.832 91.309 492.831 91.309 C 497.829 91.309 501.862 95.342 501.862 100.341 C 501.862 105.339 497.829 109.372 492.831 109.372 C 487.832 109.372 483.800 105.339 483.800 100.341 M 450.959 129.076 C 450.959 124.077 454.992 120.045 459.991 120.045 C 464.989 120.045 469.022 124.077 469.022 129.076 C 469.022 134.074 464.989 138.107 459.991 138.107 C 454.992 138.107 450.959 134.074 450.959 129.076 M 418.940 158.632 C 418.940 153.633 422.973 149.601 427.971 149.601 C 432.970 149.601 437.002 153.633 437.002 158.632 C 437.002 163.630 432.970 167.663 427.971 167.663 C 422.973 167.663 418.940 163.630 418.940 158.632 M 333.026 178.486 C 333.026 178.486 384.249 178.566 386.985 178.486 C 386.996 178.476 493.935 83.064 493.945 83.054 C 493.937 83.054 403.964 83.054 403.955 83.054 C 403.948 83.064 333.033 178.476 333.026 178.486 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":313.227,\\\"max\\\":406.773},\\\"y\\\":{\\\"min\\\":482.332,\\\"max\\\":575.879}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":369.13,\\\"y\\\":32.084,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":442.072,\\\"y\\\":85.512,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":233.094,\\\"y\\\":537.37,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873031208202,\\\"y\\\":0.005039206003831711}},{\\\"point\\\":{\\\"x\\\":523.017,\\\"y\\\":537.37,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873031208202,\\\"y\\\":0.005039206003831724}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":477.497,\\\"y\\\":672.623,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128994139952081,\\\"y\\\":0.7012663014328357}},{\\\"point\\\":{\\\"x\\\":288.447,\\\"y\\\":672.68,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.69870417507476,\\\"y\\\":0.7154107042343573}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":471.271,\\\"y\\\":415.317,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314550643831317,\\\"y\\\":-0.7754124719559874}},{\\\"point\\\":{\\\"x\\\":274.178,\\\"y\\\":415.413,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817418690133722,\\\"y\\\":-0.73159279933181}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":684.149,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"man_bottom\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":285.6930765219867,\\\"max\\\":453.41077212046815},\\\"y\\\":{\\\"min\\\":361.177,\\\"max\\\":706.8531552921432}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"man_bottom\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"man_bottom\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 431.510 362.177 C 431.731 364.579 431.896 367.027 431.996 369.520 C 435.209 449.965 418.990 466.767 412.857 509.789 C 409.530 533.124 417.903 542.484 415.840 565.048 C 411.085 617.030 401.464 645.974 402.367 657.253 C 402.519 659.154 403.321 671.204 406.223 672.476 C 428.862 682.397 430.888 691.556 442.384 692.808 C 448.104 693.431 457.809 703.029 448.631 701.787 C 447.205 701.594 443.198 695.155 440.651 695.979 C 439.509 696.349 452.503 703.631 445.393 703.009 C 440.551 702.586 435.407 694.744 433.112 695.851 C 432.170 696.306 445.376 703.646 437.280 703.506 C 432.600 703.426 426.581 694.510 425.150 695.429 C 424.413 695.903 438.237 706.467 428.508 704.745 C 426.620 704.411 424.117 699.379 424.117 699.379 C 424.116 699.378 417.326 695.270 414.964 694.973 C 413.541 694.794 421.912 699.140 421.913 699.140 C 421.913 699.141 429.845 706.107 421.086 705.846 C 414.461 705.649 413.279 706.114 408.908 704.167 C 405.480 702.640 400.012 703.888 398.644 703.838 C 395.599 703.728 383.246 704.862 375.810 702.894 C 366.198 700.350 371.992 688.828 376.062 682.746 C 379.750 677.237 369.326 674.893 377.162 654.458 C 384.846 634.418 360.992 623.335 365.256 555.005 C 365.976 543.461 373.734 515.780 374.002 510.249 C 374.607 497.728 361.740 495.079 361.552 407.771 C 361.545 404.475 379.053 405.303 376.745 385.282 C 376.310 381.508 380.565 406.016 359.833 406.191 C 338.268 406.373 342.853 381.492 342.361 385.282 C 339.679 405.945 357.560 404.475 357.554 407.771 C 357.380 493.895 344.499 497.728 345.104 510.249 C 345.372 515.780 353.299 543.452 353.850 555.005 C 357.413 629.640 334.205 634.439 341.945 654.458 C 350.533 676.672 340.050 678.413 343.320 685.234 C 346.607 692.090 353.513 704.436 339.703 705.009 C 314.703 706.045 332.932 690.115 329.741 689.961 C 326.397 689.799 329.518 703.448 324.080 704.177 C 312.064 705.789 323.097 690.822 321.917 690.940 C 320.241 691.109 322.030 704.562 317.393 704.653 C 306.614 704.865 316.959 691.661 315.548 692.203 C 313.448 693.011 314.945 703.258 310.684 703.776 C 298.979 705.198 310.773 691.905 309.203 692.348 C 305.621 693.360 309.429 703.420 301.889 703.957 C 293.509 704.554 299.765 694.809 306.399 688.750 C 308.072 687.222 308.249 684.502 311.169 678.902 C 315.013 671.531 316.528 659.960 316.740 657.253 C 317.622 645.973 308.021 618.431 303.267 565.048 C 301.256 542.479 309.576 533.124 306.250 509.789 C 300.116 466.767 283.897 449.965 287.110 369.520 C 287.210 367.027 287.596 362.177 287.596 362.177 C 335.567 362.177 431.495 362.177 431.510 362.177 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 431.510 362.177 C 383.539 362.177 287.611 362.177 287.596 362.177 \\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":362.37,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":362.022,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":286.767,\\\"y\\\":375.869,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872880189178,\\\"y\\\":0.0050422019564934075}},{\\\"point\\\":{\\\"x\\\":432.586,\\\"y\\\":375.869,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872880189178,\\\"y\\\":0.0050422019564934075}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":427.896,\\\"y\\\":696.281,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129402691979134,\\\"y\\\":0.7012247660743356}},{\\\"point\\\":{\\\"x\\\":317.832,\\\"y\\\":696.329,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986777434832834,\\\"y\\\":0.7154365176317934}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true}},{\\\"name\\\":\\\"man_stand\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":174.40640993601835,\\\"max\\\":517.8870266443971},\\\"y\\\":{\\\"min\\\":14.17044217840838,\\\"max\\\":711.4409671728753}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"man_stand\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"man_stand\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 353.618 92.181 C 360.892 94.549 372.942 102.741 380.495 101.530 C 385.616 100.709 394.574 95.328 396.272 90.428 C 397.382 87.224 393.156 81.543 393.350 78.158 C 393.581 74.138 398.827 68.155 398.609 64.134 C 398.400 60.276 393.145 55.021 392.182 51.280 C 391.240 47.626 393.524 40.500 391.597 37.256 C 389.547 33.805 382.098 31.863 378.743 29.660 C 375.171 27.315 370.046 21.294 365.888 20.312 C 363.423 19.729 359.033 21.923 356.539 21.480 C 353.564 20.952 349.603 16.602 346.606 16.221 C 341.918 15.625 334.369 20.487 329.661 20.896 C 326.048 21.209 319.460 18.095 316.222 19.727 C 311.576 22.068 310.705 33.153 306.873 36.672 C 305.062 38.335 300.029 38.698 298.693 40.762 C 296.215 44.588 300.525 53.323 299.277 57.707 C 298.621 60.013 294.400 62.914 294.602 65.303 C 295.092 71.075 310.963 79.326 310.963 79.326 C 310.963 79.326 342.229 88.475 353.618 92.181 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 314.806 40.944 C 314.624 41.051 306.627 50.810 305.342 53.409 C 303.556 57.024 303.099 71.531 303.541 75.604 C 304.211 81.768 308.202 103.420 313.939 107.664 C 316.610 109.640 326.727 109.696 329.536 109.397 C 334.276 108.892 354.440 100.406 354.443 100.405 C 354.440 100.406 329.983 110.455 329.981 110.456 C 329.981 110.457 328.347 125.259 328.347 125.261 C 328.348 125.262 335.056 137.808 335.057 137.809 C 335.056 137.808 327.774 125.735 327.773 125.734 C 327.770 125.735 310.693 131.794 293.326 134.184 C 271.106 137.241 260.573 155.014 262.856 175.940 C 265.615 201.233 255.321 207.335 256.750 261.054 C 256.787 262.446 237.638 292.916 233.944 299.843 C 231.170 305.043 223.375 329.402 219.228 330.250 C 211.776 331.774 202.929 333.502 199.541 336.718 C 192.422 343.475 171.648 363.776 177.401 368.396 C 179.440 370.033 195.103 351.080 196.962 352.026 C 199.719 353.429 178.696 384.017 183.466 387.385 C 186.674 389.650 201.661 362.259 201.663 362.257 C 201.662 362.260 185.730 391.163 189.164 393.608 C 192.562 396.027 211.690 364.150 211.692 364.147 C 211.691 364.150 193.431 393.498 196.095 395.341 C 200.322 398.263 220.355 369.349 220.358 369.346 C 220.356 369.348 202.638 390.708 205.443 392.899 C 209.297 395.909 226.289 373.732 228.497 370.213 C 230.005 367.809 235.355 349.887 235.954 349.426 C 259.632 331.204 282.416 300.372 283.471 298.110 C 284.492 295.922 284.216 214.816 284.216 214.807 C 284.215 214.806 276.177 201.855 275.813 196.047 C 275.245 186.988 286.210 165.722 286.211 165.719 C 286.210 165.722 273.941 188.216 276.021 195.730 C 279.424 208.027 281.697 215.180 285.454 214.243 C 288.821 213.403 292.689 210.821 299.557 208.176 C 306.764 205.401 314.804 202.979 314.806 202.979 C 314.804 202.979 306.751 205.537 299.521 208.391 C 292.337 211.227 284.757 214.837 284.755 214.837 C 284.755 214.846 284.374 297.431 283.563 304.417 C 283.067 308.679 273.130 348.345 272.247 357.881 C 271.091 370.369 273.117 407.881 274.425 429.405 C 277.791 484.792 302.672 538.402 302.675 538.413 C 302.675 538.419 302.734 572.288 310.172 591.607 C 325.392 631.136 329.276 655.460 327.803 658.656 C 326.870 660.679 289.681 680.416 289.677 680.419 C 289.676 680.420 268.603 693.881 273.214 697.748 C 275.708 699.841 288.809 687.352 288.810 687.351 C 288.809 687.352 276.080 698.178 277.546 700.348 C 279.282 702.915 294.949 689.802 294.951 689.801 C 294.949 689.803 280.927 701.205 281.879 702.947 C 283.051 705.095 301.603 691.406 301.605 691.405 C 301.603 691.407 285.550 703.477 287.077 705.547 C 287.936 706.710 297.231 704.317 298.342 703.814 C 299.225 703.414 303.348 698.252 305.348 698.080 C 321.186 696.719 326.679 689.248 339.934 684.751 C 345.370 682.906 364.210 684.987 367.662 677.819 C 371.639 669.558 355.066 660.903 352.931 648.358 C 349.609 628.836 362.066 603.957 358.997 580.771 C 355.304 552.870 342.288 544.445 340.597 533.114 C 338.414 518.476 351.517 471.806 348.599 446.464 C 348.276 443.657 342.525 404.489 342.524 404.485 C 342.522 404.485 327.920 404.390 323.710 399.525 C 318.629 393.652 321.665 376.133 321.665 376.130 C 321.662 376.127 304.847 366.318 293.143 345.951 C 292.602 345.008 301.216 358.705 305.693 363.318 C 310.013 367.770 322.068 375.945 322.069 375.946 C 322.069 375.949 319.143 394.100 323.471 398.807 C 328.419 404.189 344.471 405.671 349.466 402.016 C 355.694 397.457 354.064 369.684 354.064 369.681 C 354.066 369.679 370.510 354.518 373.587 350.532 C 376.764 346.418 388.275 324.522 387.591 326.021 C 373.623 356.639 354.886 366.659 354.876 370.298 C 354.852 378.795 356.438 401.065 344.915 404.062 C 340.593 405.186 350.773 443.284 354.664 459.462 C 358.741 476.409 359.880 494.490 371.994 515.784 C 373.211 517.922 388.456 537.444 388.458 537.447 C 388.456 537.445 374.264 519.068 374.262 519.067 C 374.263 519.072 375.700 554.576 384.125 577.305 C 392.851 600.846 413.413 619.353 417.072 632.761 C 420.137 643.993 409.671 651.797 415.319 660.489 C 417.443 663.757 429.274 673.009 430.482 674.894 C 434.556 681.246 433.914 688.342 437.848 695.148 C 439.699 698.351 444.734 698.166 445.652 700.165 C 451.345 712.573 457.370 709.789 460.377 707.280 C 462.641 705.390 451.253 690.967 451.252 690.965 C 451.253 690.966 462.041 705.824 463.843 703.814 C 465.424 702.050 456.045 684.753 456.044 684.751 C 456.046 684.752 465.355 700.371 467.309 699.482 C 469.391 698.534 462.111 680.420 462.110 680.419 C 462.111 680.420 468.679 693.017 469.908 692.549 C 473.440 691.207 467.055 676.335 464.912 672.085 C 462.963 668.219 446.002 648.623 441.314 635.361 C 439.457 630.106 436.423 588.619 434.382 578.172 C 428.006 545.534 413.757 523.399 412.720 516.651 C 410.801 504.168 424.063 456.987 419.652 396.207 C 418.863 385.339 408.224 336.543 407.852 327.016 C 407.685 322.715 408.373 314.165 408.056 310.959 C 407.439 304.721 401.158 283.270 401.084 280.503 C 400.965 276.068 410.986 227.246 410.987 227.240 C 410.986 227.238 408.645 204.788 408.645 204.786 C 408.642 204.786 398.231 209.718 379.666 208.558 C 373.167 208.152 361.267 202.370 361.265 202.369 C 361.267 202.370 373.621 207.760 379.889 208.221 C 402.577 209.892 409.508 204.088 409.511 204.088 C 409.512 204.086 421.384 183.918 421.385 183.916 C 421.384 183.918 410.814 202.215 410.195 203.182 C 408.166 206.346 412.900 245.122 415.260 256.824 C 418.655 273.665 425.706 282.391 425.707 282.394 C 425.707 282.395 425.878 293.057 426.584 296.016 C 431.922 318.377 436.155 332.853 439.681 340.551 C 443.305 348.461 465.573 380.606 465.576 380.610 C 465.579 380.614 490.497 413.550 495.351 412.958 C 500.178 412.369 485.507 391.877 485.506 391.875 C 485.507 391.877 501.967 413.906 503.615 413.278 C 508.484 411.422 491.572 389.278 491.571 389.276 C 491.573 389.278 507.326 412.796 509.740 411.279 C 514.637 408.202 496.771 384.946 496.770 384.943 C 496.772 384.945 513.301 408.717 514.966 407.472 C 519.988 403.716 502.836 383.212 502.835 383.210 C 502.834 383.209 494.279 372.488 494.279 372.487 C 494.280 372.488 510.847 389.698 513.233 388.225 C 517.317 385.701 500.084 360.688 495.037 358.082 C 489.487 355.216 481.417 354.898 475.026 345.371 C 468.950 336.313 472.036 316.133 466.968 297.952 C 465.158 291.459 454.901 265.393 454.311 263.633 C 449.407 249.003 457.301 218.609 449.103 178.648 C 447.986 173.204 451.916 146.404 430.381 137.808 C 414.060 131.293 388.915 127.581 383.259 123.261 C 381.410 121.849 374.214 111.306 373.727 110.263 C 373.029 108.768 369.602 89.718 368.529 87.735 C 367.703 86.209 357.226 76.575 356.397 74.737 C 355.506 72.758 355.504 57.510 354.664 55.674 C 353.589 53.324 350.809 39.018 337.335 38.344 C 325.646 37.760 315.069 40.788 314.806 40.944 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 391.721 196.107 C 392.726 195.510 393.639 196.087 393.880 196.698 C 394.122 197.309 393.839 198.312 392.708 198.606 C 391.875 198.822 391.430 198.318 391.228 197.878 C 391.003 197.388 390.896 196.596 391.721 196.107 M 288.939 198.395 C 288.939 197.328 289.829 196.884 290.512 196.884 C 291.196 196.884 292.086 197.328 292.086 198.395 C 292.086 199.463 291.195 199.907 290.512 199.907 C 289.829 199.907 288.939 199.463 288.939 198.395 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 391.721 196.107 C 392.726 195.510 393.639 196.087 393.880 196.698 C 394.122 197.309 393.839 198.312 392.708 198.606 C 391.875 198.822 391.430 198.318 391.228 197.878 C 391.003 197.388 390.896 196.596 391.721 196.107 M 288.939 198.395 C 288.939 197.328 289.829 196.884 290.512 196.884 C 291.196 196.884 292.086 197.328 292.086 198.395 C 292.086 199.463 291.195 199.907 290.512 199.907 C 289.829 199.907 288.939 199.463 288.939 198.395 M 317.390 86.338 C 317.391 86.338 324.012 85.948 327.324 85.754 M 318.559 60.044 C 318.559 60.047 317.390 86.335 317.390 86.338 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 329.834 375.049 C 329.835 375.052 326.959 396.950 336.405 396.857 C 346.966 396.753 343.778 373.977 343.778 373.975 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 326.004 62.079 C 326.005 62.078 332.516 55.856 337.841 56.538 C 342.749 57.167 347.189 64.133 347.190 64.134 C 347.189 64.135 339.621 68.569 336.088 68.225 C 332.562 67.881 326.005 62.080 326.004 62.079 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":289.352,\\\"max\\\":398.848},\\\"y\\\":{\\\"min\\\":210.384,\\\"max\\\":344.732}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":386.217,\\\"y\\\":702.636,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":342.125,\\\"y\\\":16.974,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":296.65,\\\"y\\\":149.544,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7710487036632138,\\\"y\\\":-0.6367761746322468}},{\\\"point\\\":{\\\"x\\\":411.826,\\\"y\\\":149.847,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7533285909264257,\\\"y\\\":-0.6576443066679785}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":285.102,\\\"y\\\":356.696,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987263029800354,\\\"y\\\":0.7153890923992705}},{\\\"point\\\":{\\\"x\\\":400.281,\\\"y\\\":357.84,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129335762692828,\\\"y\\\":0.7012315707581133}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":378.332,\\\"y\\\":28.084,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.631445428603132,\\\"y\\\":-0.7754203187279831}},{\\\"point\\\":{\\\"x\\\":310.283,\\\"y\\\":28.163,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.681745419967422,\\\"y\\\":-0.7315894903246241}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":408.744,\\\"y\\\":386.93,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5871198385042581,\\\"y\\\":0.8095000279399217}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"man_top\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":195.60185633396395,\\\"max\\\":523.5790365633949},\\\"y\\\":{\\\"min\\\":60.99467191201711,\\\"max\\\":478.5312693526769}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"man_top\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"man_top\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.651 63.496 C 366.636 63.380 373.869 60.410 380.181 63.156 C 385.214 65.346 387.432 71.342 391.636 75.162 C 396.637 79.707 405.216 81.256 408.064 87.912 C 411.001 94.778 405.338 102.872 405.338 111.251 C 405.338 119.630 411.001 127.724 408.064 134.589 C 405.216 141.245 396.241 142.394 391.636 147.340 C 386.695 152.645 386.271 162.167 379.832 164.925 C 373.628 167.582 366.850 161.447 360.000 161.447 C 353.150 161.447 346.373 167.582 340.168 164.925 C 333.729 162.167 333.305 152.645 328.364 147.340 C 323.759 142.394 314.784 141.245 311.936 134.589 C 308.999 127.724 314.662 119.630 314.662 111.251 C 314.662 102.872 308.999 94.778 311.936 87.912 C 314.784 81.256 323.492 79.844 328.364 75.162 C 332.044 71.626 333.659 66.043 338.076 63.853 C 344.557 60.640 352.311 63.617 359.651 63.496 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 287.596 423.424 C 287.597 423.423 288.096 418.667 288.423 416.360 C 289.077 411.747 289.924 407.327 290.899 403.114 C 292.848 394.688 295.304 387.092 297.733 380.436 C 302.589 367.125 307.541 357.588 307.683 352.688 C 307.910 344.813 296.224 298.272 294.844 289.088 C 293.391 279.413 295.276 253.812 295.166 256.573 C 292.695 318.695 287.877 325.733 288.465 336.130 C 288.857 343.038 278.824 367.438 270.717 382.636 C 263.141 396.836 244.326 414.400 243.924 420.657 C 243.708 424.017 239.598 445.545 238.488 448.359 C 237.341 451.268 226.068 474.725 223.022 473.104 C 220.521 471.774 228.740 450.175 227.821 449.639 C 226.624 448.940 217.166 478.921 213.771 477.481 C 210.499 476.092 222.353 448.807 221.594 448.459 C 220.800 448.094 209.042 477.297 205.720 475.621 C 202.476 473.984 217.157 447.177 216.319 446.782 C 215.512 446.401 200.835 474.676 199.809 471.331 C 197.343 463.284 216.529 436.176 213.436 435.855 C 208.781 435.370 204.720 447.918 201.007 450.398 C 198.636 451.982 196.067 450.747 196.699 449.436 C 211.515 418.744 217.771 424.276 222.826 414.718 C 229.316 402.449 230.457 368.056 255.820 326.793 C 260.759 318.757 250.569 298.869 260.262 246.229 C 263.635 227.911 255.135 220.305 268.300 200.890 C 282.487 179.969 298.061 184.281 338.491 170.248 C 344.748 168.076 343.020 149.616 342.626 144.464 C 342.455 142.232 332.576 131.700 331.828 129.598 C 330.480 125.807 329.371 100.061 331.188 96.472 C 333.102 92.690 342.052 77.129 359.821 76.512 C 377.672 77.640 386.085 92.709 387.918 96.472 C 389.750 100.232 387.868 126.992 386.319 130.877 C 385.602 132.674 377.153 141.463 376.480 143.412 C 374.798 148.291 374.113 167.978 380.615 170.248 C 421.020 184.354 436.619 179.969 450.806 200.890 C 463.971 220.305 455.494 227.907 458.844 246.229 C 469.237 303.073 457.417 319.409 463.286 326.793 C 489.268 359.485 490.570 403.128 496.980 414.017 C 502.485 423.367 514.253 422.249 522.407 449.436 C 523.482 453.022 519.183 451.209 518.795 451.166 C 516.739 450.936 512.296 436.178 505.322 434.808 C 502.803 434.314 522.023 463.111 519.297 471.331 C 518.195 474.652 503.594 446.401 502.787 446.782 C 501.949 447.177 516.630 473.984 513.386 475.621 C 510.064 477.297 498.306 448.094 497.512 448.459 C 496.753 448.807 508.607 476.092 505.335 477.481 C 501.940 478.921 492.482 448.940 491.285 449.639 C 490.366 450.175 498.585 471.774 496.084 473.104 C 493.038 474.725 481.765 451.268 480.618 448.359 C 479.508 445.545 475.398 424.017 475.182 420.657 C 474.780 414.400 455.965 396.836 448.389 382.636 C 440.282 367.438 430.606 343.049 430.641 336.130 C 430.720 320.224 425.645 317.517 423.843 256.573 C 423.762 253.811 425.612 279.412 424.165 289.088 C 422.792 298.270 411.191 344.815 411.423 352.688 C 411.568 357.588 416.517 367.125 421.374 380.436 C 423.802 387.092 426.258 394.688 428.207 403.114 C 429.182 407.327 430.030 411.747 430.683 416.360 C 431.010 418.667 431.510 423.424 431.510 423.424 C 383.539 423.424 287.611 423.424 287.596 423.424 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 429.257 255.203 C 427.411 255.203 423.720 255.203 423.719 255.203 C 423.719 255.204 420.114 263.792 416.699 266.250 C 406.375 273.682 377.580 272.235 377.576 272.236 M 290.828 255.203 C 292.674 255.203 296.365 255.203 296.366 255.203 C 296.366 255.204 299.975 263.786 303.386 266.250 C 313.252 273.375 340.769 272.235 340.773 272.236 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 431.510 423.424 C 383.539 423.424 287.611 423.424 287.596 423.424 \\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":327.522,\\\"max\\\":392.463},\\\"y\\\":{\\\"min\\\":75.76,\\\"max\\\":142.149}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":359.992,\\\"y\\\":423.361,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":359.992,\\\"y\\\":64.91,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":268.741,\\\"y\\\":202.914,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999874337967075,\\\"y\\\":0.005013207423930123}},{\\\"point\\\":{\\\"x\\\":451.502,\\\"y\\\":202.914,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999874337967075,\\\"y\\\":0.0050132074239301345}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":509.365,\\\"y\\\":460.781,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.71290695742506,\\\"y\\\":0.7012586327846122}},{\\\"point\\\":{\\\"x\\\":213.164,\\\"y\\\":460.829,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987272403465495,\\\"y\\\":0.7153881768646272}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.992,\\\"y\\\":423.415,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"menorah\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":97.85,\\\"max\\\":619.995},\\\"y\\\":{\\\"min\\\":117.891,\\\"max\\\":648.7399646735092}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"menorah\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"menorah2.svg\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.712 138.774 C 359.714 138.774 380.255 140.895 380.257 140.895 C 380.257 140.906 380.258 253.156 380.257 253.167 C 380.260 253.166 404.113 249.185 412.873 237.199 C 421.234 225.759 418.597 212.275 419.904 198.165 C 421.791 177.791 419.904 140.901 419.904 140.895 C 419.908 140.895 458.081 140.895 458.084 140.895 C 458.084 140.902 461.402 186.583 458.084 217.255 C 455.762 238.731 447.971 257.993 430.943 271.284 C 398.125 296.898 380.262 293.613 380.257 293.615 C 380.257 293.620 380.257 342.850 380.257 342.855 C 380.266 342.851 416.565 353.744 471.161 299.858 C 493.113 278.191 491.787 247.772 496.265 217.255 C 500.226 190.263 496.265 140.902 496.265 140.895 C 496.269 140.895 534.441 140.895 534.445 140.895 C 534.445 140.904 540.544 202.793 534.445 236.345 C 527.924 272.222 522.940 304.920 498.293 331.795 C 451.660 382.644 380.269 389.060 380.257 389.065 C 380.257 389.070 380.257 437.012 380.257 437.017 C 380.271 437.009 456.307 441.575 525.424 360.250 C 556.102 324.155 564.331 282.983 572.625 236.345 C 578.595 202.770 572.625 140.904 572.625 140.895 C 572.628 140.895 610.802 140.895 610.805 140.895 C 610.805 140.907 618.957 215.334 610.805 255.435 C 600.431 306.472 586.677 349.720 552.556 389.065 C 490.807 460.268 380.275 479.305 380.257 479.314 C 380.257 479.322 380.256 560.869 380.257 560.877 C 380.264 560.878 531.517 597.696 531.524 597.698 C 531.524 597.701 531.523 631.033 531.524 631.036 C 531.520 631.037 483.075 646.943 359.712 646.738 C 236.967 646.533 187.906 631.037 187.902 631.036 C 187.902 631.033 187.902 597.701 187.902 597.698 C 187.909 597.696 339.161 560.878 339.168 560.877 C 339.169 560.869 339.168 479.322 339.168 479.314 C 339.151 479.305 224.131 463.508 165.896 389.065 C 133.806 348.046 118.020 306.472 107.646 255.435 C 99.495 215.334 107.646 140.907 107.646 140.895 C 107.650 140.895 145.823 140.895 145.827 140.895 C 145.827 140.904 139.856 202.770 145.827 236.345 C 154.120 282.983 162.659 323.894 193.027 360.250 C 259.689 440.056 339.154 437.009 339.168 437.017 C 339.168 437.012 339.168 389.070 339.168 389.065 C 339.156 389.060 270.105 384.943 220.159 331.795 C 195.187 305.222 190.528 272.222 184.007 236.345 C 177.909 202.793 184.007 140.904 184.007 140.895 C 184.011 140.895 222.183 140.895 222.187 140.895 C 222.187 140.902 218.226 190.263 222.187 217.255 C 226.665 247.772 226.171 277.379 247.291 299.858 C 295.534 351.205 339.159 342.851 339.168 342.855 C 339.168 342.850 339.168 293.620 339.168 293.615 C 339.163 293.613 321.766 297.977 289.456 274.206 C 265.560 256.625 262.571 239.995 260.367 217.255 C 256.994 182.434 260.367 140.902 260.367 140.895 C 260.371 140.895 298.543 140.895 298.547 140.895 C 298.547 140.901 296.277 177.830 298.547 198.165 C 300.210 213.061 298.007 227.569 307.527 239.147 C 316.413 249.955 339.165 252.192 339.168 252.193 C 339.168 252.182 339.168 140.906 339.168 140.895 C 339.170 140.895 359.710 138.774 359.712 138.774 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 564.673 141.915 C 564.673 141.913 564.673 119.893 564.673 119.891 C 564.679 119.891 617.990 119.891 617.995 119.891 C 617.995 119.893 617.995 141.913 617.995 141.915 C 617.990 141.915 564.679 141.915 564.673 141.915 M 488.169 141.915 C 488.169 141.913 488.169 119.893 488.169 119.891 C 488.174 119.891 541.485 119.891 541.490 119.891 C 541.490 119.893 541.490 141.913 541.490 141.915 C 541.485 141.915 488.174 141.915 488.169 141.915 M 411.664 141.915 C 411.664 141.913 411.664 119.893 411.664 119.891 C 411.670 119.891 464.980 119.891 464.986 119.891 C 464.986 119.893 464.986 141.913 464.986 141.915 C 464.980 141.915 411.670 141.915 411.664 141.915 M 333.339 141.929 C 333.339 141.926 333.339 119.907 333.339 119.905 C 333.345 119.905 386.655 119.905 386.661 119.905 C 386.661 119.907 386.661 141.926 386.661 141.929 C 386.655 141.929 333.345 141.929 333.339 141.929 M 252.280 141.915 C 252.280 141.913 252.280 119.893 252.280 119.891 C 252.285 119.891 305.596 119.891 305.601 119.891 C 305.601 119.893 305.601 141.913 305.601 141.915 C 305.596 141.915 252.285 141.915 252.280 141.915 M 177.514 141.915 C 177.514 141.913 177.514 119.893 177.514 119.891 C 177.519 119.891 230.830 119.891 230.835 119.891 C 230.835 119.893 230.835 141.913 230.835 141.915 C 230.830 141.915 177.519 141.915 177.514 141.915 M 99.850 141.915 C 99.850 141.913 99.850 119.893 99.850 119.891 C 99.855 119.891 153.166 119.891 153.171 119.891 C 153.171 119.893 153.171 141.913 153.171 141.915 C 153.166 141.915 99.855 141.915 99.850 141.915 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 192.908 600.956 C 192.925 600.957 280.155 613.216 360.000 613.216 C 439.845 613.216 471.395 605.042 527.092 600.956 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 192.908 600.956 C 192.925 600.957 280.155 613.216 360.000 613.216 C 439.845 613.216 471.395 605.042 527.092 600.956 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":218.519,\\\"max\\\":501.481},\\\"y\\\":{\\\"min\\\":369.039,\\\"max\\\":598.767}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":697.048,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":120.923,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":120.676,\\\"y\\\":300.037,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872899646819,\\\"y\\\":0.00504181605089226}},{\\\"point\\\":{\\\"x\\\":599.394,\\\"y\\\":300.037,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872899646819,\\\"y\\\":0.005041816050892248}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":524.77,\\\"y\\\":628.832,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128672065637021,\\\"y\\\":0.7012990416406288}},{\\\"point\\\":{\\\"x\\\":192.71,\\\"y\\\":628.875,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987165766289302,\\\"y\\\":0.7153985920757383}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":615.62,\\\"y\\\":120.741,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6313760464203763,\\\"y\\\":-0.7754768133262109}},{\\\"point\\\":{\\\"x\\\":104.217,\\\"y\\\":120.813,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817008680184344,\\\"y\\\":-0.7316310043614288}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":642.722,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"moon\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":41.34599999449275,\\\"max\\\":678.6540000053045},\\\"y\\\":{\\\"min\\\":27.221681803787877,\\\"max\\\":664.5353181875051}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"moon\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"moon\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 662.535 C 535.267 662.535 676.655 521.143 676.654 345.876 C 676.653 170.610 535.265 29.222 360.000 29.222 C 184.735 29.222 43.347 170.610 43.346 345.876 C 43.345 521.143 184.733 662.535 360.000 662.535 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 662.535 C 443.695 662.784 544.718 516.856 544.717 345.876 C 544.716 174.897 443.697 28.973 360.000 29.222 C 179.528 29.759 43.347 170.610 43.346 345.876 C 43.345 521.143 179.528 661.998 360.000 662.535 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":106.584,\\\"max\\\":495.737},\\\"y\\\":{\\\"min\\\":151.302,\\\"max\\\":540.455}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":694.184,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":29.966,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":45.191,\\\"y\\\":346.779,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999874539541367,\\\"y\\\":0.005009184995916817}},{\\\"point\\\":{\\\"x\\\":675.814,\\\"y\\\":346.779,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999874539541367,\\\"y\\\":0.005009184995916817}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":584.24,\\\"y\\\":570.559,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712863129036721,\\\"y\\\":0.7013031864036948}},{\\\"point\\\":{\\\"x\\\":136.85,\\\"y\\\":570.606,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698734938016125,\\\"y\\\":0.7153806583879677}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":583.76,\\\"y\\\":123.1,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314567935596902,\\\"y\\\":-0.7754110638024936}},{\\\"point\\\":{\\\"x\\\":137,\\\"y\\\":123.176,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817359117130555,\\\"y\\\":-0.7315983506547625}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":660.934,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"moon_halves\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":60.409,\\\"max\\\":659.591},\\\"y\\\":{\\\"min\\\":21.75,\\\"max\\\":620.932}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"moon_halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"moon_half_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 23.750 C 277.643 23.750 203.245 56.969 149.436 110.777 C 95.628 164.585 62.409 238.983 62.409 321.341 C 62.409 403.698 96.035 477.692 149.436 531.905 C 200.083 583.321 262.432 612.711 347.505 618.293 C 352.108 618.595 359.999 618.932 360.000 618.932 C 360.000 618.872 360.000 23.809 360.000 23.750 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"moon_half\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 23.750 C 442.357 23.750 516.755 56.969 570.564 110.777 C 624.372 164.585 657.591 238.983 657.591 321.341 C 657.591 403.698 623.965 477.692 570.564 531.905 C 519.917 583.321 457.568 612.711 372.495 618.293 C 367.892 618.595 360.001 618.932 360.000 618.932 C 360.000 618.872 360.000 23.809 360.000 23.750 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":227.489,\\\"max\\\":492.511},\\\"y\\\":{\\\"min\\\":188.829,\\\"max\\\":453.852}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":699.841,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":22.469,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":61.696,\\\"y\\\":322.191,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872464433514,\\\"y\\\":0.0050504406386037495}},{\\\"point\\\":{\\\"x\\\":658.304,\\\"y\\\":322.191,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872464433514,\\\"y\\\":0.00505044063860372}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":571.542,\\\"y\\\":533.9,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128668713378294,\\\"y\\\":0.7012993823960024}},{\\\"point\\\":{\\\"x\\\":148.284,\\\"y\\\":533.944,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987075287412373,\\\"y\\\":0.7154074288685526}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":571.69,\\\"y\\\":110.579,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314662269468523,\\\"y\\\":-0.7754033816185653}},{\\\"point\\\":{\\\"x\\\":149.029,\\\"y\\\":110.651,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817404632686703,\\\"y\\\":-0.7315941092861662}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":617.661,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"moons_triple\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":25.343,\\\"max\\\":694.657},\\\"y\\\":{\\\"min\\\":215.496,\\\"max\\\":504.504}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"moons_triple\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"moons_triple\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 146.244 360.000 C 146.238 431.046 98.743 478.753 27.556 494.460 C 42.419 500.025 58.429 502.504 74.992 502.504 C 153.867 502.504 217.496 438.875 217.496 360.000 C 217.496 281.125 153.867 217.496 74.992 217.496 C 58.428 217.496 42.207 220.161 27.343 225.615 C 98.743 241.247 146.250 288.947 146.244 360.000 M 573.756 360.000 C 573.762 431.046 621.257 478.753 692.445 494.460 C 677.581 500.025 661.572 502.504 645.008 502.504 C 566.133 502.504 502.504 438.875 502.504 360.000 C 502.504 281.125 566.133 217.496 645.008 217.496 C 661.572 217.496 677.794 220.161 692.657 225.615 C 621.257 241.247 573.750 288.947 573.756 360.000 M 217.496 360.000 C 217.496 438.875 281.125 502.504 360.000 502.504 C 438.875 502.504 502.504 438.875 502.504 360.000 C 502.504 281.125 438.875 217.496 360.000 217.496 C 281.125 217.496 217.496 281.125 217.496 360.000 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":249.679,\\\"max\\\":470.321},\\\"y\\\":{\\\"min\\\":249.679,\\\"max\\\":470.321}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":622.778,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":215.162,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":64.879,\\\"y\\\":360.931,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873867669753,\\\"y\\\":0.00502257971122445}},{\\\"point\\\":{\\\"x\\\":655.121,\\\"y\\\":360.931,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873867669753,\\\"y\\\":0.005022579711224459}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":505.559,\\\"y\\\":506.486,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712942786860624,\\\"y\\\":0.7012222063393363}},{\\\"point\\\":{\\\"x\\\":214.321,\\\"y\\\":506.516,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987113441058592,\\\"y\\\":0.7154037025468792}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":505.661,\\\"y\\\":215.205,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6313988886457422,\\\"y\\\":-0.7754582151327831}},{\\\"point\\\":{\\\"x\\\":214.834,\\\"y\\\":215.254,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817486398936555,\\\"y\\\":-0.7315864897625917}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":505.945,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"mosque\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":34.566,\\\"max\\\":685.434},\\\"y\\\":{\\\"min\\\":25.323314252278315,\\\"max\\\":681.886}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"mosque\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"mosque\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 649.194 178.256 C 658.365 178.519 667.960 172.137 668.562 163.441 C 665.441 168.860 659.716 172.678 653.075 172.678 C 643.759 172.678 636.244 165.163 636.244 155.847 C 636.244 146.531 645.311 139.367 653.075 139.014 C 653.720 138.985 650.495 139.083 649.194 139.083 C 638.353 139.083 629.607 147.829 629.608 158.670 C 629.608 169.511 639.586 177.981 649.194 178.256 M 621.597 251.007 C 631.092 251.157 665.384 251.466 674.117 251.007 C 674.667 251.227 683.199 234.180 683.248 223.826 C 683.346 202.797 647.833 183.426 647.829 183.422 C 647.826 183.426 612.313 202.797 612.410 223.826 C 612.457 234.178 621.597 251.007 621.597 251.007 M 625.258 679.720 C 625.258 679.678 625.258 254.695 625.258 254.653 C 625.262 254.653 668.357 254.653 668.361 254.653 C 668.361 254.695 668.361 679.678 668.361 679.720 C 668.357 679.720 625.262 679.720 625.258 679.720 M 96.320 679.886 C 96.320 679.885 96.320 661.963 96.320 661.961 C 96.372 661.961 623.468 661.961 623.521 661.961 C 623.521 661.963 623.521 679.885 623.521 679.886 C 623.468 679.886 96.372 679.886 96.320 679.886 M 239.566 442.493 C 239.566 442.490 239.566 411.768 239.566 411.765 C 239.590 411.765 480.251 411.765 480.275 411.765 C 480.275 411.768 480.275 442.490 480.275 442.493 C 480.251 442.493 239.590 442.493 239.566 442.493 M 100.278 464.254 C 100.278 464.252 100.278 446.330 100.278 446.329 C 100.330 446.329 619.511 446.329 619.563 446.329 C 619.563 446.330 619.563 464.252 619.563 464.254 C 619.511 464.254 100.330 464.254 100.278 464.254 M 99.937 656.705 C 99.937 656.686 99.937 468.264 99.937 468.245 C 99.989 468.245 619.852 468.245 619.904 468.245 C 619.904 468.264 619.904 656.686 619.904 656.705 C 619.852 656.705 99.989 656.705 99.937 656.705 M 74.215 178.256 C 83.386 178.519 92.983 172.137 93.584 163.441 C 90.464 168.860 84.738 172.678 78.097 172.678 C 68.781 172.678 61.266 165.163 61.265 155.847 C 61.265 146.530 70.333 139.367 78.097 139.014 C 78.742 138.985 75.516 139.083 74.215 139.083 C 63.374 139.083 54.629 147.829 54.629 158.670 C 54.629 169.511 64.607 177.981 74.215 178.256 M 46.618 251.007 C 56.113 251.157 90.405 251.466 99.137 251.007 C 99.688 251.227 108.221 234.180 108.270 223.826 C 108.369 202.797 72.854 183.426 72.850 183.422 C 72.847 183.426 37.335 202.797 37.431 223.826 C 37.479 234.178 46.618 251.007 46.618 251.007 M 50.280 679.720 C 50.280 679.678 50.280 254.695 50.280 254.653 C 50.284 254.653 93.379 254.653 93.383 254.653 C 93.383 254.695 93.383 679.678 93.383 679.720 C 93.379 679.720 50.284 679.720 50.280 679.720 M 360.293 161.160 C 391.567 162.054 424.292 140.291 426.340 110.636 C 415.702 129.117 396.176 142.138 373.531 142.138 C 341.762 142.138 316.133 116.510 316.132 84.741 C 316.132 52.971 347.055 28.544 373.531 27.342 C 375.730 27.242 364.729 27.576 360.293 27.575 C 323.324 27.574 293.501 57.399 293.501 94.368 C 293.502 131.337 327.529 160.222 360.293 161.160 M 261.875 407.484 C 297.368 407.484 425.508 408.687 458.169 407.484 C 459.988 408.244 492.300 352.866 492.301 318.429 C 492.301 245.157 359.934 186.061 359.921 186.048 C 359.907 186.061 227.541 245.157 227.541 318.429 C 227.541 352.866 261.875 407.484 261.875 407.484 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 354.199 191.615 C 348.278 185.689 359.920 164.285 359.921 164.282 C 359.921 164.285 371.564 185.688 365.643 191.615 C 363.217 194.044 356.625 194.044 354.199 191.615 M 611.545 354.526 C 611.545 354.524 611.545 330.947 611.545 330.944 C 611.552 330.944 683.426 330.944 683.434 330.944 C 683.434 330.947 683.434 354.524 683.434 354.526 C 683.432 354.528 666.040 367.619 666.038 367.621 C 666.034 367.621 628.944 367.621 628.940 367.621 C 628.938 367.619 611.546 354.528 611.545 354.526 M 36.566 354.526 C 36.566 354.524 36.566 330.947 36.566 330.944 C 36.574 330.944 108.448 330.944 108.455 330.944 C 108.455 330.947 108.455 354.524 108.455 354.526 C 108.454 354.528 91.061 367.619 91.059 367.621 C 91.056 367.621 53.966 367.621 53.962 367.621 C 53.961 367.619 36.568 354.528 36.566 354.526 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 193.925 549.666 C 196.641 524.802 165.805 496.848 165.802 496.843 C 165.799 496.848 135.363 521.599 137.679 549.666 C 139.403 570.555 138.266 648.235 138.266 648.245 C 138.271 648.245 193.368 648.485 193.373 648.485 C 193.374 648.475 191.551 571.397 193.925 549.666 M 291.233 549.666 C 293.949 524.802 263.113 496.848 263.110 496.843 C 263.107 496.848 232.670 521.598 234.986 549.666 C 236.710 570.555 235.574 648.235 235.575 648.245 C 235.580 648.245 290.676 648.485 290.681 648.485 C 290.681 648.475 288.859 571.397 291.233 549.666 M 487.129 549.666 C 489.845 524.802 459.009 496.848 459.006 496.843 C 459.003 496.848 428.567 521.599 430.884 549.666 C 432.607 570.555 431.471 648.235 431.471 648.245 C 431.476 648.245 486.573 648.485 486.579 648.485 C 486.579 648.475 484.755 571.397 487.129 549.666 M 584.437 549.666 C 587.153 524.803 556.317 496.848 556.314 496.843 C 556.311 496.848 525.875 521.599 528.191 549.666 C 529.915 570.555 528.779 648.235 528.779 648.245 C 528.784 648.245 583.879 648.485 583.885 648.485 C 583.885 648.475 582.063 571.397 584.437 549.666 M 332.296 549.666 C 329.579 524.803 360.415 496.848 360.418 496.843 C 360.421 496.848 390.857 521.599 388.541 549.666 C 386.817 570.555 387.953 648.235 387.953 648.245 C 387.948 648.245 332.853 648.485 332.847 648.485 C 332.847 648.475 334.670 571.397 332.296 549.666 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":281.18,\\\"max\\\":438.82},\\\"y\\\":{\\\"min\\\":240.908,\\\"max\\\":398.547}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":704.459,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":16.94,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":49.715,\\\"y\\\":453.909,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873200064072,\\\"y\\\":0.005035854088752079}},{\\\"point\\\":{\\\"x\\\":669.129,\\\"y\\\":453.909,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873181281341,\\\"y\\\":0.005036227050266405}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":593.334,\\\"y\\\":676.855,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129329685826651,\\\"y\\\":0.7012321885851422}},{\\\"point\\\":{\\\"x\\\":127.799,\\\"y\\\":676.903,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986883991125066,\\\"y\\\":0.7154261114507933}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.957,\\\"y\\\":674.905,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":71.808,\\\"y\\\":159.66,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.005036227050268488,\\\"y\\\":-0.9999873181281341}},{\\\"point\\\":{\\\"x\\\":648.191,\\\"y\\\":159.66,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005110287292647629,\\\"y\\\":-0.9999869423966429}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"mouth_open\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":63.745000000000005,\\\"max\\\":656.255},\\\"y\\\":{\\\"min\\\":131.60921256044657,\\\"max\\\":600.078}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"mouth_open\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"mouth_open\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 204.837 C 382.445 204.837 403.226 205.660 421.595 206.981 C 442.888 208.631 462.142 211.066 478.593 213.802 C 496.048 216.846 511.445 220.427 524.560 224.214 C 572.240 238.076 594.244 255.631 592.463 266.433 C 590.779 276.643 568.409 275.291 524.560 271.754 C 511.044 270.786 495.642 269.618 478.593 268.494 C 461.346 267.412 442.292 266.382 421.595 265.647 C 402.720 265.006 382.613 264.586 360.000 264.425 C 360.920 264.594 360.919 264.594 360.919 264.594 C 360.919 264.594 360.919 264.594 360.000 264.425 C 341.439 264.446 324.029 264.763 305.760 265.501 C 284.638 266.137 265.431 267.118 248.761 268.015 C 231.270 269.142 215.714 270.362 202.795 271.246 C 153.668 275.236 129.239 277.170 127.537 266.433 C 125.730 255.032 150.287 236.135 202.795 222.242 C 216.309 218.640 231.740 215.375 248.761 212.685 C 265.918 210.035 284.816 207.927 305.760 206.523 C 322.459 205.451 340.607 204.837 360.000 204.837 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 457.972 C 382.357 457.974 402.841 457.570 421.595 457.122 C 443.117 456.382 462.200 455.376 478.593 454.458 C 496.455 453.413 511.597 452.416 524.560 451.733 C 553.281 450.476 568.099 451.377 569.587 459.192 C 571.228 467.805 556.909 483.949 524.560 498.784 C 512.163 504.499 496.887 509.997 478.593 514.706 C 461.905 518.989 442.716 522.587 421.595 524.939 C 402.505 527.103 382.175 528.339 360.000 528.426 C 360.000 528.441 360.000 528.441 360.000 528.441 C 360.000 528.441 360.000 528.441 360.000 528.426 C 340.416 528.518 322.230 527.727 305.760 526.184 C 284.318 524.304 265.110 521.298 248.761 517.834 C 231.174 513.933 215.908 509.272 202.795 504.263 C 161.685 488.400 143.067 469.039 144.897 459.192 C 146.555 450.265 165.171 450.123 202.795 452.151 C 215.621 452.856 230.858 453.835 248.761 454.842 C 265.474 455.723 284.470 456.598 305.760 457.212 C 322.426 457.669 340.522 457.971 360.000 457.972 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 524.560 271.754 C 524.560 254.037 524.560 238.216 524.560 224.214 C 572.240 238.076 594.244 255.631 592.463 266.433 C 590.779 276.643 568.409 275.291 524.560 271.754 C 511.044 270.786 495.642 269.618 478.593 268.494 C 478.593 249.595 478.593 230.443 478.593 213.802 C 496.048 216.846 511.445 220.427 524.560 224.214 M 421.595 265.647 C 421.595 243.446 421.595 223.927 421.595 206.981 C 442.888 208.631 462.142 211.066 478.593 213.802 M 360.000 264.425 C 360.000 248.138 360.000 222.165 360.000 204.837 C 340.607 204.837 322.459 205.451 305.760 206.523 C 305.760 224.270 305.760 250.289 305.760 265.501 C 284.638 266.137 265.431 267.118 248.761 268.015 C 248.761 252.867 248.761 229.692 248.761 212.685 C 265.918 210.035 284.816 207.927 305.760 206.523 M 202.795 271.246 C 202.795 258.139 202.795 239.034 202.795 222.242 C 216.309 218.640 231.740 215.375 248.761 212.685 M 202.795 504.263 C 202.795 489.464 202.795 471.517 202.795 452.151 C 215.621 452.856 230.858 453.835 248.761 454.842 C 248.761 480.215 248.761 501.968 248.761 517.834 C 231.174 513.933 215.908 509.272 202.795 504.263 C 161.685 488.400 143.067 469.039 144.897 459.192 C 146.555 450.265 165.171 450.123 202.795 452.151 M 305.760 526.184 C 305.760 510.222 305.760 485.576 305.760 457.212 C 322.426 457.669 340.522 457.971 360.000 457.972 C 360.000 487.622 360.000 512.579 360.000 528.426 C 340.416 528.518 322.230 527.727 305.760 526.184 C 284.318 524.304 265.110 521.298 248.761 517.834 M 524.560 498.784 C 524.560 485.382 524.560 469.277 524.560 451.733 C 553.281 450.476 568.099 451.377 569.587 459.192 C 571.228 467.805 556.909 483.949 524.560 498.784 C 512.163 504.499 496.887 509.997 478.593 514.706 C 478.593 499.170 478.593 478.327 478.593 454.458 C 496.455 453.413 511.597 452.416 524.560 451.733 M 421.595 524.939 C 421.595 508.540 421.595 484.866 421.595 457.122 C 443.117 456.382 462.200 455.376 478.593 454.458 M 248.761 454.842 C 265.474 455.723 284.470 456.598 305.760 457.212 M 360.000 528.441 C 360.000 528.441 360.000 528.441 360.000 528.426 C 360.000 528.441 360.000 528.441 360.000 528.441 C 382.175 528.339 402.505 527.103 421.595 524.939 C 442.716 522.587 461.905 518.989 478.593 514.706 M 360.000 457.972 C 382.357 457.974 402.841 457.570 421.595 457.122 M 127.537 266.433 C 125.730 255.032 150.287 236.135 202.795 222.242 M 202.795 271.246 C 153.668 275.236 129.239 277.170 127.537 266.433 M 248.761 268.015 C 231.270 269.142 215.714 270.362 202.795 271.246 M 360.000 264.425 C 341.439 264.446 324.029 264.763 305.760 265.501 M 360.919 264.594 C 360.919 264.594 360.919 264.594 360.000 264.425 C 360.920 264.594 360.919 264.594 360.919 264.594 M 421.595 265.647 C 402.720 265.006 382.613 264.586 360.000 264.425 M 478.593 268.494 C 461.346 267.412 442.292 266.382 421.595 265.647 M 360.000 204.837 C 382.445 204.837 403.226 205.660 421.595 206.981 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 238.429 140.858 C 305.404 117.459 359.988 158.195 360.000 158.196 C 360.012 158.195 414.596 117.459 481.571 140.858 C 633.731 194.018 654.238 359.960 654.255 359.982 C 654.226 359.968 578.030 217.255 360.000 217.255 C 141.970 217.255 65.774 359.968 65.745 359.982 C 65.762 359.960 86.269 194.018 238.429 140.858 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 598.078 C 107.654 598.078 65.774 360.006 65.745 359.982 C 65.774 359.996 143.025 499.047 360.000 499.047 C 576.975 499.047 654.226 359.996 654.255 359.982 C 654.226 360.006 612.346 598.078 360.000 598.078 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":262.539,\\\"max\\\":457.461},\\\"y\\\":{\\\"min\\\":263.458,\\\"max\\\":458.381}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":689.91,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":135.109,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":47.253,\\\"y\\\":360.933,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872484249872,\\\"y\\\":0.00505004825946872}},{\\\"point\\\":{\\\"x\\\":672.747,\\\"y\\\":360.933,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872484249872,\\\"y\\\":0.005050048259468683}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":556.215,\\\"y\\\":534.405,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129226936877423,\\\"y\\\":0.7012426347741655}},{\\\"point\\\":{\\\"x\\\":163.623,\\\"y\\\":534.446,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987144382969347,\\\"y\\\":0.7154006805388146}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":561.176,\\\"y\\\":181.639,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.631434442037233,\\\"y\\\":-0.7754292652519172}},{\\\"point\\\":{\\\"x\\\":159.507,\\\"y\\\":181.707,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817224709697205,\\\"y\\\":-0.731610875107074}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":595.263,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"muscle_arm\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":15.767522580951432,\\\"max\\\":708.3127636367219},\\\"y\\\":{\\\"min\\\":11.112318469537335,\\\"max\\\":673.1323555909461}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"muscle_arm\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"muscle_arm\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 460.879 191.928 C 460.872 191.928 416.812 213.571 391.859 196.608 C 386.155 192.729 384.642 182.537 384.641 182.535 C 384.641 182.538 392.903 207.938 382.103 210.854 C 349.290 219.715 298.861 219.939 287.275 206.170 C 283.300 201.448 285.526 173.655 285.526 173.652 C 285.521 173.648 247.019 146.324 244.099 134.469 C 238.521 111.834 274.429 45.788 288.343 34.989 C 306.776 20.683 405.321 7.784 431.233 15.349 C 451.125 21.155 493.768 59.557 517.197 85.130 C 555.757 127.217 600.346 203.120 616.938 237.633 C 642.242 290.267 694.783 462.294 700.551 502.654 C 702.283 514.775 712.071 573.543 701.409 586.109 C 696.368 592.050 663.323 596.402 663.319 596.403 C 663.293 596.410 514.280 654.281 398.095 667.033 C 332.586 674.223 295.137 671.357 243.393 663.077 C 212.771 658.177 155.353 637.881 155.344 637.878 C 155.335 637.881 126.601 680.468 61.500 668.808 C 3.256 658.375 18.555 537.104 22.624 404.062 C 25.112 322.708 95.718 313.579 155.498 324.358 C 220.576 336.093 231.142 390.061 231.149 390.068 C 231.149 390.068 231.388 390.023 231.424 389.989 C 251.928 370.504 324.557 348.760 362.274 347.695 C 417.768 346.128 453.590 383.561 452.303 380.623 C 445.979 366.176 436.425 337.699 438.606 303.354 C 442.043 249.207 460.876 191.939 460.879 191.928 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 231.424 389.989 C 235.736 405.531 240.048 421.072 244.360 436.614 M 232.487 520.200 C 232.503 520.207 306.430 582.948 390.193 586.481 C 454.415 589.189 473.867 561.100 515.704 548.409 M 155.344 637.878 C 155.352 637.866 181.231 571.197 232.487 520.200 C 255.875 496.932 263.374 497.248 278.817 485.772 M 663.319 596.403 C 618.730 595.036 588.780 581.753 529.553 592.301 M 338.564 70.688 C 338.562 70.694 315.529 100.843 320.451 130.854 C 323.071 146.827 359.089 174.306 359.093 174.310 C 359.096 174.311 376.125 179.794 384.641 182.535 M 318.024 172.847 C 318.021 172.843 286.439 149.134 283.704 134.061 C 279.070 108.524 298.636 73.085 298.638 73.078 M 402.128 167.136 C 402.124 167.132 360.938 136.424 358.599 126.218 C 350.898 92.618 376.082 68.171 376.084 68.165 M 285.526 173.652 C 285.529 173.652 308.127 171.816 318.024 172.847 C 332.032 174.306 359.089 174.310 359.093 174.310 C 359.096 174.310 379.496 174.877 387.934 172.919 C 392.413 171.880 402.127 167.137 402.128 167.136 C 402.131 167.135 426.721 165.155 433.872 155.151 C 446.547 137.417 441.545 102.238 430.875 95.079 C 410.302 81.276 385.044 102.578 408.346 123.408 M 452.303 380.623 C 479.793 404.490 488.154 411.827 517.805 477.656 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":272.576,\\\"max\\\":447.979},\\\"y\\\":{\\\"min\\\":380.787,\\\"max\\\":556.189}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":109.354,\\\"y\\\":489.823,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}},{\\\"point\\\":{\\\"x\\\":363.18,\\\"y\\\":705.349,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.014809671969189996,\\\"y\\\":-0.9998903307944151}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":362.519,\\\"y\\\":21.596,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":470.039,\\\"y\\\":40.955,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5932645727486796,\\\"y\\\":-0.8050075445120543}},{\\\"point\\\":{\\\"x\\\":273.335,\\\"y\\\":53.364,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7295033267832964,\\\"y\\\":-0.6839772629350358}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":630.132,\\\"y\\\":264.957,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8755179475738375,\\\"y\\\":-0.4831855994088555}},{\\\"point\\\":{\\\"x\\\":437.148,\\\"y\\\":287.296,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9845161967421302,\\\"y\\\":-0.17529363466027856}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":512.683,\\\"y\\\":643.115,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5860442215265754,\\\"y\\\":0.8102790694663847}},{\\\"point\\\":{\\\"x\\\":248.935,\\\"y\\\":661.414,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5860442215265728,\\\"y\\\":0.8102790694663866}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":21.709,\\\"y\\\":486.949,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"mushroom_cloud\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":11.532,\\\"max\\\":708.468},\\\"y\\\":{\\\"min\\\":55.27504937218935,\\\"max\\\":608.9494061974332}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"mushroom_cloud\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"Layer_159\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.052 366.609 C 352.672 361.983 338.525 359.930 329.478 362.205 C 329.478 315.618 329.477 257.333 329.478 257.322 C 329.484 257.323 390.620 257.322 390.626 257.322 C 390.626 257.333 390.695 325.222 390.626 362.269 C 380.898 360.812 368.774 362.623 360.052 366.609 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 390.626 426.474 C 390.433 420.257 390.626 413.827 390.626 407.447 C 381.314 408.424 369.967 405.633 360.052 401.063 C 350.067 407.320 339.661 411.069 329.478 412.084 C 329.478 415.695 329.298 420.465 329.478 424.813 C 333.540 523.211 325.709 586.854 291.433 601.293 C 324.245 609.434 395.900 608.211 428.567 601.293 C 393.284 586.784 386.850 518.645 390.626 426.474 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 329.478 424.813 C 329.298 420.465 329.478 415.695 329.478 412.084 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 329.478 412.084 C 339.661 411.069 350.067 407.320 360.052 401.063 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.052 401.063 C 369.967 405.633 381.314 408.424 390.626 407.447 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 390.626 407.447 C 390.626 413.827 390.433 420.257 390.626 426.474 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 390.626 362.269 C 380.898 360.812 368.774 362.623 360.052 366.609 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.052 366.609 C 352.672 361.983 338.525 359.930 329.478 362.205 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 294.230 414.374 C 298.749 427.379 314.270 429.784 329.478 424.813 C 329.298 420.465 329.478 415.695 329.478 412.084 C 339.661 411.069 350.067 407.320 360.052 401.063 C 369.967 405.633 381.314 408.424 390.626 407.447 C 390.626 413.827 390.433 420.257 390.626 426.474 C 394.054 425.440 397.135 423.844 399.874 421.538 C 408.698 429.047 421.902 422.107 425.874 414.374 C 440.402 419.822 448.471 413.854 449.464 403.241 C 461.986 396.150 457.873 377.592 436.987 380.583 C 437.726 370.494 416.707 364.039 403.990 369.302 C 401.780 365.313 396.533 363.180 390.626 362.269 C 380.898 360.812 368.774 362.623 360.052 366.609 C 352.672 361.983 338.525 359.930 329.478 362.205 C 326.214 362.954 323.596 364.353 322.288 366.421 C 313.387 359.366 294.850 366.069 294.230 372.762 C 275.253 369.439 248.676 381.004 266.111 399.125 C 256.308 409.213 281.529 417.436 294.230 414.374 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 294.230 414.374 C 298.749 427.379 314.270 429.784 329.478 424.813 C 329.298 420.465 329.478 415.695 329.478 412.084 C 322.824 412.776 316.148 412.152 309.999 410.126 M 266.111 399.125 C 256.308 409.213 281.529 417.436 294.230 414.374 M 294.230 372.762 C 275.253 369.439 248.676 381.004 266.111 399.125 M 322.288 366.421 C 313.387 359.366 294.850 366.069 294.230 372.762 M 329.478 362.205 C 326.214 362.954 323.596 364.353 322.288 366.421 M 360.052 366.609 C 352.672 361.983 338.525 359.930 329.478 362.205 M 390.626 362.269 C 380.898 360.812 368.774 362.623 360.052 366.609 M 403.990 369.302 C 401.780 365.313 396.533 363.180 390.626 362.269 M 436.987 380.583 C 437.726 370.494 416.707 364.039 403.990 369.302 M 449.464 403.241 C 461.986 396.150 457.873 377.592 436.987 380.583 M 425.874 414.374 C 440.402 419.822 448.471 413.854 449.464 403.241 M 399.874 421.538 C 408.698 429.047 421.902 422.107 425.874 414.374 M 390.626 426.474 C 394.054 425.440 397.135 423.844 399.874 421.538 M 390.626 426.474 C 390.433 420.257 390.626 413.827 390.626 407.447 C 381.314 408.424 369.967 405.633 360.052 401.063 C 350.067 407.320 339.661 411.069 329.478 412.084 M 402.333 402.719 C 399.291 405.476 395.167 406.970 390.626 407.447 M 410.105 405.980 C 407.658 405.063 404.974 403.960 402.333 402.719 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 195.085 155.656 C 128.054 150.167 94.421 141.198 94.421 132.618 C 94.421 122.930 137.294 112.747 223.095 107.723 C 261.303 105.263 306.575 103.927 360.000 103.927 C 416.987 103.927 464.697 105.447 502.685 107.923 C 585.121 113.328 625.579 123.207 625.579 132.618 C 625.579 141.059 593.022 149.878 528.129 155.358 C 527.172 161.838 524.891 168.013 521.249 173.253 C 645.998 164.195 706.468 145.835 706.468 132.618 C 706.468 118.133 633.845 97.472 483.831 89.673 C 448.417 87.866 406.599 86.756 360.000 86.756 C 315.731 86.756 275.777 87.758 240.577 89.474 C 87.982 96.954 13.532 117.952 13.532 132.618 C 13.532 145.654 72.356 163.693 189.958 172.599 C 190.873 166.729 192.639 160.947 195.085 155.656 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 86.756 C 406.599 86.756 448.417 87.866 483.831 89.673 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 240.577 89.474 C 275.777 87.758 315.731 86.756 360.000 86.756 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 86.756 C 406.599 86.756 448.417 87.866 483.831 89.673 C 477.636 70.498 444.539 51.438 418.106 71.367 C 408.944 54.281 377.260 50.495 357.425 72.627 C 350.811 58.059 330.429 57.272 322.782 73.100 C 293.982 45.982 250.627 66.728 240.577 89.474 C 275.777 87.758 315.731 86.756 360.000 86.756 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 502.685 107.923 C 464.697 105.447 416.987 103.927 360.000 103.927 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 103.927 C 306.575 103.927 261.303 105.263 223.095 107.723 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 195.085 155.656 C 192.639 160.947 190.873 166.729 189.958 172.599 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 521.249 173.253 C 524.891 168.013 527.172 161.838 528.129 155.358 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 500.537 115.593 C 501.845 112.946 502.535 110.281 502.685 107.923 C 464.697 105.447 416.987 103.927 360.000 103.927 C 306.575 103.927 261.303 105.263 223.095 107.723 C 215.974 114.442 211.939 124.798 214.514 132.422 C 206.252 137.700 199.548 146.000 195.085 155.656 C 192.639 160.947 190.873 166.729 189.958 172.599 C 187.043 191.284 193.184 210.829 212.928 219.853 C 204.912 232.486 217.054 253.406 232.934 249.753 C 231.581 279.696 264.112 304.339 297.547 280.990 C 309.755 295.777 337.001 288.621 335.164 271.987 C 348.084 280.223 372.101 284.191 381.650 266.536 C 386.745 278.491 399.541 290.241 416.348 279.916 C 435.205 300.412 461.247 282.506 467.391 261.030 C 485.910 271.277 491.711 253.982 493.189 245.465 C 534.084 246.598 533.383 195.127 517.820 177.379 C 519.148 176.016 520.353 174.544 521.249 173.253 C 524.891 168.013 527.172 161.838 528.129 155.358 C 530.909 136.528 521.589 116.177 500.537 115.593 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":244.548,\\\"max\\\":475.452},\\\"y\\\":{\\\"min\\\":80.981,\\\"max\\\":264.569}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":568.327,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":60.665,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":254.945,\\\"y\\\":392.851,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999874490592741,\\\"y\\\":0.005010162065836666}},{\\\"point\\\":{\\\"x\\\":465.055,\\\"y\\\":392.851,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999874490592741,\\\"y\\\":0.005010162065836681}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":422.768,\\\"y\\\":600.353,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712849771995306,\\\"y\\\":0.7013167633575005}},{\\\"point\\\":{\\\"x\\\":297.181,\\\"y\\\":600.365,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986839770962036,\\\"y\\\":0.7154304299853563}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":545.846,\\\"y\\\":78.013,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314271402652349,\\\"y\\\":-0.7754352110501994}},{\\\"point\\\":{\\\"x\\\":174.808,\\\"y\\\":78.076,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817064105222439,\\\"y\\\":-0.7316258400664083}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":607.132,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"nestboxes_triple\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":357.43,\\\"max\\\":362.57},\\\"y\\\":{\\\"min\\\":137.019,\\\"max\\\":142.159}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"nestboxes_triple\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"triple_nest\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 142.159 C 361.422 142.159 362.570 141.012 362.570 139.589 C 362.570 138.167 361.422 137.019 360.000 137.019 C 358.578 137.019 357.430 138.167 357.430 139.589 C 357.430 141.012 358.578 142.159 360.000 142.159 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":276.113,\\\"max\\\":443.887},\\\"y\\\":{\\\"min\\\":23.193,\\\"max\\\":190.967}},{\\\"x\\\":{\\\"min\\\":234.169,\\\"max\\\":485.831},\\\"y\\\":{\\\"min\\\":138.2,\\\"max\\\":389.862}},{\\\"x\\\":{\\\"min\\\":171.253,\\\"max\\\":548.747},\\\"y\\\":{\\\"min\\\":310.71,\\\"max\\\":688.203}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":702.383,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":24.013,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":159.523,\\\"y\\\":356.615,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872021058309,\\\"y\\\":0.005059211850872006}},{\\\"point\\\":{\\\"x\\\":560.477,\\\"y\\\":356.615,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872021058309,\\\"y\\\":0.005059211850871984}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":588.197,\\\"y\\\":683.935,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128600680266917,\\\"y\\\":0.7013062978563508}},{\\\"point\\\":{\\\"x\\\":131.615,\\\"y\\\":683.982,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986748108596845,\\\"y\\\":0.715439381548279}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":491.51,\\\"y\\\":132.642,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314308837378318,\\\"y\\\":-0.7754321627725153}},{\\\"point\\\":{\\\"x\\\":229.156,\\\"y\\\":132.719,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817476458193734,\\\"y\\\":-0.7315874161163123}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":686.511,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"nestboxes_triple_2\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":574.404,\\\"max\\\":580.976},\\\"y\\\":{\\\"min\\\":352.412,\\\"max\\\":358.984}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"nestboxes_triple_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"triple_nest\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 574.404 355.698 C 574.404 357.517 575.872 358.984 577.690 358.984 C 579.509 358.984 580.976 357.517 580.976 355.698 C 580.976 353.879 579.509 352.412 577.690 352.412 C 575.872 352.412 574.404 353.879 574.404 355.698 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":524.731,\\\"max\\\":692.505},\\\"y\\\":{\\\"min\\\":271.81,\\\"max\\\":439.586}},{\\\"x\\\":{\\\"min\\\":325.836,\\\"max\\\":577.498},\\\"y\\\":{\\\"min\\\":229.867,\\\"max\\\":481.529}},{\\\"x\\\":{\\\"min\\\":27.495,\\\"max\\\":404.988},\\\"y\\\":{\\\"min\\\":166.952,\\\"max\\\":544.445}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":13.315,\\\"y\\\":355.698,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":691.685,\\\"y\\\":355.698,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":359.083,\\\"y\\\":155.221,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.005059211850872006,\\\"y\\\":-0.9999872021058309}},{\\\"point\\\":{\\\"x\\\":359.083,\\\"y\\\":556.175,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.005059211850871984,\\\"y\\\":0.9999872021058309}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":31.716,\\\"y\\\":127.313,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7154393815482779,\\\"y\\\":-0.6986748108596859}},{\\\"point\\\":{\\\"x\\\":31.763,\\\"y\\\":583.895,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7012685465265663,\\\"y\\\":0.7128972055300239}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":582.979,\\\"y\\\":224.854,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7315874161163123,\\\"y\\\":-0.6817476458193734}},{\\\"point\\\":{\\\"x\\\":583.056,\\\"y\\\":487.208,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7754321627725177,\\\"y\\\":0.6314308837378287}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":29.187,\\\"y\\\":355.698,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"oroboros\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":64.98738744248472,\\\"max\\\":655.0507988184054},\\\"y\\\":{\\\"min\\\":13.838513484342027,\\\"max\\\":664.711}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"oroboros\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"oroborus\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#CE4EFC54-0B04-493B-9F6D-76BD5ED9DE89_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 336.602 54.839 C 336.602 41.888 347.049 31.441 360.000 31.441 C 372.951 31.441 383.398 41.888 383.398 54.839 C 383.398 67.789 372.951 78.236 360.000 78.236 C 347.049 78.236 336.602 67.789 336.602 54.839 M 403.062 100.617 C 403.045 100.617 342.313 83.241 236.908 104.218 C 234.453 104.707 259.584 26.052 359.127 16.564 C 454.931 7.433 484.351 87.510 484.363 87.517 C 484.372 87.525 657.049 154.367 652.980 369.731 C 649.917 531.864 522.163 662.711 360.000 662.711 C 197.837 662.711 64.594 531.875 67.020 369.731 C 68.248 287.641 103.546 213.298 159.820 162.430 C 246.737 83.861 376.120 102.018 376.132 102.017 C 376.121 102.021 265.339 116.641 187.883 197.614 C 145.136 242.303 119.076 302.803 119.622 369.731 C 120.706 502.774 226.952 610.109 360.000 610.109 C 493.048 610.109 600.307 502.779 600.378 369.731 C 600.475 189.947 439.455 142.104 439.446 142.098 C 439.440 142.100 395.777 158.253 369.871 159.656 C 299.158 163.488 265.773 150.052 266.409 149.698 C 329.509 114.662 403.048 100.622 403.062 100.617 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":201.132,\\\"max\\\":518.868},\\\"y\\\":{\\\"min\\\":210.862,\\\"max\\\":528.599}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360.059,\\\"y\\\":706.895,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360.059,\\\"y\\\":18.869,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":69.842,\\\"y\\\":370.292,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.999987422795968,\\\"y\\\":0.005015401267889354}},{\\\"point\\\":{\\\"x\\\":651.204,\\\"y\\\":370.292,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.999987422795968,\\\"y\\\":0.005015401267889322}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":566.783,\\\"y\\\":576.592,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128927213698124,\\\"y\\\":0.7012731050154021}},{\\\"point\\\":{\\\"x\\\":154.34,\\\"y\\\":576.635,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986977361102832,\\\"y\\\":0.715416992777195}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":566.341,\\\"y\\\":164.086,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314105448370049,\\\"y\\\":-0.7754487242033716}},{\\\"point\\\":{\\\"x\\\":154.479,\\\"y\\\":164.156,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.681713396229111,\\\"y\\\":-0.7316193309377296}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360.059,\\\"y\\\":658.926,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"CE4EFC54-0B04-493B-9F6D-76BD5ED9DE89_0\\\",\\\"cx\\\":\\\"49.94%\\\",\\\"cy\\\":\\\"53.25%\\\",\\\"r\\\":\\\"56.85%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"80.00%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"palm\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":105.24657507715534,\\\"max\\\":616.8758522677604},\\\"y\\\":{\\\"min\\\":33.95146578872045,\\\"max\\\":659.447}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"palm\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"palm\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"palm_leaf_6\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 321.455 226.204 C 319.292 247.647 328.029 252.826 331.799 252.299 C 358.234 204.618 349.998 147.983 316.887 115.662 C 273.001 72.824 213.862 46.859 168.307 73.414 C 168.308 73.410 176.232 74.138 210.655 79.815 C 244.560 85.406 331.977 121.901 321.455 226.204 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 168.307 73.414 C 213.862 46.859 273.001 72.824 316.887 115.662 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 316.887 115.662 C 349.998 147.983 358.234 204.618 331.799 252.299 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 289.780 48.512 C 211.440 9.638 168.319 73.412 168.307 73.414 C 213.862 46.859 273.001 72.824 316.887 115.662 C 349.998 147.983 358.234 204.618 331.799 252.299 C 345.783 250.342 364.541 230.602 369.605 206.075 C 378.222 164.336 374.746 90.674 289.780 48.512 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"palm_leaf_5\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 324.565 233.506 C 338.198 250.198 348.038 247.683 350.331 244.643 C 335.308 192.236 289.437 158.012 243.170 158.571 C 181.847 159.312 121.669 182.770 108.234 233.760 C 108.232 233.756 114.350 228.667 142.705 208.341 C 170.633 188.320 258.252 152.313 324.565 233.506 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 108.234 233.760 C 121.669 182.770 181.847 159.312 243.170 158.571 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 243.170 158.571 C 289.437 158.012 335.308 192.236 350.331 244.643 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 176.520 130.256 C 93.637 158.163 108.241 233.749 108.234 233.760 C 121.669 182.770 181.847 159.312 243.170 158.571 C 289.437 158.012 335.308 192.236 350.331 244.643 C 358.836 233.372 358.141 206.149 344.379 185.225 C 320.958 149.618 266.413 99.989 176.520 130.256 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"palm_leaf_4\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 328.534 239.864 C 349.977 242.027 355.156 233.291 354.628 229.520 C 306.948 203.086 250.312 211.321 217.992 244.432 C 175.154 288.318 149.189 347.457 175.744 393.012 C 175.740 393.011 176.468 385.087 182.144 350.664 C 187.736 316.759 224.231 229.343 328.534 239.864 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 175.744 393.012 C 149.189 347.457 175.154 288.318 217.992 244.432 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 217.992 244.432 C 250.312 211.321 306.948 203.086 354.628 229.520 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 150.841 271.539 C 111.967 349.879 175.741 393.000 175.744 393.012 C 149.189 347.457 175.154 288.318 217.992 244.432 C 250.312 211.321 306.948 203.086 354.628 229.520 C 352.672 215.536 332.931 196.778 308.404 191.714 C 266.665 183.097 193.004 186.573 150.841 271.539 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"palm_leaf_3\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 401.201 226.204 C 403.364 247.647 394.628 252.826 390.857 252.299 C 364.422 204.618 372.658 147.983 405.769 115.662 C 449.655 72.824 508.794 46.859 554.349 73.414 C 554.348 73.410 546.424 74.138 512.001 79.815 C 478.096 85.406 390.679 121.901 401.201 226.204 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 554.349 73.414 C 508.794 46.859 449.655 72.824 405.769 115.662 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 405.769 115.662 C 372.658 147.983 364.422 204.618 390.857 252.299 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 432.876 48.512 C 511.216 9.637 554.337 73.412 554.349 73.414 C 508.794 46.859 449.655 72.824 405.769 115.662 C 372.658 147.983 364.422 204.618 390.857 252.299 C 376.873 250.342 358.115 230.602 353.051 206.075 C 344.434 164.336 347.910 90.674 432.876 48.512 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"palm_leaf_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 397.557 233.506 C 383.924 250.198 374.084 247.683 371.791 244.643 C 386.814 192.236 432.685 158.012 478.952 158.571 C 540.275 159.312 600.453 182.770 613.888 233.760 C 613.890 233.756 607.773 228.667 579.417 208.341 C 551.490 188.320 463.871 152.313 397.557 233.506 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 613.888 233.760 C 600.453 182.770 540.275 159.312 478.952 158.571 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 478.952 158.571 C 432.685 158.012 386.814 192.236 371.791 244.643 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 545.602 130.256 C 628.485 158.163 613.882 233.749 613.888 233.760 C 600.453 182.770 540.275 159.312 478.952 158.571 C 432.685 158.012 386.814 192.236 371.791 244.643 C 363.287 233.372 363.981 206.149 377.744 185.225 C 401.164 149.618 455.709 99.989 545.602 130.256 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"palm_leaf\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 393.589 239.864 C 372.146 242.027 366.966 233.291 367.494 229.520 C 415.174 203.086 471.810 211.321 504.131 244.432 C 546.969 288.318 572.934 347.457 546.379 393.012 C 546.383 393.011 545.655 385.087 539.978 350.664 C 534.387 316.759 497.892 229.343 393.589 239.864 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 546.379 393.012 C 572.934 347.457 546.969 288.318 504.131 244.432 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 504.131 244.432 C 471.810 211.321 415.174 203.086 367.494 229.520 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 571.281 271.539 C 610.155 349.879 546.381 393.000 546.379 393.012 C 572.934 347.457 546.969 288.318 504.131 244.432 C 471.810 211.321 415.174 203.086 367.494 229.520 C 369.451 215.536 389.191 196.778 413.718 191.714 C 455.457 183.097 529.119 186.573 571.281 271.539 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"Layer_63\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 327.637 241.105 C 327.639 241.104 360.873 230.601 360.875 230.601 C 360.877 230.601 394.111 241.104 394.113 241.105 C 394.113 241.110 396.014 293.142 396.014 293.148 C 396.014 293.153 397.914 345.185 397.915 345.190 C 397.915 345.196 399.816 397.228 399.816 397.233 C 399.816 397.239 401.717 449.271 401.717 449.276 C 401.717 449.281 403.618 501.314 403.618 501.319 C 403.618 501.324 405.519 553.357 405.519 553.362 C 405.519 553.367 407.420 605.399 407.420 605.404 C 407.420 605.410 409.321 657.442 409.321 657.447 C 409.319 657.447 312.431 657.447 312.428 657.447 C 312.429 657.442 314.329 605.410 314.330 605.404 C 314.330 605.399 316.231 553.367 316.231 553.362 C 316.231 553.357 318.131 501.324 318.132 501.319 C 318.132 501.314 320.033 449.281 320.033 449.276 C 320.033 449.271 321.934 397.239 321.934 397.233 C 321.934 397.228 323.835 345.196 323.835 345.191 C 323.835 345.185 325.736 293.153 325.736 293.148 C 325.736 293.142 327.637 241.110 327.637 241.105 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.875 177.995 C 390.590 177.995 407.773 211.853 402.975 241.179 C 399.213 264.175 322.537 264.175 318.775 241.179 C 313.977 211.853 331.159 177.995 360.875 177.995 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 314.330 605.404 C 345.360 605.404 376.390 605.404 407.420 605.404 C 407.420 605.399 405.519 553.367 405.519 553.362 C 375.756 553.362 345.994 553.362 316.231 553.362 C 316.231 553.357 318.131 501.324 318.132 501.319 C 346.627 501.319 375.123 501.319 403.618 501.319 C 403.618 501.324 405.519 553.357 405.519 553.362 M 323.835 345.191 C 348.528 345.191 373.221 345.190 397.915 345.190 C 397.915 345.196 399.816 397.228 399.816 397.233 C 373.855 397.233 347.895 397.233 321.934 397.233 C 321.934 397.228 323.835 345.196 323.835 345.191 C 323.835 345.185 325.736 293.153 325.736 293.148 C 349.162 293.148 372.588 293.148 396.014 293.148 C 396.014 293.153 397.914 345.185 397.915 345.190 M 320.033 449.276 C 347.261 449.276 374.489 449.276 401.717 449.276 C 401.717 449.281 403.618 501.314 403.618 501.319 M 320.033 449.276 C 320.033 449.271 321.934 397.239 321.934 397.233 M 318.132 501.319 C 318.132 501.314 320.033 449.281 320.033 449.276 M 314.330 605.404 C 314.330 605.399 316.231 553.367 316.231 553.362 M 399.816 397.233 C 399.816 397.239 401.717 449.271 401.717 449.276 \\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":696.665,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":61.97,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":239.751,\\\"y\\\":515.908,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873881623896,\\\"y\\\":0.005022301878863493}},{\\\"point\\\":{\\\"x\\\":480.249,\\\"y\\\":515.908,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873881623896,\\\"y\\\":0.005022301878863493}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":408.442,\\\"y\\\":655.159,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129148909156562,\\\"y\\\":0.7012505674227422}},{\\\"point\\\":{\\\"x\\\":311.425,\\\"y\\\":655.192,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987102292835594,\\\"y\\\":0.7154047913555766}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":110.967,\\\"y\\\":220.396,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817549810993712,\\\"y\\\":0.7315805804873418}},{\\\"point\\\":{\\\"x\\\":609.867,\\\"y\\\":220.48,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314625003704613,\\\"y\\\":0.7754064164203732}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":655.975,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"pear\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":161.41995995632925,\\\"max\\\":558.6024551489865},\\\"y\\\":{\\\"min\\\":23.022,\\\"max\\\":631.6607429693254}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"pear\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"pear\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 351.258 167.250 C 469.248 124.658 437.612 262.339 529.588 383.106 C 611.917 491.205 491.902 665.753 360.000 623.071 C 228.098 665.753 108.138 491.247 190.412 383.106 C 281.868 262.895 231.415 125.401 351.258 167.250 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S2\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 346.508 172.367 C 346.251 120.976 358.750 67.713 426.550 25.022 C 433.583 27.498 435.726 32.215 440.997 40.137 C 370.663 81.496 362.512 120.861 355.158 176.074 C 354.790 178.832 346.044 174.373 346.508 172.367 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S3\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 241.061 49.424 C 282.598 124.185 312.090 85.265 351.745 119.600 C 354.657 37.315 284.023 43.658 241.061 49.424 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":226.963,\\\"max\\\":493.037},\\\"y\\\":{\\\"min\\\":323.644,\\\"max\\\":589.719}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":690.505,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":49.036,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":225.295,\\\"y\\\":313.829,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872442960579,\\\"y\\\":0.005050865784810657}},{\\\"point\\\":{\\\"x\\\":494.705,\\\"y\\\":313.829,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872442960579,\\\"y\\\":0.005050865784810645}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":512.72,\\\"y\\\":581.104,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128978213717264,\\\"y\\\":0.7012679204722302}},{\\\"point\\\":{\\\"x\\\":207.092,\\\"y\\\":581.151,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987125593567204,\\\"y\\\":0.7154025156491843}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":625.018,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"pentacle\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":58.415,\\\"max\\\":661.585},\\\"y\\\":{\\\"min\\\":23.47,\\\"max\\\":626.64}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"pentacle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"pentacle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 25.470 C 525.818 25.470 659.585 159.237 659.585 325.055 C 659.585 490.874 525.818 624.640 360.000 624.640 C 194.182 624.640 60.415 490.874 60.415 325.055 C 60.415 159.237 194.182 25.470 360.000 25.470 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 62.291 C 505.438 62.291 622.764 179.617 622.764 325.055 C 622.764 470.493 505.438 587.820 360.000 587.820 C 214.562 587.820 97.236 470.493 97.236 325.055 C 97.236 179.617 214.562 62.291 360.000 62.291 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"star_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 338.540 402.401 C 338.535 402.397 293.453 369.657 293.448 369.654 C 293.446 369.652 279.300 359.378 272.226 354.241 C 272.220 354.258 218.004 521.231 217.999 521.248 C 218.013 521.238 360.019 418.021 360.033 418.010 C 360.036 418.009 381.477 402.424 381.479 402.422 C 381.484 402.419 426.585 369.637 426.590 369.634 C 426.589 369.632 421.121 352.783 418.386 344.358 C 418.380 344.362 360.028 386.775 360.022 386.779 C 360.020 386.781 338.542 402.399 338.540 402.401 C 338.532 402.406 265.595 455.413 265.588 455.418 C 265.591 455.410 284.162 398.242 293.448 369.654 M 426.590 369.634 C 426.593 369.643 454.481 455.372 454.484 455.381 C 454.477 455.375 381.487 402.428 381.479 402.422 M 388.031 251.009 C 378.680 222.246 359.981 164.728 359.978 164.719 C 359.975 164.728 331.911 251.011 331.908 251.020 C 331.907 251.023 326.586 267.511 323.924 275.757 C 323.931 275.757 396.069 275.742 396.076 275.742 C 404.826 275.765 422.324 275.811 422.326 275.811 C 428.084 293.518 439.596 328.925 439.598 328.931 C 439.599 328.933 445.077 345.781 447.816 354.206 C 447.830 354.195 589.836 250.978 589.851 250.968 C 589.833 250.968 414.278 251.003 414.260 251.003 C 405.517 251.005 388.034 251.009 388.031 251.009 C 388.026 251.009 350.616 251.016 331.908 251.020 M 439.598 328.931 C 464.005 311.193 512.812 275.724 512.820 275.719 C 512.811 275.719 422.335 275.811 422.326 275.811 M 280.433 328.963 C 286.183 311.254 297.682 275.843 297.683 275.837 C 297.684 275.835 303.054 259.296 305.740 251.025 C 305.722 251.025 130.167 251.061 130.149 251.061 C 130.164 251.071 272.212 354.231 272.226 354.241 M 502.110 521.191 C 502.104 521.174 447.822 354.222 447.816 354.206 M 360.033 418.010 C 360.048 418.021 502.096 521.181 502.110 521.191 M 359.967 84.018 C 359.961 84.035 305.745 251.009 305.740 251.025 M 414.260 251.003 C 414.255 250.986 359.972 84.035 359.967 84.018 M 360.022 386.779 C 360.016 386.775 301.648 344.385 301.642 344.381 C 301.644 344.374 323.922 275.764 323.924 275.757 M 396.076 275.742 C 396.078 275.749 418.384 344.351 418.386 344.358 M 297.683 275.837 C 267.516 275.818 207.189 275.780 207.180 275.780 C 207.188 275.785 280.426 328.958 280.433 328.963 C 280.436 328.964 294.572 339.242 301.642 344.381 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 589.851 250.968 C 589.833 250.968 414.278 251.003 414.260 251.003 C 414.255 250.986 359.972 84.035 359.967 84.018 C 359.961 84.035 305.745 251.009 305.740 251.025 C 305.722 251.025 130.167 251.061 130.149 251.061 C 130.164 251.071 272.212 354.231 272.226 354.241 C 272.220 354.258 218.004 521.231 217.999 521.248 C 218.013 521.238 360.019 418.021 360.033 418.010 C 360.048 418.021 502.096 521.181 502.110 521.191 C 502.104 521.174 447.822 354.222 447.816 354.206 C 447.830 354.195 589.836 250.978 589.851 250.968 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 338.540 402.401 C 338.535 402.397 293.453 369.657 293.448 369.654 C 293.446 369.652 279.300 359.378 272.226 354.241 C 272.220 354.258 218.004 521.231 217.999 521.248 C 218.013 521.238 360.019 418.021 360.033 418.010 C 360.036 418.009 381.477 402.424 381.479 402.422 C 381.484 402.419 426.585 369.637 426.590 369.634 C 426.589 369.632 421.121 352.783 418.386 344.358 C 418.380 344.362 360.028 386.775 360.022 386.779 C 360.020 386.781 338.542 402.399 338.540 402.401 C 338.532 402.406 265.595 455.413 265.588 455.418 C 265.591 455.410 284.162 398.242 293.448 369.654 M 426.590 369.634 C 426.593 369.643 454.481 455.372 454.484 455.381 C 454.477 455.375 381.487 402.428 381.479 402.422 M 388.031 251.009 C 378.680 222.246 359.981 164.728 359.978 164.719 C 359.975 164.728 331.911 251.011 331.908 251.020 C 331.907 251.023 326.586 267.511 323.924 275.757 C 323.931 275.757 396.069 275.742 396.076 275.742 C 404.826 275.765 422.324 275.811 422.326 275.811 C 428.084 293.518 439.596 328.925 439.598 328.931 C 439.599 328.933 445.077 345.781 447.816 354.206 C 447.830 354.195 589.836 250.978 589.851 250.968 C 589.833 250.968 414.278 251.003 414.260 251.003 C 405.517 251.005 388.034 251.009 388.031 251.009 C 388.026 251.009 350.616 251.016 331.908 251.020 M 439.598 328.931 C 464.005 311.193 512.812 275.724 512.820 275.719 C 512.811 275.719 422.335 275.811 422.326 275.811 M 280.433 328.963 C 286.183 311.254 297.682 275.843 297.683 275.837 C 297.684 275.835 303.054 259.296 305.740 251.025 C 305.722 251.025 130.167 251.061 130.149 251.061 C 130.164 251.071 272.212 354.231 272.226 354.241 M 502.110 521.191 C 502.104 521.174 447.822 354.222 447.816 354.206 M 360.033 418.010 C 360.048 418.021 502.096 521.181 502.110 521.191 M 359.967 84.018 C 359.961 84.035 305.745 251.009 305.740 251.025 M 414.260 251.003 C 414.255 250.986 359.972 84.035 359.967 84.018 M 360.022 386.779 C 360.016 386.775 301.648 344.385 301.642 344.381 C 301.644 344.374 323.922 275.764 323.924 275.757 M 396.076 275.742 C 396.078 275.749 418.384 344.351 418.386 344.358 M 297.683 275.837 C 267.516 275.818 207.189 275.780 207.180 275.780 C 207.188 275.785 280.426 328.958 280.433 328.963 C 280.436 328.964 294.572 339.242 301.642 344.381 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":165.301,\\\"max\\\":554.762},\\\"y\\\":{\\\"min\\\":129.855,\\\"max\\\":519.317}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360.055,\\\"y\\\":700.217,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360.032,\\\"y\\\":15.773,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":52.297,\\\"y\\\":325.466,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872705630871,\\\"y\\\":0.005045662670766487}},{\\\"point\\\":{\\\"x\\\":668.749,\\\"y\\\":325.466,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872705630871,\\\"y\\\":0.005045662670766498}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":579.232,\\\"y\\\":544.218,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129166006545214,\\\"y\\\":0.701248829240521}},{\\\"point\\\":{\\\"x\\\":141.896,\\\"y\\\":544.263,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987001125955182,\\\"y\\\":0.7154146718225801}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":578.763,\\\"y\\\":106.814,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314588474546606,\\\"y\\\":-0.7754093912064979}},{\\\"point\\\":{\\\"x\\\":142.043,\\\"y\\\":106.888,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.681714090553063,\\\"y\\\":-0.7316186839750678}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360.032,\\\"y\\\":633.669,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"pillar\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":243.84223947801854,\\\"max\\\":476.08446547794364},\\\"y\\\":{\\\"min\\\":176.08703873872795,\\\"max\\\":643.361}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"pillar\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"pillar\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 447.528 609.632 C 436.589 609.824 283.407 609.272 272.472 609.632 C 257.855 610.113 259.969 641.857 259.968 641.861 C 259.988 641.861 460.012 641.861 460.032 641.861 C 460.031 641.857 462.145 609.376 447.528 609.632 C 447.527 609.629 448.486 582.493 435.024 582.245 C 426.027 582.078 293.000 582.096 284.976 582.245 C 271.514 582.493 272.473 609.629 272.472 609.632 C 272.490 609.632 447.510 609.632 447.528 609.632 M 291.531 582.245 C 291.531 582.210 291.531 239.936 291.531 239.902 C 291.545 239.902 428.455 239.902 428.469 239.902 C 428.469 239.936 428.469 582.210 428.469 582.245 C 428.455 582.245 291.545 582.245 291.531 582.245 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 411.105 239.902 C 411.105 354.016 411.105 468.131 411.105 582.245 M 308.895 239.902 C 308.895 354.016 308.895 468.131 308.895 582.245 M 333.402 239.626 C 333.139 353.832 332.876 468.038 332.613 582.245 M 387.387 239.902 C 387.387 354.016 387.387 468.131 387.387 582.245 M 360.000 239.902 C 360.000 354.016 360.000 468.131 360.000 582.245 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 291.531 198.821 C 291.538 198.821 359.993 198.821 360.000 198.821 C 360.007 198.821 428.462 198.821 428.469 198.821 C 428.469 198.825 428.469 232.738 428.469 232.741 C 428.469 232.744 428.469 260.492 428.469 260.495 C 428.462 260.495 360.007 260.495 360.000 260.495 C 359.993 260.495 291.538 260.495 291.531 260.495 C 291.531 260.492 291.531 232.744 291.531 232.741 C 291.531 232.738 291.531 198.825 291.531 198.821 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 291.531 232.741 C 337.177 232.741 382.823 232.741 428.469 232.741 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 323.687 205.443 C 348.480 205.473 373.273 205.502 398.066 205.532 C 392.837 209.653 383.400 224.422 387.811 239.910 C 394.994 265.134 418.474 273.392 427.679 273.382 C 441.228 273.366 472.083 265.843 474.502 227.454 C 476.268 199.439 449.307 177.008 428.469 177.600 C 420.481 177.827 299.519 177.827 291.531 177.600 C 270.693 177.008 243.017 196.741 245.498 227.454 C 248.594 265.794 278.772 273.366 292.321 273.382 C 301.526 273.392 324.387 264.950 332.189 239.910 C 336.930 224.696 327.767 209.080 323.687 205.443 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 323.687 205.443 C 319.744 201.929 304.851 194.781 289.682 200.937 C 262.132 212.118 263.850 246.635 288.820 245.439 C 311.508 244.352 301.795 217.354 292.492 223.540 M 323.687 205.443 C 348.480 205.473 373.273 205.502 398.066 205.532 C 392.837 209.653 383.400 224.422 387.811 239.910 C 394.994 265.134 418.474 273.392 427.679 273.382 C 441.228 273.366 472.083 265.843 474.502 227.454 C 476.268 199.439 449.307 177.008 428.469 177.600 C 420.481 177.827 299.519 177.827 291.531 177.600 C 270.693 177.008 243.017 196.741 245.498 227.454 C 248.594 265.794 278.772 273.366 292.321 273.382 C 301.526 273.392 324.387 264.950 332.189 239.910 C 336.930 224.696 327.767 209.080 323.687 205.443 M 438.335 204.020 C 419.644 192.073 403.939 200.903 398.066 205.532 M 431.180 245.439 C 454.787 245.488 460.634 218.274 438.335 204.020 M 427.508 221.690 C 412.076 219.104 407.745 245.390 431.180 245.439 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":278.583,\\\"max\\\":441.417},\\\"y\\\":{\\\"min\\\":15.605,\\\"max\\\":178.438}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":149.149,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":179.848,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":290.919,\\\"y\\\":417.944,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999875894247631,\\\"y\\\":0.004982067487656379}},{\\\"point\\\":{\\\"x\\\":429.081,\\\"y\\\":417.944,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999875894247631,\\\"y\\\":0.004982067487656379}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":454.542,\\\"y\\\":636.826,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128909314178501,\\\"y\\\":0.7012749246210008}},{\\\"point\\\":{\\\"x\\\":265.287,\\\"y\\\":636.869,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986773121190969,\\\"y\\\":0.7154369388912163}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":466.325,\\\"y\\\":198.106,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314960113225687,\\\"y\\\":-0.7753791251276282}},{\\\"point\\\":{\\\"x\\\":254.062,\\\"y\\\":198.142,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817690095223405,\\\"y\\\":-0.7315675072438133}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":638.022,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"pip_diamond\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":159.688,\\\"max\\\":560.312},\\\"y\\\":{\\\"min\\\":34.053,\\\"max\\\":620.628}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"pips\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"pip_diamond\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"diamond\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 36.053 C 299.344 136.990 231.061 234.086 161.688 327.341 C 234.330 420.595 303.703 517.691 360.000 618.628 C 418.477 515.771 482.401 417.714 558.312 327.341 C 484.581 234.086 417.387 135.070 360.000 36.053 Z\\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":249.193,\\\"max\\\":470.807},\\\"y\\\":{\\\"min\\\":216.534,\\\"max\\\":438.148}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":697.7,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":35.315,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":68.53,\\\"y\\\":328.172,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999874898115805,\\\"y\\\":0.005002021624735063}},{\\\"point\\\":{\\\"x\\\":651.47,\\\"y\\\":328.172,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999874898115805,\\\"y\\\":0.005002021624735063}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":566.696,\\\"y\\\":535.031,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129187761731471,\\\"y\\\":0.7012466175175337}},{\\\"point\\\":{\\\"x\\\":153.134,\\\"y\\\":535.073,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986789995269281,\\\"y\\\":0.715435291008244}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":566.841,\\\"y\\\":121.407,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314428144583549,\\\"y\\\":-0.775422447488407}},{\\\"point\\\":{\\\"x\\\":153.862,\\\"y\\\":121.478,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6816972025503006,\\\"y\\\":-0.7316344196626442}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":617.402,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"pipe\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":76.82025628502802,\\\"max\\\":650.7812119440975},\\\"y\\\":{\\\"min\\\":385.3292991559143,\\\"max\\\":688.2747781224618}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"pipe\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"pipe\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 175.006 443.605 C 233.213 443.605 259.308 458.328 259.308 466.325 C 259.308 474.323 233.213 489.046 175.006 489.046 C 116.798 489.046 90.702 474.323 90.702 466.325 C 90.702 458.328 116.798 443.605 175.006 443.605 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 175.006 489.046 C 116.798 489.046 90.702 474.323 90.702 466.325 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 259.308 466.325 C 259.308 474.323 233.213 489.046 175.006 489.046 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 175.006 489.046 C 116.798 489.046 90.702 474.323 90.702 466.325 C 78.902 480.309 53.588 642.177 151.842 680.326 C 180.262 691.361 222.069 684.935 238.263 677.995 C 320.352 642.815 344.350 502.625 484.436 438.596 C 531.948 416.880 599.591 421.255 599.602 421.260 C 599.601 421.260 611.983 429.446 627.619 428.474 C 652.563 426.924 658.295 392.565 629.298 388.041 C 608.336 384.771 599.413 393.830 599.410 393.831 C 599.395 393.832 499.748 387.140 447.286 405.161 C 333.319 444.311 269.154 550.178 269.199 547.093 C 269.531 524.298 264.892 474.717 259.308 466.325 C 259.308 474.323 233.213 489.046 175.006 489.046 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 258.499 617.383 C 267.633 587.250 268.953 564.028 269.199 547.093 C 269.531 524.298 264.892 474.717 259.308 466.325 C 259.308 474.323 233.213 489.046 175.006 489.046 C 116.798 489.046 90.702 474.323 90.702 466.325 C 78.902 480.309 53.588 642.177 151.842 680.326 C 180.262 691.361 222.069 684.935 238.263 677.995 C 320.352 642.815 344.350 502.625 484.436 438.596 C 531.948 416.880 599.591 421.255 599.602 421.260 C 599.601 421.260 611.983 429.446 627.619 428.474 C 652.563 426.924 658.295 392.565 629.298 388.041 C 608.336 384.771 599.413 393.830 599.410 393.831 C 599.395 393.832 499.748 387.140 447.286 405.161 C 333.319 444.311 269.154 550.178 269.199 547.093 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 175.705 455.555 C 210.214 455.555 226.516 463.063 226.516 465.440 C 226.516 467.816 210.214 475.324 175.705 475.324 C 141.195 475.324 124.893 467.816 124.893 465.440 C 124.893 463.063 141.195 455.555 175.705 455.555 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 249.318 646.440 C 247.545 650.914 238.523 667.967 238.522 667.969 C 238.530 667.961 268.655 652.576 313.658 592.068 C 332.421 566.842 390.729 469.923 472.594 437.021 C 551.766 405.201 599.793 415.334 599.806 415.331 C 599.806 415.331 597.788 412.197 597.788 412.197 C 597.775 412.199 554.102 400.029 470.031 430.615 C 356.845 471.794 301.845 607.193 253.977 631.214 C 253.276 631.566 250.491 643.483 249.318 646.440 M 625.800 418.168 C 608.760 419.337 602.733 411.944 602.731 411.943 C 602.731 411.944 605.660 417.069 605.660 417.070 C 605.662 417.070 611.688 422.380 625.067 422.562 C 638.607 422.747 643.740 413.409 643.742 413.408 C 643.742 413.407 643.010 409.014 643.010 409.014 C 643.008 409.015 638.546 417.294 625.800 418.168 M 131.536 499.809 C 120.801 533.655 116.066 565.901 126.257 600.945 C 147.926 675.461 178.928 677.089 178.933 677.097 C 178.926 677.089 121.354 675.713 100.710 600.950 C 81.870 532.719 100.145 488.129 100.144 488.118 C 100.148 488.119 115.431 495.643 131.536 499.809 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":96.656,\\\"max\\\":251.78},\\\"y\\\":{\\\"min\\\":321.344,\\\"max\\\":476.469}},{\\\"x\\\":{\\\"min\\\":150.853,\\\"max\\\":338.38},\\\"y\\\":{\\\"min\\\":176.079,\\\"max\\\":363.606}},{\\\"x\\\":{\\\"min\\\":38.406,\\\"max\\\":261.192},\\\"y\\\":{\\\"min\\\":9.539,\\\"max\\\":232.325}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":633.558,\\\"y\\\":409.383,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":509.33,\\\"y\\\":391.462,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":79.802,\\\"y\\\":583.116,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872950996483,\\\"y\\\":0.005040797485420277}},{\\\"point\\\":{\\\"x\\\":330.871,\\\"y\\\":583.116,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872970401054,\\\"y\\\":0.005040412525177784}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":190.489,\\\"y\\\":683.59,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.011790933479671258,\\\"y\\\":0.9999304845276384}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":651.762,\\\"y\\\":408.632,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":false,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"pitchfork\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":253.427,\\\"max\\\":466.573},\\\"y\\\":{\\\"min\\\":48.822,\\\"max\\\":668.907}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"pitchfork\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"pitchfork\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 439.976 234.466 C 427.905 255.391 408.843 273.534 374.161 280.859 C 374.263 281.783 384.883 666.868 384.884 666.907 C 384.879 666.907 335.122 666.907 335.117 666.907 C 335.118 666.868 344.802 281.756 345.857 280.860 C 310.709 273.997 292.046 255.415 279.963 234.477 C 260.762 201.204 274.250 106.563 274.250 106.551 C 274.248 106.552 255.429 117.665 255.427 117.666 C 255.430 117.660 283.583 50.829 283.585 50.822 C 283.588 50.829 311.741 117.660 311.744 117.666 C 311.742 117.665 291.450 106.553 291.448 106.551 C 291.450 106.564 283.970 197.519 305.230 227.045 C 313.423 238.422 329.452 248.742 345.656 250.496 C 347.138 199.676 349.887 106.568 349.886 106.554 C 349.884 106.555 331.843 117.668 331.841 117.669 C 331.844 117.663 359.997 50.832 360.000 50.825 C 360.003 50.832 388.156 117.663 388.159 117.669 C 388.157 117.668 370.112 106.555 370.110 106.554 C 370.109 106.569 372.949 202.336 374.377 250.497 C 390.333 248.770 406.622 238.434 414.816 227.054 C 436.076 197.527 428.545 106.563 428.546 106.551 C 428.544 106.552 408.258 117.665 408.256 117.666 C 408.259 117.660 436.412 50.829 436.415 50.822 C 436.418 50.829 464.570 117.660 464.573 117.666 C 464.571 117.665 445.746 106.553 445.744 106.551 C 445.744 106.563 459.172 201.193 439.976 234.466 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":655.701,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":43.307,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":330.937,\\\"y\\\":359.844,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872880189178,\\\"y\\\":0.0050422019564934075}},{\\\"point\\\":{\\\"x\\\":389.063,\\\"y\\\":359.844,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872880189178,\\\"y\\\":0.0050422019564934075}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":392.869,\\\"y\\\":592.41,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712903806165148,\\\"y\\\":0.701261836374435}},{\\\"point\\\":{\\\"x\\\":326.94,\\\"y\\\":592.458,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986777434832855,\\\"y\\\":0.7154365176317913}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":446.986,\\\"y\\\":45.149,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314435079495138,\\\"y\\\":-0.7754218827634491}},{\\\"point\\\":{\\\"x\\\":273.492,\\\"y\\\":45.205,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6816884979098526,\\\"y\\\":-0.7316425300769555}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":668.213,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"pomegranate\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":99.011,\\\"max\\\":620.989},\\\"y\\\":{\\\"min\\\":6.3829999795977574,\\\"max\\\":640.575}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"pomegranate\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"circles2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.955 149.662 C 489.563 149.662 593.311 253.411 593.311 382.019 C 593.311 510.627 489.563 614.376 360.955 614.376 C 232.347 614.376 128.599 510.627 128.599 382.019 C 128.599 253.411 232.347 149.663 360.955 149.662 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 512.174 465.310 C 512.174 453.628 521.598 444.204 533.280 444.204 C 544.961 444.204 554.385 453.628 554.385 465.310 C 554.385 476.991 544.961 486.415 533.280 486.415 C 521.598 486.415 512.174 476.991 512.174 465.310 M 462.928 465.310 C 462.928 453.628 472.352 444.204 484.033 444.204 C 495.715 444.204 505.139 453.628 505.139 465.310 C 505.139 476.992 495.715 486.415 484.033 486.415 C 472.352 486.415 462.928 476.991 462.928 465.310 M 413.683 465.310 C 413.683 453.628 423.106 444.204 434.788 444.204 C 446.470 444.204 455.893 453.628 455.893 465.310 C 455.893 476.991 446.470 486.415 434.788 486.415 C 423.106 486.415 413.683 476.991 413.683 465.310 M 364.436 465.310 C 364.436 453.628 373.860 444.204 385.542 444.204 C 397.223 444.204 406.647 453.628 406.647 465.310 C 406.647 476.991 397.223 486.415 385.542 486.415 C 373.860 486.415 364.436 476.991 364.436 465.310 M 487.216 507.794 C 487.216 496.113 496.640 486.689 508.321 486.689 C 520.003 486.689 529.427 496.113 529.427 507.794 C 529.427 519.476 520.003 528.900 508.321 528.900 C 496.640 528.900 487.216 519.476 487.216 507.794 M 437.970 507.794 C 437.970 496.113 447.393 486.689 459.075 486.689 C 470.757 486.689 480.180 496.113 480.180 507.794 C 480.180 519.476 470.757 528.900 459.075 528.900 C 447.393 528.900 437.970 519.476 437.970 507.794 M 388.723 507.794 C 388.723 496.112 398.148 486.689 409.829 486.689 C 421.511 486.689 430.935 496.113 430.935 507.794 C 430.935 519.476 421.511 528.900 409.829 528.900 C 398.148 528.900 388.723 519.476 388.723 507.794 M 512.174 379.398 C 512.174 367.716 521.598 358.292 533.280 358.292 C 544.961 358.292 554.385 367.716 554.385 379.398 C 554.385 391.079 544.962 400.503 533.280 400.503 C 521.598 400.503 512.174 391.079 512.174 379.398 M 462.928 379.398 C 462.928 367.716 472.352 358.292 484.033 358.292 C 495.715 358.292 505.139 367.716 505.139 379.398 C 505.139 391.079 495.715 400.503 484.033 400.503 C 472.351 400.503 462.928 391.079 462.928 379.398 M 413.683 379.398 C 413.683 367.716 423.106 358.292 434.788 358.292 C 446.470 358.292 455.893 367.716 455.893 379.398 C 455.893 391.079 446.470 400.503 434.788 400.503 C 423.106 400.503 413.683 391.079 413.683 379.398 M 364.436 379.398 C 364.436 367.716 373.860 358.292 385.542 358.292 C 397.223 358.292 406.647 367.716 406.647 379.398 C 406.647 391.079 397.224 400.503 385.542 400.503 C 373.860 400.503 364.436 391.079 364.436 379.398 M 561.420 379.398 C 561.420 367.716 570.844 358.292 582.526 358.292 C 594.207 358.292 603.631 367.716 603.631 379.398 C 603.631 391.079 594.208 400.503 582.526 400.503 C 570.844 400.503 561.420 391.079 561.420 379.398 M 487.216 421.882 C 487.216 410.200 496.640 400.777 508.321 400.777 C 520.003 400.777 529.427 410.200 529.427 421.882 C 529.427 433.564 520.003 442.988 508.321 442.988 C 496.640 442.988 487.216 433.564 487.216 421.882 M 437.970 421.882 C 437.970 410.200 447.393 400.777 459.075 400.777 C 470.757 400.777 480.180 410.200 480.180 421.882 C 480.180 433.564 470.757 442.988 459.075 442.988 C 447.393 442.988 437.970 433.564 437.970 421.882 M 388.723 421.882 C 388.724 410.200 398.148 400.777 409.829 400.777 C 421.511 400.777 430.935 410.200 430.935 421.882 C 430.935 433.564 421.511 442.988 409.829 442.988 C 398.148 442.988 388.723 433.564 388.723 421.882 M 339.478 421.882 C 339.478 410.200 348.901 400.777 360.583 400.777 C 372.265 400.777 381.688 410.200 381.689 421.882 C 381.689 433.564 372.265 442.988 360.583 442.988 C 348.901 442.988 339.477 433.564 339.478 421.882 M 536.462 421.882 C 536.462 410.201 545.885 400.777 557.567 400.777 C 569.249 400.777 578.672 410.200 578.673 421.882 C 578.673 433.564 569.249 442.988 557.567 442.988 C 545.885 442.988 536.462 433.564 536.462 421.882 M 462.928 551.619 C 462.928 539.938 472.352 530.514 484.033 530.514 C 495.715 530.514 505.139 539.938 505.139 551.619 C 505.139 563.301 495.715 572.725 484.033 572.725 C 472.351 572.725 462.928 563.301 462.928 551.619 M 413.683 551.619 C 413.683 539.938 423.106 530.514 434.788 530.514 C 446.470 530.514 455.893 539.938 455.893 551.619 C 455.893 563.301 446.470 572.725 434.788 572.725 C 423.106 572.725 413.683 563.301 413.683 551.619 M 364.436 551.619 C 364.436 539.938 373.860 530.514 385.542 530.514 C 397.223 530.514 406.647 539.938 406.647 551.619 C 406.647 563.301 397.224 572.725 385.542 572.725 C 373.860 572.725 364.436 563.301 364.436 551.619 M 388.723 594.104 C 388.724 582.422 398.148 572.999 409.829 572.999 C 421.511 572.999 430.935 582.422 430.935 594.104 C 430.935 605.786 421.511 615.210 409.829 615.210 C 398.148 615.210 388.723 605.786 388.723 594.104 M 388.723 165.281 C 388.723 153.599 398.148 144.175 409.829 144.175 C 421.511 144.175 430.935 153.599 430.935 165.281 C 430.935 176.962 421.511 186.386 409.829 186.386 C 398.148 186.386 388.724 176.963 388.723 165.281 M 512.174 295.018 C 512.174 283.336 521.598 273.912 533.280 273.912 C 544.962 273.912 554.385 283.336 554.385 295.018 C 554.385 306.700 544.961 316.123 533.280 316.123 C 521.598 316.123 512.174 306.700 512.174 295.018 M 462.928 295.018 C 462.928 283.336 472.351 273.912 484.033 273.912 C 495.715 273.912 505.139 283.336 505.139 295.018 C 505.139 306.700 495.715 316.123 484.033 316.123 C 472.352 316.123 462.928 306.700 462.928 295.018 M 413.683 295.018 C 413.683 283.336 423.106 273.912 434.788 273.912 C 446.470 273.912 455.893 283.336 455.893 295.018 C 455.893 306.700 446.470 316.123 434.788 316.123 C 423.106 316.123 413.683 306.700 413.683 295.018 M 364.436 295.018 C 364.436 283.336 373.860 273.912 385.542 273.912 C 397.224 273.912 406.647 283.336 406.647 295.018 C 406.647 306.700 397.223 316.123 385.542 316.123 C 373.860 316.123 364.436 306.700 364.436 295.018 M 487.216 337.503 C 487.216 325.821 496.640 316.397 508.321 316.397 C 520.003 316.397 529.427 325.821 529.427 337.503 C 529.427 349.184 520.003 358.608 508.321 358.608 C 496.640 358.608 487.216 349.184 487.216 337.503 M 437.970 337.503 C 437.970 325.821 447.393 316.397 459.075 316.397 C 470.757 316.397 480.180 325.821 480.180 337.503 C 480.180 349.184 470.757 358.608 459.075 358.608 C 447.393 358.608 437.970 349.184 437.970 337.503 M 388.723 337.503 C 388.723 325.821 398.148 316.397 409.829 316.397 C 421.511 316.397 430.935 325.821 430.935 337.503 C 430.935 349.184 421.511 358.608 409.829 358.608 C 398.148 358.608 388.724 349.185 388.723 337.503 M 339.478 337.503 C 339.477 325.821 348.901 316.397 360.583 316.397 C 372.265 316.397 381.689 325.821 381.689 337.503 C 381.688 349.184 372.265 358.608 360.583 358.608 C 348.901 358.608 339.478 349.184 339.478 337.503 M 536.462 337.503 C 536.462 325.821 545.885 316.397 557.567 316.397 C 569.249 316.397 578.673 325.821 578.673 337.503 C 578.672 349.184 569.249 358.608 557.567 358.608 C 545.885 358.608 536.462 349.184 536.462 337.503 M 462.928 209.106 C 462.928 197.424 472.352 188.001 484.033 188.001 C 495.715 188.000 505.139 197.424 505.139 209.106 C 505.139 220.788 495.715 230.211 484.033 230.211 C 472.352 230.211 462.928 220.788 462.928 209.106 M 413.683 209.106 C 413.683 197.424 423.106 188.001 434.788 188.001 C 446.470 188.001 455.893 197.424 455.893 209.106 C 455.893 220.788 446.470 230.211 434.788 230.211 C 423.106 230.211 413.683 220.788 413.683 209.106 M 364.436 209.106 C 364.436 197.424 373.860 188.001 385.542 188.001 C 397.223 188.001 406.647 197.424 406.647 209.106 C 406.647 220.788 397.223 230.211 385.542 230.211 C 373.860 230.211 364.436 220.788 364.436 209.106 M 487.216 251.590 C 487.216 239.909 496.640 230.485 508.321 230.485 C 520.003 230.485 529.427 239.909 529.427 251.590 C 529.427 263.272 520.003 272.696 508.321 272.696 C 496.640 272.696 487.216 263.272 487.216 251.590 M 437.970 251.590 C 437.970 239.909 447.393 230.485 459.075 230.485 C 470.757 230.485 480.180 239.909 480.180 251.590 C 480.180 263.272 470.757 272.696 459.075 272.696 C 447.393 272.696 437.970 263.272 437.970 251.590 M 388.723 251.590 C 388.723 239.909 398.148 230.485 409.829 230.485 C 421.511 230.485 430.935 239.909 430.935 251.590 C 430.935 263.272 421.511 272.696 409.829 272.696 C 398.148 272.696 388.723 263.272 388.723 251.590 M 316.132 465.310 C 316.132 453.628 325.556 444.204 337.237 444.204 C 348.919 444.204 358.343 453.628 358.343 465.310 C 358.343 476.991 348.919 486.415 337.237 486.415 C 325.556 486.415 316.132 476.991 316.132 465.310 M 266.886 465.310 C 266.886 453.628 276.309 444.204 287.991 444.204 C 299.673 444.204 309.097 453.628 309.097 465.310 C 309.097 476.991 299.673 486.415 287.991 486.415 C 276.309 486.415 266.886 476.991 266.886 465.310 M 217.640 465.310 C 217.640 453.628 227.063 444.204 238.745 444.204 C 250.427 444.204 259.850 453.628 259.850 465.310 C 259.850 476.991 250.427 486.415 238.745 486.415 C 227.064 486.415 217.640 476.991 217.640 465.310 M 168.394 465.310 C 168.394 453.628 177.817 444.204 189.499 444.204 C 201.181 444.204 210.604 453.628 210.604 465.310 C 210.604 476.991 201.181 486.415 189.499 486.415 C 177.817 486.415 168.394 476.991 168.394 465.310 M 291.173 507.794 C 291.173 496.113 300.597 486.689 312.279 486.689 C 323.960 486.689 333.384 496.113 333.384 507.794 C 333.384 519.476 323.960 528.900 312.279 528.900 C 300.597 528.900 291.173 519.476 291.173 507.794 M 241.927 507.794 C 241.927 496.113 251.351 486.689 263.032 486.689 C 274.714 486.689 284.138 496.112 284.138 507.794 C 284.138 519.476 274.714 528.900 263.032 528.900 C 251.351 528.899 241.927 519.476 241.927 507.794 M 192.681 507.794 C 192.681 496.112 202.105 486.689 213.787 486.689 C 225.468 486.689 234.892 496.113 234.892 507.794 C 234.892 519.476 225.468 528.900 213.787 528.900 C 202.105 528.900 192.681 519.476 192.681 507.794 M 119.147 379.398 C 119.147 367.716 128.571 358.292 140.252 358.292 C 151.934 358.292 161.358 367.716 161.358 379.398 C 161.358 391.079 151.934 400.503 140.252 400.503 C 128.571 400.503 119.147 391.079 119.147 379.398 M 316.132 379.398 C 316.132 367.716 325.556 358.292 337.237 358.292 C 348.919 358.292 358.343 367.716 358.343 379.398 C 358.343 391.079 348.919 400.503 337.237 400.503 C 325.556 400.503 316.132 391.079 316.132 379.398 M 266.886 379.398 C 266.886 367.716 276.309 358.292 287.991 358.292 C 299.673 358.292 309.097 367.716 309.097 379.398 C 309.097 391.079 299.673 400.503 287.991 400.503 C 276.309 400.503 266.886 391.079 266.886 379.398 M 217.640 379.398 C 217.640 367.716 227.063 358.292 238.745 358.292 C 250.427 358.292 259.850 367.716 259.850 379.398 C 259.851 391.079 250.427 400.503 238.745 400.503 C 227.063 400.503 217.640 391.079 217.640 379.398 M 168.394 379.398 C 168.394 367.716 177.817 358.292 189.499 358.292 C 201.181 358.292 210.604 367.716 210.604 379.398 C 210.604 391.079 201.181 400.503 189.499 400.503 C 177.817 400.503 168.393 391.079 168.394 379.398 M 291.173 421.882 C 291.173 410.200 300.597 400.777 312.279 400.777 C 323.960 400.777 333.384 410.201 333.384 421.882 C 333.384 433.564 323.960 442.988 312.279 442.988 C 300.597 442.988 291.173 433.564 291.173 421.882 M 241.927 421.882 C 241.927 410.201 251.351 400.777 263.032 400.777 C 274.714 400.777 284.138 410.200 284.138 421.882 C 284.138 433.564 274.714 442.988 263.032 442.988 C 251.351 442.988 241.927 433.564 241.927 421.882 M 192.681 421.882 C 192.681 410.200 202.105 400.777 213.787 400.777 C 225.468 400.777 234.892 410.200 234.892 421.882 C 234.892 433.564 225.468 442.988 213.787 442.988 C 202.105 442.988 192.681 433.564 192.681 421.882 M 143.435 421.882 C 143.435 410.201 152.858 400.777 164.540 400.777 C 176.222 400.777 185.646 410.200 185.646 421.882 C 185.646 433.564 176.222 442.988 164.540 442.988 C 152.858 442.988 143.435 433.564 143.435 421.882 M 316.132 551.619 C 316.132 539.938 325.556 530.514 337.237 530.514 C 348.919 530.514 358.343 539.938 358.343 551.619 C 358.343 563.301 348.919 572.725 337.237 572.725 C 325.556 572.725 316.132 563.301 316.132 551.619 M 266.886 551.619 C 266.886 539.938 276.309 530.514 287.991 530.514 C 299.673 530.514 309.097 539.938 309.097 551.619 C 309.097 563.301 299.673 572.725 287.991 572.725 C 276.309 572.725 266.886 563.301 266.886 551.619 M 217.640 551.619 C 217.640 539.938 227.063 530.514 238.745 530.514 C 250.427 530.514 259.850 539.938 259.850 551.619 C 259.851 563.301 250.427 572.725 238.745 572.725 C 227.063 572.725 217.640 563.301 217.640 551.619 M 291.173 594.104 C 291.173 582.422 300.597 572.998 312.279 572.998 C 323.960 572.998 333.384 582.422 333.384 594.104 C 333.384 605.786 323.960 615.210 312.279 615.210 C 300.597 615.210 291.173 605.786 291.173 594.104 M 291.173 165.281 C 291.173 153.599 300.597 144.175 312.279 144.175 C 323.960 144.175 333.384 153.599 333.384 165.281 C 333.384 176.962 323.960 186.386 312.279 186.386 C 300.597 186.386 291.173 176.963 291.173 165.281 M 316.132 295.018 C 316.132 283.336 325.556 273.912 337.237 273.912 C 348.919 273.912 358.343 283.336 358.343 295.018 C 358.343 306.700 348.919 316.123 337.237 316.123 C 325.556 316.123 316.132 306.700 316.132 295.018 M 266.886 295.018 C 266.886 283.336 276.309 273.912 287.991 273.912 C 299.673 273.912 309.097 283.336 309.097 295.018 C 309.097 306.700 299.673 316.123 287.991 316.123 C 276.309 316.123 266.886 306.700 266.886 295.018 M 217.640 295.018 C 217.640 283.336 227.063 273.912 238.745 273.912 C 250.427 273.912 259.851 283.336 259.850 295.018 C 259.850 306.700 250.427 316.123 238.745 316.123 C 227.063 316.123 217.640 306.700 217.640 295.018 M 168.394 295.018 C 168.393 283.336 177.817 273.912 189.499 273.912 C 201.181 273.912 210.604 283.336 210.604 295.018 C 210.604 306.700 201.181 316.123 189.499 316.123 C 177.817 316.123 168.394 306.700 168.394 295.018 M 291.173 337.503 C 291.173 325.821 300.597 316.397 312.279 316.397 C 323.960 316.397 333.384 325.821 333.384 337.503 C 333.384 349.184 323.960 358.608 312.279 358.608 C 300.597 358.608 291.173 349.184 291.173 337.503 M 241.927 337.503 C 241.927 325.821 251.351 316.397 263.032 316.397 C 274.714 316.397 284.138 325.821 284.138 337.503 C 284.138 349.184 274.714 358.608 263.032 358.608 C 251.351 358.608 241.927 349.184 241.927 337.503 M 192.681 337.503 C 192.681 325.821 202.105 316.397 213.787 316.397 C 225.468 316.397 234.892 325.821 234.892 337.503 C 234.892 349.184 225.468 358.608 213.787 358.608 C 202.105 358.608 192.681 349.185 192.681 337.503 M 143.435 337.503 C 143.435 325.821 152.858 316.397 164.540 316.397 C 176.222 316.397 185.646 325.821 185.646 337.503 C 185.646 349.184 176.222 358.608 164.540 358.608 C 152.858 358.608 143.435 349.184 143.435 337.503 M 316.132 209.106 C 316.132 197.424 325.556 188.001 337.237 188.001 C 348.919 188.001 358.343 197.424 358.343 209.106 C 358.343 220.788 348.919 230.211 337.237 230.211 C 325.556 230.211 316.132 220.788 316.132 209.106 M 266.886 209.106 C 266.886 197.424 276.309 188.001 287.991 188.001 C 299.673 188.000 309.097 197.424 309.097 209.106 C 309.097 220.788 299.673 230.211 287.991 230.211 C 276.309 230.211 266.886 220.788 266.886 209.106 M 217.640 209.106 C 217.640 197.424 227.063 188.001 238.745 188.001 C 250.427 188.001 259.850 197.424 259.850 209.106 C 259.850 220.788 250.427 230.211 238.745 230.211 C 227.064 230.211 217.640 220.788 217.640 209.106 M 291.173 251.590 C 291.173 239.909 300.597 230.485 312.278 230.485 C 323.960 230.485 333.384 239.909 333.384 251.590 C 333.384 263.272 323.960 272.696 312.278 272.696 C 300.597 272.696 291.173 263.272 291.173 251.590 M 241.927 251.590 C 241.927 239.909 251.351 230.485 263.033 230.485 C 274.714 230.485 284.138 239.909 284.138 251.590 C 284.138 263.272 274.714 272.696 263.033 272.696 C 251.351 272.696 241.927 263.272 241.927 251.590 M 192.681 251.590 C 192.681 239.909 202.105 230.485 213.787 230.485 C 225.468 230.485 234.892 239.909 234.892 251.590 C 234.892 263.272 225.468 272.696 213.787 272.696 C 202.105 272.696 192.681 263.272 192.681 251.590 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"pomegranate\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 336.073 361.450 C 336.073 237.922 358.376 179.665 336.073 166.732 C 321.759 158.431 247.994 188.752 220.479 214.217 C 179.022 252.586 140.257 328.453 141.047 384.935 C 141.800 438.735 180.651 509.561 220.479 545.737 C 248.230 570.944 321.563 601.176 336.073 593.223 C 362.984 578.472 336.073 508.485 336.073 361.450 M 386.021 361.450 C 386.021 237.922 363.718 179.665 386.021 166.732 C 400.335 158.431 474.100 188.752 501.615 214.217 C 543.072 252.586 581.837 328.453 581.047 384.935 C 580.294 438.735 541.443 509.561 501.615 545.737 C 473.863 570.944 400.531 601.176 386.021 593.223 C 359.110 578.472 386.021 508.485 386.021 361.450 M 345.567 46.417 C 345.599 46.412 359.968 8.383 360.000 8.383 C 360.032 8.382 376.035 45.142 376.067 45.147 C 376.091 45.150 396.999 23.156 397.022 23.163 C 397.052 23.173 398.866 62.563 398.866 62.567 C 398.869 62.565 428.074 41.444 428.101 41.455 C 428.148 41.476 409.836 84.892 417.762 106.266 C 436.118 155.772 507.744 155.787 543.026 192.380 C 589.186 240.255 618.989 304.820 618.989 377.403 C 618.989 449.987 589.929 515.280 543.026 562.427 C 496.123 609.574 431.375 638.575 360.000 638.575 C 288.625 638.575 223.877 609.574 176.974 562.427 C 130.071 515.280 101.011 449.987 101.011 377.403 C 101.011 304.820 130.611 240.059 176.974 192.380 C 212.884 155.451 288.387 157.225 304.690 106.266 C 310.630 87.700 291.863 51.646 291.899 51.621 C 291.920 51.607 321.026 63.656 321.029 63.657 C 321.029 63.653 320.495 20.634 320.527 20.622 C 320.554 20.612 345.539 46.423 345.567 46.417 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":667.718,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":13.04,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":99.812,\\\"y\\\":377.801,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873342537683,\\\"y\\\":0.005033024144816289}},{\\\"point\\\":{\\\"x\\\":621.234,\\\"y\\\":377.801,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873342537683,\\\"y\\\":0.005033024144816322}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":545.517,\\\"y\\\":562.831,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129079596758853,\\\"y\\\":0.7012576138843458}},{\\\"point\\\":{\\\"x\\\":175.599,\\\"y\\\":562.869,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987628184698997,\\\"y\\\":0.7153534256044364}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":545.12,\\\"y\\\":192.856,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314343491213488,\\\"y\\\":-0.7754293409135993}},{\\\"point\\\":{\\\"x\\\":175.723,\\\"y\\\":192.918,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817335362911943,\\\"y\\\":-0.7316005641713946}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":636.275,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"poot\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":13.876078965278195,\\\"max\\\":644.465},\\\"y\\\":{\\\"min\\\":125.71497567714724,\\\"max\\\":607.0478352249859}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"poot\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"poot_3\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 371.743 366.023 C 325.636 358.520 300.494 336.550 281.761 309.680 C 263.033 316.616 237.323 320.836 216.022 310.107 C 186.805 295.392 165.240 261.425 163.403 230.700 C 160.820 187.481 195.122 150.299 222.627 138.274 C 281.297 112.621 318.109 139.603 337.467 156.982 C 371.510 187.545 372.503 221.807 373.581 243.797 C 375.796 288.974 378.639 317.187 392.706 337.382 C 401.441 349.922 424.432 367.015 424.435 367.018 C 424.430 367.018 388.283 368.715 371.743 366.023 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 371.743 366.023 C 325.636 358.520 300.494 336.550 281.761 309.680 C 263.033 316.616 237.323 320.836 216.022 310.107 C 186.805 295.392 165.240 261.425 163.403 230.700 C 160.820 187.481 195.122 150.299 222.627 138.274 C 281.297 112.621 318.109 139.603 337.467 156.982 C 371.510 187.545 372.503 221.807 373.581 243.797 C 375.796 288.974 378.639 317.187 392.706 337.382 C 401.441 349.922 424.432 367.015 424.435 367.018 C 424.430 367.018 388.283 368.715 371.743 366.023 M 293.041 183.583 C 345.710 211.980 345.813 285.959 281.761 309.680 M 215.282 241.709 C 200.935 198.966 256.243 163.743 293.041 183.583 M 273.073 260.363 C 252.925 280.441 223.091 264.975 215.282 241.709 M 262.235 221.565 C 279.475 220.758 291.219 242.282 273.073 260.363 M 258.015 237.161 C 249.053 236.684 250.528 222.114 262.235 221.565 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 312.823 404.395 C 267.147 428.774 230.221 426.313 195.652 415.225 C 185.945 436.465 166.412 461.745 139.074 467.272 C 102.300 474.708 60.397 452.675 38.259 425.178 C 8.165 387.799 12.169 333.003 28.324 303.917 C 62.786 241.874 113.363 240.909 142.104 243.212 C 192.650 247.263 216.554 276.791 232.285 295.445 C 264.604 333.769 282.258 353.671 312.045 365.063 C 327.866 371.114 359.923 369.853 359.928 369.853 C 359.923 369.857 329.208 395.649 312.823 404.395 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 312.823 404.395 C 267.147 428.774 230.221 426.313 195.652 415.225 C 185.945 436.465 166.412 461.745 139.074 467.272 C 102.300 474.708 60.397 452.675 38.259 425.178 C 8.165 387.799 12.169 333.003 28.324 303.917 C 62.786 241.874 113.363 240.909 142.104 243.212 C 192.650 247.263 216.554 276.791 232.285 295.445 C 264.604 333.769 282.258 353.671 312.045 365.063 C 327.866 371.114 359.923 369.853 359.928 369.853 C 359.923 369.857 329.208 395.649 312.823 404.395 M 120.834 296.517 C 186.338 286.140 227.162 346.275 195.652 415.225 M 91.378 400.009 C 50.004 371.984 75.069 303.766 120.834 296.517 M 154.847 377.602 C 150.586 408.839 113.898 415.263 91.378 400.009 M 119.216 350.697 C 133.866 338.397 158.684 349.471 154.847 377.602 M 125.981 367.277 C 117.762 372.881 109.268 359.049 119.216 350.697 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 415.625 501.518 C 377.613 535.792 341.601 542.230 305.792 539.830 C 300.659 561.101 284.876 585.465 261.107 596.323 C 228.504 611.216 184.688 606.374 157.162 586.887 C 118.444 559.477 110.166 504.672 118.734 472.917 C 137.011 405.181 185.305 392.201 213.428 387.562 C 262.886 379.404 292.857 402.036 312.394 416.184 C 352.533 445.250 374.213 460.138 405.506 463.969 C 422.127 466.003 452.582 457.154 452.586 457.153 C 452.583 457.158 429.261 489.223 415.625 501.518 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 415.625 501.518 C 377.613 535.792 341.601 542.230 305.792 539.830 C 300.659 561.101 284.876 585.465 261.107 596.323 C 228.504 611.216 184.688 606.374 157.162 586.887 C 118.444 559.477 110.166 504.672 118.734 472.917 C 137.011 405.181 185.305 392.201 213.428 387.562 C 262.886 379.404 292.857 402.036 312.394 416.184 C 352.533 445.250 374.213 460.138 405.506 463.969 C 422.127 466.003 452.582 457.154 452.586 457.153 C 452.583 457.158 429.261 489.223 415.625 501.518 M 205.724 443.772 C 266.095 418.207 323.373 466.981 305.792 539.830 M 202.127 550.082 C 155.755 533.055 163.545 461.634 205.724 443.772 M 257.679 513.460 C 261.035 544.444 227.368 559.350 202.127 550.082 M 217.083 496.137 C 228.208 480.845 254.656 485.556 257.679 513.460 M 227.524 510.433 C 220.974 517.768 209.528 506.521 217.083 496.137 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 426.443 404.981 C 387.255 432.883 352.936 435.010 319.760 428.907 C 312.673 448.214 295.309 469.260 271.944 476.834 C 239.897 487.223 199.508 477.977 175.909 456.813 C 142.715 427.045 140.896 374.981 152.321 346.256 C 176.693 284.982 223.184 278.072 249.943 276.773 C 297.002 274.490 322.544 298.854 339.260 314.171 C 373.604 345.640 392.240 361.878 421.045 368.830 C 436.344 372.522 465.734 367.544 465.739 367.544 C 465.735 367.548 440.501 394.972 426.443 404.981 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 426.443 404.981 C 387.255 432.883 352.936 435.010 319.760 428.907 C 312.673 448.214 295.309 469.260 271.944 476.834 C 239.897 487.223 199.508 477.977 175.909 456.813 C 142.715 427.045 140.896 374.981 152.321 346.256 C 176.693 284.982 223.184 278.072 249.943 276.773 C 297.002 274.490 322.544 298.854 339.260 314.171 C 373.604 345.640 392.240 361.878 421.045 368.830 C 436.344 372.522 465.734 367.544 465.739 367.544 C 465.735 367.548 440.501 394.972 426.443 404.981 M 236.687 328.424 C 295.813 311.065 344.033 362.784 319.760 428.907 M 221.863 427.298 C 180.401 406.398 195.378 340.552 236.687 328.424 M 277.681 399.096 C 277.473 428.388 244.431 438.674 221.863 427.298 M 241.645 378.543 C 253.681 365.465 277.868 372.716 277.681 399.096 M 249.853 393.017 C 242.946 399.159 233.472 387.424 241.645 378.543 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 521.447 403.699 C 479.931 407.550 479.530 410.897 427.583 390.697 C 411.943 405.375 383.759 411.241 358.670 406.069 C 328.060 399.760 298.918 377.243 286.547 350.564 C 269.280 313.327 282.812 268.763 301.874 247.631 C 340.545 204.760 380.165 213.691 402.915 219.402 C 458.276 233.301 485.904 269.790 544.341 322.120 C 588.350 361.529 641.987 371.774 641.992 371.775 C 641.980 371.780 593.852 396.983 521.447 403.699 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 505.449 348.074 C 474.927 337.221 456.478 325.706 456.473 325.704 M 642.064 371.372 C 642.050 371.370 575.463 372.970 505.449 348.074 M 521.447 403.699 C 479.931 407.550 479.530 410.897 427.583 390.697 C 411.943 405.375 383.759 411.241 358.670 406.069 C 328.060 399.760 298.918 377.243 286.547 350.564 C 269.280 313.327 282.812 268.763 301.874 247.631 C 340.545 204.760 380.165 213.691 402.915 219.402 C 458.276 233.301 485.904 269.790 544.341 322.120 C 588.350 361.529 641.987 371.774 641.992 371.775 C 641.980 371.780 593.852 396.983 521.447 403.699 M 388.089 259.326 C 452.288 268.401 478.796 342.637 427.583 390.697 M 331.502 338.057 C 302.626 295.899 346.749 253.482 388.089 259.326 M 394.856 343.459 C 379.806 369.159 346.022 359.256 331.502 338.057 M 368.783 304.257 C 388.031 298.225 409.985 317.624 394.856 343.459 M 369.792 326.074 C 358.168 323.319 359.467 307.176 368.783 304.257 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 579.781 439.110 C 536.482 472.923 505.232 484.740 461.647 495.874 C 462.471 514.936 455.117 539.156 437.815 553.984 C 414.083 574.321 376.409 580.199 348.436 571.128 C 308.796 558.274 287.964 515.705 284.490 487.021 C 277.682 430.814 303.780 404.304 322.958 391.604 C 370.378 360.202 410.834 376.658 437.378 381.046 C 480.834 388.229 506.075 392.078 538.991 390.759 C 592.486 388.614 642.454 371.552 642.465 371.550 C 642.458 371.557 631.366 398.826 579.781 439.110 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 538.595 425.045 C 476.946 444.203 431.986 437.113 431.975 437.114 M 640.865 372.772 C 640.855 372.777 606.106 404.064 538.595 425.045 M 579.781 439.110 C 536.482 472.923 505.232 484.740 461.647 495.874 C 462.471 514.936 455.117 539.156 437.815 553.984 C 414.083 574.321 376.409 580.199 348.436 571.128 C 308.796 558.274 287.964 515.705 284.490 487.021 C 277.682 430.814 303.780 404.304 322.958 391.604 C 370.378 360.202 410.834 376.658 437.378 381.046 C 480.834 388.229 506.075 392.078 538.991 390.759 C 592.486 388.614 642.454 371.552 642.465 371.550 C 642.458 371.557 631.366 398.826 579.781 439.110 M 354.638 439.495 C 399.068 403.521 458.822 430.589 461.647 495.874 M 377.246 529.449 C 334.282 526.357 323.597 464.628 354.638 439.495 M 414.972 485.371 C 425.252 510.527 400.631 531.132 377.246 529.449 M 376.778 480.639 C 382.414 465.143 405.714 462.716 414.972 485.371 M 388.973 490.101 C 385.252 497.826 372.950 491.161 376.778 480.639 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":702.775,\\\"y\\\":373.815,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":16.843,\\\"y\\\":350.5,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":272.248,\\\"y\\\":128.621,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.0049424451801647375,\\\"y\\\":-0.99998778604323}},{\\\"point\\\":{\\\"x\\\":272.248,\\\"y\\\":586.738,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005042800226940651,\\\"y\\\":0.9999872850021001}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":442.037,\\\"y\\\":236.774,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7012389761168888,\\\"y\\\":-0.7129262923855013}},{\\\"point\\\":{\\\"x\\\":442.068,\\\"y\\\":549.786,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7154540017101372,\\\"y\\\":0.6986598395764215}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":77.009,\\\"y\\\":255.703,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7754300229967891,\\\"y\\\":-0.6314335114920645}},{\\\"point\\\":{\\\"x\\\":131.33,\\\"y\\\":559.685,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.731563815818398,\\\"y\\\":0.68177297055928}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":639.777,\\\"y\\\":375.19,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}]}},{\\\"name\\\":\\\"rabbit\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":15.244431959147857,\\\"max\\\":701.0055647386872},\\\"y\\\":{\\\"min\\\":127.57455605676671,\\\"max\\\":579.0362964493204}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"rabbit\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"rabbit\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 109.746 307.664 C 110.108 298.277 117.972 290.996 127.359 291.357 C 136.746 291.719 144.027 299.583 143.666 308.970 C 143.304 318.357 135.440 325.638 126.053 325.277 C 116.665 324.915 109.384 317.051 109.746 307.664 M 542.693 365.467 C 547.481 361.532 558.806 368.029 568.440 356.120 C 590.295 329.104 578.298 293.932 569.950 292.992 C 553.473 291.138 533.065 331.669 524.694 335.070 C 512.819 339.894 438.169 332.674 393.696 334.455 C 300.983 338.168 259.121 370.929 230.090 353.316 C 217.486 345.669 192.766 303.703 197.421 289.715 C 201.199 278.364 247.391 247.567 260.975 237.389 C 289.179 216.259 331.006 158.850 322.699 150.914 C 311.342 140.064 254.755 184.298 239.536 196.591 C 218.726 213.400 173.819 290.155 169.040 270.891 C 167.992 266.669 206.185 219.786 214.870 205.873 C 224.089 191.104 267.786 144.125 255.461 131.828 C 241.047 117.447 189.920 175.995 176.879 191.631 C 165.356 205.445 143.576 266.380 136.923 269.192 C 125.986 273.816 91.565 278.756 81.618 285.239 C 69.705 293.003 33.004 325.208 37.889 338.561 C 51.028 374.477 122.701 356.275 135.579 373.343 C 143.342 383.630 130.196 418.217 143.379 435.357 C 152.704 447.480 89.283 459.564 77.304 469.074 C 62.562 480.778 6.561 525.274 19.045 539.362 C 34.091 556.341 78.229 502.458 92.447 495.069 C 116.389 482.625 171.038 478.454 163.457 480.619 C 146.472 485.470 120.002 491.993 110.210 498.132 C 92.350 509.331 27.261 558.193 41.442 573.791 C 56.498 590.351 111.295 531.804 131.017 524.305 C 153.798 515.645 239.230 517.955 246.426 498.774 C 252.591 482.339 314.986 497.160 350.121 493.878 C 374.829 491.569 420.474 478.091 438.279 482.441 C 450.442 485.412 477.518 510.886 489.061 515.736 C 506.091 522.892 559.907 526.232 576.857 533.575 C 588.945 538.811 616.000 561.922 629.465 569.833 C 648.319 580.910 662.059 577.580 662.781 570.746 C 665.212 547.727 593.457 495.364 580.666 498.767 C 565.037 502.924 528.759 476.299 537.270 480.903 C 555.088 490.542 571.765 492.132 582.728 491.274 C 603.488 489.650 634.885 522.022 646.606 532.416 C 660.000 544.294 682.054 557.152 696.449 547.939 C 713.748 536.868 638.115 483.069 623.747 465.553 C 595.817 431.502 565.840 460.706 543.495 415.600 C 535.924 400.317 538.004 369.320 542.693 365.467 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":336.875,\\\"y\\\":650.55,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":97.966,\\\"y\\\":217.867,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":23.95,\\\"y\\\":596.584,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.011746474819977933,\\\"y\\\":0.9999310077846888}},{\\\"point\\\":{\\\"x\\\":675.608,\\\"y\\\":596.584,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.011746474819980738,\\\"y\\\":0.9999310077846888}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":452.137,\\\"y\\\":274.215,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.03523736224776534,\\\"y\\\":-0.9993789713125947}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":336.875,\\\"y\\\":557.447,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"rain\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":181.39001882748295,\\\"max\\\":538.609981172517},\\\"y\\\":{\\\"min\\\":44.69,\\\"max\\\":693.4194243204383}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"rain_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"rain\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 330.343 608.274 C 354.256 552.651 359.996 510.904 359.999 510.895 C 360.002 510.904 364.679 552.553 389.657 608.274 C 413.446 661.343 389.797 691.550 359.999 691.419 C 333.413 691.302 306.643 663.398 330.343 608.274 M 330.343 376.172 C 354.257 320.548 359.997 278.802 360.000 278.792 C 360.003 278.802 364.680 320.451 389.657 376.172 C 413.446 429.241 389.798 459.447 360.000 459.316 C 333.414 459.199 306.644 431.296 330.343 376.172 M 330.343 144.069 C 354.257 88.446 359.997 46.699 360.000 46.690 C 360.003 46.699 364.680 88.348 389.657 144.069 C 413.446 197.138 389.798 227.345 360.000 227.214 C 333.414 227.097 306.644 199.193 330.343 144.069 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1_2\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 200.602 520.404 C 234.352 470.137 247.684 430.163 247.688 430.154 C 247.689 430.164 244.614 471.961 258.901 531.330 C 272.507 587.873 243.700 613.207 214.436 607.589 C 188.326 602.577 167.154 570.219 200.602 520.404 M 243.355 292.273 C 277.105 242.007 290.437 202.032 290.441 202.023 C 290.442 202.033 287.367 243.831 301.654 303.199 C 315.261 359.742 286.453 385.076 257.189 379.458 C 231.080 374.446 209.907 342.089 243.355 292.273 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1_2_2\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 519.398 520.404 C 485.648 470.137 472.316 430.163 472.312 430.154 C 472.311 430.164 475.386 471.961 461.099 531.330 C 447.493 587.873 476.300 613.207 505.564 607.589 C 531.674 602.577 552.846 570.219 519.398 520.404 M 476.645 292.273 C 442.895 242.007 429.563 202.032 429.559 202.023 C 429.558 202.033 432.633 243.830 418.346 303.199 C 404.740 359.742 433.547 385.075 462.811 379.458 C 488.921 374.446 510.093 342.088 476.645 292.273 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":15.772,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":198.432,\\\"y\\\":403.008,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999870363369868,\\\"y\\\":0.005091871755042698}},{\\\"point\\\":{\\\"x\\\":521.568,\\\"y\\\":403.008,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999870363369868,\\\"y\\\":0.005091871755042684}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":690.851,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"rainbow_half\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":17.593,\\\"max\\\":702.407},\\\"y\\\":{\\\"min\\\":118.54587499964998,\\\"max\\\":461.454}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"rainbow_half\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"rainbow_half\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ff00ff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 131.759 460.922 C 131.759 461.041 118.129 460.952 112.706 460.952 C 112.706 397.758 136.887 334.564 185.249 286.202 C 281.973 189.478 438.027 189.478 534.751 286.202 C 583.113 334.564 607.294 397.758 607.294 460.954 C 601.324 461.080 594.767 461.087 588.118 461.094 C 588.261 402.956 566.012 344.428 521.309 299.644 C 432.107 210.279 287.974 210.360 198.691 299.644 C 154.049 344.286 131.876 403.922 131.759 460.922 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#0000ff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 112.706 460.952 C 112.706 397.758 136.887 334.564 185.249 286.202 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#0000ff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 185.249 286.202 C 281.973 189.478 438.027 189.478 534.751 286.202 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#0000ff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 534.751 286.202 C 583.113 334.564 607.294 397.758 607.294 460.954 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#0000ff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 607.294 460.954 C 613.452 460.954 619.518 460.954 626.317 460.954 C 626.317 392.897 600.275 324.842 548.193 272.760 C 444.030 168.596 275.971 168.596 171.807 272.760 C 119.725 324.842 93.684 392.897 93.683 460.952 C 99.129 460.952 104.647 460.952 112.706 460.952 C 112.706 397.758 136.887 334.564 185.249 286.202 C 281.973 189.478 438.027 189.478 534.751 286.202 C 583.113 334.564 607.294 397.758 607.294 460.954 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#00ffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 93.683 460.952 C 93.684 392.897 119.725 324.842 171.807 272.760 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#00ffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 171.807 272.760 C 275.971 168.596 444.030 168.596 548.193 272.760 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#00ffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 548.193 272.760 C 600.275 324.842 626.317 392.897 626.317 460.954 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#00ffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 626.317 460.954 C 633.071 460.954 639.701 460.954 645.339 460.954 C 645.339 388.036 617.438 315.119 561.636 259.317 C 450.032 147.713 269.969 147.714 158.364 259.317 C 102.562 315.119 74.661 388.036 74.661 460.952 C 80.116 460.952 85.649 460.952 93.683 460.952 C 93.684 392.897 119.725 324.842 171.807 272.760 C 275.971 168.596 444.030 168.596 548.193 272.760 C 600.275 324.842 626.317 392.897 626.317 460.954 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#00ff00\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 74.661 460.952 C 74.661 388.036 102.562 315.119 158.364 259.317 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#00ff00\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 158.364 259.317 C 269.969 147.714 450.032 147.713 561.636 259.317 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#00ff00\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 561.636 259.317 C 617.438 315.119 645.339 388.036 645.339 460.954 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#00ff00\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 664.362 460.954 C 664.362 383.175 634.600 305.397 575.078 245.875 C 456.034 126.830 263.966 126.831 144.922 245.875 C 85.400 305.397 55.639 383.175 55.638 460.952 C 61.086 460.952 66.621 460.951 74.661 460.952 C 74.661 388.036 102.562 315.119 158.364 259.317 C 269.969 147.714 450.032 147.713 561.636 259.317 C 617.438 315.119 645.339 388.036 645.339 460.954 C 651.497 460.954 657.534 460.954 664.362 460.954 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffff00\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 55.638 460.952 C 55.639 383.175 85.400 305.397 144.922 245.875 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffff00\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 144.922 245.875 C 263.966 126.831 456.034 126.830 575.078 245.875 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffff00\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 575.078 245.875 C 634.600 305.397 664.362 383.175 664.362 460.954 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffff00\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 683.384 460.954 C 683.384 378.314 651.763 295.675 588.521 232.432 C 462.036 105.947 257.964 105.948 131.479 232.432 C 68.237 295.675 36.616 378.314 36.616 460.952 C 42.041 460.952 47.561 460.952 55.638 460.952 C 55.639 383.175 85.400 305.397 144.922 245.875 C 263.966 126.831 456.034 126.830 575.078 245.875 C 634.600 305.397 664.362 383.175 664.362 460.954 C 670.777 460.954 677.041 460.954 683.384 460.954 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ff0000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 36.616 460.952 C 36.616 378.314 68.237 295.675 131.479 232.432 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ff0000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 131.479 232.432 C 257.964 105.948 462.036 105.947 588.521 232.432 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ff0000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 588.521 232.432 C 651.763 295.675 683.384 378.314 683.384 460.954 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ff0000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 683.384 460.954 C 689.852 460.954 696.141 460.954 702.407 460.954 C 702.407 373.453 668.926 285.952 601.963 218.990 C 468.038 85.064 251.962 85.065 118.037 218.990 C 51.074 285.952 19.675 373.510 17.593 460.952 C 20.312 460.952 28.469 460.952 36.616 460.952 C 36.616 378.314 68.237 295.675 131.479 232.432 C 257.964 105.948 462.036 105.947 588.521 232.432 C 651.763 295.675 683.384 378.314 683.384 460.954 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":246.172,\\\"max\\\":473.828},\\\"y\\\":{\\\"min\\\":236.259,\\\"max\\\":463.915}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":588.379,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":109.629,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":31.9,\\\"y\\\":360.935,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999869443305633,\\\"y\\\":0.00510990884683594}},{\\\"point\\\":{\\\"x\\\":688.1,\\\"y\\\":360.935,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999869443305632,\\\"y\\\":0.005109908846835966}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":647.341,\\\"y\\\":461.801,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.008212659897430715,\\\"y\\\":0.9999662755400349}},{\\\"point\\\":{\\\"x\\\":72.688,\\\"y\\\":461.982,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.01180902004706364,\\\"y\\\":0.9999302710917037}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":592.835,\\\"y\\\":206.541,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314091670147428,\\\"y\\\":-0.775449846095638}},{\\\"point\\\":{\\\"x\\\":127.956,\\\"y\\\":206.62,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817481203990752,\\\"y\\\":-0.73158697386731}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":463.882,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"ring\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":37.125,\\\"max\\\":682.875},\\\"y\\\":{\\\"min\\\":30.195,\\\"max\\\":675.945}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"ring\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"ring\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 81.548 353.070 C 81.548 198.949 205.879 74.618 360.000 74.618 C 514.121 74.618 638.452 198.949 638.452 353.070 C 638.452 507.191 514.121 631.522 360.000 631.522 C 205.879 631.522 81.548 507.191 81.548 353.070 M 39.125 353.070 C 39.125 175.468 182.398 32.195 360.000 32.195 C 537.602 32.195 680.875 175.468 680.875 353.070 C 680.875 530.672 537.602 673.945 360.000 673.945 C 182.398 673.945 39.125 530.672 39.125 353.070 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":141.733,\\\"max\\\":578.908},\\\"y\\\":{\\\"min\\\":132.862,\\\"max\\\":570.036}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360.321,\\\"y\\\":700.241,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360.321,\\\"y\\\":29.363,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":39.36,\\\"y\\\":352.366,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871769431458,\\\"y\\\":0.0050641829822523085}},{\\\"point\\\":{\\\"x\\\":682.307,\\\"y\\\":352.366,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871750044815,\\\"y\\\":0.005064565781639421}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":588.942,\\\"y\\\":580.52,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129027528249815,\\\"y\\\":0.7012629071999769}},{\\\"point\\\":{\\\"x\\\":132.81,\\\"y\\\":580.567,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987053394445427,\\\"y\\\":0.7154095670535071}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":588.453,\\\"y\\\":124.317,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314373808424275,\\\"y\\\":-0.7754268721645227}},{\\\"point\\\":{\\\"x\\\":132.963,\\\"y\\\":124.394,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817228407133816,\\\"y\\\":-0.7316105305759871}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360.833,\\\"y\\\":674.044,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"saturn\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":11.880679482103867,\\\"max\\\":708.1265968457276},\\\"y\\\":{\\\"min\\\":180.346,\\\"max\\\":539.654}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"saturn\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"saturn\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 182.346 C 447.809 182.346 520.461 245.603 535.041 329.638 C 535.972 335.005 536.666 340.454 537.112 345.976 C 537.456 350.214 537.654 355.083 537.654 360.000 C 537.654 364.917 537.456 369.786 537.090 374.311 C 536.645 379.816 535.952 385.248 535.160 389.794 C 520.460 474.397 447.809 537.654 360.000 537.654 C 261.670 537.654 182.346 458.330 182.346 360.000 C 182.346 261.670 261.670 182.346 360.000 182.346 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 535.160 389.794 C 535.952 385.248 537.090 374.311 537.090 374.311 C 550.830 371.958 592.145 366.721 592.052 360.000 C 591.939 351.788 571.369 351.362 537.112 345.976 C 529.803 344.939 522.360 343.942 514.725 343.114 C 468.357 338.086 407.510 334.530 360.000 334.530 C 312.490 334.530 251.643 338.086 205.274 343.114 C 160.362 347.983 127.878 351.497 127.948 360.000 C 128.017 368.524 168.751 374.596 182.699 376.886 C 182.699 376.886 184.053 387.181 184.971 392.072 C 94.367 384.702 14.539 372.935 13.885 360.000 C 13.154 345.548 105.291 335.207 208.006 327.896 C 258.828 324.278 313.666 322.010 360.000 322.010 C 406.334 322.010 461.171 324.278 512.452 327.928 C 519.610 328.438 526.715 328.973 535.041 329.638 C 627.058 336.958 704.679 345.215 706.115 360.000 C 707.434 373.574 595.918 383.297 535.160 389.794 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":260.795,\\\"max\\\":459.205},\\\"y\\\":{\\\"min\\\":345.026,\\\"max\\\":504.125}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360.308,\\\"y\\\":559.631,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360.308,\\\"y\\\":182.815,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":19.442,\\\"y\\\":360.938,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872082557207,\\\"y\\\":0.005057996137791732}},{\\\"point\\\":{\\\"x\\\":701.604,\\\"y\\\":360.938,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872082557207,\\\"y\\\":0.005057996137791761}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":485.3,\\\"y\\\":484.146,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129580169531665,\\\"y\\\":0.7012067213469992}},{\\\"point\\\":{\\\"x\\\":235.923,\\\"y\\\":484.171,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698693453301482,\\\"y\\\":0.7154211754719382}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":485.033,\\\"y\\\":234.729,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.631399028242315,\\\"y\\\":-0.7754581014694865}},{\\\"point\\\":{\\\"x\\\":236.006,\\\"y\\\":234.771,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817121448435952,\\\"y\\\":-0.7316204969605109}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":537.587,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"scales\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":18.94,\\\"max\\\":700.871},\\\"y\\\":{\\\"min\\\":107.727,\\\"max\\\":630.213}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"scales\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"scales\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.988 113.933 C 359.990 113.979 384.851 570.253 384.853 570.298 C 384.848 570.298 335.127 570.298 335.122 570.298 C 335.124 570.253 359.985 113.979 359.988 113.933 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 269.135 412.926 C 202.317 412.927 88.483 412.927 20.940 412.926 C 54.519 440.815 97.780 457.598 145.062 457.598 C 192.344 457.598 241.645 435.835 269.135 412.926 M 450.676 412.926 C 517.493 412.927 631.328 412.927 698.871 412.926 C 665.291 440.815 622.031 457.598 574.749 457.598 C 527.467 457.598 478.166 435.835 450.676 412.926 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 156.814 151.363 C 153.811 148.360 149.659 146.506 145.062 146.506 C 140.466 146.506 136.314 148.360 133.311 151.363 C 130.308 154.366 128.453 158.518 128.453 163.115 C 128.453 167.711 133.310 174.865 133.310 174.866 C 133.312 174.867 140.466 179.723 145.062 179.723 C 149.659 179.723 156.813 174.867 156.814 174.866 C 156.815 174.865 161.671 167.711 161.671 163.115 C 161.671 158.519 159.817 154.366 156.814 151.363 M 562.997 151.363 C 566.000 148.360 570.152 146.506 574.749 146.506 C 579.345 146.506 583.497 148.360 586.500 151.363 C 589.503 154.366 591.357 158.518 591.357 163.115 C 591.358 167.711 586.501 174.865 586.500 174.866 C 586.499 174.867 579.345 179.723 574.749 179.723 C 570.152 179.723 562.998 174.867 562.997 174.866 C 562.996 174.865 558.140 167.711 558.140 163.115 C 558.140 158.518 559.994 154.366 562.997 151.363 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.988 137.342 C 360.009 137.343 577.612 142.469 577.612 142.468 C 577.590 142.465 360.010 109.728 359.988 109.727 C 359.800 109.728 142.220 142.465 142.199 142.468 C 142.199 142.469 360.047 137.343 359.988 137.342 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 562.997 174.866 C 525.557 254.220 488.116 333.573 450.676 412.926 C 517.493 412.927 631.328 412.927 698.871 412.926 C 661.414 333.573 623.957 254.220 586.500 174.866 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 156.814 174.866 C 194.254 254.220 231.694 333.573 269.135 412.926 C 202.317 412.927 88.483 412.927 20.940 412.926 C 58.397 333.573 95.854 254.220 133.310 174.866 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 224.170 560.161 C 224.197 560.161 495.778 560.161 495.805 560.161 C 495.805 560.163 495.805 584.212 495.805 584.214 C 495.778 584.214 224.197 584.214 224.170 584.214 C 224.170 584.212 224.170 560.163 224.170 560.161 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 196.411 581.924 C 196.444 581.924 523.532 581.924 523.565 581.924 C 523.565 581.926 523.565 605.975 523.565 605.977 C 523.532 605.977 196.444 605.977 196.411 605.977 C 196.411 605.975 196.411 581.926 196.411 581.924 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 172.662 604.159 C 172.699 604.159 547.276 604.159 547.314 604.159 C 547.314 604.161 547.314 628.210 547.314 628.213 C 547.276 628.213 172.699 628.213 172.662 628.213 C 172.662 628.210 172.662 604.161 172.662 604.159 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":61.374,\\\"max\\\":223.52},\\\"y\\\":{\\\"min\\\":248.18,\\\"max\\\":410.327}},{\\\"x\\\":{\\\"min\\\":496.479,\\\"max\\\":658.626},\\\"y\\\":{\\\"min\\\":248.18,\\\"max\\\":410.327}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":701.073,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":108.38,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":17.788,\\\"y\\\":413.652,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872916822697,\\\"y\\\":0.005041475375237345}},{\\\"point\\\":{\\\"x\\\":702.212,\\\"y\\\":413.652,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872916822697,\\\"y\\\":0.005041475375237355}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":547.794,\\\"y\\\":626.138,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129097469514819,\\\"y\\\":0.7012557969112083}},{\\\"point\\\":{\\\"x\\\":172.051,\\\"y\\\":626.176,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986608899667285,\\\"y\\\":0.7154529759745912}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":584.381,\\\"y\\\":137.617,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314659502682193,\\\"y\\\":-0.7754036069376095}},{\\\"point\\\":{\\\"x\\\":136.385,\\\"y\\\":137.693,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817676688773094,\\\"y\\\":-0.7315687566275635}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":628.711,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"scroll_double\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":34.762876465938646,\\\"max\\\":685.2646292097677},\\\"y\\\":{\\\"min\\\":10.077750000000002,\\\"max\\\":650.8802499999999}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"scroll_double\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"double_scroll\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#03BCD2A7-5DF6-44C3-B668-EEF60DF2B849_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 116.732 125.986 C 116.781 125.986 603.219 125.986 603.268 125.986 C 603.268 126.025 603.268 512.776 603.268 512.814 C 603.219 512.814 116.781 512.814 116.732 512.814 C 116.732 512.776 116.732 126.025 116.732 125.986 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 100.030 646.802 C 103.617 649.573 125.232 649.573 128.819 646.802 C 145.251 634.108 126.477 568.848 128.819 514.906 C 128.823 514.800 117.986 511.770 114.424 511.770 C 110.863 511.770 100.028 514.871 100.030 514.906 C 103.625 569.190 83.598 634.108 100.030 646.802 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#03BCD2A7-5DF6-44C3-B668-EEF60DF2B849_2)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 36.771 514.350 C 36.771 391.398 36.771 145.532 36.771 145.495 C 36.247 154.351 61.062 164.908 114.424 164.908 C 167.787 164.908 191.174 153.073 192.078 145.495 C 192.078 268.446 192.078 391.398 192.078 514.350 C 192.078 522.182 167.787 533.764 114.424 533.764 C 61.062 533.764 36.771 523.582 36.771 514.350 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 192.078 145.495 C 191.174 153.073 167.787 164.908 114.424 164.908 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 114.424 164.908 C 61.062 164.908 36.247 154.351 36.771 145.495 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 114.424 126.081 C 167.787 126.081 193.200 136.090 192.078 145.495 C 191.174 153.073 167.787 164.908 114.424 164.908 C 61.062 164.908 36.247 154.351 36.771 145.495 C 37.342 135.826 61.062 126.081 114.424 126.081 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 100.030 14.156 C 103.616 11.385 125.232 11.385 128.819 14.156 C 145.251 26.850 126.477 92.110 128.819 146.051 C 128.823 146.158 117.986 149.188 114.424 149.188 C 110.863 149.188 100.027 146.087 100.030 146.051 C 103.625 91.768 83.598 26.850 100.030 14.156 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 591.181 646.802 C 594.768 649.573 616.383 649.573 619.970 646.802 C 636.402 634.108 617.628 568.848 619.970 514.906 C 619.974 514.800 609.137 511.770 605.576 511.770 C 602.014 511.770 591.179 514.871 591.181 514.906 C 594.776 569.190 574.749 634.108 591.181 646.802 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#03BCD2A7-5DF6-44C3-B668-EEF60DF2B849_6)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 527.922 514.350 C 527.922 391.398 527.922 145.532 527.922 145.495 C 527.398 154.351 552.213 164.908 605.576 164.908 C 658.938 164.908 682.325 153.073 683.229 145.495 C 683.229 268.446 683.229 391.398 683.229 514.350 C 683.229 522.182 658.938 533.764 605.576 533.764 C 552.213 533.764 527.922 523.582 527.922 514.350 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 683.229 145.495 C 682.325 153.073 658.938 164.908 605.576 164.908 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 605.576 164.908 C 552.213 164.908 527.398 154.351 527.922 145.495 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 605.576 126.081 C 658.938 126.081 684.352 136.090 683.229 145.495 C 682.325 153.073 658.938 164.908 605.576 164.908 C 552.213 164.908 527.398 154.351 527.922 145.495 C 528.494 135.826 552.213 126.081 605.576 126.081 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 591.181 14.156 C 594.768 11.385 616.383 11.385 619.970 14.156 C 636.402 26.850 617.628 92.110 619.970 146.051 C 619.974 146.158 609.137 149.188 605.576 149.188 C 602.014 149.188 591.179 146.087 591.181 146.051 C 594.776 91.768 574.749 26.850 591.181 14.156 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":203.533,\\\"max\\\":516.467},\\\"y\\\":{\\\"min\\\":160.164,\\\"max\\\":473.097}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":702.795,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":91.188,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":41.918,\\\"y\\\":331.386,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872892756082,\\\"y\\\":0.0050419527190347}},{\\\"point\\\":{\\\"x\\\":678.082,\\\"y\\\":331.386,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872892756082,\\\"y\\\":0.005041952719034687}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":611.038,\\\"y\\\":582.659,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129172913082297,\\\"y\\\":0.7012481270946374}},{\\\"point\\\":{\\\"x\\\":108.755,\\\"y\\\":582.71,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986831547292696,\\\"y\\\":0.7154312331017955}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":611.215,\\\"y\\\":80.3,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314269328348124,\\\"y\\\":-0.7754353799581377}},{\\\"point\\\":{\\\"x\\\":109.639,\\\"y\\\":80.385,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817506492079402,\\\"y\\\":-0.7315846173236231}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":558.849,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"03BCD2A7-5DF6-44C3-B668-EEF60DF2B849_0\\\",\\\"x1\\\":\\\"-21.85%\\\",\\\"y1\\\":\\\"63.93%\\\",\\\"x2\\\":\\\"120.72%\\\",\\\"y2\\\":\\\"63.93%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#000000\\\"},{\\\"offset\\\":\\\"35.69%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"65.10%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"03BCD2A7-5DF6-44C3-B668-EEF60DF2B849_2\\\",\\\"x1\\\":\\\"-34.29%\\\",\\\"y1\\\":\\\"47.05%\\\",\\\"x2\\\":\\\"126.48%\\\",\\\"y2\\\":\\\"46.55%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#000000\\\"},{\\\"offset\\\":\\\"35.69%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"65.10%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]},{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"03BCD2A7-5DF6-44C3-B668-EEF60DF2B849_6\\\",\\\"x1\\\":\\\"-37.24%\\\",\\\"y1\\\":\\\"50.00%\\\",\\\"x2\\\":\\\"137.79%\\\",\\\"y2\\\":\\\"50.00%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#000000\\\"},{\\\"offset\\\":\\\"35.69%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"65.10%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"skeleton\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":175.148,\\\"max\\\":544.852},\\\"y\\\":{\\\"min\\\":42.917,\\\"max\\\":637.044}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"skeleton\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"skeleton\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 279.627 192.973 C 280.810 194.318 281.389 195.982 281.389 197.676 C 283.064 197.886 284.640 198.672 285.823 200.017 C 288.395 202.940 288.111 207.373 285.188 209.944 C 282.879 211.976 279.627 212.225 277.115 210.810 C 259.691 226.121 236.053 246.913 221.934 259.335 C 223.022 262.018 222.359 265.210 220.050 267.242 C 217.127 269.813 212.694 269.530 210.123 266.606 C 208.940 265.262 208.509 262.748 208.366 261.910 C 208.366 261.910 205.110 260.907 203.927 259.562 C 201.356 256.639 201.639 252.207 204.562 249.635 C 206.872 247.604 210.772 247.821 212.635 248.770 C 212.605 248.784 256.148 210.500 267.816 200.244 C 266.729 197.562 267.391 194.369 269.700 192.337 C 272.623 189.766 277.056 190.050 279.627 192.973 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 317.979 90.048 C 317.980 79.721 326.310 71.390 336.637 71.390 C 346.964 71.390 355.295 79.721 355.295 90.048 C 355.295 100.375 346.964 108.706 336.637 108.706 C 326.310 108.706 317.979 100.375 317.979 90.048 M 350.093 118.880 C 350.094 118.878 359.951 101.005 359.952 101.003 C 359.953 101.005 369.811 118.878 369.812 118.880 C 369.810 118.880 350.095 118.880 350.093 118.880 M 364.314 89.719 C 364.314 79.469 372.582 71.200 382.832 71.200 C 393.082 71.200 401.351 79.469 401.351 89.719 C 401.351 99.969 393.083 108.238 382.832 108.238 C 372.582 108.238 364.314 99.969 364.314 89.719 M 333.137 154.632 C 333.137 154.630 333.399 135.730 333.467 130.798 C 320.330 122.098 309.722 107.443 309.316 89.999 C 308.688 62.945 332.891 42.917 359.952 42.917 C 387.013 42.917 411.217 62.946 410.588 89.999 C 410.183 107.443 399.574 122.098 386.437 130.798 C 386.506 135.730 386.768 154.630 386.768 154.632 C 386.767 154.632 378.242 154.632 378.241 154.632 C 378.241 154.631 378.241 142.424 378.241 142.423 C 378.241 142.423 375.428 142.423 375.427 142.423 C 375.427 142.424 375.427 154.631 375.427 154.632 C 375.426 154.632 366.987 154.632 366.986 154.632 C 366.986 154.631 366.986 142.424 366.986 142.423 C 366.986 142.423 364.173 142.423 364.173 142.423 C 364.173 142.424 364.173 154.631 364.173 154.632 C 364.172 154.632 355.733 154.632 355.732 154.632 C 355.732 154.631 355.732 142.424 355.732 142.423 C 355.731 142.423 352.918 142.423 352.918 142.423 C 352.918 142.424 352.918 154.631 352.918 154.632 C 352.917 154.632 344.477 154.632 344.477 154.632 C 344.477 154.631 344.477 142.424 344.477 142.423 C 344.477 142.423 341.664 142.423 341.664 142.423 C 341.664 142.424 341.664 154.631 341.664 154.632 C 341.663 154.632 333.138 154.632 333.137 154.632 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 198.268 274.464 C 200.059 274.506 201.674 275.208 202.920 276.355 C 204.210 275.267 205.856 274.640 207.647 274.682 C 211.539 274.772 214.605 277.986 214.515 281.878 C 214.443 284.953 212.423 287.513 209.680 288.401 C 209.128 311.589 208.393 343.062 207.957 361.862 C 210.667 362.881 212.565 365.532 212.494 368.607 C 212.403 372.499 209.190 375.565 205.298 375.475 C 203.507 375.433 201.367 374.046 200.654 373.584 C 200.654 373.584 197.709 375.298 195.919 375.256 C 192.027 375.166 188.960 371.953 189.051 368.060 C 189.123 364.986 191.925 362.266 193.886 361.538 C 193.876 361.570 195.241 303.607 195.609 288.076 C 192.899 287.058 191.000 284.407 191.072 281.332 C 191.163 277.440 194.376 274.373 198.268 274.464 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 290.404 613.763 C 296.709 613.763 301.794 618.849 301.794 625.153 C 301.794 631.458 296.709 636.543 290.404 636.543 C 284.100 636.543 279.014 631.457 279.014 625.153 C 279.014 618.849 284.100 613.763 290.404 613.763 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 350.692 162.080 C 350.694 162.080 369.210 162.080 369.212 162.080 C 369.212 162.082 369.212 180.598 369.212 180.600 C 369.210 180.600 350.694 180.600 350.692 180.600 C 350.692 180.598 350.692 162.082 350.692 162.080 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 350.692 190.542 C 350.694 190.542 369.210 190.542 369.212 190.542 C 369.212 190.544 369.212 209.060 369.212 209.062 C 369.210 209.062 350.694 209.062 350.692 209.062 C 350.692 209.060 350.692 190.544 350.692 190.542 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 350.692 219.004 C 350.694 219.004 369.210 219.004 369.212 219.004 C 369.212 219.006 369.212 237.522 369.212 237.524 C 369.210 237.524 350.694 237.524 350.692 237.524 C 350.692 237.522 350.692 219.006 350.692 219.004 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 350.692 248.501 C 350.694 248.501 369.210 248.501 369.212 248.501 C 369.212 248.503 369.212 267.019 369.212 267.021 C 369.210 267.021 350.694 267.021 350.692 267.021 C 350.692 267.019 350.692 248.503 350.692 248.501 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 350.692 277.998 C 350.694 277.998 369.210 277.998 369.212 277.998 C 369.212 278.000 369.212 296.516 369.212 296.518 C 369.210 296.518 350.694 296.518 350.692 296.518 C 350.692 296.516 350.692 278.000 350.692 277.998 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 350.692 306.977 C 350.694 306.977 369.210 306.977 369.212 306.977 C 369.212 306.979 369.212 325.495 369.212 325.497 C 369.210 325.497 350.694 325.497 350.692 325.497 C 350.692 325.495 350.692 306.979 350.692 306.977 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 333.869 330.720 C 345.020 330.738 354.747 336.657 359.954 345.349 C 365.453 337.033 375.054 330.720 386.035 330.720 C 402.929 330.720 416.558 344.349 416.558 361.243 C 416.558 378.137 402.929 391.766 386.035 391.765 C 372.834 391.765 359.954 377.137 359.954 377.137 C 356.220 380.794 345.020 391.765 333.869 391.765 C 316.975 391.765 303.347 378.137 303.347 361.243 C 303.347 344.348 319.578 330.697 333.869 330.720 M 374.125 361.243 C 374.125 354.651 379.443 349.333 386.035 349.333 C 392.627 349.333 397.945 354.651 397.945 361.243 C 397.945 367.835 392.627 373.153 386.035 373.153 C 379.443 373.153 374.125 367.835 374.125 361.243 M 321.960 361.243 C 321.960 354.651 327.277 349.333 333.869 349.333 C 340.461 349.333 345.779 354.651 345.779 361.243 C 345.779 367.835 340.461 373.152 333.869 373.152 C 327.278 373.152 321.960 367.835 321.960 361.243 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 380.310 189.141 C 388.398 192.422 415.746 192.068 423.841 189.141 C 425.354 188.594 429.098 194.704 423.841 201.044 C 420.084 205.574 385.381 205.702 380.310 201.044 C 375.632 196.746 378.819 188.536 380.310 189.141 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 380.310 216.051 C 388.398 219.332 415.746 218.978 423.841 216.051 C 425.354 215.504 429.098 221.613 423.841 227.953 C 420.084 232.483 385.381 232.612 380.310 227.953 C 375.632 223.655 378.819 215.446 380.310 216.051 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 380.310 243.478 C 388.398 246.759 415.746 246.405 423.841 243.478 C 425.354 242.930 429.098 249.040 423.841 255.380 C 420.084 259.911 385.381 260.039 380.310 255.380 C 375.632 251.082 378.819 242.873 380.310 243.478 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 339.716 189.141 C 331.629 192.422 304.281 192.068 296.186 189.141 C 294.673 188.594 290.929 194.704 296.186 201.044 C 299.943 205.574 334.645 205.702 339.716 201.044 C 344.395 196.746 341.208 188.536 339.716 189.141 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 339.716 216.051 C 331.629 219.332 304.281 218.978 296.186 216.051 C 294.673 215.504 290.929 221.613 296.186 227.953 C 299.943 232.483 334.645 232.612 339.716 227.953 C 344.395 223.655 341.208 215.446 339.716 216.051 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 339.716 243.478 C 331.629 246.759 304.281 246.405 296.186 243.478 C 294.673 242.930 290.929 249.040 296.186 255.380 C 299.943 259.911 334.645 260.039 339.716 255.380 C 344.395 251.082 341.208 242.873 339.716 243.478 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 310.673 391.301 C 312.329 392.324 313.460 393.871 313.998 395.632 C 315.806 395.320 317.695 395.636 319.352 396.659 C 322.954 398.883 324.066 403.584 321.842 407.186 C 320.085 410.031 316.783 411.323 313.721 410.648 C 300.460 432.102 282.474 461.228 271.734 478.628 C 273.716 481.073 274.041 484.603 272.284 487.449 C 270.060 491.051 265.360 492.163 261.758 489.939 C 260.101 488.916 258.855 486.438 258.440 485.612 C 258.440 485.612 254.735 485.603 253.078 484.579 C 249.476 482.356 248.364 477.656 250.588 474.054 C 252.345 471.208 256.470 470.196 258.710 470.591 C 258.683 470.616 291.816 416.981 300.697 402.611 C 298.714 400.167 298.389 396.636 300.146 393.790 C 302.370 390.188 307.070 389.077 310.673 391.301 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 264.743 497.122 C 262.813 497.382 261.151 498.335 259.943 499.724 C 258.418 498.702 256.564 498.223 254.634 498.482 C 250.438 499.046 247.509 502.886 248.073 507.082 C 248.519 510.397 251.009 512.921 254.080 513.552 C 257.455 538.546 262.020 572.471 264.744 592.738 C 261.938 594.163 260.204 597.255 260.650 600.570 C 261.214 604.765 265.054 607.695 269.249 607.130 C 271.179 606.871 273.326 605.115 274.041 604.530 C 274.041 604.530 277.429 606.030 279.359 605.770 C 283.554 605.206 286.484 601.366 285.919 597.171 C 285.474 593.856 282.118 591.252 279.912 590.701 C 279.926 590.734 271.507 528.256 269.249 511.515 C 272.055 510.090 273.789 506.997 273.343 503.682 C 272.779 499.487 268.939 496.558 264.743 497.122 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 199.698 382.136 C 206.002 382.136 211.088 387.222 211.088 393.526 C 211.088 399.830 206.002 404.916 199.698 404.916 C 193.394 404.916 188.308 399.830 188.308 393.526 C 188.308 387.222 193.394 382.136 199.698 382.136 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 197.180 412.741 C 197.180 412.741 203.776 412.741 203.777 412.741 C 203.777 412.744 203.777 442.974 203.777 442.977 C 203.776 442.977 197.180 442.977 197.180 442.977 C 197.180 442.974 197.180 412.744 197.180 412.741 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 184.341 407.506 C 184.341 407.507 190.625 409.512 190.625 409.512 C 190.624 409.515 181.433 438.313 181.432 438.316 C 181.432 438.316 175.149 436.311 175.148 436.311 C 175.149 436.308 184.340 407.509 184.341 407.506 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 209.648 409.590 C 209.648 409.590 215.911 407.522 215.912 407.522 C 215.913 407.525 225.391 436.230 225.392 436.232 C 225.392 436.233 219.129 438.301 219.128 438.301 C 219.127 438.298 209.649 409.593 209.648 409.590 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 440.373 192.973 C 439.190 194.318 438.611 195.982 438.611 197.676 C 436.936 197.886 435.360 198.672 434.177 200.017 C 431.605 202.940 431.889 207.373 434.812 209.944 C 437.121 211.976 440.373 212.225 442.885 210.810 C 460.309 226.121 483.947 246.913 498.066 259.335 C 496.978 262.018 497.641 265.210 499.950 267.242 C 502.873 269.813 507.306 269.530 509.877 266.606 C 511.060 265.262 511.491 262.748 511.634 261.910 C 511.634 261.910 514.890 260.907 516.073 259.562 C 518.644 256.639 518.361 252.207 515.438 249.635 C 513.128 247.604 509.228 247.821 507.365 248.770 C 507.395 248.784 463.852 210.501 452.184 200.244 C 453.271 197.562 452.609 194.369 450.300 192.337 C 447.377 189.766 442.944 190.050 440.373 192.973 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 521.732 274.464 C 519.941 274.506 518.326 275.208 517.080 276.355 C 515.790 275.267 514.144 274.641 512.353 274.682 C 508.461 274.773 505.395 277.986 505.485 281.878 C 505.557 284.953 507.577 287.513 510.320 288.401 C 510.872 311.589 511.607 343.062 512.043 361.862 C 509.333 362.881 507.435 365.532 507.506 368.607 C 507.597 372.499 510.810 375.565 514.702 375.475 C 516.493 375.433 518.633 374.046 519.346 373.584 C 519.346 373.584 522.290 375.298 524.081 375.256 C 527.973 375.166 531.040 371.953 530.949 368.060 C 530.878 364.986 528.075 362.266 526.114 361.538 C 526.124 361.570 524.759 303.607 524.391 288.076 C 527.101 287.057 529.000 284.407 528.928 281.332 C 528.837 277.440 525.624 274.373 521.732 274.464 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 429.596 613.763 C 423.291 613.763 418.206 618.849 418.206 625.153 C 418.206 631.458 423.291 636.543 429.596 636.543 C 435.900 636.543 440.986 631.457 440.986 625.153 C 440.986 618.849 435.900 613.763 429.596 613.763 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 409.328 391.301 C 407.671 392.324 406.540 393.871 406.002 395.632 C 404.194 395.320 402.305 395.636 400.648 396.659 C 397.046 398.883 395.934 403.584 398.158 407.186 C 399.915 410.031 403.217 411.323 406.279 410.648 C 419.540 432.102 437.526 461.228 448.266 478.628 C 446.284 481.073 445.959 484.603 447.716 487.449 C 449.940 491.051 454.640 492.163 458.242 489.939 C 459.899 488.916 461.145 486.438 461.560 485.612 C 461.560 485.612 465.265 485.603 466.922 484.579 C 470.524 482.356 471.636 477.656 469.412 474.054 C 467.655 471.208 463.530 470.196 461.290 470.591 C 461.317 470.616 428.184 416.981 419.303 402.611 C 421.286 400.167 421.611 396.636 419.854 393.790 C 417.630 390.188 412.930 389.077 409.328 391.301 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 455.257 497.122 C 457.187 497.382 458.849 498.335 460.057 499.724 C 461.582 498.702 463.436 498.223 465.366 498.482 C 469.562 499.046 472.491 502.886 471.927 507.082 C 471.481 510.397 468.991 512.921 465.920 513.552 C 462.545 538.546 457.980 572.471 455.256 592.738 C 458.062 594.163 459.796 597.255 459.350 600.570 C 458.786 604.765 454.946 607.695 450.751 607.130 C 448.821 606.871 446.674 605.115 445.959 604.530 C 445.959 604.530 442.571 606.030 440.641 605.770 C 436.446 605.206 433.516 601.366 434.081 597.171 C 434.526 593.856 437.882 591.252 440.088 590.701 C 440.074 590.734 448.493 528.256 450.751 511.515 C 447.945 510.090 446.211 506.997 446.657 503.682 C 447.221 499.487 451.061 496.558 455.257 497.122 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 487.868 625.341 C 487.868 625.342 487.868 637.043 487.868 637.044 C 487.871 637.044 515.157 637.044 515.160 637.044 C 515.157 637.043 487.871 625.342 487.868 625.341 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 520.303 382.136 C 513.998 382.136 508.912 387.222 508.912 393.526 C 508.912 399.830 513.998 404.916 520.303 404.916 C 526.607 404.916 531.692 399.830 531.692 393.526 C 531.692 387.222 526.607 382.136 520.303 382.136 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 522.820 412.741 C 522.820 412.741 516.224 412.741 516.224 412.741 C 516.224 412.744 516.224 442.974 516.224 442.977 C 516.224 442.977 522.820 442.977 522.820 442.977 C 522.820 442.974 522.820 412.744 522.820 412.741 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 535.660 407.507 C 535.659 407.507 529.375 409.512 529.375 409.512 C 529.376 409.515 538.567 438.314 538.568 438.316 C 538.568 438.316 544.852 436.311 544.852 436.311 C 544.851 436.308 535.661 407.510 535.660 407.507 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 510.353 409.590 C 510.352 409.590 504.089 407.522 504.088 407.522 C 504.087 407.524 494.609 436.230 494.608 436.232 C 494.608 436.233 500.871 438.301 500.872 438.301 C 500.873 438.298 510.352 409.593 510.353 409.590 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 448.093 614.946 C 448.096 614.947 479.107 624.031 479.110 624.032 C 479.110 624.034 479.716 636.752 479.716 636.753 C 479.713 636.753 448.096 636.753 448.093 636.753 C 448.093 636.751 448.093 614.948 448.093 614.946 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 232.132 625.341 C 232.132 625.342 232.132 637.043 232.132 637.044 C 232.129 637.044 204.843 637.044 204.840 637.044 C 204.843 637.043 232.129 625.342 232.132 625.341 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 271.907 614.946 C 271.904 614.947 240.893 624.031 240.890 624.032 C 240.890 624.034 240.284 636.752 240.284 636.753 C 240.287 636.753 271.904 636.753 271.907 636.753 C 271.907 636.751 271.907 614.948 271.907 614.946 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":284.171,\\\"max\\\":435.829},\\\"y\\\":{\\\"min\\\":201.379,\\\"max\\\":353.036}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":691.749,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":37.457,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":522.845,\\\"y\\\":456.016,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.008240607665928108,\\\"y\\\":0.9999660456161981}},{\\\"point\\\":{\\\"x\\\":197.281,\\\"y\\\":457.056,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.011804897998956418,\\\"y\\\":0.9999303197639495}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":456.227,\\\"y\\\":179.857,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314694535673114,\\\"y\\\":-0.7754007539404388}},{\\\"point\\\":{\\\"x\\\":264.156,\\\"y\\\":179.89,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6816601830600025,\\\"y\\\":-0.7316689106628788}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":425.618,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"skull\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":96.73146699484867,\\\"max\\\":621.0865330051513},\\\"y\\\":{\\\"min\\\":64.598,\\\"max\\\":642.476}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"skull\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"skull\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 143.297 308.706 C 143.297 255.657 186.092 212.862 239.141 212.862 C 292.191 212.862 334.986 255.657 334.986 308.706 C 334.986 361.756 292.191 404.552 239.141 404.551 C 186.092 404.551 143.297 361.756 143.297 308.706 M 308.262 456.816 C 308.267 456.807 358.904 364.992 358.909 364.983 C 358.914 364.992 409.552 456.807 409.557 456.816 C 409.547 456.816 308.272 456.816 308.262 456.816 M 381.314 307.017 C 381.314 254.363 423.791 211.886 476.445 211.886 C 529.100 211.886 571.577 254.362 571.577 307.017 C 571.577 359.672 529.100 402.148 476.445 402.148 C 423.791 402.148 381.314 359.671 381.314 307.017 M 221.160 640.476 C 221.160 640.464 222.505 543.376 222.856 518.039 C 155.372 473.349 100.875 398.064 98.793 308.457 C 95.564 169.482 219.897 66.598 358.909 66.598 C 497.921 66.598 622.254 169.482 619.025 308.457 C 616.944 398.064 562.447 473.350 494.963 518.039 C 495.314 543.377 496.659 640.464 496.659 640.476 C 496.655 640.476 452.862 640.476 452.858 640.476 C 452.858 640.470 452.858 577.761 452.858 577.755 C 452.857 577.755 438.406 577.755 438.404 577.755 C 438.404 577.761 438.404 640.470 438.404 640.476 C 438.400 640.476 395.048 640.476 395.043 640.476 C 395.043 640.470 395.043 577.761 395.043 577.755 C 395.042 577.755 380.591 577.755 380.590 577.755 C 380.590 577.761 380.590 640.470 380.590 640.476 C 380.586 640.476 337.233 640.476 337.229 640.476 C 337.229 640.470 337.229 577.761 337.229 577.755 C 337.227 577.755 322.777 577.755 322.775 577.755 C 322.775 577.761 322.775 640.470 322.775 640.476 C 322.771 640.476 279.416 640.476 279.412 640.476 C 279.412 640.470 279.415 577.761 279.415 577.755 C 279.413 577.755 264.963 577.755 264.961 577.755 C 264.961 577.761 264.961 640.470 264.961 640.476 C 264.957 640.476 221.164 640.476 221.160 640.476 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 143.297 308.706 C 143.297 255.657 186.092 212.862 239.141 212.862 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 239.141 212.862 C 292.191 212.862 334.986 255.657 334.986 308.706 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 334.986 308.706 C 334.986 361.756 292.191 404.552 239.141 404.551 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 239.141 404.551 C 186.092 404.551 143.297 361.756 143.297 308.706 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 308.262 456.816 C 308.267 456.807 358.904 364.992 358.909 364.983 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 358.909 364.983 C 358.914 364.992 409.552 456.807 409.557 456.816 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 409.557 456.816 C 409.547 456.816 308.272 456.816 308.262 456.816 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 381.314 307.017 C 381.314 254.363 423.791 211.886 476.445 211.886 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 476.445 211.886 C 529.100 211.886 571.577 254.362 571.577 307.017 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 571.577 307.017 C 571.577 359.672 529.100 402.148 476.445 402.148 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 476.445 402.148 C 423.791 402.148 381.314 359.671 381.314 307.017 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 143.297 308.706 C 143.297 255.657 186.092 212.862 239.141 212.862 C 292.191 212.862 334.986 255.657 334.986 308.706 C 334.986 361.756 292.191 404.552 239.141 404.551 C 186.092 404.551 143.297 361.756 143.297 308.706 M 308.262 456.816 C 308.267 456.807 358.904 364.992 358.909 364.983 C 358.914 364.992 409.552 456.807 409.557 456.816 C 409.547 456.816 308.272 456.816 308.262 456.816 M 381.314 307.017 C 381.314 254.363 423.791 211.886 476.445 211.886 C 529.100 211.886 571.577 254.362 571.577 307.017 C 571.577 359.672 529.100 402.148 476.445 402.148 C 423.791 402.148 381.314 359.671 381.314 307.017 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":683.814,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":66.905,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":97.393,\\\"y\\\":299.269,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999869423966428,\\\"y\\\":0.0051102872926518435}},{\\\"point\\\":{\\\"x\\\":620.349,\\\"y\\\":299.269,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999869423966429,\\\"y\\\":0.005110287292651861}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":540.477,\\\"y\\\":482.573,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128965506064706,\\\"y\\\":0.7012692123096491}},{\\\"point\\\":{\\\"x\\\":178.454,\\\"y\\\":482.621,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987254201015092,\\\"y\\\":0.7153899547127913}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":543.281,\\\"y\\\":134.793,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.631445428603134,\\\"y\\\":-0.7754203187279815}},{\\\"point\\\":{\\\"x\\\":175.307,\\\"y\\\":134.872,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817084818456925,\\\"y\\\":-0.7316239100655754}}],\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":170.334,\\\"max\\\":305.879},\\\"y\\\":{\\\"min\\\":240.524,\\\"max\\\":376.069}},{\\\"x\\\":{\\\"min\\\":409.433,\\\"max\\\":544.978},\\\"y\\\":{\\\"min\\\":240.524,\\\"max\\\":376.069}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.957,\\\"y\\\":636.646,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"snake\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":52.350582556162024,\\\"max\\\":691.136},\\\"y\\\":{\\\"min\\\":289.18272752558164,\\\"max\\\":423.86417158979236}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"snake\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"snake_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 644.601 303.981 C 644.601 300.747 647.209 298.138 650.443 298.138 C 653.678 298.138 656.287 300.747 656.287 303.981 C 656.287 307.215 653.677 309.824 650.443 309.824 C 647.210 309.824 644.601 307.215 644.601 303.981 M 139.071 390.929 C 103.145 391.333 57.801 333.828 54.570 336.836 C 50.809 340.336 96.065 415.926 139.071 417.408 C 187.181 419.066 209.438 333.727 236.215 334.019 C 265.568 334.339 286.942 421.862 333.358 421.862 C 379.774 421.862 399.092 334.424 430.501 334.019 C 464.410 333.581 481.022 422.370 527.645 421.862 C 572.943 421.369 583.722 344.800 620.610 334.971 C 628.237 332.939 635.985 336.118 646.762 337.863 C 661.373 340.228 681.721 335.165 681.724 335.164 C 681.721 335.163 652.303 319.115 652.300 319.114 C 652.304 319.113 689.132 313.209 689.136 313.208 C 689.128 313.207 666.664 275.564 615.433 298.703 C 571.235 318.666 557.602 385.507 527.645 386.475 C 496.188 387.493 484.391 299.510 430.501 299.561 C 387.307 299.602 360.309 386.963 333.358 386.475 C 306.983 385.998 284.806 299.058 236.215 299.561 C 186.501 300.076 172.678 390.552 139.071 390.929 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":22.436,\\\"y\\\":360,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":649.426,\\\"y\\\":283.777,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":142.618,\\\"y\\\":422.545,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.008255891465398336,\\\"y\\\":0.9999659195473172}},{\\\"point\\\":{\\\"x\\\":333.658,\\\"y\\\":422.545,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.008178738786805088,\\\"y\\\":0.9999665535565964}},{\\\"point\\\":{\\\"x\\\":528.718,\\\"y\\\":422.545,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.008255891465404912,\\\"y\\\":0.9999659195473171}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":236.645,\\\"y\\\":297.742,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005092526556957669,\\\"y\\\":-0.9999870330025618}},{\\\"point\\\":{\\\"x\\\":432.712,\\\"y\\\":297.742,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.005014982070703675,\\\"y\\\":-0.9999874248983487}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":55.682,\\\"y\\\":338.664,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817847308704319,\\\"y\\\":-0.7315528557472337}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":693.224,\\\"y\\\":326.814,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"snake_eye\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":245.261,\\\"max\\\":497.9732722324462},\\\"y\\\":{\\\"min\\\":34.10629838302682,\\\"max\\\":652.849}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"snake_eye\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"snake_eye\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 286.931 97.363 C 286.939 97.359 318.487 63.656 357.620 62.754 C 399.000 61.801 433.795 96.260 433.803 96.264 C 433.795 96.267 399.009 130.221 357.620 129.774 C 318.947 129.356 286.939 97.366 286.931 97.363 M 358.614 36.113 C 470.055 35.118 528.697 145.117 476.976 234.518 C 435.398 306.387 314.833 281.140 320.647 347.910 C 323.768 383.744 435.757 380.678 429.054 457.647 C 425.193 501.987 345.717 496.739 352.639 532.768 C 357.480 557.968 406.837 548.460 400.926 586.902 C 396.775 613.892 360.315 613.280 360.799 631.658 C 361.015 639.855 371.012 650.847 371.013 650.849 C 371.011 650.847 350.798 644.615 348.985 634.406 C 343.777 605.084 377.922 613.394 384.620 584.009 C 390.400 558.653 334.254 573.848 327.631 533.790 C 319.372 483.840 395.826 481.704 397.581 455.613 C 400.973 405.194 285.828 415.010 276.916 354.561 C 262.321 255.560 410.238 255.417 434.238 212.811 C 456.618 173.079 444.732 146.191 436.170 134.195 C 433.312 130.191 406.726 159.213 360.743 158.264 C 288.771 156.780 247.272 97.593 247.261 97.587 C 247.272 97.581 290.356 36.723 358.614 36.113 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 361.006 72.662 C 373.776 72.662 384.078 82.964 384.078 95.734 C 384.078 108.504 373.776 118.806 361.006 118.806 C 348.235 118.806 337.933 108.505 337.933 95.734 C 337.933 82.964 348.235 72.662 361.006 72.662 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":693.928,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":34.574,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":372.631,\\\"y\\\":504.577,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129437012444086,\\\"y\\\":0.7012212766708689}},{\\\"point\\\":{\\\"x\\\":338.359,\\\"y\\\":504.622,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987179873928581,\\\"y\\\":0.715397214205978}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":448.192,\\\"y\\\":65.346,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314067454578781,\\\"y\\\":-0.7754518178393098}},{\\\"point\\\":{\\\"x\\\":276.216,\\\"y\\\":65.42,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817265563043132,\\\"y\\\":-0.7316070683293472}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":640.899,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":283.447,\\\"y\\\":345.322,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872395281759,\\\"y\\\":0.005051809657785063}},{\\\"point\\\":{\\\"x\\\":436.553,\\\"y\\\":345.322,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872395281759,\\\"y\\\":0.005051809657785063}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"snake_helix\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":197.85448842834535,\\\"max\\\":522.2499280009629},\\\"y\\\":{\\\"min\\\":12.20453795157672,\\\"max\\\":683.21}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"snake_helix\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"snake_helix_3\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.070 524.609 C 367.714 520.318 376.880 516.314 385.740 511.524 C 396.722 521.981 404.099 535.687 401.680 557.301 C 399.158 579.849 385.884 592.090 372.966 602.080 C 368.528 605.533 364.121 608.752 359.899 612.160 C 350.296 620.078 342.866 628.514 343.221 641.741 C 343.657 657.970 360.381 681.206 360.382 681.210 C 360.379 681.207 331.336 663.091 327.951 645.097 C 323.786 622.952 334.024 612.466 346.927 602.115 C 351.191 598.685 355.770 595.275 359.986 591.587 C 369.463 583.238 377.883 573.057 380.494 556.440 C 382.971 540.677 373.270 532.030 360.070 524.609 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 403.225 317.075 C 406.290 285.762 387.682 263.249 360.031 242.954 C 372.023 234.278 385.475 226.595 398.986 218.354 C 430.217 243.052 452.067 274.775 447.936 322.262 C 444.658 359.943 420.066 377.818 394.406 391.340 C 382.530 397.653 370.413 403.093 359.970 409.050 C 341.947 419.389 328.607 431.366 328.871 452.280 C 329.123 472.234 343.950 482.563 360.027 492.819 C 351.103 498.531 341.796 504.240 334.259 511.461 C 313.819 500.440 295.255 485.669 295.271 454.125 C 295.288 423.814 308.526 405.294 325.541 391.381 C 336.319 382.569 348.611 375.499 359.987 368.505 C 381.714 355.199 400.797 341.885 403.225 317.075 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 298.951 39.944 C 297.762 33.387 291.514 29.056 284.957 30.244 C 278.399 31.433 274.068 37.681 275.256 44.239 C 276.445 50.796 282.694 55.127 289.251 53.939 C 295.809 52.750 300.139 46.501 298.951 39.944 M 213.170 44.645 C 247.270 -13.961 343.943 23.558 341.668 61.222 C 309.317 92.448 265.953 46.686 253.580 69.921 C 228.039 117.885 303.251 152.141 359.853 192.077 C 346.395 200.608 332.705 208.679 320.816 218.200 C 255.493 175.524 165.688 126.253 213.170 44.645 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 298.951 39.944 C 297.762 33.387 291.514 29.056 284.957 30.244 C 278.399 31.433 274.068 37.681 275.256 44.239 C 276.445 50.796 282.694 55.127 289.251 53.939 C 295.809 52.750 300.139 46.501 298.951 39.944 M 341.668 61.222 C 309.317 92.448 265.953 46.686 253.580 69.921 C 228.039 117.885 303.251 152.141 359.853 192.077 C 346.395 200.608 332.705 208.679 320.816 218.200 C 255.493 175.524 165.688 126.253 213.170 44.645 C 247.270 -13.961 343.943 23.558 341.668 61.222 C 309.317 92.448 265.953 46.686 253.580 69.921 M 213.170 44.645 C 247.270 -13.961 343.943 23.558 341.668 61.222 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 372.966 602.080 C 368.528 605.533 364.121 608.752 359.899 612.160 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 392.049 645.097 C 396.083 622.927 385.840 612.441 372.966 602.080 C 368.528 605.533 364.121 608.752 359.899 612.160 C 369.412 619.909 377.020 628.381 376.779 641.741 C 376.487 657.860 360.384 681.206 360.382 681.210 C 360.386 681.207 388.805 662.922 392.049 645.097 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 394.406 391.340 C 382.530 397.653 370.413 403.093 359.970 409.050 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.027 492.819 C 351.103 498.531 341.796 504.240 334.259 511.461 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 346.927 602.115 C 351.191 598.685 355.770 595.275 359.986 591.587 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.070 524.609 C 367.714 520.318 376.880 516.314 385.740 511.524 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 424.729 454.125 C 424.713 423.814 411.474 405.294 394.406 391.340 C 382.530 397.653 370.413 403.093 359.970 409.050 C 377.782 419.148 391.395 431.155 391.129 452.280 C 390.877 472.234 376.050 482.563 360.027 492.819 C 351.103 498.531 341.796 504.240 334.259 511.461 C 323.278 521.981 315.901 535.687 318.320 557.301 C 320.816 579.609 333.768 591.827 346.927 602.115 C 351.191 598.685 355.770 595.275 359.986 591.587 C 350.750 583.530 342.156 573.301 339.506 556.440 C 337.054 540.835 346.538 532.204 360.070 524.609 C 367.714 520.318 376.880 516.314 385.740 511.524 C 406.057 500.538 424.745 485.775 424.729 454.125 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 325.541 391.381 C 336.319 382.569 348.611 375.499 359.987 368.505 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.031 242.954 C 372.023 234.278 385.475 226.595 398.986 218.354 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.853 192.077 C 346.395 200.608 332.705 208.679 320.816 218.200 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 429.232 30.244 C 422.674 31.433 418.343 37.681 419.531 44.239 C 420.720 50.796 426.969 55.127 433.526 53.939 C 440.083 52.750 444.414 46.501 443.226 39.944 C 442.037 33.387 435.789 29.056 429.232 30.244 M 325.541 391.381 C 336.319 382.569 348.611 375.499 359.987 368.505 C 338.285 355.199 319.203 341.885 316.775 317.075 C 313.668 285.330 332.836 262.629 360.031 242.954 C 372.023 234.278 385.475 226.595 398.986 218.354 C 466.385 177.245 554.131 125.932 506.830 44.645 C 472.728 -13.960 376.057 23.558 378.332 61.222 C 410.683 92.448 454.044 46.687 466.420 69.921 C 491.962 117.870 418.580 154.846 359.853 192.077 C 346.395 200.608 332.705 208.679 320.816 218.200 C 289.783 243.052 267.933 274.775 272.064 322.262 C 275.331 359.818 299.771 377.698 325.541 391.381 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":705.414,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":15.705,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":270.828,\\\"y\\\":315.202,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873200064072,\\\"y\\\":0.005035854088752084}},{\\\"point\\\":{\\\"x\\\":449.245,\\\"y\\\":315.202,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873200064072,\\\"y\\\":0.005035854088752084}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":417.207,\\\"y\\\":482.862,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128965506064727,\\\"y\\\":0.7012692123096471}},{\\\"point\\\":{\\\"x\\\":302.954,\\\"y\\\":482.91,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987263029800354,\\\"y\\\":0.7153890923992705}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":479.902,\\\"y\\\":25.025,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.631445428603132,\\\"y\\\":-0.7754203187279831}},{\\\"point\\\":{\\\"x\\\":240.777,\\\"y\\\":25.104,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817084818456932,\\\"y\\\":-0.7316239100655747}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":683.141,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"snake_helix_mix\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":197.85448842834535,\\\"max\\\":522.2499280009629},\\\"y\\\":{\\\"min\\\":12.20453795157672,\\\"max\\\":683.21}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"snake_helix_mix\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"snake_helix_3\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.070 524.609 C 367.714 520.318 376.880 516.314 385.740 511.524 C 396.722 521.981 404.099 535.687 401.680 557.301 C 399.158 579.849 385.884 592.090 372.966 602.080 C 368.528 605.533 364.121 608.752 359.899 612.160 C 350.296 620.078 342.866 628.514 343.221 641.741 C 343.657 657.970 360.381 681.206 360.382 681.210 C 360.379 681.207 331.336 663.091 327.951 645.097 C 323.786 622.952 334.024 612.466 346.927 602.115 C 351.191 598.685 355.770 595.275 359.986 591.587 C 369.463 583.238 377.883 573.057 380.494 556.440 C 382.971 540.677 373.270 532.030 360.070 524.609 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 403.225 317.075 C 406.290 285.762 387.682 263.249 360.031 242.954 C 372.023 234.278 385.475 226.595 398.986 218.354 C 430.217 243.052 452.067 274.775 447.936 322.262 C 444.658 359.943 420.066 377.818 394.406 391.340 C 382.530 397.653 370.413 403.093 359.970 409.050 C 341.947 419.389 328.607 431.366 328.871 452.280 C 329.123 472.234 343.950 482.563 360.027 492.819 C 351.103 498.531 341.796 504.240 334.259 511.461 C 313.819 500.440 295.255 485.669 295.271 454.125 C 295.288 423.814 308.526 405.294 325.541 391.381 C 336.319 382.569 348.611 375.499 359.987 368.505 C 381.714 355.199 400.797 341.885 403.225 317.075 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 298.951 39.944 C 297.762 33.387 291.514 29.056 284.957 30.244 C 278.399 31.433 274.068 37.681 275.256 44.239 C 276.445 50.796 282.694 55.127 289.251 53.939 C 295.809 52.750 300.139 46.501 298.951 39.944 M 213.170 44.645 C 247.270 -13.961 343.943 23.558 341.668 61.222 C 309.317 92.448 265.953 46.686 253.580 69.921 C 228.039 117.885 303.251 152.141 359.853 192.077 C 346.395 200.608 332.705 208.679 320.816 218.200 C 255.493 175.524 165.688 126.253 213.170 44.645 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 298.951 39.944 C 297.762 33.387 291.514 29.056 284.957 30.244 C 278.399 31.433 274.068 37.681 275.256 44.239 C 276.445 50.796 282.694 55.127 289.251 53.939 C 295.809 52.750 300.139 46.501 298.951 39.944 M 341.668 61.222 C 309.317 92.448 265.953 46.686 253.580 69.921 C 228.039 117.885 303.251 152.141 359.853 192.077 C 346.395 200.608 332.705 208.679 320.816 218.200 C 255.493 175.524 165.688 126.253 213.170 44.645 C 247.270 -13.961 343.943 23.558 341.668 61.222 C 309.317 92.448 265.953 46.686 253.580 69.921 M 213.170 44.645 C 247.270 -13.961 343.943 23.558 341.668 61.222 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 372.966 602.080 C 368.528 605.533 364.121 608.752 359.899 612.160 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 392.049 645.097 C 396.083 622.927 385.840 612.441 372.966 602.080 C 368.528 605.533 364.121 608.752 359.899 612.160 C 369.412 619.909 377.020 628.381 376.779 641.741 C 376.487 657.860 360.384 681.206 360.382 681.210 C 360.386 681.207 388.805 662.922 392.049 645.097 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 394.406 391.340 C 382.530 397.653 370.413 403.093 359.970 409.050 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.027 492.819 C 351.103 498.531 341.796 504.240 334.259 511.461 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 346.927 602.115 C 351.191 598.685 355.770 595.275 359.986 591.587 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.070 524.609 C 367.714 520.318 376.880 516.314 385.740 511.524 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 424.729 454.125 C 424.713 423.814 411.474 405.294 394.406 391.340 C 382.530 397.653 370.413 403.093 359.970 409.050 C 377.782 419.148 391.395 431.155 391.129 452.280 C 390.877 472.234 376.050 482.563 360.027 492.819 C 351.103 498.531 341.796 504.240 334.259 511.461 C 323.278 521.981 315.901 535.687 318.320 557.301 C 320.816 579.609 333.768 591.827 346.927 602.115 C 351.191 598.685 355.770 595.275 359.986 591.587 C 350.750 583.530 342.156 573.301 339.506 556.440 C 337.054 540.835 346.538 532.204 360.070 524.609 C 367.714 520.318 376.880 516.314 385.740 511.524 C 406.057 500.538 424.745 485.775 424.729 454.125 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 325.541 391.381 C 336.319 382.569 348.611 375.499 359.987 368.505 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.031 242.954 C 372.023 234.278 385.475 226.595 398.986 218.354 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.853 192.077 C 346.395 200.608 332.705 208.679 320.816 218.200 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 429.232 30.244 C 422.674 31.433 418.343 37.681 419.531 44.239 C 420.720 50.796 426.969 55.127 433.526 53.939 C 440.083 52.750 444.414 46.501 443.226 39.944 C 442.037 33.387 435.789 29.056 429.232 30.244 M 325.541 391.381 C 336.319 382.569 348.611 375.499 359.987 368.505 C 338.285 355.199 319.203 341.885 316.775 317.075 C 313.668 285.330 332.836 262.629 360.031 242.954 C 372.023 234.278 385.475 226.595 398.986 218.354 C 466.385 177.245 554.131 125.932 506.830 44.645 C 472.728 -13.960 376.057 23.558 378.332 61.222 C 410.683 92.448 454.044 46.687 466.420 69.921 C 491.962 117.870 418.580 154.846 359.853 192.077 C 346.395 200.608 332.705 208.679 320.816 218.200 C 289.783 243.052 267.933 274.775 272.064 322.262 C 275.331 359.818 299.771 377.698 325.541 391.381 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":705.414,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":15.705,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":270.828,\\\"y\\\":315.202,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873200064072,\\\"y\\\":0.005035854088752084}},{\\\"point\\\":{\\\"x\\\":449.245,\\\"y\\\":315.202,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873200064072,\\\"y\\\":0.005035854088752084}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":417.207,\\\"y\\\":482.862,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128965506064727,\\\"y\\\":0.7012692123096471}},{\\\"point\\\":{\\\"x\\\":302.954,\\\"y\\\":482.91,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987263029800354,\\\"y\\\":0.7153890923992705}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":479.902,\\\"y\\\":25.025,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.631445428603132,\\\"y\\\":-0.7754203187279831}},{\\\"point\\\":{\\\"x\\\":240.777,\\\"y\\\":25.104,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817084818456932,\\\"y\\\":-0.7316239100655747}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":683.141,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true}},{\\\"name\\\":\\\"snake_spiral\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":92.85493381541751,\\\"max\\\":619.7516204124639},\\\"y\\\":{\\\"min\\\":45.75163809442195,\\\"max\\\":648.1925133096618}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"snake_spiral\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"snake_spiral\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 365.085 94.279 C 374.360 93.801 383.141 87.987 382.984 78.701 C 382.820 68.954 373.207 62.695 363.472 63.217 C 353.746 63.738 344.878 70.977 345.738 80.678 C 346.557 89.898 355.842 94.756 365.085 94.279 M 393.836 237.740 C 462.921 234.656 531.883 284.900 552.580 367.149 C 560.785 399.754 556.568 429.715 544.649 461.929 C 504.583 570.222 368.293 611.109 270.297 555.846 C 194.068 512.857 149.897 424.784 160.999 338.207 C 166.394 296.137 183.739 256.026 209.289 222.320 C 235.074 188.304 266.751 162.328 305.923 146.647 C 356.852 156.748 401.090 160.354 438.665 119.672 C 407.160 117.901 345.108 109.850 345.099 109.849 C 345.109 109.847 411.651 101.500 444.632 95.516 C 432.006 76.508 420.025 67.424 404.495 59.156 C 392.525 52.783 354.729 37.588 320.170 58.149 C 302.907 68.419 291.055 76.010 283.549 87.595 C 182.345 132.416 111.681 219.061 97.162 329.738 C 73.453 510.484 236.091 678.748 418.987 640.791 C 502.851 623.387 575.309 565.111 604.487 483.177 C 651.571 350.965 568.837 200.556 427.056 186.260 C 367.202 180.225 306.735 203.168 266.718 248.309 C 207.668 314.919 207.124 424.209 279.502 481.924 C 348.851 537.224 478.223 509.010 479.939 407.329 C 480.147 395.021 477.639 381.708 472.945 370.317 C 468.218 358.845 461.847 349.502 452.605 341.211 C 427.650 318.823 383.309 313.854 361.861 343.977 C 347.331 364.385 354.233 392.728 381.784 391.941 C 344.032 388.763 356.931 344.827 383.787 334.526 C 444.254 311.333 479.215 391.234 454.055 437.353 C 409.470 519.082 290.521 484.877 267.177 403.032 C 243.682 320.661 311.519 241.415 393.836 237.740 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":358.232,\\\"y\\\":685.068,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":358.232,\\\"y\\\":46.115,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":96.184,\\\"y\\\":381.268,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873200064072,\\\"y\\\":0.005035854088756288}},{\\\"point\\\":{\\\"x\\\":615.155,\\\"y\\\":381.268,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873181281341,\\\"y\\\":0.0050362270502705715}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":543.831,\\\"y\\\":576.114,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129335762692849,\\\"y\\\":0.7012315707581112}},{\\\"point\\\":{\\\"x\\\":190.563,\\\"y\\\":576.162,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987633221457824,\\\"y\\\":0.7153529336095501}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":416.646,\\\"y\\\":66.51,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314091670147453,\\\"y\\\":-0.7754498460956359}},{\\\"point\\\":{\\\"x\\\":305.816,\\\"y\\\":66.589,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817481203990733,\\\"y\\\":-0.7315869738673118}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":448.716,\\\"y\\\":105.841,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"sperm_tail\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":277.244,\\\"max\\\":442.7608821467311},\\\"y\\\":{\\\"min\\\":358.96658206426093,\\\"max\\\":661.738}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"sperm_tail\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"sperm_tail\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 441.756 360.000 C 442.072 411.059 426.993 424.650 412.532 437.406 C 391.928 455.581 377.886 470.397 380.091 492.465 C 381.433 505.906 409.125 516.331 404.538 544.978 C 400.223 571.928 359.607 573.761 363.110 595.985 C 365.165 609.019 387.463 608.512 382.460 627.875 C 378.647 642.633 357.372 640.111 357.190 650.479 C 357.113 654.862 362.649 660.737 362.650 660.738 C 362.649 660.737 351.888 657.397 350.874 651.948 C 348.229 637.724 364.173 641.150 367.263 626.839 C 370.435 612.153 340.556 620.808 333.919 598.309 C 325.946 571.278 361.344 561.037 360.841 546.489 C 360.012 522.480 311.965 522.077 308.249 493.268 C 306.022 475.997 317.992 464.976 317.680 454.585 C 316.890 428.224 278.670 420.366 278.244 360.000 C 359.334 360.148 361.096 359.876 441.756 360.000 Z\\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":360.006,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":359.977,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":287.452,\\\"y\\\":401.791,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999870478546666,\\\"y\\\":0.005089609308037597}},{\\\"point\\\":{\\\"x\\\":436.896,\\\"y\\\":401.791,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999870478546666,\\\"y\\\":0.005089609308037597}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":417.184,\\\"y\\\":433.048,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7127658770111107,\\\"y\\\":0.7014020277762121}},{\\\"point\\\":{\\\"x\\\":307.967,\\\"y\\\":433.059,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986906741796253,\\\"y\\\":0.7154238896028149}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":440.11,\\\"y\\\":362.147,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6313376160156364,\\\"y\\\":-0.7755081009271876}},{\\\"point\\\":{\\\"x\\\":280.124,\\\"y\\\":362.174,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6818119912592983,\\\"y\\\":-0.7315274489552874}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":641.724,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"spiderweb\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":39.501,\\\"max\\\":705.381},\\\"y\\\":{\\\"min\\\":197.635,\\\"max\\\":520.533}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"spiderweb_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"spiderweb_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 362.823 360.482 C 362.830 360.480 438.142 340.668 438.149 340.666 C 438.155 340.660 498.959 284.149 498.965 284.143 C 498.967 284.135 512.615 229.906 519.440 202.787 C 519.436 202.787 479.955 202.833 479.951 202.833 C 474.894 223.357 464.782 264.400 464.781 264.406 C 464.776 264.411 418.431 306.423 418.426 306.427 C 418.421 306.429 362.799 320.967 362.794 320.969 C 362.794 320.965 362.832 281.460 362.832 281.456 C 362.836 281.455 398.700 272.190 398.703 272.189 C 398.706 272.186 430.593 244.673 430.596 244.670 C 430.597 244.666 437.174 216.809 440.463 202.878 C 440.459 202.878 400.978 202.924 400.974 202.924 C 399.453 209.766 396.412 223.447 396.411 223.449 C 396.410 223.450 378.982 238.691 378.980 238.693 C 378.979 238.693 362.873 242.686 362.871 242.686 C 362.871 242.682 361.485 202.974 361.485 202.970 C 361.486 202.973 378.979 238.689 378.980 238.693 C 378.982 238.696 398.701 272.186 398.703 272.189 C 398.705 272.192 418.424 306.424 418.426 306.427 C 418.428 306.431 438.147 340.662 438.149 340.666 C 438.151 340.669 457.870 374.900 457.872 374.904 C 457.863 374.906 362.871 399.992 362.861 399.994 C 362.861 399.990 362.823 360.486 362.823 360.482 C 362.823 360.478 362.794 320.973 362.794 320.969 M 362.900 439.507 C 362.911 439.504 477.584 409.145 477.595 409.142 C 477.604 409.134 567.326 323.624 567.335 323.616 C 567.338 323.604 588.057 243.003 598.418 202.696 C 598.414 202.696 558.933 202.742 558.929 202.742 C 550.336 236.454 533.153 303.869 533.150 303.879 C 533.142 303.886 457.880 374.897 457.872 374.904 C 457.874 374.907 477.593 409.139 477.595 409.142 C 477.597 409.146 497.316 443.377 497.318 443.380 C 497.305 443.384 362.952 479.017 362.938 479.020 C 362.938 479.016 362.900 439.511 362.900 439.507 C 362.900 439.503 362.861 399.998 362.861 399.994 M 497.318 443.380 C 497.328 443.370 601.509 343.363 601.519 343.353 C 601.523 343.338 625.778 249.551 637.907 202.651 C 637.903 202.651 598.422 202.696 598.418 202.696 M 517.041 477.619 C 510.467 466.206 497.320 443.384 497.318 443.380 M 362.871 242.686 C 362.871 242.690 362.832 281.452 362.832 281.456 M 362.938 479.020 C 362.938 479.024 362.713 505.362 362.601 518.533 M 635.704 363.089 C 635.700 363.087 601.523 343.355 601.519 343.353 C 601.516 343.351 567.338 323.618 567.335 323.616 C 567.331 323.614 533.153 303.881 533.150 303.879 C 533.146 303.877 498.969 284.145 498.965 284.143 C 498.962 284.141 464.784 264.408 464.781 264.406 C 464.777 264.404 430.600 244.672 430.596 244.670 C 430.593 244.668 396.415 223.451 396.411 223.449 C 396.408 223.447 361.488 202.972 361.485 202.970 C 361.489 202.970 400.970 202.924 400.974 202.924 M 440.463 202.878 C 440.466 202.878 479.947 202.833 479.951 202.833 M 519.440 202.787 C 519.444 202.787 558.925 202.742 558.929 202.742 M 637.907 202.651 C 637.911 202.651 677.392 202.605 677.396 202.605 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 362.832 281.456 C 362.828 281.455 320.940 272.932 320.936 272.931 C 320.933 272.928 289.788 243.930 289.785 243.927 C 289.784 243.923 282.218 217.056 278.434 203.621 C 278.438 203.621 317.919 203.666 317.923 203.666 C 319.939 210.013 323.970 222.704 323.970 222.706 C 323.972 222.708 341.400 238.691 341.401 238.693 C 341.403 238.693 362.869 242.686 362.871 242.686 M 202.598 478.361 C 209.173 466.949 222.319 444.126 222.321 444.123 C 222.323 444.119 242.042 409.888 242.044 409.885 C 242.046 409.881 261.765 375.650 261.767 375.646 C 261.760 375.639 187.239 303.144 187.232 303.137 C 187.229 303.127 169.056 236.702 159.968 203.484 C 159.972 203.484 199.453 203.530 199.457 203.530 C 206.777 230.153 221.414 283.392 221.416 283.400 C 221.422 283.406 281.484 341.402 281.490 341.408 C 281.498 341.410 362.815 360.480 362.823 360.482 M 120.479 203.439 C 131.335 243.250 153.044 322.861 153.047 322.873 C 153.056 322.882 242.035 409.876 242.044 409.885 C 242.056 409.888 362.888 439.504 362.900 439.507 M 261.767 375.646 C 261.777 375.649 362.851 399.992 362.861 399.994 M 362.794 320.969 C 362.787 320.968 301.219 307.171 301.213 307.169 C 301.208 307.165 255.605 263.668 255.601 263.664 C 255.599 263.658 244.497 223.605 238.946 203.575 C 238.950 203.575 278.431 203.621 278.434 203.621 M 261.767 375.646 C 261.769 375.643 281.488 341.411 281.490 341.408 C 281.492 341.405 301.211 307.173 301.213 307.169 C 301.215 307.166 320.934 272.935 320.936 272.931 C 320.938 272.928 341.399 238.696 341.401 238.693 C 341.403 238.689 354.550 214.878 361.124 202.970 C 361.120 202.972 323.974 222.704 323.970 222.706 C 323.967 222.708 289.789 243.925 289.785 243.927 C 289.782 243.929 255.604 263.662 255.601 263.664 C 255.597 263.666 221.420 283.398 221.416 283.400 C 221.413 283.402 187.235 303.135 187.232 303.137 C 187.228 303.139 153.051 322.871 153.047 322.873 C 153.044 322.875 118.866 342.608 118.862 342.610 C 118.859 342.596 93.614 249.799 80.990 203.393 C 80.994 203.393 120.475 203.439 120.479 203.439 C 120.483 203.439 159.964 203.484 159.968 203.484 M 118.862 342.610 C 118.873 342.620 222.311 444.113 222.321 444.123 C 222.335 444.126 362.924 479.017 362.938 479.020 M 84.678 362.346 C 84.681 362.344 118.859 342.612 118.862 342.610 M 361.124 202.970 C 361.120 202.970 317.928 203.666 317.923 203.666 M 238.946 203.575 C 238.942 203.575 199.461 203.530 199.457 203.530 M 80.990 203.393 C 80.986 203.393 41.505 203.347 41.501 203.347 \\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"spiderweb\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.853 358.255 C 359.861 358.253 438.884 336.956 438.892 336.954 C 438.898 336.948 496.733 278.952 496.738 278.946 C 496.741 278.938 510.883 226.194 517.956 199.818 C 517.952 199.818 478.471 199.863 478.467 199.863 C 473.162 219.645 462.556 259.203 462.554 259.209 C 462.550 259.214 419.173 302.711 419.169 302.715 C 419.163 302.717 359.830 318.740 359.824 318.742 C 359.824 318.738 359.863 279.233 359.863 279.229 C 359.867 279.228 399.442 268.478 399.446 268.477 C 399.449 268.474 428.367 239.476 428.369 239.473 C 428.370 239.469 435.442 213.097 438.978 199.909 C 438.974 199.909 399.493 199.954 399.489 199.954 C 397.721 206.548 394.185 219.734 394.185 219.736 C 394.183 219.738 379.724 234.237 379.723 234.238 C 379.721 234.239 359.904 239.716 359.902 239.716 C 359.902 239.712 360.000 200.004 360.000 200.000 C 360.002 200.004 379.721 234.235 379.723 234.238 C 379.725 234.242 399.444 268.473 399.446 268.477 C 399.448 268.480 419.167 302.712 419.169 302.715 C 419.171 302.718 438.890 336.950 438.892 336.954 C 438.894 336.957 458.613 371.188 458.615 371.192 C 458.605 371.194 359.902 397.765 359.892 397.767 C 359.892 397.763 359.854 358.259 359.853 358.255 C 359.853 358.251 359.824 318.746 359.824 318.742 M 359.931 437.280 C 359.942 437.277 478.326 405.433 478.338 405.430 C 478.346 405.422 565.099 318.428 565.108 318.419 C 565.111 318.407 586.325 239.291 596.934 199.727 C 596.930 199.727 557.448 199.772 557.445 199.772 C 548.604 232.742 530.926 298.672 530.923 298.682 C 530.916 298.690 458.622 371.184 458.615 371.192 C 458.617 371.195 478.336 405.427 478.338 405.430 C 478.340 405.434 498.059 439.665 498.061 439.668 C 498.047 439.672 359.983 476.789 359.969 476.793 C 359.969 476.789 359.931 437.284 359.931 437.280 C 359.931 437.276 359.892 397.771 359.892 397.767 M 498.061 439.668 C 498.071 439.658 599.282 338.166 599.292 338.156 C 599.296 338.142 624.046 245.839 636.422 199.681 C 636.418 199.681 596.938 199.727 596.934 199.727 M 517.784 473.907 C 511.209 462.494 498.063 439.672 498.061 439.668 M 359.902 239.716 C 359.902 239.720 359.863 279.225 359.863 279.229 M 359.969 476.793 C 359.969 476.797 359.744 503.135 359.632 516.306 M 633.477 357.892 C 633.474 357.890 599.296 338.158 599.292 338.156 C 599.289 338.154 565.111 318.421 565.108 318.419 C 565.104 318.417 530.926 298.684 530.923 298.682 C 530.920 298.680 496.742 278.948 496.738 278.946 C 496.735 278.944 462.557 259.211 462.554 259.209 C 462.551 259.207 428.373 239.475 428.369 239.473 C 428.366 239.471 394.188 219.738 394.185 219.736 C 394.181 219.734 360.003 200.002 360.000 200.000 C 360.004 200.000 399.485 199.954 399.489 199.954 M 438.978 199.909 C 438.982 199.909 478.463 199.863 478.467 199.863 M 517.956 199.818 C 517.960 199.818 557.441 199.772 557.445 199.772 M 636.422 199.681 C 636.426 199.681 675.907 199.635 675.911 199.635 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 678.371 297.203 C 678.371 298.588 677.255 299.704 675.870 299.704 C 674.486 299.704 673.369 298.588 673.369 297.203 C 673.369 295.819 674.486 294.702 675.870 294.702 C 677.255 294.702 678.371 295.819 678.371 297.203 M 673.149 300.350 C 674.025 299.922 674.953 299.704 675.870 299.704 C 676.788 299.704 677.716 299.922 678.591 300.350 C 679.466 300.778 680.998 302.259 680.998 302.260 C 680.998 302.260 682.717 305.392 682.717 305.393 C 682.717 305.393 683.373 309.708 683.373 309.709 C 683.373 309.709 682.717 314.024 682.717 314.025 C 682.717 314.025 681.706 316.315 680.998 317.158 C 680.289 318.000 679.466 318.639 678.591 319.067 C 677.716 319.495 676.788 319.713 675.870 319.713 C 674.953 319.713 674.025 319.495 673.149 319.067 C 672.274 318.639 671.450 318.001 670.742 317.158 C 670.033 316.315 669.023 314.025 669.023 314.025 C 669.023 314.024 668.367 309.709 668.367 309.709 C 668.367 309.708 669.023 305.393 669.023 305.393 C 669.023 305.392 670.742 302.260 670.742 302.260 C 670.742 302.259 672.274 300.778 673.149 300.350 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 658.363 319.713 C 658.363 319.714 661.697 326.382 663.365 329.717 M 669.023 314.025 C 665.469 315.921 658.364 319.712 658.363 319.713 M 658.363 309.709 C 658.362 309.710 651.693 316.378 648.359 319.713 M 668.367 309.709 C 665.032 309.709 658.364 309.709 658.363 309.709 M 658.363 299.704 C 658.362 299.705 651.693 303.039 648.359 304.707 M 669.023 305.393 C 665.469 303.497 658.364 299.705 658.363 299.704 M 663.365 294.702 C 663.366 294.702 670.034 291.368 673.369 289.700 M 670.742 302.260 C 668.283 299.740 663.366 294.703 663.365 294.702 M 693.377 319.713 C 693.377 319.714 690.043 326.382 688.375 329.717 M 682.717 314.025 C 686.270 315.921 693.376 319.712 693.377 319.713 M 693.377 309.709 C 693.378 309.710 700.047 316.378 703.381 319.713 M 683.373 309.709 C 686.708 309.709 693.376 309.709 693.377 309.709 M 693.377 299.704 C 693.378 299.705 700.047 303.039 703.381 304.707 M 682.717 305.393 C 686.270 303.497 693.376 299.705 693.377 299.704 M 688.375 294.702 C 688.374 294.702 681.706 291.368 678.371 289.700 M 680.998 302.260 C 683.457 299.740 688.375 294.703 688.375 294.702 M 678.371 297.203 C 678.371 298.588 677.255 299.704 675.870 299.704 C 674.486 299.704 673.369 298.588 673.369 297.203 C 673.369 295.819 674.486 294.702 675.870 294.702 C 677.255 294.702 678.371 295.819 678.371 297.203 M 673.149 300.350 C 674.025 299.922 674.953 299.704 675.870 299.704 C 676.788 299.704 677.716 299.922 678.591 300.350 C 679.466 300.778 680.998 302.259 680.998 302.260 C 680.998 302.260 682.717 305.392 682.717 305.393 C 682.717 305.393 683.373 309.708 683.373 309.709 C 683.373 309.709 682.717 314.024 682.717 314.025 C 682.717 314.025 681.706 316.315 680.998 317.158 C 680.289 318.000 679.466 318.639 678.591 319.067 C 677.716 319.495 676.788 319.713 675.870 319.713 C 674.953 319.713 674.025 319.495 673.149 319.067 C 672.274 318.639 671.450 318.001 670.742 317.158 C 670.033 316.315 669.023 314.025 669.023 314.025 C 669.023 314.024 668.367 309.709 668.367 309.709 C 668.367 309.708 669.023 305.393 669.023 305.393 C 669.023 305.392 670.742 302.260 670.742 302.260 C 670.742 302.259 672.274 300.778 673.149 300.350 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 675.911 199.635 C 675.911 199.645 675.813 263.041 675.763 294.744 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.863 279.229 C 359.859 279.228 320.197 268.478 320.193 268.477 C 320.190 268.474 291.273 239.476 291.270 239.473 C 291.269 239.469 284.198 213.097 280.661 199.909 C 280.665 199.909 320.146 199.954 320.150 199.954 C 321.918 206.548 325.454 219.734 325.455 219.736 C 325.456 219.738 339.915 234.237 339.916 234.238 C 339.918 234.239 359.900 239.716 359.902 239.716 M 201.856 473.907 C 208.430 462.494 221.577 439.672 221.579 439.668 C 221.581 439.665 241.300 405.434 241.302 405.430 C 241.304 405.427 261.023 371.195 261.024 371.192 C 261.017 371.184 188.724 298.690 188.716 298.682 C 188.714 298.672 171.035 232.742 162.195 199.772 C 162.199 199.772 201.680 199.818 201.684 199.818 C 208.756 226.194 222.899 278.938 222.901 278.946 C 222.907 278.952 280.742 336.948 280.747 336.954 C 280.755 336.956 359.846 358.253 359.853 358.255 M 122.706 199.727 C 133.315 239.291 154.529 318.407 154.532 318.419 C 154.540 318.428 241.293 405.422 241.302 405.430 C 241.313 405.433 359.919 437.277 359.931 437.280 M 261.024 371.192 C 261.034 371.194 359.882 397.765 359.892 397.767 M 359.824 318.742 C 359.818 318.740 300.476 302.717 300.470 302.715 C 300.466 302.711 257.090 259.214 257.085 259.209 C 257.084 259.203 246.477 219.645 241.173 199.863 C 241.177 199.863 280.657 199.909 280.661 199.909 M 261.024 371.192 C 261.026 371.188 280.745 336.957 280.747 336.954 C 280.749 336.950 300.468 302.718 300.470 302.715 C 300.472 302.712 320.191 268.480 320.193 268.477 C 320.195 268.473 339.914 234.242 339.916 234.238 C 339.918 234.235 353.065 211.413 359.639 200.000 C 359.636 200.002 325.458 219.734 325.455 219.736 C 325.451 219.738 291.273 239.471 291.270 239.473 C 291.266 239.475 257.089 259.207 257.085 259.209 C 257.082 259.211 222.904 278.944 222.901 278.946 C 222.897 278.948 188.720 298.680 188.716 298.682 C 188.713 298.684 154.535 318.417 154.532 318.419 C 154.528 318.421 120.350 338.154 120.347 338.156 C 120.343 338.142 95.594 245.839 83.217 199.681 C 83.221 199.681 122.702 199.727 122.706 199.727 C 122.710 199.727 162.191 199.772 162.195 199.772 M 120.347 338.156 C 120.357 338.166 221.568 439.658 221.579 439.668 C 221.592 439.672 359.955 476.789 359.969 476.793 M 86.162 357.892 C 86.166 357.890 120.344 338.158 120.347 338.156 M 359.639 200.000 C 359.635 200.000 320.154 199.954 320.150 199.954 M 241.173 199.863 C 241.169 199.863 201.688 199.818 201.684 199.818 M 83.217 199.681 C 83.213 199.681 43.732 199.635 43.728 199.635 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":275.106,\\\"max\\\":444.894},\\\"y\\\":{\\\"min\\\":218.8,\\\"max\\\":388.588}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":198.745,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":168.99,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":41.149,\\\"y\\\":200.908,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872880189177,\\\"y\\\":0.00504220195649551}},{\\\"point\\\":{\\\"x\\\":677.814,\\\"y\\\":200.908,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872880189178,\\\"y\\\":0.005042201956495514}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":520.196,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":198.655,\\\"y\\\":477.783,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5000070188126982,\\\"y\\\":0.8660213514331147}},{\\\"point\\\":{\\\"x\\\":520.308,\\\"y\\\":477.783,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5000626292085538,\\\"y\\\":0.8659892417744163}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":81.861,\\\"y\\\":360.657,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8660213514331152,\\\"y\\\":0.5000070188126972}},{\\\"point\\\":{\\\"x\\\":637.102,\\\"y\\\":360.657,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8660398881710507,\\\"y\\\":0.4999749114672396}}]},\\\"meta\\\":{\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"spiral_squirt\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":145.00233979035545,\\\"max\\\":564.4589382706015},\\\"y\\\":{\\\"min\\\":20.868,\\\"max\\\":678.6230562041044}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"spiral_squirt\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"spiral_squirt\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 426.280 106.063 C 479.314 189.060 480.141 259.456 464.258 326.668 C 503.010 343.141 544.264 380.809 557.355 429.364 C 575.309 495.961 552.256 577.601 506.558 623.685 C 442.279 688.506 335.630 686.883 278.065 660.573 C 155.269 604.449 145.911 508.672 146.003 453.821 C 146.163 357.358 198.606 307.628 231.641 275.019 C 299.514 208.022 334.632 171.580 351.804 113.392 C 360.924 82.486 353.762 21.878 353.762 21.868 C 353.769 21.877 407.256 76.290 426.280 106.063 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 398.533 179.135 C 395.608 262.695 358.802 312.290 358.798 312.304 M 355.482 24.464 C 355.486 24.479 401.477 95.055 398.533 179.135 M 426.280 106.063 C 479.314 189.060 480.141 259.456 464.258 326.668 C 503.010 343.141 544.264 380.809 557.355 429.364 C 575.309 495.961 552.256 577.601 506.558 623.685 C 442.279 688.506 335.630 686.883 278.065 660.573 C 155.269 604.449 145.911 508.672 146.003 453.821 C 146.163 357.358 198.606 307.628 231.641 275.019 C 299.514 208.022 334.632 171.580 351.804 113.392 C 360.924 82.486 353.762 21.878 353.762 21.868 C 353.769 21.877 407.256 76.290 426.280 106.063 M 250.261 486.228 C 220.833 363.543 331.538 270.248 464.258 326.668 M 450.921 526.688 C 403.929 609.326 270.821 571.943 250.261 486.228 M 398.980 409.655 C 458.856 413.087 476.498 481.708 450.921 526.688 M 353.254 481.233 C 327.747 455.278 345.057 406.564 398.980 409.655 M 383.693 465.936 C 395.544 480.689 370.576 498.858 353.254 481.233 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":222.888,\\\"max\\\":497.112},\\\"y\\\":{\\\"min\\\":348.154,\\\"max\\\":622.378}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":763.047,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":31.274,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":147.641,\\\"y\\\":466.836,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873181281341,\\\"y\\\":0.005036227050266393}},{\\\"point\\\":{\\\"x\\\":561.544,\\\"y\\\":466.836,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873181281341,\\\"y\\\":0.005036227050266362}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":502.684,\\\"y\\\":625.987,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128965506064665,\\\"y\\\":0.7012692123096534}},{\\\"point\\\":{\\\"x\\\":224.38,\\\"y\\\":626.035,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987263029800311,\\\"y\\\":0.7153890923992746}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":461.52,\\\"y\\\":184.948,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.631445428603132,\\\"y\\\":-0.7754203187279831}},{\\\"point\\\":{\\\"x\\\":316.881,\\\"y\\\":185.027,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817454199674203,\\\"y\\\":-0.7315894903246257}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":672.658,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"spiral_squirt_2\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":198.07210926415473,\\\"max\\\":520.8865093908771},\\\"y\\\":{\\\"min\\\":26.232,\\\"max\\\":621.225}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"spiral_squirt_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"spiral_squirt\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 249.509 289.487 C 258.080 208.010 341.581 181.001 390.265 188.327 C 395.879 175.790 409.844 156.292 402.452 117.101 C 395.357 79.480 358.735 28.241 358.730 28.232 C 358.727 28.243 378.423 112.463 324.195 143.702 C 276.410 171.230 216.249 216.149 203.641 276.416 C 193.020 327.184 207.031 373.017 233.397 412.725 C 261.385 454.875 317.356 459.296 328.413 459.213 C 356.264 459.002 456.543 438.937 465.373 359.297 C 475.006 272.418 396.112 204.734 327.205 249.246 C 291.187 272.512 276.064 329.784 318.878 355.023 C 352.898 375.079 380.211 343.803 373.248 325.010 C 367.528 309.575 339.881 334.750 334.375 308.985 C 331.179 294.035 362.249 263.809 394.868 288.132 C 435.369 318.333 422.464 372.195 385.694 395.603 C 318.057 438.660 238.689 392.348 249.509 289.487 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 328.413 459.213 C 356.264 459.002 456.543 438.937 465.373 359.297 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 465.373 359.297 C 475.006 272.418 396.112 204.734 327.205 249.246 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 327.205 249.246 C 291.187 272.512 276.064 329.784 318.878 355.023 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 318.878 355.023 C 352.898 375.079 380.211 343.803 373.248 325.010 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 373.248 325.010 C 367.528 309.575 339.881 334.750 334.375 308.985 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 334.375 308.985 C 331.179 294.035 362.249 263.809 394.868 288.132 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 394.868 288.132 C 435.369 318.333 422.464 372.195 385.694 395.603 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 385.694 395.603 C 318.057 438.660 238.689 392.348 249.509 289.487 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 249.509 289.487 C 258.080 208.010 341.581 181.001 390.265 188.327 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 319.876 538.146 C 313.087 503.876 320.916 473.480 328.413 459.213 C 356.264 459.002 456.543 438.937 465.373 359.297 C 475.006 272.418 396.112 204.734 327.205 249.246 C 291.187 272.512 276.064 329.784 318.878 355.023 C 352.898 375.079 380.211 343.803 373.248 325.010 C 367.528 309.575 339.881 334.750 334.375 308.985 C 331.179 294.035 362.249 263.809 394.868 288.132 C 435.369 318.333 422.464 372.195 385.694 395.603 C 318.057 438.660 238.689 392.348 249.509 289.487 C 258.080 208.010 341.581 181.001 390.265 188.327 C 397.373 189.396 444.937 198.809 472.148 226.885 C 507.682 263.550 525.934 314.163 516.359 366.383 C 505.856 423.662 472.499 467.658 408.166 496.956 C 355.759 520.824 358.735 619.213 358.730 619.225 C 358.726 619.217 324.478 561.373 319.876 538.146 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":690.039,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":34.34,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":199.031,\\\"y\\\":326.029,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999868271844882,\\\"y\\\":0.00513278262745538}},{\\\"point\\\":{\\\"x\\\":520.969,\\\"y\\\":326.029,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999868271844882,\\\"y\\\":0.005132782627455446}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":486.411,\\\"y\\\":440.27,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128941282850898,\\\"y\\\":0.7012716747856296}},{\\\"point\\\":{\\\"x\\\":258.016,\\\"y\\\":440.294,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986784322737811,\\\"y\\\":0.715435844975251}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":456.931,\\\"y\\\":211.845,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6078839280462333,\\\"y\\\":-0.7940259000958859}},{\\\"point\\\":{\\\"x\\\":235.802,\\\"y\\\":211.885,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6588348181795699,\\\"y\\\":-0.752287632727199}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":599.65,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"stairs_smaller\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":73.033,\\\"max\\\":646.967},\\\"y\\\":{\\\"min\\\":60.743,\\\"max\\\":647.306}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"stairs_smaller\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"stairs\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 387.019 645.306 C 387.019 645.297 387.019 559.916 387.019 559.907 C 283.024 499.585 179.028 439.262 75.033 378.939 C 75.033 378.948 75.033 464.330 75.033 464.338 C 75.064 464.357 283.024 584.983 387.019 645.306 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 472.418 511.442 C 472.418 511.433 472.418 426.051 472.418 426.043 C 368.422 365.720 264.427 305.398 160.431 245.075 C 160.431 245.084 160.431 330.466 160.431 330.474 C 264.427 390.797 368.422 451.119 472.418 511.442 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 557.815 377.576 C 557.815 377.567 557.815 292.186 557.815 292.177 C 453.820 231.855 349.825 171.532 245.829 111.210 C 245.829 111.218 245.829 196.600 245.829 196.608 C 349.825 256.931 453.820 317.253 557.815 377.576 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 245.829 111.210 C 349.825 171.532 453.820 231.855 557.815 292.177 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 643.214 243.708 C 643.183 243.690 435.223 123.064 331.227 62.743 C 302.761 78.898 245.838 111.205 245.829 111.210 C 349.825 171.532 453.820 231.855 557.815 292.177 C 557.824 292.172 643.206 243.713 643.214 243.708 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 557.815 377.576 C 453.820 317.253 349.825 256.931 245.829 196.608 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 160.431 245.075 C 264.427 305.398 368.422 365.720 472.418 426.043 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 472.418 426.043 C 472.426 426.038 557.807 377.581 557.815 377.576 C 453.820 317.253 349.825 256.931 245.829 196.608 C 245.821 196.613 160.440 245.070 160.431 245.075 C 264.427 305.398 368.422 365.720 472.418 426.043 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 472.418 511.442 C 368.422 451.119 264.427 390.797 160.431 330.474 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 75.033 378.939 C 179.028 439.262 283.024 499.585 387.019 559.907 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 387.019 559.907 C 387.028 559.902 472.409 511.447 472.418 511.442 C 368.422 451.119 264.427 390.797 160.431 330.474 C 160.423 330.479 75.042 378.935 75.033 378.939 C 179.028 439.262 283.024 499.585 387.019 559.907 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 557.815 292.177 C 557.824 292.172 643.206 243.713 643.214 243.708 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 387.019 645.306 C 387.019 645.297 387.019 559.916 387.019 559.907 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 387.019 559.907 C 387.028 559.902 472.409 511.447 472.418 511.442 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 472.418 511.442 C 472.418 511.433 472.418 426.051 472.418 426.043 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 472.418 426.043 C 472.426 426.038 557.807 377.581 557.815 377.576 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 557.815 377.576 C 557.815 377.567 557.815 292.186 557.815 292.177 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 557.815 292.177 C 557.824 292.172 643.206 243.713 643.214 243.708 C 643.799 328.809 644.967 498.986 644.967 499.011 C 644.941 499.026 387.045 645.291 387.019 645.306 C 387.019 645.297 387.019 559.916 387.019 559.907 C 387.028 559.902 472.409 511.447 472.418 511.442 C 472.418 511.433 472.418 426.051 472.418 426.043 C 472.426 426.038 557.807 377.581 557.815 377.576 C 557.815 377.567 557.815 292.186 557.815 292.177 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":222.951,\\\"max\\\":497.049},\\\"y\\\":{\\\"min\\\":15.479,\\\"max\\\":353.19}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":388.079,\\\"y\\\":693.553,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":471.578,\\\"y\\\":144.169,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":641.743,\\\"y\\\":385.491,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999980424484906,\\\"y\\\":0.0019786609580471452}},{\\\"point\\\":{\\\"x\\\":76.879,\\\"y\\\":387.209,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999672984805416,\\\"y\\\":0.008087148417548392}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":215.902,\\\"y\\\":545.231,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.48979456924850867,\\\"y\\\":0.871837874799362}},{\\\"point\\\":{\\\"x\\\":539.965,\\\"y\\\":559.116,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5071207191800545,\\\"y\\\":0.8618750351288197}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":330.388,\\\"y\\\":64.306,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.2894102522054311,\\\"y\\\":-0.9572051535164178}},{\\\"point\\\":{\\\"x\\\":640.229,\\\"y\\\":245.913,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8744077408511098,\\\"y\\\":-0.48519182056137194}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":388.108,\\\"y\\\":644.192,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"star_6pt\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":71.853,\\\"max\\\":648.147},\\\"y\\\":{\\\"min\\\":9.136,\\\"max\\\":666.09}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"star_6pt\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"star_6pt\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#2ED77EB3-CCAB-49AE-BD3F-C030696B61AE_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 73.853 168.473 C 73.862 168.490 130.513 266.613 171.629 337.827 C 138.711 394.411 73.862 506.733 73.853 506.750 C 73.872 506.750 185.994 506.751 269.457 507.261 C 298.956 558.358 359.990 664.074 359.999 664.090 C 360.008 664.074 412.349 573.416 450.928 506.593 C 516.425 506.752 646.128 506.750 646.147 506.750 C 646.138 506.733 591.408 411.941 548.701 337.249 C 581.286 280.812 646.138 168.490 646.147 168.473 C 646.128 168.473 516.425 168.473 450.440 168.473 C 421.042 116.867 360.008 11.152 359.999 11.136 C 359.990 11.152 308.757 99.892 268.972 168.473 C 186.526 168.473 73.872 168.473 73.853 168.473 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":220.522,\\\"max\\\":499.478},\\\"y\\\":{\\\"min\\\":197.214,\\\"max\\\":476.171}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":702.623,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":269.579,\\\"y\\\":507.387,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.49998423275989384,\\\"y\\\":0.8660345068133835}},{\\\"point\\\":{\\\"x\\\":449.081,\\\"y\\\":507.387,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.49998423275989384,\\\"y\\\":0.8660345068133835}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":172.441,\\\"y\\\":337.594,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871245626964,\\\"y\\\":0.005074515625185982}},{\\\"point\\\":{\\\"x\\\":547.647,\\\"y\\\":337.594,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871225825836,\\\"y\\\":0.005074905812416875}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":269.579,\\\"y\\\":169.682,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5000175261606971,\\\"y\\\":-0.8660152848143828}},{\\\"point\\\":{\\\"x\\\":450.922,\\\"y\\\":169.682,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5000175261606971,\\\"y\\\":-0.8660152848143828}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":18.23,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.959,\\\"y\\\":656.488,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"2ED77EB3-CCAB-49AE-BD3F-C030696B61AE_0\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"50.00%\\\",\\\"r\\\":\\\"102.57%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"25.49%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"star_7pt\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":33.255,\\\"max\\\":686.745},\\\"y\\\":{\\\"min\\\":23.06,\\\"max\\\":660.453}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"star_7pt\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"7-pointed_star.svg\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 266.698 432.624 C 266.674 432.624 35.278 432.548 35.255 432.548 C 35.276 432.538 244.390 331.832 244.411 331.822 C 244.397 331.804 100.035 151.037 100.021 151.019 C 100.042 151.029 308.358 251.403 308.379 251.413 C 308.384 251.391 360.089 25.082 360.094 25.060 C 360.100 25.082 411.460 251.349 411.465 251.371 C 411.486 251.361 620.652 150.630 620.673 150.620 C 620.659 150.638 475.761 331.859 475.747 331.877 C 475.768 331.887 684.724 432.748 684.745 432.758 C 684.722 432.758 452.584 432.684 452.561 432.684 C 452.566 432.706 504.331 658.431 504.337 658.453 C 504.322 658.435 359.695 477.057 359.681 477.039 C 359.666 477.057 214.879 658.141 214.864 658.159 C 214.870 658.136 266.692 432.646 266.698 432.624 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 620.673 150.620 C 502.681 244.621 384.689 338.623 266.698 432.624 C 266.692 432.646 214.870 658.136 214.864 658.159 C 280.398 522.563 345.931 386.967 411.465 251.371 C 411.486 251.361 620.652 150.630 620.673 150.620 C 620.659 150.638 475.761 331.859 475.747 331.877 C 328.916 365.434 182.086 398.991 35.255 432.548 C 35.276 432.538 244.390 331.832 244.411 331.822 C 391.189 365.467 537.967 399.113 684.745 432.758 C 684.722 432.758 452.584 432.684 452.561 432.684 C 335.048 338.796 217.534 244.907 100.021 151.019 C 100.042 151.029 308.358 251.403 308.379 251.413 C 373.698 387.093 439.017 522.773 504.337 658.453 C 504.322 658.435 359.695 477.057 359.681 477.039 C 359.819 326.379 359.957 175.719 360.094 25.060 C 360.100 25.082 411.460 251.349 411.465 251.371 M 359.681 477.039 C 359.666 477.057 214.879 658.141 214.864 658.159 M 452.561 432.684 C 452.566 432.706 504.331 658.431 504.337 658.453 M 475.747 331.877 C 475.768 331.887 684.724 432.748 684.745 432.758 M 308.379 251.413 C 308.384 251.391 360.089 25.082 360.094 25.060 M 244.411 331.822 C 244.397 331.804 100.035 151.037 100.021 151.019 M 266.698 432.624 C 266.674 432.624 35.278 432.548 35.255 432.548 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":236.145,\\\"max\\\":483.855},\\\"y\\\":{\\\"min\\\":232.697,\\\"max\\\":480.407}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":699.302,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":32.303,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":109.181,\\\"y\\\":158.063,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7825726654484276,\\\"y\\\":-0.6225592528369839}},{\\\"point\\\":{\\\"x\\\":610.819,\\\"y\\\":158.063,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7825726654484287,\\\"y\\\":-0.6225592528369822}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":47.566,\\\"y\\\":429.559,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9743624804261366,\\\"y\\\":0.2249839032860498}},{\\\"point\\\":{\\\"x\\\":672.434,\\\"y\\\":429.559,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9743624804261367,\\\"y\\\":0.22498390328604922}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":221.113,\\\"y\\\":646.062,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.4320423847905757,\\\"y\\\":0.9018533016763159}},{\\\"point\\\":{\\\"x\\\":498.887,\\\"y\\\":646.063,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.432071241570124,\\\"y\\\":0.9018394769625311}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":474.914,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"star_7pt_bw\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":33.255,\\\"max\\\":686.745},\\\"y\\\":{\\\"min\\\":23.059,\\\"max\\\":660.453}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"star_7pt_BW\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"7-pointed_star.svg\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 359.959 358.183 C 359.959 358.150 360.049 136.101 360.094 25.059 C 360.100 25.082 411.460 251.349 411.465 251.371 C 394.296 286.975 359.964 358.173 359.959 358.183 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 359.959 358.183 C 359.933 358.163 186.667 220.074 100.021 151.019 C 100.042 151.029 308.358 251.403 308.379 251.413 C 325.572 287.003 359.954 358.173 359.959 358.183 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 359.959 358.183 C 359.947 358.181 282.927 340.609 244.411 331.822 C 244.390 331.832 35.276 432.538 35.255 432.548 C 143.490 407.760 359.926 358.191 359.959 358.183 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 359.959 358.183 C 359.944 358.213 263.229 558.167 214.864 658.159 C 214.870 658.136 266.692 432.646 266.698 432.624 C 297.785 407.810 359.950 358.191 359.959 358.183 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 359.959 358.183 C 359.973 358.213 456.211 558.363 504.337 658.453 C 504.322 658.435 359.695 477.057 359.681 477.039 C 359.773 437.421 359.959 358.195 359.959 358.183 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 684.745 432.758 C 576.483 407.900 359.991 358.191 359.959 358.183 C 359.968 358.191 421.694 407.850 452.561 432.684 C 452.584 432.684 684.722 432.758 684.745 432.758 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 359.959 358.183 C 359.971 358.181 437.151 340.646 475.747 331.877 C 475.761 331.859 620.659 150.638 620.673 150.620 C 533.768 219.808 359.985 358.163 359.959 358.183 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 452.561 432.684 C 421.694 407.850 359.968 358.191 359.959 358.183 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.959 358.183 C 359.973 358.213 456.211 558.363 504.337 658.453 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 452.561 432.684 C 421.694 407.850 359.968 358.191 359.959 358.183 C 359.973 358.213 456.211 558.363 504.337 658.453 C 504.331 658.431 452.566 432.706 452.561 432.684 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.959 358.183 C 359.971 358.181 437.151 340.646 475.747 331.877 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 684.745 432.758 C 576.483 407.900 359.991 358.191 359.959 358.183 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 359.959 358.183 C 359.971 358.181 437.151 340.646 475.747 331.877 C 475.768 331.887 684.724 432.748 684.745 432.758 C 576.483 407.900 359.991 358.191 359.959 358.183 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 411.465 251.371 C 394.296 286.975 359.964 358.173 359.959 358.183 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.959 358.183 C 359.985 358.163 533.768 219.808 620.673 150.620 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 411.465 251.371 C 394.296 286.975 359.964 358.173 359.959 358.183 C 359.985 358.163 533.768 219.808 620.673 150.620 C 620.652 150.630 411.486 251.361 411.465 251.371 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.959 358.183 C 359.944 358.213 263.229 558.167 214.864 658.159 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.681 477.039 C 359.773 437.421 359.959 358.195 359.959 358.183 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 359.959 358.183 C 359.944 358.213 263.229 558.167 214.864 658.159 C 214.879 658.141 359.666 477.057 359.681 477.039 C 359.773 437.421 359.959 358.195 359.959 358.183 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 266.698 432.624 C 297.785 407.810 359.950 358.191 359.959 358.183 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.959 358.183 C 359.926 358.191 143.490 407.760 35.255 432.548 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 266.698 432.624 C 297.785 407.810 359.950 358.191 359.959 358.183 C 359.926 358.191 143.490 407.760 35.255 432.548 C 35.278 432.548 266.674 432.624 266.698 432.624 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.959 358.183 C 359.933 358.163 186.667 220.074 100.021 151.019 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 244.411 331.822 C 282.927 340.609 359.947 358.181 359.959 358.183 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 359.959 358.183 C 359.933 358.163 186.667 220.074 100.021 151.019 C 100.035 151.037 244.397 331.804 244.411 331.822 C 282.927 340.609 359.947 358.181 359.959 358.183 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 308.379 251.413 C 325.572 287.003 359.954 358.173 359.959 358.183 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.959 358.183 C 359.959 358.150 360.049 136.101 360.094 25.059 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 308.379 251.413 C 325.572 287.003 359.954 358.173 359.959 358.183 C 359.959 358.150 360.049 136.101 360.094 25.059 C 360.089 25.082 308.384 251.390 308.379 251.413 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.094 25.059 C 360.100 25.082 411.460 251.349 411.465 251.371 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 620.673 150.620 C 620.659 150.638 475.761 331.859 475.747 331.877 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 684.745 432.758 C 684.722 432.758 452.584 432.684 452.561 432.684 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 504.337 658.453 C 504.322 658.435 359.695 477.057 359.681 477.039 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 214.864 658.159 C 214.870 658.136 266.692 432.646 266.698 432.624 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 35.255 432.548 C 35.276 432.538 244.390 331.832 244.411 331.822 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 100.021 151.019 C 100.042 151.029 308.358 251.403 308.379 251.413 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 308.379 251.413 C 308.384 251.390 360.089 25.082 360.094 25.059 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 244.411 331.822 C 244.397 331.804 100.035 151.037 100.021 151.019 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 266.698 432.624 C 266.674 432.624 35.278 432.548 35.255 432.548 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.681 477.039 C 359.666 477.057 214.879 658.141 214.864 658.159 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 452.561 432.684 C 452.566 432.706 504.331 658.431 504.337 658.453 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 475.747 331.877 C 475.768 331.887 684.724 432.748 684.745 432.758 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 411.465 251.371 C 411.486 251.361 620.652 150.630 620.673 150.620 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":236.145,\\\"max\\\":483.855},\\\"y\\\":{\\\"min\\\":232.697,\\\"max\\\":480.407}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":699.302,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":32.303,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":109.181,\\\"y\\\":158.062,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7826094038835485,\\\"y\\\":-0.6225130689013982}},{\\\"point\\\":{\\\"x\\\":610.819,\\\"y\\\":158.062,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7826094038835497,\\\"y\\\":-0.6225130689013967}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":47.566,\\\"y\\\":429.559,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9743624804261366,\\\"y\\\":0.2249839032860498}},{\\\"point\\\":{\\\"x\\\":672.434,\\\"y\\\":429.559,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9743624804261367,\\\"y\\\":0.22498390328604922}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":221.113,\\\"y\\\":646.062,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.4320423847905757,\\\"y\\\":0.9018533016763159}},{\\\"point\\\":{\\\"x\\\":498.887,\\\"y\\\":646.062,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.432071241570124,\\\"y\\\":0.9018394769625311}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":474.914,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"starburst\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":43.913,\\\"max\\\":676.087},\\\"y\\\":{\\\"min\\\":38.784,\\\"max\\\":670.958}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"starburst\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"starburst\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 670.958 C 360.002 670.943 376.946 519.474 376.948 519.459 C 376.953 519.473 423.807 664.538 423.812 664.552 C 423.811 664.537 409.272 512.905 409.271 512.890 C 409.278 512.903 483.189 646.159 483.197 646.172 C 483.192 646.157 438.951 500.398 438.947 500.383 C 438.957 500.395 536.885 617.065 536.895 617.076 C 536.888 617.063 465.325 482.610 465.318 482.597 C 465.330 482.607 583.639 578.512 583.651 578.522 C 583.641 578.510 487.735 460.201 487.726 460.189 C 487.739 460.196 622.192 531.759 622.205 531.767 C 622.193 531.757 505.523 433.828 505.512 433.818 C 505.526 433.823 651.286 478.063 651.301 478.068 C 651.287 478.060 518.032 404.150 518.019 404.142 C 518.034 404.144 669.666 418.682 669.681 418.683 C 669.667 418.679 524.602 371.824 524.588 371.819 C 524.603 371.818 676.072 354.873 676.087 354.871 C 676.072 354.870 524.603 337.925 524.588 337.923 C 524.602 337.918 669.667 291.064 669.681 291.059 C 669.666 291.061 518.034 305.599 518.019 305.600 C 518.032 305.593 651.287 231.682 651.301 231.675 C 651.286 231.679 505.526 275.920 505.512 275.924 C 505.523 275.915 622.193 177.986 622.205 177.976 C 622.192 177.983 487.739 249.546 487.726 249.554 C 487.735 249.542 583.641 131.232 583.651 131.221 C 583.639 131.230 465.330 227.136 465.318 227.145 C 465.325 227.132 536.888 92.680 536.895 92.666 C 536.886 92.678 438.957 209.348 438.947 209.359 C 438.951 209.345 483.192 63.585 483.197 63.570 C 483.189 63.584 409.278 196.839 409.271 196.852 C 409.272 196.837 423.811 45.205 423.812 45.190 C 423.807 45.205 376.953 190.269 376.948 190.284 C 376.946 190.269 360.002 38.799 360.000 38.784 C 359.998 38.799 343.054 190.269 343.052 190.284 C 343.047 190.269 296.193 45.205 296.188 45.190 C 296.189 45.205 310.728 196.837 310.729 196.852 C 310.722 196.839 236.811 63.584 236.804 63.570 C 236.808 63.585 281.049 209.345 281.053 209.359 C 281.043 209.348 183.115 92.678 183.105 92.666 C 183.112 92.680 254.675 227.132 254.682 227.145 C 254.671 227.136 136.361 131.230 136.349 131.221 C 136.359 131.232 232.265 249.541 232.274 249.553 C 232.261 249.546 97.808 177.983 97.795 177.976 C 97.807 177.986 214.477 275.915 214.488 275.924 C 214.474 275.920 68.714 231.679 68.699 231.675 C 68.713 231.682 201.968 305.593 201.981 305.600 C 201.966 305.599 50.334 291.061 50.319 291.059 C 50.334 291.064 195.398 337.918 195.413 337.923 C 195.397 337.925 43.928 354.870 43.913 354.871 C 43.928 354.873 195.397 371.818 195.413 371.819 C 195.398 371.824 50.334 418.679 50.319 418.683 C 50.334 418.682 201.966 404.144 201.981 404.142 C 201.968 404.150 68.713 478.060 68.699 478.068 C 68.714 478.063 214.474 433.823 214.488 433.818 C 214.477 433.828 97.807 531.756 97.795 531.766 C 97.808 531.759 232.261 460.196 232.274 460.189 C 232.265 460.201 136.359 578.510 136.349 578.522 C 136.361 578.512 254.670 482.607 254.682 482.597 C 254.675 482.610 183.112 617.063 183.105 617.076 C 183.114 617.065 281.043 500.395 281.053 500.383 C 281.049 500.398 236.808 646.157 236.804 646.172 C 236.811 646.159 310.722 512.903 310.729 512.890 C 310.728 512.905 296.189 664.537 296.188 664.552 C 296.193 664.538 343.047 519.473 343.052 519.459 C 343.054 519.474 359.998 670.943 360.000 670.958 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":223.405,\\\"max\\\":496.595},\\\"y\\\":{\\\"min\\\":217.25,\\\"max\\\":490.441}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":698.262,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":25.12,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":32.423,\\\"y\\\":354.782,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873200064072,\\\"y\\\":0.005035854088756288}},{\\\"point\\\":{\\\"x\\\":688.623,\\\"y\\\":354.782,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873200064072,\\\"y\\\":0.005035854088756315}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":593.334,\\\"y\\\":587.639,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129329685826651,\\\"y\\\":0.7012321885851422}},{\\\"point\\\":{\\\"x\\\":127.799,\\\"y\\\":587.687,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986883991125066,\\\"y\\\":0.7154261114507933}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":592.835,\\\"y\\\":122.031,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314454286031296,\\\"y\\\":-0.7754203187279851}},{\\\"point\\\":{\\\"x\\\":127.956,\\\"y\\\":122.11,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817850569385171,\\\"y\\\":-0.7315525518616848}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":685.863,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"stars_7\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":50.782,\\\"max\\\":667.055},\\\"y\\\":{\\\"min\\\":19.14,\\\"max\\\":633.091}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"stars_7\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"stars\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 171.807 172.578 C 171.800 172.579 95.690 182.852 95.682 182.853 C 95.689 182.849 159.984 140.419 159.991 140.415 C 159.985 140.410 104.459 87.381 104.454 87.376 C 104.461 87.378 177.444 111.119 177.451 111.122 C 177.452 111.114 184.385 34.380 184.386 34.372 C 184.389 34.380 211.351 106.513 211.354 106.520 C 211.360 106.516 275.672 64.076 275.679 64.072 C 275.675 64.078 236.084 130.131 236.080 130.138 C 236.087 130.140 309.302 154.014 309.309 154.016 C 309.302 154.017 232.948 164.324 232.941 164.325 C 232.943 164.332 260.015 236.269 260.018 236.276 C 260.012 236.271 204.372 183.053 204.366 183.047 C 204.362 183.054 164.801 249.057 164.797 249.063 C 164.798 249.056 171.807 172.585 171.807 172.578 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 364.701 376.437 C 364.692 376.435 270.623 360.488 270.614 360.486 C 270.623 360.483 362.565 333.925 362.574 333.922 C 362.570 333.914 316.313 250.494 316.309 250.486 C 316.317 250.491 394.103 305.627 394.111 305.632 C 394.115 305.623 430.702 217.175 430.705 217.166 C 430.706 217.175 436.022 312.697 436.023 312.706 C 436.032 312.704 527.998 286.139 528.007 286.136 C 528.000 286.142 456.626 349.851 456.619 349.857 C 456.627 349.863 534.641 405.241 534.649 405.247 C 534.639 405.245 440.269 389.247 440.260 389.246 C 440.260 389.255 445.779 484.583 445.779 484.593 C 445.774 484.585 399.452 400.898 399.448 400.889 C 399.441 400.896 328.122 464.556 328.115 464.563 C 328.118 464.554 364.697 376.446 364.701 376.437 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 442.057 100.775 C 442.052 100.775 396.839 100.760 396.835 100.760 C 396.839 100.758 437.698 81.081 437.702 81.079 C 437.699 81.075 409.492 45.755 409.489 45.752 C 409.493 45.753 450.197 65.366 450.201 65.368 C 450.202 65.363 460.305 21.144 460.306 21.140 C 460.307 21.144 470.342 65.355 470.343 65.360 C 470.347 65.358 511.217 45.675 511.221 45.673 C 511.218 45.677 482.906 81.086 482.903 81.090 C 482.907 81.092 523.736 100.799 523.740 100.801 C 523.736 100.801 478.378 100.787 478.373 100.787 C 478.374 100.791 488.489 144.896 488.490 144.900 C 488.487 144.897 460.228 109.457 460.225 109.454 C 460.222 109.457 431.932 144.840 431.929 144.843 C 431.930 144.839 442.056 100.780 442.057 100.775 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 589.975 227.446 C 589.971 227.446 548.413 224.530 548.409 224.530 C 548.413 224.528 587.233 209.064 587.237 209.063 C 587.234 209.059 563.574 174.783 563.572 174.780 C 563.576 174.782 599.730 195.421 599.734 195.423 C 599.735 195.419 611.860 155.423 611.861 155.419 C 611.862 155.423 618.248 196.705 618.248 196.709 C 618.252 196.708 657.082 181.240 657.086 181.238 C 657.083 181.241 628.787 211.971 628.784 211.974 C 628.787 211.976 665.051 232.712 665.055 232.714 C 665.050 232.714 623.360 229.789 623.355 229.788 C 623.356 229.792 629.822 270.981 629.822 270.986 C 629.820 270.982 606.120 236.593 606.118 236.589 C 606.115 236.593 577.840 267.299 577.837 267.302 C 577.838 267.298 589.974 227.450 589.975 227.446 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 536.262 572.824 C 536.257 572.824 491.044 572.809 491.040 572.809 C 491.044 572.807 531.903 553.130 531.907 553.128 C 531.904 553.124 503.697 517.804 503.694 517.801 C 503.699 517.803 544.402 537.415 544.406 537.417 C 544.407 537.412 554.510 493.193 554.511 493.189 C 554.512 493.193 564.547 537.404 564.548 537.409 C 564.552 537.407 605.422 517.724 605.426 517.722 C 605.423 517.726 577.111 553.135 577.109 553.139 C 577.113 553.141 617.941 572.849 617.945 572.851 C 617.941 572.851 572.583 572.836 572.578 572.836 C 572.579 572.840 582.694 616.945 582.695 616.949 C 582.692 616.946 554.433 581.506 554.430 581.503 C 554.427 581.506 526.137 616.889 526.134 616.892 C 526.135 616.888 536.261 572.829 536.262 572.824 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 92.087 373.994 C 92.083 373.994 52.785 373.981 52.782 373.981 C 52.785 373.980 88.298 356.877 88.302 356.875 C 88.299 356.872 63.783 326.173 63.780 326.170 C 63.784 326.172 99.162 343.218 99.165 343.220 C 99.166 343.216 107.947 304.783 107.948 304.779 C 107.949 304.783 116.671 343.209 116.672 343.213 C 116.675 343.211 152.198 326.104 152.201 326.102 C 152.199 326.105 127.591 356.882 127.589 356.885 C 127.592 356.886 163.079 374.015 163.082 374.017 C 163.078 374.017 123.655 374.004 123.651 374.004 C 123.652 374.008 132.443 412.342 132.444 412.346 C 132.441 412.343 107.880 381.540 107.877 381.537 C 107.875 381.540 83.286 412.293 83.284 412.296 C 83.285 412.292 92.086 373.998 92.087 373.994 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 201.013 577.509 C 201.008 577.509 147.505 583.902 147.500 583.903 C 147.504 583.900 193.063 554.823 193.068 554.820 C 193.064 554.816 154.678 517.021 154.675 517.017 C 154.680 517.019 205.625 534.454 205.630 534.456 C 205.631 534.451 211.316 480.694 211.316 480.689 C 211.318 480.694 229.461 531.586 229.463 531.591 C 229.467 531.588 275.038 502.503 275.043 502.500 C 275.040 502.505 246.559 548.419 246.556 548.424 C 246.561 548.425 297.668 565.957 297.673 565.958 C 297.668 565.959 243.994 572.373 243.988 572.373 C 243.990 572.379 262.212 623.134 262.214 623.139 C 262.210 623.135 223.746 585.206 223.742 585.202 C 223.739 585.207 195.280 631.086 195.277 631.091 C 195.278 631.085 201.013 577.514 201.013 577.509 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":688.247,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":341.569,\\\"y\\\":33.894,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":95.105,\\\"y\\\":505.563,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987246277952555,\\\"y\\\":0.7153907285619387}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":601.703,\\\"y\\\":356.909,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872484878887,\\\"y\\\":0.0050500358039859755}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":582.291,\\\"y\\\":102.954,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314463125054729,\\\"y\\\":-0.7754195989419154}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":387.647,\\\"y\\\":566.847,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"stars_circle\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":64.355,\\\"max\\\":655.645},\\\"y\\\":{\\\"min\\\":29.782,\\\"max\\\":621.073}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"stars_circle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"stars_circle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 470.726 134.081 C 470.722 134.082 432.809 138.297 432.805 138.298 C 432.808 138.295 461.003 112.600 461.005 112.598 C 461.004 112.594 445.279 77.840 445.277 77.836 C 445.280 77.838 478.430 96.712 478.434 96.714 C 478.437 96.711 506.631 71.017 506.634 71.014 C 506.633 71.018 498.926 108.377 498.925 108.381 C 498.929 108.383 532.079 127.257 532.082 127.259 C 532.078 127.259 494.166 131.475 494.162 131.475 C 494.161 131.479 486.455 168.839 486.454 168.843 C 486.452 168.840 470.727 134.085 470.726 134.081 M 249.652 516.992 C 249.651 516.988 234.345 482.047 234.343 482.043 C 234.343 482.047 226.187 519.312 226.187 519.315 C 226.183 519.316 188.222 523.075 188.218 523.075 C 188.222 523.077 221.142 542.349 221.145 542.351 C 221.145 542.355 212.989 579.619 212.988 579.623 C 212.991 579.620 241.492 554.266 241.495 554.264 C 241.498 554.266 274.419 573.537 274.422 573.539 C 274.421 573.536 259.115 538.595 259.114 538.591 C 259.117 538.589 287.618 513.234 287.621 513.232 C 287.617 513.232 249.656 516.991 249.652 516.992 M 551.564 215.080 C 551.561 215.078 516.620 199.772 516.616 199.771 C 516.620 199.770 553.884 191.615 553.888 191.614 C 553.888 191.610 557.648 153.649 557.648 153.646 C 557.650 153.649 576.922 186.569 576.923 186.573 C 576.927 186.572 614.191 178.416 614.195 178.416 C 614.193 178.419 588.839 206.920 588.836 206.923 C 588.838 206.926 608.110 239.846 608.112 239.850 C 608.108 239.848 573.167 224.543 573.164 224.541 C 573.161 224.544 547.807 253.045 547.804 253.048 C 547.805 253.044 551.564 215.083 551.564 215.080 M 168.654 436.153 C 168.654 436.149 172.870 398.236 172.870 398.233 C 172.868 398.235 147.173 426.430 147.170 426.433 C 147.167 426.431 112.412 410.706 112.409 410.705 C 112.411 410.708 131.285 443.858 131.287 443.861 C 131.284 443.864 105.589 472.058 105.587 472.061 C 105.590 472.060 142.950 464.354 142.954 464.353 C 142.956 464.356 161.830 497.506 161.832 497.509 C 161.832 497.506 166.048 459.593 166.048 459.589 C 166.052 459.589 203.412 451.882 203.416 451.881 C 203.412 451.880 168.658 436.155 168.654 436.153 M 581.073 325.646 C 581.071 325.643 558.464 294.917 558.462 294.914 C 558.466 294.915 594.815 306.485 594.819 306.486 C 594.821 306.483 617.057 275.487 617.059 275.484 C 617.059 275.488 617.288 313.634 617.288 313.638 C 617.292 313.639 653.642 325.208 653.645 325.209 C 653.642 325.210 617.434 337.216 617.430 337.217 C 617.430 337.221 617.660 375.367 617.660 375.371 C 617.658 375.368 595.051 344.642 595.048 344.639 C 595.045 344.640 558.837 356.646 558.833 356.647 C 558.835 356.644 581.071 325.649 581.073 325.646 M 138.927 325.646 C 138.929 325.643 161.536 294.917 161.538 294.914 C 161.534 294.915 125.185 306.485 125.181 306.486 C 125.179 306.483 102.943 275.487 102.941 275.484 C 102.941 275.488 102.712 313.634 102.712 313.638 C 102.708 313.639 66.358 325.208 66.355 325.209 C 66.358 325.210 102.566 337.216 102.570 337.217 C 102.570 337.221 102.340 375.367 102.340 375.371 C 102.342 375.368 124.950 344.642 124.952 344.639 C 124.955 344.640 161.163 356.646 161.167 356.647 C 161.165 356.644 138.929 325.649 138.927 325.646 M 551.346 436.153 C 551.346 436.149 547.130 398.236 547.130 398.233 C 547.132 398.235 572.827 426.430 572.830 426.433 C 572.833 426.431 607.588 410.706 607.591 410.705 C 607.589 410.708 588.715 443.858 588.713 443.861 C 588.716 443.864 614.411 472.058 614.413 472.061 C 614.410 472.060 577.050 464.354 577.046 464.353 C 577.044 464.356 558.170 497.506 558.168 497.509 C 558.168 497.506 553.953 459.593 553.952 459.589 C 553.948 459.589 516.588 451.882 516.584 451.881 C 516.588 451.880 551.343 436.155 551.346 436.153 M 168.436 215.080 C 168.439 215.078 203.380 199.772 203.384 199.771 C 203.380 199.770 166.116 191.615 166.112 191.614 C 166.112 191.610 162.352 153.649 162.352 153.646 C 162.350 153.649 143.078 186.569 143.077 186.573 C 143.073 186.572 105.809 178.416 105.805 178.416 C 105.807 178.419 131.161 206.920 131.164 206.923 C 131.162 206.926 111.890 239.846 111.888 239.850 C 111.892 239.848 146.833 224.543 146.836 224.541 C 146.839 224.544 172.193 253.045 172.196 253.048 C 172.195 253.044 168.436 215.083 168.436 215.080 M 470.348 516.992 C 470.349 516.988 485.655 482.047 485.657 482.043 C 485.658 482.047 493.813 519.312 493.813 519.315 C 493.817 519.316 531.778 523.075 531.782 523.075 C 531.778 523.077 498.858 542.349 498.855 542.351 C 498.855 542.355 507.011 579.619 507.012 579.623 C 507.009 579.620 478.508 554.266 478.505 554.264 C 478.502 554.266 445.581 573.537 445.578 573.539 C 445.579 573.536 460.885 538.595 460.886 538.591 C 460.884 538.589 432.382 513.234 432.379 513.232 C 432.383 513.232 470.344 516.991 470.348 516.992 M 249.274 134.081 C 249.278 134.082 287.191 138.297 287.195 138.298 C 287.192 138.295 258.998 112.600 258.995 112.598 C 258.996 112.594 274.721 77.840 274.723 77.836 C 274.720 77.838 241.570 96.712 241.566 96.714 C 241.563 96.711 213.369 71.017 213.366 71.014 C 213.367 71.018 221.074 108.377 221.075 108.381 C 221.071 108.383 187.921 127.257 187.918 127.259 C 187.922 127.259 225.834 131.475 225.838 131.475 C 225.839 131.479 233.545 168.839 233.546 168.843 C 233.548 168.840 249.273 134.085 249.274 134.081 M 359.782 546.501 C 359.785 546.499 390.511 523.892 390.514 523.889 C 390.513 523.893 378.943 560.242 378.942 560.246 C 378.945 560.248 409.940 582.484 409.943 582.486 C 409.940 582.486 371.794 582.716 371.790 582.716 C 371.789 582.719 360.219 619.069 360.218 619.073 C 360.217 619.069 348.211 582.861 348.210 582.858 C 348.206 582.858 310.060 583.087 310.057 583.087 C 310.060 583.085 340.785 560.478 340.788 560.476 C 340.787 560.472 328.781 524.264 328.780 524.260 C 328.783 524.263 359.779 546.499 359.782 546.501 M 359.782 104.354 C 359.785 104.356 390.511 126.963 390.514 126.966 C 390.513 126.962 378.943 90.612 378.942 90.609 C 378.945 90.606 409.940 68.371 409.943 68.368 C 409.940 68.368 371.794 68.139 371.790 68.139 C 371.789 68.135 360.219 31.786 360.218 31.782 C 360.217 31.786 348.211 67.993 348.210 67.997 C 348.206 67.997 310.060 67.768 310.057 67.768 C 310.060 67.770 340.785 90.377 340.788 90.379 C 340.787 90.383 328.781 126.591 328.780 126.594 C 328.783 126.592 359.779 104.356 359.782 104.354 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":218.334,\\\"max\\\":501.666},\\\"y\\\":{\\\"min\\\":183.762,\\\"max\\\":467.093}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":697.501,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":30.619,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":65.752,\\\"y\\\":326.266,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873116587557,\\\"y\\\":0.005037511438695412}},{\\\"point\\\":{\\\"x\\\":654.248,\\\"y\\\":326.266,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873116587554,\\\"y\\\":0.005037511438695441}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":568.666,\\\"y\\\":535.097,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128640217154969,\\\"y\\\":0.7013022790092783}},{\\\"point\\\":{\\\"x\\\":151.163,\\\"y\\\":535.14,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698716918350251,\\\"y\\\":0.7153982583226832}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":568.812,\\\"y\\\":117.531,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314192494108103,\\\"y\\\":-0.7754416364069503}},{\\\"point\\\":{\\\"x\\\":151.897,\\\"y\\\":117.602,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817266038392232,\\\"y\\\":-0.7316070240353347}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":622.186,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"sun\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":8.311,\\\"max\\\":711.689},\\\"y\\\":{\\\"min\\\":3.173,\\\"max\\\":706.552}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"sun\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"sun\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.861 543.067 C 359.862 543.071 358.083 562.837 364.592 578.435 C 374.517 602.221 390.617 603.492 398.849 620.711 C 404.597 632.734 400.169 643.926 407.411 657.727 C 418.132 678.156 446.165 698.474 446.169 698.478 C 446.168 698.473 431.850 672.248 432.797 652.711 C 433.757 632.889 452.228 624.735 450.835 607.825 C 449.507 591.711 431.184 589.771 427.067 568.328 C 423.456 549.518 433.225 528.367 433.226 528.363 C 433.227 528.366 438.852 547.410 450.713 559.430 C 468.710 577.668 484.155 572.639 498.116 585.486 C 507.915 594.503 507.798 606.635 519.622 616.771 C 537.034 631.696 570.488 639.950 570.493 639.952 C 570.490 639.948 547.081 621.324 540.385 602.929 C 533.633 584.379 547.405 569.815 539.672 554.813 C 532.255 540.425 514.592 545.608 502.597 527.334 C 492.110 511.356 493.069 488.131 493.068 488.127 C 493.070 488.129 505.367 503.721 520.848 510.452 C 544.313 520.655 556.755 510.216 574.480 516.914 C 586.936 521.621 591.353 532.927 606.107 537.912 C 627.822 545.251 661.922 540.397 661.928 540.397 C 661.924 540.395 633.255 531.861 620.171 517.300 C 606.968 502.605 614.299 483.944 601.515 472.904 C 589.269 462.328 574.822 473.705 556.886 461.224 C 541.175 450.290 533.394 428.348 533.392 428.344 C 533.396 428.345 550.721 438.024 567.598 438.342 C 593.230 438.825 600.786 424.553 619.759 423.897 C 633.056 423.438 641.526 431.999 657.046 430.867 C 679.988 429.193 709.684 411.555 709.689 411.553 C 709.685 411.553 679.899 414.197 662.335 405.537 C 644.466 396.726 644.306 376.513 628.186 371.005 C 612.911 365.786 603.790 381.688 582.537 376.843 C 563.745 372.559 548.208 355.004 548.204 355.002 C 548.208 355.001 567.974 356.780 583.572 350.271 C 607.358 340.346 608.629 324.246 625.848 316.014 C 637.871 310.266 649.063 314.694 662.865 307.452 C 683.293 296.731 703.611 268.697 703.615 268.694 C 703.610 268.695 677.385 283.013 657.848 282.066 C 638.026 281.106 629.872 262.635 612.962 264.028 C 596.848 265.356 594.908 283.679 573.466 287.796 C 554.655 291.407 533.504 281.638 533.500 281.637 C 533.503 281.635 552.547 276.011 564.567 264.150 C 582.805 246.153 577.776 230.708 590.624 216.747 C 599.640 206.948 611.772 207.065 621.908 195.241 C 636.833 177.829 645.087 144.375 645.089 144.370 C 645.085 144.373 626.461 167.782 608.066 174.478 C 589.516 181.230 574.952 167.458 559.950 175.191 C 545.562 182.608 550.745 200.271 532.471 212.266 C 516.493 222.753 493.268 221.794 493.264 221.795 C 493.266 221.793 508.858 209.496 515.589 194.015 C 525.792 170.550 515.354 158.108 522.051 140.383 C 526.758 127.927 538.064 123.510 543.050 108.756 C 550.388 87.040 545.534 52.941 545.534 52.935 C 545.532 52.939 536.998 81.608 522.437 94.692 C 507.742 107.895 489.081 100.564 478.041 113.348 C 467.465 125.594 478.842 140.040 466.361 157.977 C 455.428 173.688 433.485 181.469 433.481 181.471 C 433.482 181.467 443.161 164.142 443.479 147.265 C 443.962 121.633 429.690 114.077 429.034 95.104 C 428.575 81.807 437.136 73.337 436.004 57.817 C 434.330 34.875 416.692 5.179 416.691 5.173 C 416.690 5.178 419.334 34.964 410.674 52.528 C 401.863 70.397 381.650 70.557 376.142 86.677 C 370.923 101.952 386.825 111.073 381.980 132.326 C 377.696 151.118 360.141 166.655 360.139 166.659 C 360.138 166.655 361.917 146.889 355.408 131.291 C 345.483 107.505 329.383 106.234 321.151 89.015 C 315.403 76.992 319.831 65.800 312.589 51.998 C 301.868 31.570 273.835 11.252 273.831 11.248 C 273.832 11.253 288.150 37.478 287.203 57.015 C 286.243 76.837 267.772 84.991 269.165 101.901 C 270.493 118.015 288.816 119.955 292.933 141.397 C 296.544 160.208 286.775 181.359 286.774 181.363 C 286.773 181.360 281.148 162.316 269.287 150.295 C 251.290 132.058 235.845 137.087 221.884 124.239 C 212.085 115.223 212.202 103.091 200.378 92.955 C 182.966 78.030 149.512 69.776 149.507 69.774 C 149.510 69.778 172.919 88.402 179.615 106.797 C 186.367 125.347 172.595 139.910 180.328 154.913 C 187.745 169.300 205.408 164.118 217.403 182.392 C 227.890 198.370 226.931 221.595 226.932 221.599 C 226.930 221.597 214.633 206.005 199.152 199.274 C 175.687 189.070 163.245 199.509 145.521 192.812 C 133.064 188.105 128.647 176.799 113.893 171.813 C 92.178 164.475 58.078 169.329 58.072 169.329 C 58.076 169.331 86.745 177.865 99.829 192.426 C 113.032 207.121 105.701 225.781 118.485 236.822 C 130.731 247.398 145.178 236.020 163.114 248.502 C 178.825 259.435 186.606 281.378 186.608 281.382 C 186.605 281.381 169.280 271.701 152.402 271.384 C 126.770 270.901 119.214 285.173 100.241 285.829 C 86.944 286.288 78.474 277.727 62.954 278.859 C 40.012 280.533 10.316 298.170 10.311 298.172 C 10.315 298.173 40.101 295.529 57.665 304.189 C 75.534 313.000 75.694 333.213 91.814 338.721 C 107.089 343.940 116.210 328.038 137.463 332.883 C 156.255 337.167 171.792 354.722 171.796 354.724 C 171.792 354.725 152.026 352.946 136.428 359.455 C 112.642 369.380 111.371 385.480 94.152 393.712 C 82.129 399.460 70.937 395.032 57.135 402.274 C 36.707 412.994 16.389 441.028 16.385 441.032 C 16.390 441.031 42.615 426.713 62.152 427.660 C 81.974 428.620 90.128 447.091 107.038 445.698 C 123.152 444.370 125.092 426.047 146.534 421.930 C 165.345 418.319 186.496 428.088 186.500 428.089 C 186.497 428.090 167.453 433.715 155.433 445.576 C 137.195 463.573 142.224 479.018 129.376 492.979 C 120.360 502.778 108.228 502.661 98.092 514.485 C 83.167 531.897 74.913 565.351 74.911 565.356 C 74.915 565.353 93.539 541.944 111.934 535.248 C 130.484 528.496 145.048 542.268 160.050 534.534 C 174.438 527.118 169.255 509.455 187.529 497.460 C 203.507 486.973 226.732 487.931 226.736 487.931 C 226.734 487.933 211.142 500.230 204.411 515.711 C 194.208 539.176 204.646 551.618 197.949 569.342 C 193.242 581.799 181.936 586.216 176.950 600.970 C 169.612 622.685 174.466 656.785 174.466 656.791 C 174.468 656.786 183.002 628.118 197.563 615.034 C 212.258 601.831 230.919 609.162 241.959 596.378 C 252.535 584.132 241.158 569.685 253.639 551.749 C 264.572 536.038 286.515 528.257 286.519 528.255 C 286.518 528.258 276.839 545.583 276.521 562.461 C 276.038 588.093 290.310 595.649 290.966 614.622 C 291.425 627.919 282.864 636.389 283.996 651.909 C 285.670 674.851 303.308 704.547 303.309 704.552 C 303.310 704.548 300.666 674.762 309.326 657.198 C 318.137 639.329 338.350 639.169 343.858 623.049 C 349.077 607.774 333.175 598.653 338.020 577.400 C 342.304 558.608 359.859 543.071 359.861 543.067 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":232.075,\\\"max\\\":487.892},\\\"y\\\":{\\\"min\\\":226.012,\\\"max\\\":481.829}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":359.983,\\\"y\\\":706.492,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":359.983,\\\"y\\\":16.791,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":20.165,\\\"y\\\":354.892,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871534037348,\\\"y\\\":0.005068829006331945}},{\\\"point\\\":{\\\"x\\\":700.887,\\\"y\\\":354.892,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871534037348,\\\"y\\\":0.0050688290063319215}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":602.037,\\\"y\\\":596.451,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129368243532012,\\\"y\\\":0.7012282684555529}},{\\\"point\\\":{\\\"x\\\":119.105,\\\"y\\\":596.5,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986681454975611,\\\"y\\\":0.7154458906632974}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":601.519,\\\"y\\\":113.444,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314711106251402,\\\"y\\\":-0.7753994044657578}},{\\\"point\\\":{\\\"x\\\":119.268,\\\"y\\\":113.526,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817151776550651,\\\"y\\\":-0.7316176710240964}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":695.628,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"sun_half\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":8.746,\\\"max\\\":705.187},\\\"y\\\":{\\\"min\\\":146.572,\\\"max\\\":500.1867603589071}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"sun_half\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"sun\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 547.970 497.965 C 547.974 497.965 567.715 499.741 583.294 493.241 C 607.051 483.328 608.320 467.248 625.517 459.026 C 637.525 453.285 648.703 457.708 662.488 450.474 C 682.891 439.768 703.183 411.768 703.187 411.765 C 703.183 411.766 676.990 426.066 657.477 425.121 C 637.680 424.161 629.536 405.714 612.647 407.105 C 596.553 408.431 594.616 426.731 573.200 430.843 C 554.413 434.450 533.288 424.693 533.284 424.692 C 533.287 424.690 552.308 419.072 564.313 407.226 C 582.528 389.252 577.505 373.826 590.337 359.882 C 599.342 350.096 611.459 350.212 621.582 338.403 C 636.489 321.013 644.732 287.600 644.734 287.595 C 644.731 287.598 626.130 310.979 607.757 317.666 C 589.230 324.410 574.685 310.655 559.701 318.379 C 545.332 325.786 550.507 343.427 532.256 355.407 C 516.298 365.881 493.102 364.924 493.098 364.925 C 493.100 364.922 508.673 352.641 515.396 337.179 C 525.586 313.743 515.160 301.316 521.850 283.614 C 526.551 271.173 537.842 266.762 542.822 252.026 C 550.151 230.338 545.303 196.280 545.303 196.275 C 545.301 196.279 536.778 224.912 522.235 237.979 C 507.558 251.166 488.921 243.844 477.894 256.612 C 467.331 268.843 478.695 283.272 466.229 301.185 C 455.309 316.878 433.393 324.648 433.390 324.650 C 433.391 324.647 443.058 307.344 443.375 290.487 C 443.857 264.887 429.603 257.340 428.948 238.391 C 428.489 225.111 437.040 216.651 435.909 201.150 C 434.238 178.236 416.622 148.578 416.620 148.572 C 416.619 148.577 419.260 178.326 410.611 195.867 C 401.811 213.714 381.623 213.875 376.122 229.974 C 370.910 245.230 386.792 254.340 381.952 275.567 C 377.674 294.336 360.141 309.853 360.139 309.857 C 360.138 309.853 361.914 290.112 355.414 274.533 C 345.501 250.776 329.421 249.507 321.199 232.310 C 315.459 220.301 319.881 209.123 312.648 195.339 C 301.941 174.936 273.942 154.643 273.938 154.639 C 273.939 154.644 288.239 180.837 287.294 200.349 C 286.335 220.146 267.887 228.291 269.278 245.180 C 270.604 261.273 288.904 263.211 293.016 284.627 C 296.623 303.414 286.866 324.539 286.865 324.543 C 286.864 324.539 281.246 305.519 269.400 293.514 C 251.426 275.299 235.999 280.322 222.055 267.490 C 212.269 258.485 212.386 246.368 200.577 236.245 C 183.186 221.338 149.774 213.095 149.769 213.092 C 149.772 213.096 173.152 231.697 179.839 250.070 C 186.583 268.597 172.828 283.142 180.552 298.126 C 187.959 312.495 205.601 307.319 217.580 325.571 C 228.054 341.528 227.097 364.725 227.098 364.729 C 227.095 364.726 214.814 349.154 199.352 342.431 C 175.916 332.241 163.489 342.666 145.787 335.977 C 133.347 331.276 128.935 319.985 114.199 315.005 C 92.511 307.675 58.453 312.524 58.448 312.523 C 58.452 312.526 87.085 321.049 100.152 335.592 C 113.339 350.269 106.018 368.906 118.785 379.932 C 131.016 390.495 145.445 379.132 163.359 391.598 C 179.051 402.518 186.821 424.434 186.824 424.437 C 186.820 424.436 169.517 414.769 152.661 414.451 C 127.060 413.969 119.514 428.224 100.564 428.878 C 87.284 429.337 78.824 420.787 63.324 421.918 C 40.410 423.589 10.751 441.205 10.746 441.207 C 10.750 441.207 40.499 438.567 58.041 447.216 C 75.888 456.015 76.048 476.204 92.148 481.705 C 107.404 486.917 116.513 471.035 137.740 475.874 C 156.509 480.153 172.030 497.688 172.030 497.688 C 297.343 497.781 547.933 497.965 547.970 497.965 Z\\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":248.719,\\\"max\\\":471.248},\\\"y\\\":{\\\"min\\\":332.202,\\\"max\\\":495.565}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":359.984,\\\"y\\\":497.998,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":359.984,\\\"y\\\":165.693,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":25.125,\\\"y\\\":498.858,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871390319304,\\\"y\\\":0.005071663507624135}},{\\\"point\\\":{\\\"x\\\":695.911,\\\"y\\\":498.858,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871390319306,\\\"y\\\":0.005071663507624127}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":520.165,\\\"y\\\":496.202,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129165528742233,\\\"y\\\":0.7012488778158116}},{\\\"point\\\":{\\\"x\\\":201.026,\\\"y\\\":496.234,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698739523875169,\\\"y\\\":0.7153761792055298}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":597.994,\\\"y\\\":260.935,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.63141327360905,\\\"y\\\":-0.7754465022877485}},{\\\"point\\\":{\\\"x\\\":122.782,\\\"y\\\":261.015,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817449881590778,\\\"y\\\":-0.7315898927131094}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":497.204,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"sun_pointy\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":56.579,\\\"max\\\":663.421},\\\"y\\\":{\\\"min\\\":17.138,\\\"max\\\":623.979}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"sun_pointy_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"sun_pointy\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 411.284 195.816 C 399.885 191.078 387.534 187.877 374.502 186.403 C 403.144 150.635 459.566 80.173 459.575 80.162 C 459.573 80.176 449.521 171.033 444.584 215.652 C 434.630 207.554 423.522 200.886 411.284 195.816 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S2\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 484.742 269.274 C 479.621 256.927 472.778 245.531 464.905 235.974 C 509.525 231.037 600.382 220.985 600.396 220.983 C 600.385 220.992 529.031 278.129 493.990 306.188 C 492.537 293.193 489.305 280.787 484.742 269.274 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S3\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 484.743 371.842 C 489.484 360.448 492.686 348.097 494.155 335.061 C 529.923 363.702 600.386 420.125 600.396 420.133 C 600.383 420.132 509.525 410.079 464.906 405.142 C 473.007 395.190 479.676 384.084 484.743 371.842 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S4\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 411.329 445.143 C 423.667 440.063 435.055 433.251 444.584 425.464 C 449.521 470.083 459.573 560.940 459.575 560.954 C 459.566 560.943 402.430 489.589 374.370 454.547 C 387.366 453.096 399.772 449.865 411.329 445.143 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S5\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 308.716 445.300 C 320.115 450.046 332.466 453.250 345.497 454.714 C 316.856 490.482 260.434 560.944 260.425 560.954 C 260.427 560.941 270.354 471.220 275.393 425.675 C 285.357 433.687 296.470 440.306 308.716 445.300 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S6\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 235.415 371.888 C 240.293 383.733 246.768 394.703 254.883 405.166 C 209.339 410.205 119.618 420.132 119.604 420.133 C 119.615 420.125 190.969 362.988 226.011 334.928 C 227.463 347.925 230.695 360.332 235.415 371.888 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S7\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 235.258 269.274 C 230.516 280.677 227.314 293.029 225.844 306.055 C 190.077 277.414 119.614 220.992 119.604 220.983 C 119.617 220.985 209.339 230.912 254.884 235.951 C 246.874 245.918 240.256 257.033 235.258 269.274 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S8\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 308.670 195.975 C 296.827 200.854 285.857 207.329 275.393 215.442 C 270.354 169.897 260.427 80.176 260.425 80.163 C 260.434 80.173 317.570 151.527 345.630 186.568 C 332.634 188.022 320.227 191.255 308.670 195.975 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 308.670 195.975 C 320.227 191.255 332.634 188.022 345.630 186.568 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 374.502 186.403 C 387.534 187.877 399.885 191.078 411.284 195.816 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S9\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 19.138 C 359.995 19.155 325.680 137.375 308.670 195.975 C 320.227 191.255 332.634 188.022 345.630 186.568 C 349.622 186.014 354.776 185.719 360.000 185.719 C 364.932 185.719 369.801 185.982 374.502 186.403 C 387.534 187.877 399.885 191.078 411.284 195.816 C 394.320 137.375 360.005 19.155 360.000 19.138 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 411.284 195.816 C 423.522 200.886 434.630 207.554 444.584 215.652 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 464.905 235.974 C 472.778 245.531 479.621 256.927 484.742 269.274 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S10\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 573.137 107.422 C 573.125 107.410 411.247 196.759 411.284 195.816 C 423.522 200.886 434.630 207.554 444.584 215.652 C 452.107 221.758 458.863 228.526 464.905 235.974 C 472.778 245.531 479.621 256.927 484.742 269.274 C 485.248 268.494 573.128 107.438 573.137 107.422 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 484.742 269.274 C 489.305 280.787 492.537 293.193 493.990 306.188 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 494.155 335.061 C 492.686 348.097 489.484 360.448 484.743 371.842 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S11\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 661.421 320.558 C 661.403 320.553 543.184 286.238 484.742 269.274 C 489.305 280.787 492.537 293.193 493.990 306.188 C 494.549 310.186 494.844 315.339 494.844 320.564 C 494.844 325.496 494.581 330.365 494.155 335.061 C 492.686 348.097 489.484 360.448 484.743 371.842 C 543.184 354.879 661.403 320.563 661.421 320.558 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 484.743 371.842 C 479.676 384.084 473.007 395.190 464.906 405.142 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 444.584 425.464 C 435.055 433.251 423.667 440.063 411.329 445.143 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S12\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 573.137 533.695 C 573.128 533.679 484.435 372.440 484.743 371.842 C 479.676 384.084 473.007 395.190 464.906 405.142 C 458.803 412.669 452.034 419.423 444.584 425.464 C 435.055 433.251 423.667 440.063 411.329 445.143 C 411.346 445.152 573.121 533.686 573.137 533.695 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 374.370 454.547 C 387.366 453.096 399.772 449.865 411.329 445.143 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 308.716 445.300 C 320.115 450.046 332.466 453.250 345.497 454.714 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S13\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 345.497 454.714 C 350.199 455.145 355.068 455.408 360.000 455.408 C 365.225 455.408 370.378 455.113 374.370 454.547 C 387.366 453.096 399.772 449.865 411.329 445.143 C 394.320 503.742 360.005 621.961 360.000 621.979 C 359.995 621.961 325.680 503.742 308.716 445.300 C 320.115 450.046 332.466 453.250 345.497 454.714 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 235.415 371.888 C 240.293 383.733 246.768 394.703 254.883 405.166 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 275.393 425.675 C 285.357 433.687 296.470 440.306 308.716 445.300 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S14\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 146.863 533.695 C 146.872 533.679 235.406 371.904 235.415 371.888 C 240.293 383.733 246.768 394.703 254.883 405.166 C 260.979 412.793 267.927 419.746 275.393 425.675 C 285.357 433.687 296.470 440.306 308.716 445.300 C 308.754 446.265 146.879 533.686 146.863 533.695 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 235.258 269.274 C 230.516 280.677 227.314 293.029 225.844 306.055 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 226.011 334.928 C 227.463 347.925 230.695 360.332 235.415 371.888 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S15\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 58.579 320.558 C 58.597 320.553 176.816 286.238 235.258 269.274 C 230.516 280.677 227.314 293.029 225.844 306.055 C 225.419 310.763 225.156 315.632 225.156 320.564 C 225.156 325.788 225.451 330.942 226.011 334.928 C 227.463 347.925 230.695 360.332 235.415 371.888 C 176.816 354.878 58.597 320.563 58.579 320.558 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 308.670 195.975 C 296.827 200.854 285.857 207.329 275.393 215.442 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 254.884 235.951 C 246.874 245.918 240.256 257.033 235.258 269.274 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S16\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 146.863 107.422 C 146.879 107.430 308.654 195.966 308.670 195.975 C 296.827 200.854 285.857 207.329 275.393 215.442 C 267.767 221.540 260.814 228.488 254.884 235.951 C 246.874 245.918 240.256 257.033 235.258 269.274 C 236.837 270.585 146.872 107.438 146.863 107.422 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":262.249,\\\"max\\\":457.751},\\\"y\\\":{\\\"min\\\":222.811,\\\"max\\\":418.313}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":703.114,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":19.945,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":59.955,\\\"y\\\":321.417,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999869848438501,\\\"y\\\":0.0051019744124722695}},{\\\"point\\\":{\\\"x\\\":660.045,\\\"y\\\":321.417,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999869848438501,\\\"y\\\":0.00510197441247224}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":572.776,\\\"y\\\":534.362,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129136815267303,\\\"y\\\":0.7012517969260427}},{\\\"point\\\":{\\\"x\\\":147.048,\\\"y\\\":534.406,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986749421246679,\\\"y\\\":0.7154392533591458}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":572.926,\\\"y\\\":108.57,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.63143677802907,\\\"y\\\":-0.7754273630407087}},{\\\"point\\\":{\\\"x\\\":147.797,\\\"y\\\":108.642,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817236289221867,\\\"y\\\":-0.7316097961134503}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":620.453,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"sun_ring\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":11.275,\\\"max\\\":708.725},\\\"y\\\":{\\\"min\\\":6.129,\\\"max\\\":703.579}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"sun_ring\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"sun_ring\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#7ABBA0AC-B882-4B5F-B184-2A9A0ED543CF_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 180.291 354.854 C 180.291 255.387 260.532 175.146 360.000 175.146 C 459.468 175.146 539.709 255.387 539.709 354.854 C 539.709 454.322 459.468 534.563 360.000 534.563 C 260.532 534.563 180.291 454.322 180.291 354.854 M 338.207 575.504 C 342.454 556.872 359.860 541.466 359.862 541.463 C 359.863 541.467 358.099 561.065 364.553 576.531 C 374.394 600.116 390.357 601.375 398.520 618.448 C 404.219 630.370 399.828 641.467 407.009 655.151 C 417.639 675.407 445.435 695.552 445.439 695.556 C 445.438 695.552 431.241 669.549 432.180 650.177 C 433.132 630.524 451.446 622.438 450.065 605.671 C 448.748 589.694 430.581 587.771 426.499 566.510 C 422.918 547.859 432.604 526.887 432.605 526.883 C 432.607 526.887 438.184 545.769 449.944 557.688 C 467.788 575.771 483.103 570.784 496.946 583.523 C 506.661 592.463 506.545 604.492 518.269 614.542 C 535.533 629.341 568.704 637.524 568.709 637.527 C 568.706 637.523 545.495 619.057 538.856 600.817 C 532.161 582.424 545.817 567.984 538.148 553.109 C 530.795 538.844 513.281 543.982 501.388 525.863 C 490.990 510.021 491.940 486.992 491.940 486.988 C 491.942 486.991 504.134 502.450 519.485 509.125 C 542.751 519.241 555.087 508.891 572.661 515.532 C 585.012 520.199 589.392 531.408 604.021 536.352 C 625.552 543.628 659.363 538.815 659.368 538.816 C 659.364 538.813 630.938 530.352 617.966 515.914 C 604.874 501.344 612.143 482.841 599.468 471.895 C 587.326 461.408 573.001 472.689 555.217 460.314 C 539.639 449.473 531.924 427.716 531.922 427.713 C 531.926 427.714 549.104 437.311 565.838 437.626 C 591.253 438.104 598.745 423.953 617.557 423.303 C 630.741 422.848 639.139 431.336 654.528 430.214 C 677.276 428.554 706.720 411.066 706.725 411.064 C 706.720 411.064 677.187 413.685 659.772 405.099 C 642.055 396.363 641.895 376.320 625.912 370.860 C 610.767 365.685 601.724 381.452 580.650 376.648 C 562.017 372.400 546.612 354.994 546.609 354.992 C 546.612 354.991 566.211 356.755 581.677 350.301 C 605.261 340.460 606.521 324.497 623.594 316.335 C 635.515 310.635 646.613 315.026 660.297 307.845 C 680.553 297.216 700.698 269.419 700.702 269.415 C 700.697 269.417 674.694 283.613 655.323 282.675 C 635.669 281.723 627.584 263.408 610.817 264.790 C 594.840 266.106 592.917 284.274 571.656 288.355 C 553.005 291.936 532.033 282.250 532.029 282.249 C 532.032 282.248 550.915 276.670 562.833 264.910 C 580.916 247.066 575.930 231.752 588.668 217.909 C 597.609 208.194 609.638 208.309 619.687 196.585 C 634.486 179.321 642.670 146.150 642.672 146.145 C 642.669 146.148 624.202 169.359 605.963 175.998 C 587.570 182.693 573.130 169.038 558.255 176.706 C 543.989 184.060 549.128 201.573 531.009 213.466 C 515.167 223.864 492.138 222.914 492.134 222.915 C 492.136 222.912 507.596 210.720 514.270 195.370 C 524.387 172.104 514.037 159.767 520.677 142.193 C 525.344 129.843 536.554 125.463 541.498 110.834 C 548.774 89.302 543.961 55.492 543.961 55.486 C 543.959 55.490 535.497 83.916 521.060 96.888 C 506.490 109.980 487.987 102.711 477.041 115.386 C 466.554 127.529 477.835 141.853 465.459 159.637 C 454.619 175.216 432.862 182.930 432.858 182.932 C 432.859 182.929 442.456 165.751 442.772 149.017 C 443.250 123.601 429.099 116.110 428.449 97.298 C 427.993 84.113 436.482 75.715 435.359 60.327 C 433.700 37.579 416.212 8.135 416.210 8.129 C 416.209 8.134 418.831 37.667 410.244 55.082 C 401.509 72.800 381.466 72.959 376.005 88.942 C 370.831 104.087 386.598 113.131 381.793 134.204 C 377.546 152.837 360.140 168.242 360.138 168.246 C 360.137 168.242 361.901 148.644 355.447 133.177 C 345.606 109.593 329.643 108.333 321.480 91.260 C 315.781 79.339 320.172 68.242 312.991 54.557 C 302.361 34.302 274.565 14.156 274.561 14.152 C 274.562 14.157 288.759 40.160 287.821 59.531 C 286.868 79.185 268.554 87.270 269.935 104.037 C 271.252 120.014 289.419 121.938 293.501 143.198 C 297.082 161.849 287.396 182.821 287.395 182.825 C 287.393 182.822 281.816 163.939 270.056 152.021 C 252.212 133.938 236.897 138.925 223.054 126.186 C 213.339 117.246 213.455 105.217 201.731 95.167 C 184.467 80.368 151.296 72.184 151.291 72.182 C 151.294 72.186 174.505 90.652 181.144 108.891 C 187.839 127.284 174.183 141.724 181.852 156.600 C 189.205 170.865 206.719 165.727 218.612 183.846 C 229.010 199.688 228.060 222.716 228.061 222.720 C 228.058 222.718 215.866 207.258 200.515 200.584 C 177.249 190.467 164.913 200.818 147.339 194.177 C 134.988 189.510 130.608 178.300 115.980 173.357 C 94.448 166.080 60.637 170.893 60.632 170.893 C 60.636 170.895 89.062 179.357 102.034 193.795 C 115.126 208.365 107.857 226.867 120.532 237.814 C 132.674 248.300 146.999 237.019 164.783 249.395 C 180.361 260.236 188.076 281.993 188.078 281.996 C 188.074 281.995 170.896 272.398 154.162 272.083 C 128.747 271.604 121.255 285.755 102.443 286.405 C 89.259 286.861 80.861 278.372 65.472 279.495 C 42.724 281.154 13.280 298.642 13.275 298.644 C 13.280 298.645 42.813 296.024 60.228 304.610 C 77.945 313.346 78.105 333.388 94.088 338.849 C 109.233 344.024 118.276 328.257 139.350 333.061 C 157.983 337.309 173.388 354.715 173.391 354.717 C 173.388 354.717 153.789 352.954 138.323 359.407 C 114.739 369.248 113.479 385.212 96.406 393.374 C 84.485 399.073 73.387 394.683 59.703 401.864 C 39.447 412.493 19.302 440.289 19.298 440.293 C 19.303 440.292 45.306 426.095 64.677 427.034 C 84.331 427.986 92.416 446.300 109.183 444.919 C 125.160 443.602 127.083 425.435 148.344 421.353 C 166.995 417.772 187.967 427.459 187.971 427.459 C 187.968 427.461 169.085 433.038 157.167 444.799 C 139.084 462.642 144.070 477.957 131.332 491.800 C 122.391 501.515 110.362 501.400 100.313 513.123 C 85.514 530.387 77.330 563.558 77.328 563.563 C 77.331 563.560 95.798 540.349 114.037 533.710 C 132.430 527.016 146.870 540.671 161.745 533.003 C 176.011 525.649 170.872 508.135 188.991 496.243 C 204.834 485.844 227.862 486.795 227.866 486.794 C 227.864 486.797 212.404 498.989 205.730 514.339 C 195.613 537.605 205.963 549.942 199.323 567.516 C 194.656 579.866 183.446 584.246 178.502 598.875 C 171.226 620.406 176.039 654.217 176.039 654.223 C 176.041 654.218 184.503 625.793 198.940 612.820 C 213.510 599.729 232.013 606.997 242.959 594.322 C 253.446 582.180 242.165 567.856 254.541 550.072 C 265.381 534.493 287.138 526.779 287.142 526.776 C 287.141 526.780 277.544 543.958 277.228 560.692 C 276.750 586.107 290.901 593.599 291.551 612.411 C 292.007 625.595 283.518 633.994 284.641 649.382 C 286.300 672.130 303.788 701.574 303.790 701.579 C 303.791 701.575 301.169 672.041 309.756 654.627 C 318.492 636.909 338.534 636.750 343.995 620.767 C 349.169 605.621 333.402 596.578 338.207 575.504 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":234.855,\\\"max\\\":485.112},\\\"y\\\":{\\\"min\\\":228.79,\\\"max\\\":479.047}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":359.976,\\\"y\\\":703.924,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":359.976,\\\"y\\\":21.987,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":22.513,\\\"y\\\":354.762,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873379630732,\\\"y\\\":0.0050322871069308625}},{\\\"point\\\":{\\\"x\\\":698.516,\\\"y\\\":354.762,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873361423453,\\\"y\\\":0.005032648898551829}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":600.351,\\\"y\\\":594.646,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129056715082938,\\\"y\\\":0.7012599400588264}},{\\\"point\\\":{\\\"x\\\":120.768,\\\"y\\\":594.695,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986821980403932,\\\"y\\\":0.7154321673935585}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":599.837,\\\"y\\\":114.988,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314312836514491,\\\"y\\\":-0.7754318371245039}},{\\\"point\\\":{\\\"x\\\":120.929,\\\"y\\\":115.07,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817212266635011,\\\"y\\\":-0.7316120345623159}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":692.896,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"7ABBA0AC-B882-4B5F-B184-2A9A0ED543CF_0\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"50.00%\\\",\\\"r\\\":\\\"50.00%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"9.41%\\\",\\\"color\\\":\\\"#000000\\\"},{\\\"offset\\\":\\\"70.59%\\\",\\\"color\\\":\\\"#ffffff\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"sword\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":293.58,\\\"max\\\":426.42},\\\"y\\\":{\\\"min\\\":21.536,\\\"max\\\":686.995}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"sword\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"sword_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 335.457 566.820 C 335.459 566.820 359.998 566.820 360.000 566.820 C 360.002 566.820 384.541 566.820 384.543 566.820 C 384.543 566.772 383.084 82.108 383.084 82.060 C 383.082 82.054 360.002 23.542 360.000 23.536 C 359.998 23.542 336.918 82.054 336.916 82.060 C 336.916 82.108 335.457 566.772 335.457 566.820 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 295.580 566.820 C 295.593 566.820 424.407 566.820 424.420 566.820 C 424.420 566.822 424.420 582.585 424.420 582.586 C 424.407 582.586 295.593 582.586 295.580 582.586 C 295.580 582.585 295.580 566.822 295.580 566.820 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 348.209 640.937 C 351.660 638.976 355.693 637.829 360.000 637.830 C 364.307 637.830 368.340 638.977 371.791 640.937 C 371.826 621.683 371.896 582.592 371.895 582.586 C 371.893 582.586 348.107 582.586 348.104 582.586 C 348.104 582.592 348.174 621.683 348.209 640.937 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 637.830 C 364.307 637.830 368.340 638.977 371.791 640.937 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 348.209 640.937 C 351.660 638.976 355.693 637.829 360.000 637.830 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 637.830 C 364.307 637.830 368.340 638.977 371.791 640.937 C 378.856 645.054 383.582 652.667 383.582 661.412 C 383.583 674.465 373.053 684.995 360.000 684.995 C 346.947 684.995 336.417 674.465 336.417 661.412 C 336.417 652.667 341.144 645.054 348.209 640.937 C 351.660 638.976 355.693 637.829 360.000 637.830 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 566.820 C 360.000 397.539 360.000 228.257 360.000 58.975 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":702.24,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":31.601,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":333.614,\\\"y\\\":355.146,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999869027311171,\\\"y\\\":0.005118043202954362}},{\\\"point\\\":{\\\"x\\\":385.298,\\\"y\\\":355.146,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999869027311171,\\\"y\\\":0.005118043202954362}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":423.071,\\\"y\\\":581.423,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129095138753917,\\\"y\\\":0.7012560338606384}},{\\\"point\\\":{\\\"x\\\":296.96,\\\"y\\\":581.468,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987114107908565,\\\"y\\\":0.7154036374178223}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":382.206,\\\"y\\\":136.221,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314222848960932,\\\"y\\\":-0.7754391646909491}},{\\\"point\\\":{\\\"x\\\":336.467,\\\"y\\\":136.295,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817878553181023,\\\"y\\\":-0.7315499438457653}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.96,\\\"y\\\":666.565,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false}},{\\\"name\\\":\\\"synagogue_blank\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":84.384,\\\"max\\\":635.646},\\\"y\\\":{\\\"min\\\":125.273,\\\"max\\\":687.476}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"synagogue_blank\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"synagogue\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 539.045 280.656 C 539.045 285.293 542.786 289.034 547.423 289.034 C 552.061 289.034 555.801 285.293 555.801 280.656 C 555.801 276.019 552.061 272.278 547.423 272.278 C 542.786 272.277 539.045 276.018 539.045 280.656 M 165.421 280.656 C 165.421 285.293 169.162 289.034 173.799 289.034 C 178.437 289.034 182.177 285.293 182.177 280.656 C 182.177 276.019 178.437 272.278 173.799 272.278 C 169.162 272.277 165.421 276.018 165.421 280.656 M 194.755 343.258 C 194.755 343.256 194.755 315.399 194.755 315.396 C 194.751 315.396 150.244 315.396 150.240 315.396 C 150.240 315.399 150.240 343.256 150.240 343.258 C 150.242 343.256 172.286 323.055 172.288 323.053 C 172.290 323.055 194.753 343.256 194.755 343.258 M 196.787 314.237 C 196.787 300.960 186.077 290.250 172.800 290.250 C 159.524 290.250 148.813 300.960 148.813 314.237 C 155.096 314.163 191.781 314.137 196.787 314.237 M 207.495 463.404 C 206.788 442.662 191.817 428.292 172.383 428.292 C 152.949 428.292 138.941 440.095 137.271 463.404 C 136.195 478.413 137.180 534.170 137.180 534.177 C 137.187 534.177 205.975 534.335 205.982 534.335 C 205.982 534.328 208.029 479.090 207.495 463.404 M 257.796 401.932 C 257.788 401.924 172.099 326.167 172.090 326.160 C 172.082 326.167 86.393 401.924 86.384 401.932 C 86.401 401.932 257.779 401.932 257.796 401.932 M 255.043 684.070 C 255.043 684.043 255.043 405.390 255.043 405.362 C 255.027 405.362 86.890 405.362 86.873 405.362 C 86.873 405.390 86.873 684.043 86.873 684.070 C 86.890 684.070 255.027 684.070 255.043 684.070 M 207.495 606.019 C 206.788 585.278 191.818 570.907 172.383 570.907 C 152.949 570.907 138.941 582.710 137.271 606.019 C 136.195 621.028 137.180 676.785 137.180 676.792 C 137.187 676.792 205.975 676.951 205.982 676.951 C 205.982 676.944 208.029 621.705 207.495 606.019 M 347.577 139.990 C 347.577 147.029 353.255 152.707 360.294 152.707 C 367.332 152.707 373.010 147.028 373.010 139.990 C 373.010 132.952 367.332 127.274 360.294 127.273 C 353.255 127.273 347.577 132.951 347.577 139.990 M 525.275 343.258 C 525.275 343.256 525.275 315.399 525.275 315.396 C 525.280 315.396 569.787 315.396 569.791 315.396 C 569.791 315.399 569.791 343.256 569.791 343.258 C 569.789 343.256 547.745 323.055 547.743 323.053 C 547.741 323.055 525.278 343.256 525.275 343.258 M 523.244 314.237 C 523.244 300.960 533.954 290.250 547.231 290.250 C 560.507 290.250 571.217 300.960 571.217 314.237 C 564.935 314.163 528.250 314.137 523.244 314.237 M 512.536 463.404 C 513.242 442.662 528.213 428.292 547.647 428.292 C 567.082 428.292 581.090 440.095 582.760 463.404 C 583.835 478.413 582.851 534.170 582.851 534.177 C 582.844 534.177 514.056 534.335 514.049 534.335 C 514.049 534.328 512.001 479.090 512.536 463.404 M 462.234 401.932 C 462.243 401.924 547.932 326.167 547.941 326.160 C 547.949 326.167 633.638 401.924 633.646 401.932 C 633.629 401.932 462.252 401.932 462.234 401.932 M 464.987 684.070 C 464.987 684.043 464.987 405.390 464.987 405.362 C 465.004 405.362 633.141 405.362 633.158 405.362 C 633.158 405.390 633.158 684.043 633.158 684.070 C 633.141 684.070 465.004 684.070 464.987 684.070 M 294.344 399.664 C 294.344 436.167 323.791 465.614 360.294 465.614 C 396.796 465.614 426.243 436.167 426.243 399.664 C 426.242 363.162 396.796 333.716 360.294 333.715 C 323.791 333.715 294.344 363.162 294.344 399.664 M 512.536 606.019 C 513.242 585.278 528.213 570.907 547.647 570.907 C 567.082 570.907 581.090 582.710 582.760 606.019 C 583.835 621.028 582.851 676.785 582.851 676.792 C 582.844 676.792 514.056 676.951 514.049 676.951 C 514.049 676.944 512.001 621.705 512.536 606.019 M 311.835 576.610 C 313.004 547.864 333.569 527.936 360.510 527.936 C 387.451 527.936 407.017 544.288 409.185 576.610 C 410.614 597.907 408.169 676.985 408.169 676.995 C 408.159 676.995 312.798 677.215 312.789 677.215 C 312.789 677.205 310.930 598.849 311.835 576.610 M 262.606 685.476 C 262.606 685.435 262.606 277.696 262.606 277.655 C 262.625 277.655 458.395 277.655 458.414 277.655 C 458.414 277.696 458.414 685.435 458.414 685.476 C 458.395 685.476 262.625 685.476 262.606 685.476 M 252.478 273.851 C 252.478 273.850 252.478 257.121 252.478 257.120 C 252.499 257.120 468.520 257.120 468.542 257.120 C 468.542 257.121 468.542 273.850 468.542 273.851 C 468.520 273.851 252.499 273.851 252.478 273.851 M 264.284 253.128 C 264.284 199.868 307.250 156.903 360.510 156.903 C 413.770 156.903 456.736 199.868 456.736 253.128 C 431.532 252.834 284.368 252.726 264.284 253.128 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 207.495 463.404 C 206.788 442.662 191.817 428.292 172.383 428.292 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 172.383 428.292 C 152.949 428.292 138.941 440.095 137.271 463.404 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 137.271 463.404 C 136.195 478.413 137.180 534.170 137.180 534.177 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 137.180 534.177 C 137.187 534.177 205.975 534.335 205.982 534.335 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 205.982 534.335 C 205.982 534.328 208.029 479.090 207.495 463.404 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 207.495 606.019 C 206.788 585.278 191.818 570.907 172.383 570.907 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 172.383 570.907 C 152.949 570.907 138.941 582.710 137.271 606.019 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 137.271 606.019 C 136.195 621.028 137.180 676.785 137.180 676.792 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 137.180 676.792 C 137.187 676.792 205.975 676.951 205.982 676.951 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 205.982 676.951 C 205.982 676.944 208.029 621.705 207.495 606.019 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 512.536 463.404 C 513.242 442.662 528.213 428.292 547.647 428.292 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 547.647 428.292 C 567.082 428.292 581.090 440.095 582.760 463.404 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 582.760 463.404 C 583.835 478.413 582.851 534.170 582.851 534.177 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 582.851 534.177 C 582.844 534.177 514.056 534.335 514.049 534.335 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 514.049 534.335 C 514.049 534.328 512.001 479.090 512.536 463.404 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 294.344 399.664 C 294.344 436.167 323.791 465.614 360.294 465.614 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.294 465.614 C 396.796 465.614 426.243 436.167 426.243 399.664 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 426.243 399.664 C 426.242 363.162 396.796 333.716 360.294 333.715 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.294 333.715 C 323.791 333.715 294.344 363.162 294.344 399.664 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 512.536 606.019 C 513.242 585.278 528.213 570.907 547.647 570.907 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 547.647 570.907 C 567.082 570.907 581.090 582.710 582.760 606.019 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 582.760 606.019 C 583.835 621.028 582.851 676.785 582.851 676.792 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 582.851 676.792 C 582.844 676.792 514.056 676.951 514.049 676.951 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 514.049 676.951 C 514.049 676.944 512.001 621.705 512.536 606.019 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 311.835 576.610 C 313.004 547.864 333.569 527.936 360.510 527.936 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.510 527.936 C 387.451 527.936 407.017 544.288 409.185 576.610 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 409.185 576.610 C 410.614 597.907 408.169 676.985 408.169 676.995 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 408.169 676.995 C 408.159 676.995 312.798 677.215 312.789 677.215 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 312.789 677.215 C 312.789 677.205 310.930 598.849 311.835 576.610 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 207.495 463.404 C 206.788 442.662 191.817 428.292 172.383 428.292 C 152.949 428.292 138.941 440.095 137.271 463.404 C 136.195 478.413 137.180 534.170 137.180 534.177 C 137.187 534.177 205.975 534.335 205.982 534.335 C 205.982 534.328 208.029 479.090 207.495 463.404 M 207.495 606.019 C 206.788 585.278 191.818 570.907 172.383 570.907 C 152.949 570.907 138.941 582.710 137.271 606.019 C 136.195 621.028 137.180 676.785 137.180 676.792 C 137.187 676.792 205.975 676.951 205.982 676.951 C 205.982 676.944 208.029 621.705 207.495 606.019 M 512.536 463.404 C 513.242 442.662 528.213 428.292 547.647 428.292 C 567.082 428.292 581.090 440.095 582.760 463.404 C 583.835 478.413 582.851 534.170 582.851 534.177 C 582.844 534.177 514.056 534.335 514.049 534.335 C 514.049 534.328 512.001 479.090 512.536 463.404 M 294.344 399.664 C 294.344 436.167 323.791 465.614 360.294 465.614 C 396.796 465.614 426.243 436.167 426.243 399.664 C 426.242 363.162 396.796 333.716 360.294 333.715 C 323.791 333.715 294.344 363.162 294.344 399.664 M 512.536 606.019 C 513.242 585.278 528.213 570.907 547.647 570.907 C 567.082 570.907 581.090 582.710 582.760 606.019 C 583.835 621.028 582.851 676.785 582.851 676.792 C 582.844 676.792 514.056 676.951 514.049 676.951 C 514.049 676.944 512.001 621.705 512.536 606.019 M 311.835 576.610 C 313.004 547.864 333.569 527.936 360.510 527.936 C 387.451 527.936 407.017 544.288 409.185 576.610 C 410.614 597.907 408.169 676.985 408.169 676.995 C 408.159 676.995 312.798 677.215 312.789 677.215 C 312.789 677.205 310.930 598.849 311.835 576.610 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":312.376,\\\"max\\\":407.624},\\\"y\\\":{\\\"min\\\":351.599,\\\"max\\\":446.848}},{\\\"x\\\":{\\\"min\\\":519.725,\\\"max\\\":575.288},\\\"y\\\":{\\\"min\\\":440.251,\\\"max\\\":495.814}},{\\\"x\\\":{\\\"min\\\":143.852,\\\"max\\\":199.415},\\\"y\\\":{\\\"min\\\":440.251,\\\"max\\\":495.814}},{\\\"x\\\":{\\\"min\\\":314.346,\\\"max\\\":405.654},\\\"y\\\":{\\\"min\\\":36.188,\\\"max\\\":127.496}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":702.446,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":35.264,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":88.093,\\\"y\\\":455.639,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873181281341,\\\"y\\\":0.005036227050266383}},{\\\"point\\\":{\\\"x\\\":632.953,\\\"y\\\":455.639,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873200064072,\\\"y\\\":0.005035854088752063}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":620.864,\\\"y\\\":680.788,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712932968582661,\\\"y\\\":0.7012321885851466}},{\\\"point\\\":{\\\"x\\\":101.37,\\\"y\\\":680.836,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698688399112506,\\\"y\\\":0.7154261114507937}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":285.121,\\\"y\\\":192.739,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.716705921146408,\\\"y\\\":-0.6973755248025835}},{\\\"point\\\":{\\\"x\\\":434.382,\\\"y\\\":192.739,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7167059211464101,\\\"y\\\":-0.6973755248025815}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.957,\\\"y\\\":679.939,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true}},{\\\"name\\\":\\\"table\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":70.959,\\\"max\\\":649.041},\\\"y\\\":{\\\"min\\\":248.181,\\\"max\\\":705.747}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"table\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"table\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 477.124 426.878 C 477.141 426.869 590.402 372.251 647.041 344.938 C 647.041 344.965 647.041 616.606 647.041 616.633 C 647.038 616.635 615.994 633.413 615.991 633.414 C 615.991 557.956 615.991 407.062 615.991 407.039 C 615.988 407.041 597.015 417.390 587.527 422.565 C 587.519 422.569 509.908 462.237 509.900 462.241 C 509.900 462.263 510.763 681.300 510.763 681.322 C 510.759 681.324 477.128 703.745 477.124 703.747 C 477.124 611.458 477.124 426.905 477.124 426.878 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 244.664 404.615 C 244.664 404.626 244.254 478.502 244.049 515.445 C 244.051 515.444 270.784 505.096 270.787 505.095 C 270.787 505.085 270.787 411.951 270.787 411.942 C 262.079 409.500 244.667 404.616 244.664 404.615 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 102.738 361.962 C 102.741 361.963 122.561 368.100 132.473 371.169 C 132.473 371.190 132.473 585.916 132.473 585.937 C 132.470 585.939 103.150 604.048 103.147 604.050 C 103.011 523.354 102.738 361.986 102.738 361.962 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 615.991 633.414 C 615.991 557.956 615.991 407.062 615.991 407.039 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 615.991 407.039 C 615.988 407.041 597.015 417.390 587.527 422.565 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S4\\\",\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 587.527 623.533 C 587.530 623.534 615.988 633.413 615.991 633.414 C 615.991 557.956 615.991 407.062 615.991 407.039 C 615.988 407.041 597.015 417.390 587.527 422.565 C 587.527 422.585 587.527 623.513 587.527 623.533 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 132.473 371.169 C 122.561 368.100 102.741 361.963 102.738 361.962 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 102.738 361.962 C 102.738 361.986 103.011 523.354 103.147 604.050 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 477.124 426.878 C 477.124 426.905 477.124 611.458 477.124 703.747 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 270.787 411.942 C 262.079 409.500 244.667 404.616 244.664 404.615 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S5\\\",\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 244.664 404.615 C 234.396 401.595 224.128 398.574 213.861 395.554 C 213.852 395.552 132.481 371.171 132.473 371.169 C 122.561 368.100 102.741 361.963 102.738 361.962 C 102.738 361.986 103.011 523.354 103.147 604.050 C 103.144 604.049 72.962 596.288 72.959 596.287 C 72.959 596.259 72.959 312.032 72.959 312.003 C 207.680 350.295 342.403 388.586 477.124 426.878 C 477.124 426.905 477.124 611.458 477.124 703.747 C 477.121 703.746 447.801 691.674 447.798 691.672 C 447.798 691.650 447.798 464.851 447.798 464.828 C 447.781 464.823 270.805 411.947 270.787 411.942 C 262.079 409.500 244.667 404.616 244.664 404.615 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 244.664 404.615 C 234.396 401.595 224.128 398.574 213.861 395.554 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 244.049 515.445 C 244.254 478.502 244.664 404.626 244.664 404.615 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S6\\\",\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 244.664 404.615 C 234.396 401.595 224.128 398.574 213.861 395.554 C 213.861 395.565 213.861 507.671 213.861 507.682 C 213.864 507.683 244.046 515.444 244.049 515.445 C 244.254 478.502 244.664 404.626 244.664 404.615 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 477.124 426.878 C 342.403 388.586 207.680 350.295 72.959 312.003 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 647.041 344.938 C 590.402 372.251 477.141 426.869 477.124 426.878 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S7\\\",\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 477.124 426.878 C 342.403 388.586 207.680 350.295 72.959 312.003 C 72.978 311.997 271.085 250.187 271.105 250.181 C 271.142 250.190 647.004 344.928 647.041 344.938 C 590.402 372.251 477.141 426.869 477.124 426.878 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":203.133,\\\"max\\\":545.016},\\\"y\\\":{\\\"min\\\":6.336,\\\"max\\\":346.932}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":693.888,\\\"y\\\":474.355,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":32.308,\\\"y\\\":360.934,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872880189177,\\\"y\\\":0.005042201956493402}},{\\\"point\\\":{\\\"x\\\":687.692,\\\"y\\\":360.934,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872880189178,\\\"y\\\":0.0050422019564934075}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":316.539,\\\"y\\\":624.035,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"tail\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":310.836,\\\"max\\\":409.164},\\\"y\\\":{\\\"min\\\":14.44405745356444,\\\"max\\\":713.685}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tail\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tail\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 356.020 344.214 C 358.188 394.997 333.800 444.282 334.410 494.975 C 335.204 560.857 345.827 579.742 351.535 622.126 C 344.808 627.690 312.840 582.108 312.836 582.104 C 312.841 582.116 359.995 711.672 360.000 711.685 C 360.005 711.672 407.159 582.117 407.164 582.104 C 407.159 582.108 374.237 625.077 365.905 622.304 C 362.348 579.938 351.286 560.469 355.214 494.961 C 358.248 444.356 388.333 397.678 390.974 346.918 C 393.614 296.160 370.507 246.563 370.717 195.658 C 371.108 100.946 390.478 71.748 395.726 29.929 C 396.693 31.022 391.528 12.952 355.872 17.050 C 337.433 19.170 332.373 28.120 332.370 28.121 C 332.369 28.138 316.614 85.433 321.560 195.546 C 323.845 246.400 353.853 293.435 356.020 344.214 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":359.037,\\\"y\\\":82.028,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":359.037,\\\"y\\\":23.18,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":389.69,\\\"y\\\":56.995,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7911103969400158,\\\"y\\\":-0.6116733931220244}},{\\\"point\\\":{\\\"x\\\":332.921,\\\"y\\\":57.521,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7295033267832962,\\\"y\\\":-0.6839772629350359}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":329.364,\\\"y\\\":343.991,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7875274058771101,\\\"y\\\":-0.6162796321415055}},{\\\"point\\\":{\\\"x\\\":409.922,\\\"y\\\":343.991,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7875274058771101,\\\"y\\\":-0.6162796321415055}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":392.171,\\\"y\\\":683.869,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.5860110245886658,\\\"y\\\":0.8103030785209582}},{\\\"point\\\":{\\\"x\\\":328.746,\\\"y\\\":684.832,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5860202132297126,\\\"y\\\":0.8102964332182403}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":358.994,\\\"y\\\":692.984,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true}},{\\\"name\\\":\\\"tail_eagle\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":22.104,\\\"max\\\":697.896},\\\"y\\\":{\\\"min\\\":27.851,\\\"max\\\":693.2451373943404}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tail_eagle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"longfeathers\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 380.543 46.693 C 380.554 46.718 501.257 316.078 561.096 421.687 C 583.093 460.510 629.928 517.154 696.396 509.165 C 678.439 546.578 574.850 585.965 493.064 459.721 C 462.992 413.301 360.966 33.013 360.956 32.983 C 360.958 32.985 380.541 46.691 380.543 46.693 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 379.995 72.797 C 380.002 72.824 458.776 366.572 502.392 483.788 C 518.426 526.878 556.864 591.115 625.740 594.891 C 601.427 628.810 494.439 645.244 434.920 506.181 C 412.688 454.237 362.314 55.680 362.308 55.649 C 362.310 55.651 379.993 72.795 379.995 72.797 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 378.342 59.212 C 378.345 59.245 414.438 404.572 436.625 545.752 C 444.107 593.361 460.502 657.504 536.194 688.459 C 429.225 702.664 375.018 674.660 359.770 528.172 C 349.890 433.260 362.686 37.569 362.686 37.535 C 362.688 37.537 378.341 59.210 378.342 59.212 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 339.457 46.693 C 339.446 46.718 218.743 316.078 158.904 421.687 C 136.907 460.510 90.072 517.154 23.604 509.165 C 41.561 546.578 145.151 585.965 226.937 459.721 C 257.009 413.301 359.034 33.013 359.044 32.983 C 359.042 32.985 339.459 46.691 339.457 46.693 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 340.006 72.797 C 339.999 72.824 261.225 366.572 217.608 483.788 C 201.574 526.878 163.136 591.115 94.260 594.891 C 118.573 628.810 225.562 645.244 285.080 506.181 C 307.312 454.237 357.687 55.680 357.692 55.649 C 357.690 55.651 340.007 72.795 340.006 72.797 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 341.658 59.212 C 341.656 59.245 305.562 404.572 283.376 545.752 C 275.894 593.361 259.498 657.504 183.807 688.459 C 290.775 702.664 344.982 674.660 360.230 528.172 C 370.110 433.260 357.315 37.569 357.314 37.535 C 357.313 37.537 341.659 59.210 341.658 59.212 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tail_eagle_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 416.517 C 371.791 392.934 391.284 388.667 401.668 364.431 C 410.842 343.020 404.195 322.452 401.668 312.346 C 391.251 270.678 328.748 270.679 318.332 312.346 C 315.805 322.452 309.158 343.020 318.332 364.431 C 328.716 388.667 348.209 392.934 360.000 416.517 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 291.512 C 360.000 329.708 360.000 367.904 360.000 406.100 M 318.332 364.431 C 328.716 388.667 348.209 392.934 360.000 416.517 C 371.791 392.934 391.284 388.667 401.668 364.431 C 410.842 343.020 404.195 322.452 401.668 312.346 C 391.251 270.678 328.748 270.679 318.332 312.346 C 315.805 322.452 309.158 343.020 318.332 364.431 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 298.102 374.577 C 315.596 354.850 335.529 355.773 351.832 335.051 C 366.235 316.744 365.137 295.156 365.313 284.740 C 366.035 241.795 305.661 225.620 284.815 263.171 C 279.759 272.279 268.015 290.426 271.334 313.482 C 275.092 339.579 292.816 348.746 298.102 374.577 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 330.456 253.832 C 320.570 290.726 310.685 327.621 300.799 364.515 M 271.334 313.482 C 275.092 339.579 292.816 348.746 298.102 374.577 C 315.596 354.850 335.529 355.773 351.832 335.051 C 366.235 316.744 365.137 295.156 365.313 284.740 C 366.035 241.795 305.661 225.620 284.815 263.171 C 279.759 272.279 268.015 290.426 271.334 313.482 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 421.898 374.577 C 427.184 348.746 444.908 339.579 448.666 313.482 C 451.985 290.426 440.241 272.280 435.185 263.172 C 414.338 225.620 353.965 241.797 354.687 284.741 C 354.863 295.156 353.766 316.744 368.168 335.051 C 384.471 355.773 404.404 354.850 421.898 374.577 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 389.544 253.832 C 399.430 290.726 409.315 327.621 419.201 364.515 M 368.168 335.051 C 384.471 355.773 404.404 354.850 421.898 374.577 C 427.184 348.746 444.908 339.579 448.666 313.482 C 451.985 290.426 440.241 272.280 435.185 263.172 C 414.338 225.620 353.965 241.797 354.687 284.741 C 354.863 295.156 353.766 316.744 368.168 335.051 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 458.093 295.508 C 463.379 269.677 481.104 260.510 484.862 234.412 C 488.181 211.357 476.436 193.210 471.380 184.103 C 450.533 146.550 390.160 162.728 390.883 205.671 C 391.058 216.087 389.961 237.675 404.364 255.982 C 420.667 276.704 440.600 275.780 458.093 295.508 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 425.263 174.762 C 435.149 211.657 445.035 248.551 454.921 285.446 M 404.364 255.982 C 420.667 276.704 440.600 275.780 458.093 295.508 C 463.379 269.677 481.104 260.510 484.862 234.412 C 488.181 211.357 476.436 193.210 471.380 184.103 C 450.533 146.550 390.160 162.728 390.883 205.671 C 391.058 216.087 389.961 237.675 404.364 255.982 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 261.907 295.508 C 279.400 275.780 299.333 276.704 315.636 255.982 C 330.039 237.675 328.942 216.087 329.117 205.671 C 329.840 162.727 269.466 146.551 248.620 184.103 C 243.564 193.210 231.819 211.357 235.139 234.412 C 238.896 260.510 256.621 269.677 261.907 295.508 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 294.261 174.762 C 284.375 211.657 274.489 248.551 264.603 285.446 M 235.139 234.412 C 238.896 260.510 256.621 269.677 261.907 295.508 C 279.400 275.780 299.333 276.704 315.636 255.982 C 330.039 237.675 328.942 216.087 329.117 205.671 C 329.840 162.727 269.466 146.551 248.620 184.103 C 243.564 193.210 231.819 211.357 235.139 234.412 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 297.638 C 371.792 274.055 391.285 269.788 401.669 245.552 C 410.842 224.141 404.195 203.573 401.669 193.467 C 391.251 151.798 328.748 151.799 318.332 193.467 C 315.805 203.572 309.158 224.141 318.332 245.552 C 328.716 269.788 348.209 274.055 360.000 297.638 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 160.275 C 360.000 202.590 360.000 244.905 360.000 287.220 M 318.332 245.552 C 328.716 269.788 348.209 274.055 360.000 297.638 C 371.792 274.055 391.285 269.788 401.669 245.552 C 410.842 224.141 404.195 203.573 401.669 193.467 C 391.251 151.798 328.748 151.799 318.332 193.467 C 315.805 203.572 309.158 224.141 318.332 245.552 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 298.102 213.708 C 315.596 193.980 335.529 194.904 351.832 174.182 C 366.235 155.875 365.138 134.286 365.313 123.871 C 366.035 80.926 305.661 64.750 284.815 102.302 C 279.759 111.410 268.015 129.557 271.334 152.612 C 275.092 178.710 292.816 187.877 298.102 213.708 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 330.456 92.962 C 320.570 129.857 310.685 166.751 300.799 203.646 M 271.334 152.612 C 275.092 178.710 292.816 187.877 298.102 213.708 C 315.596 193.980 335.529 194.904 351.832 174.182 C 366.235 155.875 365.138 134.286 365.313 123.871 C 366.035 80.926 305.661 64.750 284.815 102.302 C 279.759 111.410 268.015 129.557 271.334 152.612 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 421.898 213.708 C 427.184 187.877 444.908 178.710 448.666 152.612 C 451.985 129.557 440.241 111.410 435.185 102.302 C 414.338 64.750 353.965 80.927 354.687 123.871 C 354.863 134.286 353.766 155.875 368.168 174.182 C 384.471 194.904 404.404 193.980 421.898 213.708 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 389.544 92.962 C 399.430 129.857 409.315 166.751 419.201 203.646 M 368.168 174.182 C 384.471 194.904 404.404 193.980 421.898 213.708 C 427.184 187.877 444.908 178.710 448.666 152.612 C 451.985 129.557 440.241 111.410 435.185 102.302 C 414.338 64.750 353.965 80.927 354.687 123.871 C 354.863 134.286 353.766 155.875 368.168 174.182 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 29.351 C 391.578 29.351 417.051 54.825 417.051 86.403 C 417.051 117.980 391.578 143.454 360.000 143.454 C 328.422 143.454 302.949 117.980 302.949 86.403 C 302.949 54.825 328.422 29.351 360.000 29.351 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":86.472,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":31.274,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":223.862,\\\"y\\\":302.944,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999875639409069,\\\"y\\\":0.004987179917590517}},{\\\"point\\\":{\\\"x\\\":496.138,\\\"y\\\":302.944,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999875639409069,\\\"y\\\":0.0049871799175905005}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":638.422,\\\"y\\\":525.046,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129009287829619,\\\"y\\\":0.7012647615133605}},{\\\"point\\\":{\\\"x\\\":81.349,\\\"y\\\":525.103,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987019558562501,\\\"y\\\":0.71541287162215}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":441.402,\\\"y\\\":109.995,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314896106762493,\\\"y\\\":-0.7753843379950095}},{\\\"point\\\":{\\\"x\\\":279.349,\\\"y\\\":110.083,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817598083814523,\\\"y\\\":-0.7315760819461538}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":536.789,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"teacup\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":21.423336305509697,\\\"max\\\":668.0799393722816},\\\"y\\\":{\\\"min\\\":145.4358158255598,\\\"max\\\":592.805}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"teacup\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"teacup\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 204.472 273.448 C 204.461 273.444 144.825 219.053 96.828 231.044 C 50.826 242.535 22.796 276.597 23.434 324.008 C 24.594 410.187 113.152 482.873 268.079 474.057 C 268.076 474.053 282.270 422.078 239.900 431.383 C 157.773 449.419 60.577 392.992 58.385 327.374 C 57.388 297.511 73.076 273.640 102.196 266.946 C 139.191 258.440 173.415 299.737 183.774 315.289 C 203.699 310.699 204.470 273.452 204.472 273.448 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 173.492 169.968 C 173.517 169.965 252.958 146.166 416.498 147.489 C 592.191 148.910 659.480 169.965 659.504 169.968 C 659.503 169.989 679.789 282.646 649.106 379.247 C 615.715 484.373 548.945 556.924 526.062 571.230 C 514.893 578.213 459.197 590.805 416.498 590.805 C 373.800 590.805 318.103 578.213 306.934 571.230 C 284.052 556.924 217.281 484.373 183.890 379.247 C 153.207 282.646 173.493 169.989 173.492 169.968 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 188.541 175.843 C 197.905 179.332 216.631 186.309 216.634 186.310 C 216.654 186.313 274.403 208.046 416.600 208.139 C 556.104 208.231 617.073 185.365 617.093 185.363 C 617.096 185.362 635.403 179.516 644.557 176.593 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 419.574 175.151 C 525.445 174.992 551.254 181.959 617.093 185.363 C 617.073 185.365 556.104 208.231 416.600 208.139 C 274.403 208.046 216.654 186.313 216.634 186.310 C 216.655 186.309 310.779 175.313 419.574 175.151 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":273.765,\\\"max\\\":559.232},\\\"y\\\":{\\\"min\\\":248.039,\\\"max\\\":511.951}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":416.498,\\\"y\\\":701.628,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":416.503,\\\"y\\\":151.02,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":24.547,\\\"y\\\":330.254,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872802762408,\\\"y\\\":0.005043737277738205}},{\\\"point\\\":{\\\"x\\\":661.524,\\\"y\\\":330.254,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872802762408,\\\"y\\\":0.005043737277738211}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":530.615,\\\"y\\\":571,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128590215862319,\\\"y\\\":0.701307361534955}},{\\\"point\\\":{\\\"x\\\":303.767,\\\"y\\\":571.024,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986979179091216,\\\"y\\\":0.7154168152269405}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":655.171,\\\"y\\\":172.986,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314735104277378,\\\"y\\\":-0.7753974501041835}},{\\\"point\\\":{\\\"x\\\":178.646,\\\"y\\\":173.067,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817414191415968,\\\"y\\\":-0.7315932185489432}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":416.498,\\\"y\\\":586.771,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"teardrop\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":220.36295866473466,\\\"max\\\":501.68289994448804},\\\"y\\\":{\\\"min\\\":54.483,\\\"max\\\":698.6065087547835}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"teardrop\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"teardrop\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#CB8A8C54-6EDD-452A-9436-9147768C797E_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 56.483 C 360.011 56.518 376.847 204.487 465.432 402.672 C 549.385 590.491 465.408 697.069 360.000 696.605 C 265.953 696.192 170.941 597.759 254.568 402.672 C 339.372 204.838 359.989 56.518 360.000 56.483 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":247.113,\\\"max\\\":472.887},\\\"y\\\":{\\\"min\\\":414.022,\\\"max\\\":639.796}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":29.002,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":696.608,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":221.736,\\\"y\\\":544.648,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873200064072,\\\"y\\\":0.005035854088752084}},{\\\"point\\\":{\\\"x\\\":500.431,\\\"y\\\":544.648,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873181281341,\\\"y\\\":0.005036227050266383}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":461.152,\\\"y\\\":654.284,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128965506064706,\\\"y\\\":0.7012692123096492}},{\\\"point\\\":{\\\"x\\\":262.223,\\\"y\\\":654.332,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987263029800354,\\\"y\\\":0.7153890923992705}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":456.172,\\\"y\\\":382.47,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314454286031285,\\\"y\\\":-0.7754203187279859}},{\\\"point\\\":{\\\"x\\\":263.499,\\\"y\\\":382.549,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817454199674214,\\\"y\\\":-0.7315894903246247}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.957,\\\"y\\\":76.257,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"CB8A8C54-6EDD-452A-9436-9147768C797E_0\\\",\\\"cx\\\":\\\"50.10%\\\",\\\"cy\\\":\\\"74.21%\\\",\\\"r\\\":\\\"85.80%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"26.67%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"thistle\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":33.44387103404042,\\\"max\\\":686.5561289659597},\\\"y\\\":{\\\"min\\\":109.672,\\\"max\\\":654.4930810395009}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"thistle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"thistle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 596.175 652.366 C 636.159 512.514 413.805 501.956 371.202 561.773 C 349.184 592.689 408.356 414.370 575.036 448.532 C 658.419 465.621 673.824 551.068 630.728 615.284 C 629.949 616.443 595.428 654.979 596.175 652.366 M 576.547 415.314 C 376.334 452.170 368.045 552.241 366.673 540.635 C 353.684 430.753 394.809 331.006 523.700 320.192 C 705.235 304.960 671.706 127.367 683.748 262.816 C 685.661 284.333 692.957 393.885 576.547 415.314 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 123.825 652.366 C 83.841 512.514 306.195 501.956 348.798 561.773 C 370.816 592.689 311.644 414.370 144.964 448.532 C 61.581 465.621 46.176 551.068 89.272 615.284 C 90.051 616.443 124.572 654.979 123.825 652.366 M 143.453 415.314 C 343.666 452.170 351.955 552.241 353.327 540.635 C 366.316 430.753 325.191 331.006 196.300 320.192 C 14.765 304.960 48.294 127.367 36.252 262.816 C 34.339 284.333 27.043 393.885 143.453 415.314 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.523 471.180 C 378.620 297.867 527.576 335.106 360.000 111.672 C 192.424 335.106 341.380 297.867 360.523 471.180 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 352.711 536.706 C 327.237 290.318 62.757 455.480 41.528 215.249 M 351.977 561.660 C 317.227 511.795 233.614 455.215 139.873 500.744 C 89.531 525.195 90.202 589.116 120.058 647.528 M 367.389 536.706 C 392.863 290.318 657.343 455.480 678.572 215.249 M 368.123 561.660 C 402.873 511.795 486.486 455.215 580.227 500.744 C 630.569 525.195 629.898 589.116 600.042 647.528 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S5\\\",\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 111.672 C 360.000 229.595 360.000 347.519 360.000 465.443 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":173.369,\\\"max\\\":546.631},\\\"y\\\":{\\\"min\\\":22.09,\\\"max\\\":400.945}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":703.003,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":18.713,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":54.632,\\\"y\\\":432.102,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871588508793,\\\"y\\\":0.005067754270523277}},{\\\"point\\\":{\\\"x\\\":665.368,\\\"y\\\":432.102,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871588508793,\\\"y\\\":0.0050677542705232885}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":568.442,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"throne\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":129.134,\\\"max\\\":590.8871305046268},\\\"y\\\":{\\\"min\\\":32.891,\\\"max\\\":612.484}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"throne\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"throne2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 232.852 356.189 C 232.878 356.189 402.383 356.189 487.148 356.189 C 487.148 356.185 487.148 314.716 487.148 314.712 C 487.148 314.684 487.148 34.919 487.148 34.891 C 487.122 34.891 232.878 34.891 232.852 34.891 C 232.852 34.919 232.852 314.687 232.852 314.715 C 232.852 314.719 232.852 342.364 232.852 356.189 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 538.007 610.484 C 419.336 610.484 300.664 610.484 181.993 610.484 C 181.993 610.461 181.993 381.778 181.993 381.594 C 181.904 381.865 537.971 381.596 538.007 381.596 C 538.007 381.619 538.007 610.461 538.007 610.484 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 538.007 610.484 C 538.007 610.461 538.007 381.619 538.007 381.596 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 538.007 330.759 C 538.012 330.759 588.861 330.759 588.866 330.759 C 588.866 330.787 588.866 610.456 588.866 610.484 C 588.861 610.484 538.012 610.484 538.007 610.484 C 538.007 610.461 538.007 381.619 538.007 381.596 C 538.007 381.591 538.007 330.764 538.007 330.759 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 181.993 381.594 C 181.993 381.778 181.993 610.461 181.993 610.484 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 131.134 330.759 C 131.139 330.759 181.988 330.759 181.993 330.759 C 181.993 330.764 181.993 381.553 181.993 381.594 C 181.993 381.778 181.993 610.461 181.993 610.484 C 181.988 610.484 131.139 610.484 131.134 610.484 C 131.134 610.456 131.134 330.787 131.134 330.759 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 181.993 330.759 C 181.988 330.759 131.139 330.759 131.134 330.759 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 538.007 330.759 C 538.012 330.759 588.861 330.759 588.866 330.759 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 131.134 330.759 C 151.060 325.277 190.907 314.313 190.913 314.312 C 190.917 314.312 218.872 314.580 232.852 314.715 C 215.899 320.063 198.946 325.411 181.993 330.759 C 181.988 330.759 131.139 330.759 131.134 330.759 M 487.148 314.712 C 504.101 320.061 521.054 325.410 538.007 330.759 C 538.012 330.759 588.861 330.759 588.866 330.759 C 568.939 325.277 529.092 314.313 529.086 314.312 C 529.082 314.312 501.127 314.578 487.148 314.712 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 232.852 356.189 C 232.878 356.189 402.383 356.189 487.148 356.189 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 538.007 381.596 C 537.971 381.596 181.904 381.865 181.993 381.594 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 232.852 356.189 C 232.878 356.189 402.383 356.189 487.148 356.189 C 487.153 356.192 538.002 381.594 538.007 381.596 C 537.971 381.596 181.904 381.865 181.993 381.594 C 182.008 381.551 232.847 356.192 232.852 356.189 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 487.148 356.189 C 487.153 356.192 538.002 381.594 538.007 381.596 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 538.007 381.596 C 538.007 381.591 538.007 330.764 538.007 330.759 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 538.007 330.759 C 521.054 325.410 504.101 320.061 487.148 314.712 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 487.148 314.712 C 487.148 314.716 487.148 356.185 487.148 356.189 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 487.148 356.189 C 487.153 356.192 538.002 381.594 538.007 381.596 C 538.007 381.591 538.007 330.764 538.007 330.759 C 521.054 325.410 504.101 320.061 487.148 314.712 C 487.148 314.716 487.148 356.185 487.148 356.189 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 181.993 330.759 C 198.946 325.411 215.899 320.063 232.852 314.715 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 232.852 314.715 C 232.852 314.719 232.852 342.364 232.852 356.189 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 232.852 356.189 C 232.847 356.192 182.008 381.551 181.993 381.594 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 181.993 381.594 C 181.993 381.553 181.993 330.764 181.993 330.759 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 181.993 330.759 C 198.946 325.411 215.899 320.063 232.852 314.715 C 232.852 314.719 232.852 342.364 232.852 356.189 C 232.847 356.192 182.008 381.551 181.993 381.594 C 181.993 381.553 181.993 330.764 181.993 330.759 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 490.545 610.484 C 490.545 549.768 490.545 428.356 490.545 428.337 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 229.455 428.336 C 229.455 489.052 229.455 610.466 229.455 610.484 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 490.545 610.484 C 490.545 549.768 490.545 428.356 490.545 428.337 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 490.545 428.337 C 403.515 428.337 229.481 428.336 229.455 428.336 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 258.073 355.925 C 258.073 258.165 258.073 62.674 258.073 62.644 C 258.094 62.644 461.906 62.644 461.927 62.644 C 461.927 62.674 461.927 258.163 461.927 355.922 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 180.563 332.755 C 178.800 351.327 166.949 358.650 156.304 358.650 C 145.659 358.650 131.415 349.933 132.044 332.755 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 156.304 358.650 C 156.304 358.663 156.297 609.309 156.296 609.321 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 540.348 332.755 C 542.112 351.327 553.962 358.650 564.607 358.650 C 575.253 358.650 589.496 349.933 588.867 332.755 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 564.607 358.650 C 564.607 358.663 564.612 525.764 564.615 609.321 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":201.99,\\\"max\\\":518.01},\\\"y\\\":{\\\"min\\\":56.148,\\\"max\\\":372.169}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":699.058,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":34.223,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":226.594,\\\"y\\\":205.162,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999870963200325,\\\"y\\\":0.005080078092892582}},{\\\"point\\\":{\\\"x\\\":493.407,\\\"y\\\":205.162,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999870940593466,\\\"y\\\":0.005080523077736059}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":585.763,\\\"y\\\":607.412,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128893977892741,\\\"y\\\":0.7012764836493849}},{\\\"point\\\":{\\\"x\\\":134.019,\\\"y\\\":607.467,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698673520772274,\\\"y\\\":0.7154406414033766}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":489.87,\\\"y\\\":31.495,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.631411755769355,\\\"y\\\":-0.7754477381979138}},{\\\"point\\\":{\\\"x\\\":230.782,\\\"y\\\":31.57,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817349890681371,\\\"y\\\":-0.731599210415284}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":612.172,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"throne_2\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":203.543,\\\"max\\\":516.457},\\\"y\\\":{\\\"min\\\":16.449,\\\"max\\\":628.619}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"throne_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"throne\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 273.840 403.229 C 268.125 397.511 262.411 391.793 256.696 386.076 C 256.696 386.083 256.696 454.976 256.696 454.983 C 256.697 454.983 273.911 454.945 273.913 454.945 C 273.913 454.940 273.840 403.234 273.840 403.229 M 446.087 454.945 C 446.089 454.945 463.303 454.985 463.304 454.985 C 463.304 454.978 463.304 386.083 463.304 386.076 C 457.565 391.815 451.826 397.554 446.087 403.293 C 446.087 403.298 446.087 454.940 446.087 454.945 C 446.070 454.945 273.930 454.945 273.913 454.945 C 273.930 454.945 446.070 454.945 446.087 454.945 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 273.913 454.945 C 273.930 454.945 446.070 454.945 446.087 454.945 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 446.087 454.945 C 446.087 454.940 446.087 403.298 446.087 403.293 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 273.840 403.229 C 273.840 403.234 273.913 454.940 273.913 454.945 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 273.913 454.945 C 273.930 454.945 446.070 454.945 446.087 454.945 C 446.087 454.940 446.087 403.298 446.087 403.293 C 446.087 403.260 446.087 76.195 446.087 76.162 C 446.085 76.164 428.871 93.378 428.870 93.380 C 428.863 93.372 360.007 17.956 360.000 17.949 C 359.993 17.956 291.137 93.372 291.130 93.380 C 291.129 93.378 273.915 76.164 273.913 76.162 C 273.913 76.195 273.840 403.196 273.840 403.229 C 273.840 403.234 273.913 454.940 273.913 454.945 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 463.304 454.985 C 463.304 454.978 463.304 386.083 463.304 386.076 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 463.304 386.076 C 463.309 386.076 514.951 386.076 514.957 386.076 C 514.957 386.100 514.957 627.095 514.957 627.119 C 514.951 627.119 463.309 627.119 463.304 627.119 C 463.304 627.102 463.304 455.002 463.304 454.985 C 463.304 454.978 463.304 386.083 463.304 386.076 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 256.696 386.076 C 256.696 386.083 256.696 454.976 256.696 454.983 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 205.043 386.076 C 205.049 386.076 256.691 386.076 256.696 386.076 C 256.696 386.083 256.696 454.976 256.696 454.983 C 256.696 455.000 256.696 627.102 256.696 627.119 C 256.691 627.119 205.049 627.119 205.043 627.119 C 205.043 627.095 205.043 386.100 205.043 386.076 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 291.130 117.979 C 291.137 117.971 359.993 41.735 360.000 41.728 C 360.007 41.735 428.863 117.971 428.870 117.979 C 428.870 118.013 428.870 454.911 428.870 454.945 C 428.856 454.945 291.144 454.945 291.130 454.945 C 291.130 454.911 291.130 118.013 291.130 117.979 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 256.696 454.983 C 256.697 454.983 273.911 454.945 273.913 454.945 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 273.913 454.945 C 273.930 454.945 446.070 454.945 446.087 454.945 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 446.087 454.945 C 446.089 454.945 463.303 454.985 463.304 454.985 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 256.696 454.983 C 256.697 454.983 273.911 454.945 273.913 454.945 C 273.930 454.945 446.070 454.945 446.087 454.945 C 446.089 454.945 463.303 454.985 463.304 454.985 C 463.304 455.002 463.304 627.102 463.304 627.119 C 463.284 627.119 256.716 627.119 256.696 627.119 C 256.696 627.102 256.696 455.000 256.696 454.983 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 273.913 609.902 C 273.913 609.888 273.913 472.176 273.913 472.163 C 273.930 472.163 446.070 472.163 446.087 472.163 C 446.087 472.176 446.087 609.888 446.087 609.902 C 446.070 609.902 273.930 609.902 273.913 609.902 M 480.522 609.902 C 480.522 609.881 480.522 403.314 480.522 403.293 C 480.524 403.293 497.737 403.293 497.739 403.293 C 497.739 403.314 497.739 609.881 497.739 609.902 C 497.737 609.902 480.524 609.902 480.522 609.902 M 222.261 609.902 C 222.261 609.881 222.261 403.314 222.261 403.293 C 222.263 403.293 239.476 403.293 239.478 403.293 C 239.478 403.314 239.478 609.881 239.478 609.902 C 239.476 609.902 222.263 609.902 222.261 609.902 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":259.174,\\\"max\\\":460.826},\\\"y\\\":{\\\"min\\\":165.304,\\\"max\\\":453.899}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":705.318,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":19.352,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":270.108,\\\"y\\\":318.01,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999870855477114,\\\"y\\\":0.005082198126224567}},{\\\"point\\\":{\\\"x\\\":449.892,\\\"y\\\":318.01,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999870855477114,\\\"y\\\":0.005082198126224567}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":513.361,\\\"y\\\":625.521,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128701131794732,\\\"y\\\":0.7012960870669998}},{\\\"point\\\":{\\\"x\\\":206.513,\\\"y\\\":625.553,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986860295533069,\\\"y\\\":0.7154284255654336}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":446.82,\\\"y\\\":77.846,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314677775352728,\\\"y\\\":-0.7754021188613447}},{\\\"point\\\":{\\\"x\\\":273.764,\\\"y\\\":77.914,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817748460805677,\\\"y\\\":-0.7315620679421659}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":626.671,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"tower1\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":231.51,\\\"max\\\":488.49},\\\"y\\\":{\\\"min\\\":13.089,\\\"max\\\":670.665}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tower1\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tower1\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 344.858 29.979 C 344.858 38.220 351.506 44.868 359.747 44.868 C 367.988 44.868 374.636 38.220 374.636 29.979 C 374.636 21.738 367.988 15.089 359.747 15.089 C 351.506 15.089 344.858 21.738 344.858 29.979 M 282.529 334.021 C 282.529 376.760 317.007 411.239 359.747 411.238 C 402.486 411.238 436.964 376.760 436.964 334.021 C 436.964 291.282 402.486 256.804 359.747 256.804 C 317.007 256.804 282.529 291.281 282.529 334.021 M 303.008 541.200 C 304.377 507.542 328.455 484.208 360.000 484.208 C 391.545 484.208 414.453 503.354 416.992 541.200 C 418.665 566.135 415.802 658.724 415.802 658.736 C 415.791 658.736 304.137 658.993 304.125 658.993 C 304.125 658.981 301.949 567.237 303.008 541.200 M 245.368 668.665 C 245.368 668.618 245.368 191.212 245.368 191.165 C 245.391 191.165 474.609 191.165 474.632 191.165 C 474.632 191.212 474.632 668.618 474.632 668.665 C 474.609 668.665 245.391 668.665 245.368 668.665 M 233.510 186.711 C 233.510 186.709 233.510 167.123 233.510 167.121 C 233.535 167.121 486.465 167.121 486.490 167.121 C 486.490 167.123 486.490 186.709 486.490 186.711 C 486.465 186.711 233.535 186.711 233.510 186.711 M 247.333 162.447 C 247.333 100.087 297.640 49.781 360.000 49.781 C 422.360 49.781 472.667 100.087 472.667 162.447 C 443.157 162.103 270.848 161.977 247.333 162.447 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 282.529 334.021 C 282.529 376.760 317.007 411.239 359.747 411.238 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.747 411.238 C 402.486 411.238 436.964 376.760 436.964 334.021 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 436.964 334.021 C 436.964 291.282 402.486 256.804 359.747 256.804 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.747 256.804 C 317.007 256.804 282.529 291.281 282.529 334.021 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 303.008 541.200 C 304.377 507.542 328.455 484.208 360.000 484.208 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 484.208 C 391.545 484.208 414.453 503.354 416.992 541.200 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 416.992 541.200 C 418.665 566.135 415.802 658.724 415.802 658.736 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 415.802 658.736 C 415.791 658.736 304.137 658.993 304.125 658.993 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 304.125 658.993 C 304.125 658.981 301.949 567.237 303.008 541.200 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 282.529 334.021 C 282.529 376.760 317.007 411.239 359.747 411.238 C 402.486 411.238 436.964 376.760 436.964 334.021 C 436.964 291.282 402.486 256.804 359.747 256.804 C 317.007 256.804 282.529 291.281 282.529 334.021 M 303.008 541.200 C 304.377 507.542 328.455 484.208 360.000 484.208 C 391.545 484.208 414.453 503.354 416.992 541.200 C 418.665 566.135 415.802 658.724 415.802 658.736 C 415.791 658.736 304.137 658.993 304.125 658.993 C 304.125 658.981 301.949 567.237 303.008 541.200 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":301.505,\\\"max\\\":418.495},\\\"y\\\":{\\\"min\\\":275.055,\\\"max\\\":392.045}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":697.445,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":16.282,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":244.775,\\\"y\\\":330.323,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873181281341,\\\"y\\\":0.005036227050270593}},{\\\"point\\\":{\\\"x\\\":475.23,\\\"y\\\":330.323,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873181281341,\\\"y\\\":0.005036227050270593}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":468.421,\\\"y\\\":662.069,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128595268022678,\\\"y\\\":0.7013068479968286}},{\\\"point\\\":{\\\"x\\\":252.713,\\\"y\\\":662.117,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986883991125018,\\\"y\\\":0.7154261114507978}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":440.857,\\\"y\\\":81.958,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314454286031296,\\\"y\\\":-0.7754203187279851}},{\\\"point\\\":{\\\"x\\\":278.893,\\\"y\\\":82.037,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.681708481845693,\\\"y\\\":-0.7316239100655748}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.957,\\\"y\\\":664.837,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true}},{\\\"name\\\":\\\"tower2\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":222.977,\\\"max\\\":497.023},\\\"y\\\":{\\\"min\\\":21.545,\\\"max\\\":674.291}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tower2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tower2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 345.986 36.744 C 345.986 44.050 351.880 49.944 359.185 49.943 C 366.491 49.943 372.384 44.050 372.384 36.744 C 372.384 29.439 366.491 23.545 359.185 23.545 C 351.880 23.545 345.986 29.438 345.986 36.744 M 324.293 135.369 C 324.293 135.365 324.293 91.479 324.293 91.475 C 324.300 91.475 394.416 91.475 394.423 91.475 C 394.423 91.479 394.423 135.365 394.423 135.369 C 394.420 135.366 359.692 103.541 359.689 103.537 C 359.685 103.541 324.296 135.366 324.293 135.369 M 321.092 89.649 C 321.092 68.732 337.965 51.858 358.882 51.858 C 379.798 51.858 396.671 68.732 396.671 89.649 C 386.773 89.533 328.979 89.491 321.092 89.649 M 304.222 324.649 C 305.336 291.973 328.921 269.334 359.538 269.333 C 390.155 269.333 412.225 287.927 414.856 324.649 C 416.550 348.295 414.999 436.135 414.999 436.146 C 414.988 436.146 306.617 436.396 306.606 436.396 C 306.606 436.385 303.380 349.361 304.222 324.649 M 224.977 227.805 C 224.991 227.793 359.987 108.443 360.000 108.432 C 360.014 108.443 495.009 227.793 495.023 227.805 C 494.996 227.805 225.004 227.805 224.977 227.805 M 229.314 672.291 C 229.314 672.247 229.314 233.253 229.314 233.209 C 229.341 233.209 494.227 233.209 494.253 233.209 C 494.253 233.253 494.253 672.247 494.253 672.291 C 494.227 672.291 229.341 672.291 229.314 672.291 M 304.222 549.327 C 302.974 516.656 328.921 494.011 359.538 494.011 C 390.155 494.011 414.894 512.512 414.856 549.327 C 414.829 574.694 414.999 660.814 414.999 660.825 C 414.988 660.825 306.617 661.075 306.606 661.075 C 306.606 661.064 305.101 572.319 304.222 549.327 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 304.222 324.649 C 305.336 291.973 328.921 269.334 359.538 269.333 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.538 269.333 C 390.155 269.333 412.225 287.927 414.856 324.649 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 414.856 324.649 C 416.550 348.295 414.999 436.135 414.999 436.146 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 414.999 436.146 C 414.988 436.146 306.617 436.396 306.606 436.396 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 306.606 436.396 C 306.606 436.385 303.380 349.361 304.222 324.649 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 304.222 549.327 C 302.974 516.656 328.921 494.011 359.538 494.011 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.538 494.011 C 390.155 494.011 414.894 512.512 414.856 549.327 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 414.856 549.327 C 414.829 574.694 414.999 660.814 414.999 660.825 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 414.999 660.825 C 414.988 660.825 306.617 661.075 306.606 661.075 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 306.606 661.075 C 306.606 661.064 305.101 572.319 304.222 549.327 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 304.222 324.649 C 305.336 291.973 328.921 269.334 359.538 269.333 C 390.155 269.333 412.225 287.927 414.856 324.649 C 416.550 348.295 414.999 436.135 414.999 436.146 C 414.988 436.146 306.617 436.396 306.606 436.396 C 306.606 436.385 303.380 349.361 304.222 324.649 M 304.222 549.327 C 302.974 516.656 328.921 494.011 359.538 494.011 C 390.155 494.011 414.894 512.512 414.856 549.327 C 414.829 574.694 414.999 660.814 414.999 660.825 C 414.988 660.825 306.617 661.075 306.606 661.075 C 306.606 661.064 305.101 572.319 304.222 549.327 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":305.616,\\\"max\\\":414.384},\\\"y\\\":{\\\"min\\\":297.459,\\\"max\\\":406.228}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":703.383,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":23.26,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":227.08,\\\"y\\\":348.855,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873200064072,\\\"y\\\":0.005035854088752074}},{\\\"point\\\":{\\\"x\\\":496.048,\\\"y\\\":348.855,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873200064072,\\\"y\\\":0.005035854088752084}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":491.322,\\\"y\\\":668.11,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128965506064727,\\\"y\\\":0.701269212309647}},{\\\"point\\\":{\\\"x\\\":231.894,\\\"y\\\":668.158,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987263029800354,\\\"y\\\":0.7153890923992705}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":438.775,\\\"y\\\":178.561,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314091670147453,\\\"y\\\":-0.7754498460956359}},{\\\"point\\\":{\\\"x\\\":280.975,\\\"y\\\":178.64,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817481203990758,\\\"y\\\":-0.7315869738673094}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.957,\\\"y\\\":668.864,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true}},{\\\"name\\\":\\\"tree\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":113.489,\\\"max\\\":599.631},\\\"y\\\":{\\\"min\\\":2.6399999999999997,\\\"max\\\":682.9303350697573}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tree\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tree\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"0\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 358.768 87.551 C 354.056 87.602 353.880 160.396 353.827 186.989 C 353.788 206.734 354.450 202.612 353.330 235.654 C 352.996 245.512 350.136 266.551 346.571 266.527 C 343.367 266.505 325.584 270.433 310.145 269.667 C 289.936 268.665 264.144 266.246 244.850 255.537 C 229.230 246.866 216.948 229.177 207.107 216.082 C 202.310 209.698 197.144 200.318 193.397 193.265 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"0\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 524.821 184.073 C 524.405 185.128 514.241 208.162 510.340 214.288 C 502.642 226.374 493.146 241.110 480.629 251.687 C 466.457 263.665 430.308 266.352 404.943 268.954 C 392.370 270.243 375.300 266.854 371.166 266.058 C 368.105 265.469 365.832 245.373 365.702 235.767 C 365.241 201.837 364.813 191.048 364.655 186.721 C 363.638 158.863 364.080 87.493 358.768 87.551 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 431.955 114.695 C 431.960 114.696 461.476 127.497 479.753 122.477 C 498.030 117.458 516.866 91.375 516.870 91.372 C 516.865 91.371 487.349 78.570 469.072 83.589 C 450.795 88.610 431.959 114.692 431.955 114.695 M 287.324 118.695 C 287.319 118.696 257.582 130.975 239.397 125.633 C 221.211 120.292 202.838 93.881 202.834 93.878 C 202.839 93.877 232.578 81.599 250.763 86.940 C 268.948 92.282 287.321 118.692 287.324 118.695 M 472.131 257.781 C 472.127 257.778 443.230 242.937 435.734 225.408 C 428.255 207.918 437.458 176.841 437.458 176.836 C 437.461 176.839 465.866 191.947 473.329 209.369 C 480.792 226.791 472.131 257.776 472.131 257.781 M 404.314 181.902 C 404.311 181.906 380.538 203.585 377.629 222.314 C 374.719 241.043 390.792 268.913 390.793 268.918 C 390.796 268.914 414.568 247.234 417.478 228.506 C 420.388 209.777 404.315 181.907 404.314 181.902 M 429.293 73.019 C 429.288 73.020 397.117 73.317 382.456 85.329 C 367.796 97.343 361.182 128.829 361.179 128.833 C 361.184 128.832 393.356 128.536 408.016 116.522 C 422.677 104.509 429.291 73.024 429.293 73.019 M 444.036 279.261 C 444.038 279.265 453.147 310.122 468.720 320.925 C 484.294 331.728 516.387 329.452 516.392 329.453 C 516.389 329.448 507.280 298.592 491.706 287.789 C 476.133 276.986 444.040 279.262 444.036 279.261 M 513.863 208.488 C 513.862 208.483 512.975 176.322 500.696 161.885 C 488.416 147.447 456.814 141.412 456.810 141.410 C 456.811 141.414 457.697 173.575 469.977 188.013 C 482.257 202.450 513.858 208.486 513.863 208.488 M 363.006 167.106 C 363.010 167.107 392.527 179.908 410.803 174.888 C 429.080 169.868 447.916 143.785 447.920 143.782 C 447.915 143.781 418.398 130.980 400.122 136.000 C 381.845 141.020 363.009 167.103 363.006 167.106 M 446.176 351.850 C 446.174 351.846 442.747 319.856 429.363 306.435 C 415.980 293.014 384.000 289.497 383.995 289.496 C 383.997 289.500 387.424 321.491 400.807 334.912 C 414.191 348.332 446.172 351.849 446.176 351.850 M 576.341 268.844 C 576.338 268.842 553.127 246.562 534.246 244.901 C 515.366 243.241 488.624 261.128 488.619 261.130 C 488.624 261.132 511.833 283.414 530.714 285.074 C 549.595 286.735 576.337 268.846 576.341 268.844 M 597.631 187.160 C 597.626 187.160 566.570 178.755 549.209 186.361 C 531.849 193.967 516.974 222.495 516.971 222.499 C 516.976 222.499 548.032 230.905 565.392 223.299 C 582.753 215.693 597.627 187.164 597.631 187.160 M 542.280 96.336 C 542.278 96.341 518.324 117.820 515.257 136.524 C 512.191 155.228 528.030 183.232 528.031 183.236 C 528.034 183.232 551.987 161.753 555.054 143.049 C 558.121 124.345 542.282 96.341 542.280 96.336 M 361.367 4.640 C 361.365 4.645 340.525 29.155 340.007 48.101 C 339.488 67.048 358.957 92.663 358.959 92.667 C 358.961 92.663 379.801 68.151 380.319 49.205 C 380.838 30.259 361.369 4.645 361.367 4.640 M 270.180 349.133 C 270.185 349.131 302.945 347.939 317.190 335.058 C 331.248 322.348 335.722 290.327 335.723 290.322 C 335.719 290.324 303.593 292.061 289.485 304.719 C 275.378 317.377 270.182 349.128 270.180 349.133 M 316.934 181.438 C 316.937 181.442 338.454 205.361 339.502 224.285 C 340.550 243.210 321.805 269.358 321.803 269.363 C 321.801 269.359 300.284 245.440 299.236 226.515 C 298.189 207.591 316.933 181.442 316.934 181.438 M 287.186 73.104 C 287.191 73.105 319.362 73.362 334.038 85.358 C 348.712 97.354 355.364 128.832 355.366 128.836 C 355.361 128.835 323.189 128.577 308.515 116.582 C 293.840 104.586 287.188 73.108 287.186 73.104 M 290.160 182.444 C 290.159 182.449 294.543 214.322 284.788 230.572 C 275.034 246.823 244.844 257.944 244.840 257.946 C 244.840 257.942 240.457 226.069 250.212 209.818 C 259.966 193.567 290.156 182.447 290.160 182.444 M 205.700 217.212 C 205.701 217.207 201.907 185.259 211.959 169.191 C 222.012 153.123 252.403 142.562 252.406 142.559 C 252.406 142.564 256.200 174.513 246.147 190.581 C 236.094 206.649 205.705 217.209 205.700 217.212 M 353.362 167.912 C 353.357 167.913 323.620 180.190 305.435 174.849 C 287.249 169.507 268.875 143.097 268.872 143.093 C 268.877 143.093 298.615 130.814 316.800 136.157 C 334.985 141.498 353.358 167.909 353.362 167.912 M 175.104 98.321 C 175.107 98.326 198.362 120.557 200.831 139.349 C 203.300 158.141 186.576 185.626 186.574 185.631 C 186.572 185.627 163.316 163.394 160.848 144.602 C 158.379 125.811 175.103 98.326 175.104 98.321 M 201.940 330.091 C 201.942 330.087 212.094 299.557 228.025 289.289 C 243.956 279.021 275.953 282.387 275.958 282.385 C 275.956 282.390 265.804 312.919 249.873 323.187 C 233.941 333.455 201.944 330.090 201.940 330.091 M 142.211 269.582 C 142.215 269.580 165.180 247.049 184.042 245.183 C 202.903 243.318 229.838 260.914 229.843 260.916 C 229.839 260.918 206.873 283.449 188.011 285.315 C 169.150 287.181 142.215 269.584 142.211 269.582 M 115.489 193.034 C 115.494 193.034 145.538 181.527 163.579 187.336 C 181.621 193.145 199.307 220.021 199.311 220.024 C 199.306 220.025 169.261 231.532 151.220 225.722 C 133.178 219.913 115.493 193.038 115.489 193.034 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 364.655 186.721 C 363.638 158.863 364.080 87.493 358.768 87.551 C 354.056 87.602 353.880 160.396 353.827 186.989 C 353.788 206.734 354.450 202.612 353.330 235.654 C 352.996 245.512 350.136 266.551 346.571 266.527 C 343.367 266.505 325.584 270.433 310.145 269.667 C 289.936 268.665 264.144 266.246 244.850 255.537 C 229.230 246.866 216.948 229.177 207.107 216.082 C 202.310 209.698 197.144 200.318 193.397 193.265 C 191.565 189.818 188.643 182.858 187.827 181.504 C 187.520 180.995 183.845 176.952 183.476 177.046 C 182.914 177.190 182.739 182.669 182.706 182.894 C 182.335 185.457 185.392 192.632 186.576 195.980 C 189.474 204.174 193.383 212.027 197.399 219.935 C 207.698 240.213 225.156 260.231 242.487 271.105 C 252.720 277.524 266.203 280.465 279.541 282.013 C 321.250 286.850 339.093 288.327 339.035 294.922 C 338.771 324.820 312.183 673.763 312.183 673.769 C 312.188 673.770 337.835 681.384 360.667 680.909 C 382.254 680.461 407.722 675.981 407.727 675.981 C 407.726 675.975 380.002 324.497 379.208 294.480 C 379.028 287.657 407.936 286.811 434.586 281.640 C 450.884 278.477 469.943 275.091 482.357 266.633 C 497.330 256.430 512.152 237.851 519.738 219.193 C 522.960 211.269 529.821 186.683 529.532 184.698 C 529.459 184.199 530.098 175.394 529.487 175.322 C 529.135 175.280 525.280 182.909 524.821 184.073 C 524.405 185.128 514.241 208.162 510.340 214.288 C 502.642 226.374 493.146 241.110 480.629 251.687 C 466.457 263.665 430.308 266.352 404.943 268.954 C 392.370 270.243 375.300 266.854 371.166 266.058 C 368.105 265.469 365.832 245.373 365.702 235.767 C 365.241 201.837 364.813 191.048 364.655 186.721 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":650.297,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":361.147,\\\"y\\\":16.418,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":328.33,\\\"y\\\":469.838,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871339329142,\\\"y\\\":0.005072668788319428}},{\\\"point\\\":{\\\"x\\\":390.415,\\\"y\\\":469.838,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871339329142,\\\"y\\\":0.005072668788319428}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":401.306,\\\"y\\\":672.35,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129012266549273,\\\"y\\\":0.7012644586986425}},{\\\"point\\\":{\\\"x\\\":314.086,\\\"y\\\":672.398,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987022333226623,\\\"y\\\":0.7154126006368102}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":554.177,\\\"y\\\":170.267,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314513551585049,\\\"y\\\":-0.7754154925383473}},{\\\"point\\\":{\\\"x\\\":163.236,\\\"y\\\":170.353,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817461941988342,\\\"y\\\":-0.7315887688417622}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":672.961,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true}},{\\\"name\\\":\\\"tree1_bwgradient\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":131.75321742914758,\\\"max\\\":588.2467825708525},\\\"y\\\":{\\\"min\\\":9.479,\\\"max\\\":700}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"BW_gradients\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tree1\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"url(#96CD3641-8761-4EDA-BBC7-B375063AFA62_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 9.479 C 360.022 9.523 639.277 216.190 579.984 446.590 C 545.544 580.416 439.312 626.576 360.000 626.576 C 280.688 626.576 174.456 580.416 140.016 446.590 C 80.723 216.190 359.978 9.523 360.000 9.479 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S2\\\",\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 343.817 530.987 C 345.366 464.010 346.915 397.033 348.463 330.056 C 303.242 281.968 211.489 187.166 212.798 185.791 C 213.978 184.552 349.015 303.092 349.028 303.103 C 349.029 303.077 356.928 40.000 360.000 40.000 C 363.125 40.000 367.314 215.402 370.972 303.103 C 370.985 303.092 506.021 184.552 507.202 185.791 C 508.513 187.165 416.822 281.902 371.632 329.957 C 373.279 396.842 374.927 463.727 376.575 530.611 C 376.594 530.594 569.667 356.489 571.381 358.264 C 573.262 360.212 377.200 564.739 377.181 564.759 C 377.181 564.773 380.000 699.986 380.000 700.000 C 379.996 700.000 340.004 700.000 340.000 700.000 C 340.000 699.986 342.219 610.194 343.329 565.292 C 278.426 496.282 146.739 360.213 148.619 358.264 C 150.352 356.467 343.798 530.970 343.817 530.987 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":223.42,\\\"max\\\":496.58},\\\"y\\\":{\\\"min\\\":223.42,\\\"max\\\":496.58}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":700.639,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":31.683,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":32.308,\\\"y\\\":360.934,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872880189177,\\\"y\\\":0.005042201956493402}},{\\\"point\\\":{\\\"x\\\":687.692,\\\"y\\\":360.934,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872880189178,\\\"y\\\":0.0050422019564934075}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":592.383,\\\"y\\\":593.501,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712867337349205,\\\"y\\\":0.7012989086977497}},{\\\"point\\\":{\\\"x\\\":127.426,\\\"y\\\":593.549,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987148110326549,\\\"y\\\":0.715400316496716}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":592.546,\\\"y\\\":128.474,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314269801987528,\\\"y\\\":-0.7754353413902952}},{\\\"point\\\":{\\\"x\\\":128.244,\\\"y\\\":128.553,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.681712969909508,\\\"y\\\":-0.73161972817657}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":668.215,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"96CD3641-8761-4EDA-BBC7-B375063AFA62_0\\\",\\\"cx\\\":\\\"49.97%\\\",\\\"cy\\\":\\\"76.69%\\\",\\\"r\\\":\\\"68.79%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#000000\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#ffffff\\\"}]}]},{\\\"name\\\":\\\"tree2_bwgradient\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":98.328,\\\"max\\\":621.672},\\\"y\\\":{\\\"min\\\":23.619,\\\"max\\\":700}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"BW_gradients\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tree2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"url(#8770577A-179E-4D2B-BA85-FC9591D8E9B5_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 546.962 C 504.834 546.962 621.672 430.124 621.672 285.291 C 621.672 140.457 504.834 23.619 360.000 23.619 C 215.166 23.619 98.328 140.457 98.328 285.291 C 98.328 430.124 215.166 546.962 360.000 546.962 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S2\\\",\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 341.133 417.525 C 342.938 357.054 344.744 296.582 346.550 236.111 C 301.966 214.996 212.449 174.142 212.798 172.767 C 213.126 171.475 347.195 211.929 347.208 211.933 C 347.209 211.916 357.989 40.000 360.000 40.000 C 362.046 40.000 368.528 154.622 372.792 211.933 C 372.805 211.929 506.873 171.475 507.202 172.766 C 507.552 174.141 418.108 214.898 373.561 235.963 C 375.482 296.290 377.403 356.617 379.324 416.944 C 379.344 416.937 570.739 343.403 571.381 345.240 C 572.074 347.221 380.050 453.250 380.031 453.261 C 380.031 453.285 383.318 699.975 383.318 700.000 C 383.313 700.000 336.687 700.000 336.682 700.000 C 336.682 699.975 339.270 536.055 340.564 454.083 C 276.582 417.802 147.922 347.223 148.619 345.240 C 149.272 343.382 341.114 417.518 341.133 417.525 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":223.42,\\\"max\\\":496.58},\\\"y\\\":{\\\"min\\\":223.42,\\\"max\\\":496.58}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":700.639,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":31.683,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":32.308,\\\"y\\\":360.934,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872880189177,\\\"y\\\":0.005042201956493402}},{\\\"point\\\":{\\\"x\\\":687.692,\\\"y\\\":360.934,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872880189178,\\\"y\\\":0.0050422019564934075}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":592.383,\\\"y\\\":593.501,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712867337349205,\\\"y\\\":0.7012989086977497}},{\\\"point\\\":{\\\"x\\\":127.426,\\\"y\\\":593.549,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987148110326549,\\\"y\\\":0.715400316496716}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":592.546,\\\"y\\\":128.474,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314269801987528,\\\"y\\\":-0.7754353413902952}},{\\\"point\\\":{\\\"x\\\":128.244,\\\"y\\\":128.553,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.681712969909508,\\\"y\\\":-0.73161972817657}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":668.215,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"8770577A-179E-4D2B-BA85-FC9591D8E9B5_0\\\",\\\"cx\\\":\\\"49.99%\\\",\\\"cy\\\":\\\"71.26%\\\",\\\"r\\\":\\\"99.31%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"10.59%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}]},{\\\"name\\\":\\\"tree3_bwgradient\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":131.75321742914758,\\\"max\\\":588.2467825708525},\\\"y\\\":{\\\"min\\\":9.479,\\\"max\\\":700}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"BW_gradients\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tree3\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#253AAAEA-27F0-46F8-843A-B4A8E9D5233A_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 360.000 9.479 C 360.022 9.523 639.277 216.190 579.984 446.590 C 545.544 580.416 439.312 626.576 360.000 626.576 C 280.688 626.576 174.456 580.416 140.016 446.590 C 80.723 216.190 359.978 9.523 360.000 9.479 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S2\\\",\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 350.865 219.383 C 350.866 219.365 357.905 40.000 360.000 40.000 C 362.131 40.000 366.090 159.588 369.135 219.383 C 369.145 219.375 470.522 145.994 471.249 146.939 C 472.063 147.995 403.539 210.179 369.684 241.799 C 371.056 284.509 372.428 327.219 373.800 369.928 C 428.040 336.981 535.566 269.550 536.520 271.085 C 537.565 272.768 374.321 400.312 374.305 400.325 C 374.305 400.337 376.702 524.261 376.702 524.274 C 376.720 524.266 555.433 440.611 556.195 442.322 C 557.022 444.181 377.312 557.836 377.339 558.230 C 375.004 600.704 380.000 699.986 380.000 700.000 C 379.996 700.000 340.004 700.000 340.000 700.000 C 340.000 699.986 342.868 557.984 342.868 557.970 C 283.180 519.420 162.974 444.180 163.805 442.321 C 164.573 440.606 343.505 525.524 343.523 525.533 C 343.523 525.520 345.255 442.376 346.120 400.798 C 290.230 357.561 177.416 272.820 178.450 271.085 C 179.406 269.480 346.510 370.253 346.527 370.263 C 347.816 327.469 349.105 284.675 350.395 241.881 C 316.513 210.234 247.938 147.996 248.751 146.939 C 249.477 145.994 350.855 219.375 350.865 219.383 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":223.42,\\\"max\\\":496.58},\\\"y\\\":{\\\"min\\\":223.42,\\\"max\\\":496.58}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":703.216,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":31.683,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":32.308,\\\"y\\\":360.934,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872880189177,\\\"y\\\":0.005042201956493402}},{\\\"point\\\":{\\\"x\\\":687.692,\\\"y\\\":360.934,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872880189178,\\\"y\\\":0.0050422019564934075}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":592.383,\\\"y\\\":593.501,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712867337349205,\\\"y\\\":0.7012989086977497}},{\\\"point\\\":{\\\"x\\\":127.426,\\\"y\\\":593.549,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987148110326549,\\\"y\\\":0.715400316496716}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":592.546,\\\"y\\\":128.474,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314269801987528,\\\"y\\\":-0.7754353413902952}},{\\\"point\\\":{\\\"x\\\":128.244,\\\"y\\\":128.553,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.681712969909508,\\\"y\\\":-0.73161972817657}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":670.792,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"253AAAEA-27F0-46F8-843A-B4A8E9D5233A_0\\\",\\\"cx\\\":\\\"50.21%\\\",\\\"cy\\\":\\\"54.28%\\\",\\\"r\\\":\\\"63.19%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"37.65%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"90.59%\\\",\\\"color\\\":\\\"#000000\\\"}]}]},{\\\"name\\\":\\\"tree4_bwgradient\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":160.674,\\\"max\\\":559.326},\\\"y\\\":{\\\"min\\\":34.584,\\\"max\\\":683.416}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"BW_gradients\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tree4\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S1\\\",\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 341.764 570.226 C 341.767 570.226 378.233 570.226 378.236 570.226 C 378.236 570.237 378.236 683.405 378.236 683.416 C 378.233 683.416 341.767 683.416 341.764 683.416 C 341.764 683.405 341.764 570.237 341.764 570.226 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"id\\\":\\\"S2\\\",\\\"fill\\\":\\\"url(#444F5A80-B18C-4D5B-B2AF-4A13454F335F_1)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 36.584 C 360.004 36.593 400.495 129.642 400.499 129.651 C 400.497 129.651 383.186 124.454 383.184 124.453 C 383.189 124.464 430.140 230.254 430.145 230.265 C 430.142 230.264 407.433 224.632 407.430 224.632 C 407.437 224.645 476.901 358.533 476.908 358.547 C 476.904 358.546 442.488 346.631 442.485 346.630 C 442.493 346.645 523.663 499.391 523.671 499.406 C 523.666 499.405 480.648 489.178 480.644 489.177 C 480.652 489.194 557.319 659.658 557.326 659.675 C 557.307 659.670 360.020 605.055 360.000 605.050 C 359.980 605.055 162.693 659.670 162.674 659.675 C 162.681 659.658 239.348 489.194 239.356 489.177 C 239.352 489.178 196.334 499.405 196.329 499.406 C 196.337 499.391 277.507 346.645 277.515 346.630 C 277.512 346.631 243.096 358.546 243.093 358.547 C 243.099 358.533 312.563 224.645 312.570 224.632 C 312.567 224.632 289.858 230.264 289.855 230.265 C 289.860 230.254 336.811 124.464 336.816 124.453 C 336.814 124.454 319.503 129.651 319.501 129.651 C 319.505 129.642 359.996 36.593 360.000 36.584 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":223.42,\\\"max\\\":496.58},\\\"y\\\":{\\\"min\\\":223.42,\\\"max\\\":496.58}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":700.639,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":31.683,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":32.308,\\\"y\\\":360.934,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872880189177,\\\"y\\\":0.005042201956493402}},{\\\"point\\\":{\\\"x\\\":687.692,\\\"y\\\":360.934,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872880189178,\\\"y\\\":0.0050422019564934075}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":592.383,\\\"y\\\":593.501,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712867337349205,\\\"y\\\":0.7012989086977497}},{\\\"point\\\":{\\\"x\\\":127.426,\\\"y\\\":593.549,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987148110326549,\\\"y\\\":0.715400316496716}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":592.546,\\\"y\\\":128.474,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314269801987528,\\\"y\\\":-0.7754353413902952}},{\\\"point\\\":{\\\"x\\\":128.244,\\\"y\\\":128.553,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.681712969909508,\\\"y\\\":-0.73161972817657}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":668.215,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"444F5A80-B18C-4D5B-B2AF-4A13454F335F_1\\\",\\\"x1\\\":\\\"50.32%\\\",\\\"y1\\\":\\\"94.20%\\\",\\\"x2\\\":\\\"50.32%\\\",\\\"y2\\\":\\\"-5.75%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}]},{\\\"name\\\":\\\"tree_bottom\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":84.09622907926148,\\\"max\\\":635.9037709207388},\\\"y\\\":{\\\"min\\\":343.06,\\\"max\\\":699.6175325881919}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tree_bottom\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tree-Bottom\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 406.046 344.060 C 406.047 344.067 411.395 395.303 418.447 410.728 C 426.794 428.984 449.742 423.912 450.722 424.217 C 453.457 425.069 505.344 419.145 546.615 442.461 C 585.620 464.496 592.161 488.373 592.165 488.377 C 592.160 488.374 568.767 468.925 536.603 455.932 C 505.887 443.525 468.901 447.608 468.894 447.607 C 468.903 447.617 538.166 477.675 554.566 545.270 C 570.817 612.252 496.208 648.081 496.204 648.084 C 496.207 648.080 550.572 597.789 531.723 550.215 C 519.421 519.166 506.611 502.906 487.758 489.495 C 474.580 480.121 446.292 464.184 446.288 464.181 C 446.289 464.186 461.059 489.767 458.533 515.048 C 452.950 570.949 411.987 575.244 411.983 575.250 C 411.985 575.245 438.529 555.903 438.926 517.012 C 439.155 494.626 424.270 468.099 412.607 462.316 C 404.458 458.276 385.122 449.016 380.247 451.489 C 366.650 458.385 378.531 506.218 374.036 546.465 C 371.885 565.729 360.017 643.425 360.016 643.435 C 359.993 643.672 348.119 565.729 345.964 546.465 C 341.462 506.219 353.350 458.385 339.753 451.489 C 334.878 449.016 315.542 458.276 307.393 462.316 C 295.730 468.099 280.845 494.626 281.074 517.012 C 281.472 555.903 308.015 575.245 308.017 575.250 C 308.013 575.244 267.050 570.949 261.467 515.048 C 258.941 489.767 273.711 464.186 273.712 464.181 C 273.708 464.184 245.420 480.121 232.242 489.495 C 213.389 502.906 200.579 519.166 188.277 550.215 C 169.428 597.789 223.793 648.080 223.796 648.084 C 223.792 648.081 149.183 612.252 165.434 545.270 C 181.834 477.675 251.097 447.617 251.106 447.607 C 251.099 447.608 214.114 443.525 183.397 455.932 C 151.233 468.925 127.840 488.374 127.835 488.377 C 127.839 488.373 134.380 464.496 173.385 442.461 C 214.656 419.145 266.543 425.069 269.278 424.217 C 270.258 423.912 289.671 426.907 301.553 410.728 C 311.036 397.815 313.953 344.067 313.954 344.060 C 313.963 344.060 406.037 344.060 406.046 344.060 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 420.571 598.959 C 422.803 598.397 422.599 601.823 421.748 602.910 C 418.377 607.219 412.270 603.317 412.053 597.990 C 411.683 588.916 421.749 584.370 428.371 588.224 C 440.888 595.510 436.210 613.712 423.789 617.211 C 398.280 624.395 384.709 590.177 412.005 575.244 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 405.318 490.684 C 403.962 488.823 401.927 491.587 401.885 492.967 C 401.719 498.436 408.908 499.345 412.484 495.390 C 418.575 488.653 413.748 478.719 406.193 477.444 C 391.912 475.033 383.860 492.015 391.167 502.651 C 406.173 524.495 438.497 506.882 427.076 477.940 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 399.128 543.283 C 399.975 541.142 402.638 543.306 403.025 544.632 C 404.557 549.884 397.825 552.567 393.372 549.636 C 385.787 544.642 387.967 533.814 394.961 530.685 C 408.181 524.770 420.235 539.189 415.829 551.318 C 406.781 576.228 371.073 567.284 374.871 536.403 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 470.018 562.115 C 471.374 560.254 473.409 563.018 473.451 564.397 C 473.618 569.866 466.428 570.775 462.852 566.821 C 456.762 560.084 461.589 550.149 469.144 548.874 C 483.425 546.464 491.476 563.445 484.170 574.082 C 469.163 595.925 436.839 578.312 448.261 549.371 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 483.037 517.093 C 481.681 515.232 479.646 517.996 479.604 519.376 C 479.437 524.845 486.627 525.754 490.202 521.799 C 496.293 515.062 491.467 505.128 483.911 503.853 C 469.631 501.442 461.578 518.424 468.885 529.060 C 483.891 550.904 516.216 533.291 504.794 504.350 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 510.492 563.995 C 509.136 562.135 507.101 564.898 507.059 566.278 C 506.892 571.747 514.082 572.656 517.657 568.701 C 523.748 561.965 518.922 552.030 511.367 550.755 C 497.086 548.344 489.034 565.326 496.340 575.962 C 511.347 597.806 543.671 580.193 532.249 551.252 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 494.303 612.841 C 495.894 611.177 492.813 609.664 491.448 609.867 C 486.036 610.672 486.416 617.909 490.942 620.727 C 498.651 625.528 507.573 619.017 507.489 611.355 C 507.330 596.873 489.190 591.958 480.017 601.035 C 461.179 619.674 484.242 648.365 510.701 631.995 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 508.505 670.010 C 510.619 669.099 510.965 672.514 510.299 673.723 C 507.658 678.515 501.007 675.638 499.942 670.414 C 498.128 661.515 507.340 655.421 514.492 658.168 C 528.011 663.362 526.299 682.078 514.595 687.514 C 490.560 698.679 471.701 667.065 496.264 647.967 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 559.619 627.135 C 561.357 625.625 562.722 628.774 562.454 630.128 C 561.392 635.496 554.181 634.772 551.582 630.118 C 547.153 622.188 554.082 613.586 561.730 614.035 C 576.189 614.882 580.235 633.235 570.733 641.966 C 551.218 659.897 523.656 635.495 541.266 609.845 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 581.786 565.928 C 582.314 563.688 585.262 565.445 585.836 566.700 C 588.112 571.676 581.838 575.303 577.008 573.046 C 568.781 569.200 569.375 558.171 575.844 554.064 C 588.071 546.302 602.081 558.830 599.473 571.468 C 594.116 597.422 557.491 593.730 556.790 562.624 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 565.248 503.681 C 564.417 501.534 567.842 501.317 569.025 502.028 C 573.715 504.846 570.591 511.385 565.331 512.253 C 556.371 513.733 550.625 504.300 553.639 497.256 C 559.335 483.940 577.973 486.352 582.968 498.250 C 593.225 522.687 560.928 540.349 542.762 515.089 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 615.611 479.237 C 615.011 477.014 618.440 477.160 619.542 477.992 C 623.908 481.290 620.110 487.462 614.788 487.770 C 605.721 488.294 601.005 478.307 604.745 471.621 C 611.817 458.981 630.096 463.349 633.806 475.709 C 641.424 501.092 607.441 515.243 592.046 488.205 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 535.823 473.999 C 537.193 474.729 535.539 476.348 534.622 476.506 C 530.987 477.132 529.703 472.418 532.006 469.659 C 535.930 464.958 543.017 467.245 544.580 472.169 C 547.534 481.476 536.955 488.450 529.166 484.574 C 513.170 476.613 521.884 453.375 542.281 458.274 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 400.335 640.513 C 398.112 639.915 398.261 643.344 399.094 644.445 C 402.395 648.808 408.564 645.005 408.868 639.682 C 409.384 630.615 399.393 625.907 392.709 629.654 C 380.076 636.736 384.460 655.012 396.823 658.710 C 422.213 666.306 436.334 632.311 409.283 616.939 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 299.429 598.959 C 297.197 598.397 297.401 601.823 298.252 602.910 C 301.623 607.219 307.730 603.317 307.947 597.990 C 308.317 588.916 298.251 584.370 291.629 588.224 C 279.112 595.510 283.790 613.712 296.211 617.211 C 321.720 624.395 335.291 590.177 307.995 575.244 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 314.681 490.684 C 316.038 488.823 318.073 491.587 318.115 492.967 C 318.281 498.436 311.092 499.345 307.516 495.390 C 301.425 488.653 306.252 478.719 313.807 477.444 C 328.088 475.033 336.140 492.015 328.833 502.651 C 313.827 524.495 281.503 506.882 292.924 477.940 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 320.872 543.283 C 320.025 541.142 317.362 543.306 316.975 544.632 C 315.443 549.884 322.175 552.567 326.628 549.636 C 334.213 544.642 332.033 533.814 325.039 530.685 C 311.819 524.770 299.765 539.189 304.171 551.318 C 313.219 576.227 348.927 567.284 345.129 536.403 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 249.982 562.115 C 248.626 560.254 246.591 563.018 246.549 564.397 C 246.383 569.866 253.572 570.775 257.148 566.821 C 263.238 560.084 258.411 550.149 250.856 548.874 C 236.575 546.464 228.524 563.445 235.830 574.082 C 250.837 595.925 283.161 578.312 271.739 549.371 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 236.963 517.093 C 238.319 515.232 240.354 517.996 240.396 519.376 C 240.563 524.845 233.373 525.754 229.798 521.799 C 223.707 515.062 228.534 505.128 236.089 503.853 C 250.369 501.442 258.422 518.424 251.115 529.060 C 236.109 550.904 203.784 533.291 215.206 504.350 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 209.508 563.995 C 210.864 562.135 212.899 564.898 212.941 566.278 C 213.108 571.747 205.918 572.656 202.343 568.701 C 196.252 561.965 201.078 552.030 208.634 550.755 C 222.914 548.344 230.966 565.326 223.660 575.962 C 208.653 597.806 176.329 580.193 187.751 551.252 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 225.697 612.841 C 224.106 611.177 227.187 609.664 228.552 609.867 C 233.964 610.672 233.584 617.909 229.058 620.727 C 221.349 625.528 212.428 619.017 212.511 611.355 C 212.670 596.873 230.810 591.958 239.983 601.035 C 258.821 619.675 235.758 648.366 209.299 631.995 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 211.495 670.010 C 209.381 669.099 209.035 672.514 209.701 673.723 C 212.342 678.515 218.993 675.638 220.058 670.414 C 221.872 661.515 212.660 655.421 205.508 658.168 C 191.989 663.362 193.701 682.078 205.405 687.514 C 229.440 698.679 248.299 667.065 223.736 647.967 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 160.381 627.135 C 158.643 625.625 157.278 628.774 157.546 630.128 C 158.608 635.496 165.819 634.772 168.418 630.118 C 172.847 622.188 165.918 613.586 158.270 614.035 C 143.812 614.882 139.765 633.235 149.267 641.966 C 168.782 659.897 196.344 635.495 178.734 609.845 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 138.214 565.928 C 137.686 563.688 134.738 565.445 134.164 566.700 C 131.888 571.676 138.162 575.303 142.992 573.046 C 151.219 569.200 150.625 558.171 144.156 554.064 C 131.929 546.302 117.919 558.830 120.527 571.468 C 125.884 597.422 162.509 593.730 163.210 562.624 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 154.752 503.681 C 155.584 501.534 152.158 501.317 150.975 502.028 C 146.285 504.846 149.409 511.385 154.669 512.253 C 163.629 513.733 169.375 504.300 166.361 497.256 C 160.665 483.940 142.027 486.352 137.032 498.250 C 126.775 522.687 159.072 540.349 177.238 515.089 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 104.389 479.237 C 104.989 477.014 101.560 477.160 100.458 477.992 C 96.092 481.290 99.890 487.462 105.212 487.770 C 114.279 488.294 118.995 478.307 115.255 471.621 C 108.183 458.981 89.904 463.349 86.194 475.709 C 78.576 501.092 112.559 515.243 127.954 488.205 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 184.177 473.999 C 182.807 474.729 184.461 476.348 185.378 476.506 C 189.013 477.132 190.297 472.418 187.994 469.659 C 184.070 464.958 176.983 467.245 175.420 472.169 C 172.466 481.476 183.045 488.450 190.834 484.574 C 206.830 476.613 198.116 453.375 177.719 458.274 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 319.665 640.513 C 321.888 639.915 321.739 643.344 320.906 644.445 C 317.605 648.808 311.436 645.005 311.133 639.682 C 310.616 630.615 320.607 625.907 327.291 629.654 C 339.924 636.736 335.540 655.012 323.177 658.710 C 297.787 666.306 283.666 632.311 310.717 616.939 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 366.036 678.729 C 368.108 677.724 368.606 681.120 367.994 682.358 C 365.571 687.263 358.798 684.687 357.500 679.517 C 355.289 670.708 364.218 664.207 371.486 666.631 C 385.225 671.214 384.353 689.987 372.905 695.943 C 349.394 708.174 333.319 675.521 352.819 657.257 C 361.197 649.410 359.971 643.427 359.972 643.426 \\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":344.043,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":343.585,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"tree_rooted\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":94.27,\\\"max\\\":625.73},\\\"y\\\":{\\\"min\\\":26.988,\\\"max\\\":668.4744717460893}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tree_rooted\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tree_rooted\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 309.926 419.822 C 318.070 408.730 320.550 362.561 320.551 362.185 C 320.550 362.179 322.445 311.251 314.597 305.068 C 299.125 292.878 283.246 293.782 282.275 293.511 C 279.912 292.852 235.479 297.857 200.120 277.881 C 166.703 259.003 161.100 238.547 161.096 238.543 C 161.101 238.546 181.142 255.209 208.698 266.340 C 235.014 276.970 266.700 273.472 266.706 273.472 C 266.699 273.464 207.359 247.712 193.308 189.801 C 179.385 132.415 243.305 101.719 243.309 101.717 C 243.306 101.720 195.785 145.194 212.879 185.565 C 223.468 210.574 235.481 222.226 250.545 233.499 C 262.242 242.252 286.070 259.270 286.074 259.273 C 286.074 259.269 280.826 236.803 282.956 215.693 C 287.256 173.079 309.523 164.121 309.526 164.116 C 309.525 164.121 298.156 183.012 298.287 214.011 C 298.381 236.274 303.933 265.204 314.930 272.035 C 322.358 276.649 334.578 283.432 345.678 281.229 C 349.297 280.511 347.147 249.045 349.097 225.270 C 351.038 201.596 359.985 105.410 360.014 105.700 C 360.015 105.712 368.964 201.597 370.903 225.270 C 372.851 249.045 370.885 279.887 374.322 281.229 C 382.821 284.547 398.014 277.764 405.070 272.035 C 415.121 263.875 421.619 236.274 421.713 214.011 C 421.844 183.012 410.475 164.121 410.474 164.116 C 410.477 164.121 432.744 173.079 437.044 215.693 C 439.174 236.803 433.926 259.269 433.926 259.273 C 433.930 259.270 457.758 242.252 469.455 233.499 C 484.519 222.226 496.532 210.574 507.121 185.565 C 524.215 145.194 476.694 101.720 476.691 101.717 C 476.695 101.719 540.615 132.415 526.692 189.801 C 512.641 247.712 453.301 273.464 453.294 273.472 C 453.300 273.472 484.986 276.970 511.302 266.340 C 538.859 255.209 558.899 238.546 558.904 238.543 C 558.900 238.547 553.297 259.003 519.880 277.881 C 484.521 297.857 440.088 292.852 437.725 293.511 C 436.754 293.782 415.109 287.928 405.403 305.068 C 397.555 318.926 399.450 362.179 399.449 362.185 C 399.450 362.261 403.983 406.488 410.074 419.822 C 417.220 435.464 436.885 431.117 437.725 431.379 C 440.068 432.108 484.521 427.033 519.880 447.008 C 553.297 465.887 558.900 486.343 558.904 486.347 C 558.899 486.344 538.858 469.681 511.302 458.550 C 484.986 447.920 453.300 451.418 453.294 451.418 C 453.301 451.426 512.641 477.178 526.692 535.089 C 540.615 592.475 476.695 623.171 476.691 623.174 C 476.694 623.170 523.270 580.084 507.121 539.325 C 496.582 512.725 485.607 498.794 469.455 487.304 C 458.165 479.273 433.930 465.619 433.926 465.617 C 433.927 465.621 446.581 487.537 444.417 509.197 C 439.633 557.089 404.539 560.769 404.535 560.774 C 404.538 560.769 427.278 544.199 427.619 510.879 C 427.815 491.700 415.062 468.973 405.070 464.019 C 398.089 460.558 381.523 452.625 377.347 454.743 C 365.697 460.652 375.876 501.631 372.025 536.113 C 370.182 552.617 360.544 619.185 360.014 619.190 C 359.427 619.196 349.821 552.617 347.975 536.113 C 344.118 501.632 354.303 460.652 342.653 454.743 C 338.477 452.625 321.911 460.558 314.930 464.019 C 304.938 468.973 292.185 491.700 292.381 510.879 C 292.722 544.199 315.462 560.769 315.465 560.774 C 315.461 560.769 280.367 557.089 275.583 509.197 C 273.419 487.537 286.073 465.621 286.074 465.617 C 286.070 465.619 261.835 479.273 250.545 487.304 C 234.393 498.794 223.418 512.725 212.879 539.325 C 196.730 580.084 243.306 623.170 243.309 623.174 C 243.305 623.171 179.385 592.475 193.308 535.089 C 207.359 477.178 266.699 451.426 266.706 451.418 C 266.700 451.418 235.014 447.920 208.698 458.550 C 181.142 469.681 161.101 486.344 161.096 486.347 C 161.100 486.343 166.703 465.887 200.120 447.008 C 235.479 427.033 279.933 432.108 282.275 431.379 C 283.115 431.117 299.748 433.684 309.926 419.822 M 304.208 212.454 C 304.209 212.457 306.821 234.520 316.266 243.509 C 325.689 252.477 347.803 253.999 347.806 254.000 C 347.805 253.997 344.904 232.186 335.520 223.244 C 326.136 214.302 304.211 212.455 304.208 212.454 M 278.496 348.976 C 278.496 340.372 271.555 333.431 262.951 333.431 C 254.347 333.431 247.405 340.372 247.405 348.976 C 247.405 357.581 254.347 364.522 262.951 364.522 C 271.555 364.522 278.496 357.581 278.496 348.976 M 191.593 343.838 C 191.593 335.234 184.652 328.292 176.048 328.292 C 167.443 328.292 160.502 335.234 160.502 343.838 C 160.502 352.442 167.443 359.383 176.048 359.383 C 184.652 359.383 191.593 352.442 191.593 343.838 M 130.483 303.098 C 130.483 294.494 123.542 287.553 114.938 287.553 C 106.334 287.553 99.393 294.494 99.393 303.098 C 99.393 311.702 106.334 318.643 114.938 318.643 C 123.542 318.643 130.484 311.702 130.483 303.098 M 237.693 61.876 C 237.693 53.272 230.752 46.331 222.148 46.331 C 213.544 46.331 206.602 53.272 206.602 61.876 C 206.602 70.480 213.544 77.422 222.148 77.422 C 230.752 77.422 237.693 70.480 237.693 61.876 M 139.060 158.365 C 139.060 149.761 132.119 142.820 123.515 142.820 C 114.910 142.820 107.969 149.761 107.969 158.365 C 107.969 166.969 114.910 173.911 123.515 173.911 C 132.119 173.911 139.060 166.969 139.060 158.365 M 247.342 161.582 C 247.342 152.977 240.401 146.036 231.797 146.036 C 223.192 146.036 216.251 152.977 216.251 161.582 C 216.251 170.186 223.192 177.127 231.797 177.127 C 240.401 177.127 247.342 170.186 247.342 161.582 M 330.965 70.453 C 330.965 61.849 324.024 54.908 315.420 54.908 C 306.816 54.908 299.875 61.849 299.875 70.453 C 299.875 79.058 306.816 85.999 315.420 85.999 C 324.024 85.999 330.965 79.057 330.965 70.453 M 304.163 109.049 C 304.163 100.444 297.222 93.503 288.618 93.503 C 280.013 93.503 273.072 100.444 273.072 109.049 C 273.072 117.653 280.013 124.594 288.618 124.594 C 297.222 124.594 304.163 117.653 304.163 109.049 M 150.028 180.935 C 150.030 180.937 157.449 199.888 167.900 205.670 C 178.327 211.439 198.279 207.672 198.282 207.672 C 198.280 207.670 190.663 189.009 180.277 183.255 C 169.891 177.500 150.031 180.935 150.028 180.935 M 178.739 237.847 C 178.741 237.848 190.157 248.546 199.322 249.103 C 208.466 249.658 221.067 240.446 221.069 240.445 C 221.067 240.444 209.610 230.012 200.499 229.453 C 191.388 228.894 178.741 237.846 178.739 237.847 M 350.132 205.078 C 350.132 205.076 351.017 188.809 345.323 181.128 C 339.643 173.465 323.859 169.587 323.857 169.586 C 323.857 169.588 323.212 185.710 328.867 193.349 C 334.523 200.988 350.130 205.077 350.132 205.078 M 282.544 214.842 C 282.542 214.840 273.489 194.911 261.935 189.299 C 250.406 183.700 229.193 188.887 229.190 188.887 C 229.192 188.890 238.440 208.495 249.924 214.081 C 261.407 219.668 282.540 214.842 282.544 214.842 M 245.630 126.151 C 245.631 126.154 246.667 152.475 256.994 163.978 C 267.299 175.455 293.295 179.311 293.298 179.312 C 293.297 179.308 291.897 153.258 281.637 141.816 C 271.377 130.374 245.633 126.153 245.630 126.151 M 344.062 96.534 C 344.059 96.536 318.275 107.477 310.725 122.078 C 303.191 136.647 309.146 163.950 309.146 163.954 C 309.149 163.952 334.527 152.750 342.042 138.239 C 349.557 123.728 344.062 96.538 344.062 96.534 M 360.425 28.988 C 360.424 28.991 342.441 50.466 342.361 66.903 C 342.281 83.304 360.007 104.908 360.008 104.912 C 360.010 104.908 377.512 83.386 377.602 67.045 C 377.692 50.703 360.427 28.991 360.425 28.988 M 293.417 45.635 C 293.413 45.636 265.697 49.676 254.689 61.882 C 243.705 74.062 242.535 101.983 242.534 101.987 C 242.537 101.985 269.927 97.590 280.879 85.462 C 291.831 73.333 293.416 45.639 293.417 45.635 M 178.036 57.753 C 178.036 57.757 170.720 84.794 177.543 99.749 C 184.350 114.670 209.503 126.846 209.506 126.849 C 209.506 126.845 216.366 99.967 209.593 85.095 C 202.819 70.223 178.039 57.756 178.036 57.753 M 133.675 114.498 C 133.677 114.502 138.449 142.102 150.944 152.782 C 163.410 163.439 191.352 163.868 191.356 163.869 C 191.354 163.866 186.235 136.602 173.821 125.976 C 161.406 115.349 133.680 114.500 133.675 114.498 M 108.693 182.330 C 108.694 182.334 110.129 210.306 121.256 222.406 C 132.358 234.478 160.047 238.248 160.051 238.249 C 160.049 238.245 158.230 210.565 147.176 198.530 C 136.122 186.494 108.697 182.332 108.693 182.330 M 96.270 266.745 C 96.274 266.746 120.422 280.936 136.647 278.302 C 152.836 275.673 171.218 254.624 171.221 254.622 C 171.217 254.621 147.102 240.912 130.970 243.521 C 114.838 246.130 96.274 266.742 96.270 266.745 M 138.742 324.774 C 138.746 324.773 166.722 326.124 179.867 316.254 C 192.983 306.407 199.484 279.229 199.486 279.225 C 199.482 279.226 171.758 278.287 158.684 288.090 C 145.610 297.894 138.744 324.770 138.742 324.774 M 206.870 359.788 C 206.873 359.786 232.777 349.132 240.489 334.616 C 248.183 320.132 242.533 292.764 242.533 292.760 C 242.530 292.763 217.029 303.681 209.353 318.108 C 201.677 332.535 206.870 359.784 206.870 359.788 M 301.739 342.753 C 301.739 342.750 306.295 323.214 301.035 312.681 C 295.787 302.172 277.477 294.090 277.474 294.088 C 277.475 294.091 273.241 313.502 278.463 323.977 C 283.686 334.451 301.737 342.751 301.739 342.753 M 441.504 348.976 C 441.504 340.372 448.445 333.431 457.049 333.431 C 465.653 333.431 472.595 340.372 472.595 348.976 C 472.595 357.581 465.653 364.522 457.049 364.522 C 448.445 364.522 441.504 357.581 441.504 348.976 M 528.407 343.838 C 528.407 335.234 535.348 328.292 543.952 328.292 C 552.557 328.292 559.498 335.234 559.498 343.838 C 559.498 352.442 552.557 359.383 543.952 359.383 C 535.348 359.383 528.407 352.442 528.407 343.838 M 589.517 303.098 C 589.517 294.494 596.458 287.553 605.062 287.553 C 613.666 287.553 620.607 294.494 620.607 303.098 C 620.607 311.702 613.666 318.643 605.062 318.643 C 596.458 318.643 589.516 311.702 589.517 303.098 M 482.307 61.876 C 482.307 53.272 489.248 46.331 497.852 46.331 C 506.456 46.331 513.398 53.272 513.398 61.876 C 513.398 70.480 506.456 77.422 497.852 77.422 C 489.248 77.422 482.307 70.480 482.307 61.876 M 580.940 158.365 C 580.940 149.761 587.881 142.820 596.485 142.820 C 605.090 142.820 612.031 149.761 612.031 158.365 C 612.031 166.969 605.090 173.911 596.485 173.911 C 587.881 173.911 580.940 166.969 580.940 158.365 M 472.658 161.582 C 472.658 152.977 479.599 146.036 488.203 146.036 C 496.808 146.036 503.749 152.977 503.749 161.582 C 503.749 170.186 496.808 177.127 488.203 177.127 C 479.599 177.127 472.658 170.186 472.658 161.582 M 389.035 70.453 C 389.035 61.849 395.976 54.908 404.580 54.908 C 413.184 54.908 420.125 61.849 420.125 70.453 C 420.125 79.058 413.184 85.999 404.580 85.999 C 395.976 85.999 389.035 79.057 389.035 70.453 M 415.837 109.049 C 415.837 100.444 422.778 93.503 431.382 93.503 C 439.987 93.503 446.928 100.444 446.928 109.049 C 446.928 117.653 439.987 124.594 431.382 124.594 C 422.778 124.594 415.837 117.653 415.837 109.049 M 569.972 180.935 C 569.970 180.937 562.551 199.888 552.100 205.670 C 541.673 211.439 521.721 207.672 521.718 207.672 C 521.720 207.670 529.337 189.009 539.723 183.255 C 550.109 177.500 569.969 180.935 569.972 180.935 M 541.261 237.847 C 541.259 237.848 529.843 248.546 520.678 249.103 C 511.534 249.658 498.933 240.446 498.931 240.445 C 498.933 240.444 510.390 230.012 519.501 229.453 C 528.612 228.894 541.259 237.846 541.261 237.847 M 369.868 205.078 C 369.868 205.076 368.983 188.809 374.677 181.128 C 380.357 173.465 396.141 169.587 396.143 169.586 C 396.143 169.588 396.788 185.710 391.133 193.349 C 385.477 200.988 369.870 205.077 369.868 205.078 M 437.456 214.842 C 437.458 214.840 446.511 194.911 458.065 189.299 C 469.594 183.700 490.807 188.887 490.810 188.887 C 490.808 188.890 481.560 208.495 470.076 214.081 C 458.593 219.668 437.460 214.842 437.456 214.842 M 474.370 126.151 C 474.369 126.154 473.333 152.475 463.006 163.978 C 452.701 175.455 426.705 179.311 426.702 179.312 C 426.703 179.308 428.103 153.258 438.363 141.816 C 448.623 130.374 474.367 126.153 474.370 126.151 M 415.431 212.454 C 415.430 212.457 412.818 234.520 403.373 243.509 C 393.950 252.477 371.836 253.999 371.833 254.000 C 371.834 253.997 374.735 232.186 384.119 223.244 C 393.503 214.302 415.428 212.455 415.431 212.454 M 375.938 96.534 C 375.941 96.536 401.725 107.477 409.275 122.078 C 416.809 136.647 410.854 163.950 410.854 163.954 C 410.851 163.952 385.473 152.750 377.958 138.239 C 370.443 123.728 375.938 96.538 375.938 96.534 M 426.583 45.635 C 426.587 45.636 454.303 49.676 465.311 61.882 C 476.295 74.062 477.465 101.983 477.466 101.987 C 477.463 101.985 450.073 97.590 439.121 85.462 C 428.169 73.333 426.584 45.639 426.583 45.635 M 541.964 57.753 C 541.964 57.757 549.280 84.794 542.457 99.749 C 535.650 114.670 510.497 126.846 510.494 126.849 C 510.494 126.845 503.634 99.967 510.407 85.095 C 517.181 70.223 541.961 57.756 541.964 57.753 M 586.325 114.498 C 586.323 114.502 581.551 142.102 569.056 152.782 C 556.590 163.439 528.648 163.868 528.644 163.869 C 528.646 163.866 533.765 136.602 546.179 125.976 C 558.594 115.349 586.320 114.500 586.325 114.498 M 611.307 182.330 C 611.306 182.334 609.871 210.306 598.744 222.406 C 587.642 234.478 559.953 238.248 559.949 238.249 C 559.951 238.245 561.770 210.565 572.824 198.530 C 583.878 186.494 611.304 182.332 611.307 182.330 M 623.730 266.745 C 623.726 266.746 599.578 280.936 583.353 278.302 C 567.164 275.673 548.782 254.624 548.779 254.622 C 548.783 254.621 572.898 240.912 589.030 243.521 C 605.162 246.130 623.726 266.742 623.730 266.745 M 581.258 324.774 C 581.254 324.773 553.278 326.124 540.133 316.254 C 527.018 306.407 520.516 279.229 520.514 279.225 C 520.518 279.226 548.242 278.287 561.316 288.090 C 574.390 297.894 581.256 324.770 581.258 324.774 M 513.130 359.788 C 513.127 359.786 487.223 349.132 479.511 334.616 C 471.817 320.132 477.467 292.764 477.467 292.760 C 477.470 292.763 502.971 303.681 510.647 318.108 C 518.323 332.535 513.130 359.784 513.130 359.788 M 418.261 342.753 C 418.261 342.750 413.705 323.214 418.965 312.681 C 424.213 302.172 442.523 294.090 442.526 294.088 C 442.525 294.091 446.759 313.502 441.537 323.977 C 436.314 334.451 418.263 342.751 418.261 342.753 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 411.931 581.093 C 413.844 580.612 413.668 583.547 412.940 584.479 C 410.051 588.170 404.819 584.828 404.633 580.264 C 404.316 572.490 412.940 568.595 418.613 571.897 C 429.337 578.139 425.329 593.733 414.688 596.731 C 392.833 602.886 381.207 573.570 404.592 560.776 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 398.864 488.331 C 397.702 486.737 395.958 489.104 395.922 490.286 C 395.780 494.972 401.939 495.750 405.002 492.362 C 410.221 486.591 406.085 478.080 399.613 476.987 C 387.378 474.922 380.479 489.471 386.739 498.583 C 399.596 517.298 427.289 502.208 417.504 477.413 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 393.561 533.394 C 394.285 531.560 396.567 533.414 396.898 534.549 C 398.212 539.049 392.444 541.348 388.629 538.837 C 382.130 534.558 383.999 525.282 389.990 522.601 C 401.316 517.533 411.643 529.887 407.869 540.278 C 400.117 561.619 369.524 553.957 372.778 527.500 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 454.294 549.528 C 455.456 547.934 457.199 550.301 457.235 551.483 C 457.378 556.169 451.218 556.948 448.155 553.560 C 442.937 547.788 447.073 539.277 453.545 538.184 C 465.780 536.119 472.679 550.668 466.419 559.780 C 453.562 578.495 425.869 563.405 435.654 538.610 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 465.448 510.956 C 464.286 509.362 462.543 511.730 462.507 512.912 C 462.364 517.597 468.524 518.376 471.587 514.988 C 476.805 509.217 472.670 500.705 466.197 499.613 C 453.962 497.548 447.064 512.096 453.324 521.209 C 466.180 539.923 493.874 524.834 484.088 500.038 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 488.970 551.139 C 487.808 549.545 486.064 551.913 486.028 553.095 C 485.885 557.780 492.045 558.559 495.109 555.171 C 500.327 549.400 496.192 540.888 489.719 539.796 C 477.484 537.731 470.585 552.279 476.845 561.392 C 489.702 580.106 517.395 565.017 507.610 540.221 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 475.100 592.987 C 476.463 591.561 473.824 590.265 472.654 590.439 C 468.017 591.129 468.343 597.329 472.220 599.744 C 478.825 603.856 486.469 598.278 486.397 591.714 C 486.260 579.307 470.719 575.096 462.861 582.872 C 446.721 598.842 466.480 623.422 489.149 609.397 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 487.267 641.966 C 489.079 641.185 489.375 644.111 488.804 645.147 C 486.542 649.252 480.843 646.787 479.931 642.312 C 478.377 634.688 486.269 629.466 492.396 631.821 C 503.979 636.271 502.512 652.305 492.485 656.962 C 471.893 666.527 455.736 639.443 476.780 623.081 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 531.058 605.233 C 532.548 603.939 533.717 606.637 533.488 607.798 C 532.578 612.396 526.400 611.776 524.173 607.788 C 520.379 600.995 526.315 593.626 532.867 594.010 C 545.254 594.736 548.721 610.459 540.580 617.939 C 523.861 633.301 500.248 612.396 515.335 590.420 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 550.050 552.795 C 550.503 550.875 553.028 552.381 553.520 553.457 C 555.469 557.720 550.094 560.827 545.956 558.893 C 538.908 555.598 539.417 546.149 544.959 542.631 C 555.434 535.981 567.437 546.714 565.203 557.541 C 560.614 579.778 529.236 576.614 528.635 549.965 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 535.881 499.466 C 535.169 497.626 538.103 497.440 539.117 498.049 C 543.135 500.463 540.459 506.066 535.953 506.810 C 528.276 508.077 523.353 499.996 525.935 493.961 C 530.815 482.553 546.783 484.619 551.062 494.813 C 559.850 515.748 532.180 530.880 516.617 509.239 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 579.029 478.524 C 578.515 476.619 581.453 476.744 582.396 477.457 C 586.137 480.282 582.884 485.570 578.324 485.834 C 570.556 486.284 566.515 477.727 569.720 471.998 C 575.778 461.170 591.439 464.912 594.617 475.501 C 601.144 497.247 572.030 509.371 558.840 486.207 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 510.672 474.036 C 511.845 474.662 510.429 476.049 509.643 476.184 C 506.528 476.720 505.429 472.682 507.402 470.318 C 510.764 466.290 516.835 468.250 518.174 472.468 C 520.705 480.442 511.641 486.417 504.968 483.096 C 491.264 476.275 498.730 456.366 516.205 460.564 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 394.594 616.694 C 392.689 616.182 392.817 619.120 393.531 620.063 C 396.359 623.801 401.645 620.543 401.904 615.983 C 402.347 608.215 393.787 604.181 388.061 607.391 C 377.238 613.459 380.994 629.116 391.585 632.285 C 413.338 638.792 425.436 609.667 402.260 596.498 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 308.145 581.093 C 306.232 580.612 306.407 583.547 307.136 584.479 C 310.024 588.171 315.256 584.828 315.442 580.264 C 315.759 572.490 307.135 568.595 301.462 571.897 C 290.738 578.139 294.746 593.733 305.387 596.731 C 327.242 602.886 338.869 573.570 315.483 560.776 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 321.212 488.331 C 322.374 486.737 324.117 489.104 324.153 490.286 C 324.296 494.972 318.136 495.751 315.073 492.362 C 309.855 486.591 313.990 478.080 320.463 476.987 C 332.698 474.922 339.596 489.471 333.336 498.583 C 320.480 517.298 292.786 502.208 302.572 477.413 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 326.515 533.394 C 325.790 531.560 323.508 533.414 323.177 534.549 C 321.864 539.049 327.631 541.348 331.446 538.837 C 337.945 534.559 336.077 525.282 330.085 522.601 C 318.759 517.533 308.432 529.887 312.207 540.278 C 319.959 561.619 350.551 553.957 347.297 527.500 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 265.782 549.528 C 264.620 547.934 262.876 550.301 262.840 551.483 C 262.697 556.169 268.857 556.948 271.920 553.560 C 277.138 547.788 273.003 539.277 266.530 538.184 C 254.295 536.119 247.397 550.668 253.657 559.780 C 266.513 578.495 294.207 563.405 284.421 538.610 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 254.627 510.956 C 255.789 509.362 257.533 511.730 257.569 512.912 C 257.711 517.598 251.552 518.376 248.488 514.988 C 243.270 509.216 247.406 500.705 253.878 499.613 C 266.113 497.548 273.012 512.096 266.752 521.209 C 253.895 539.923 226.202 524.834 235.987 500.038 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 231.106 551.139 C 232.267 549.545 234.011 551.913 234.047 553.095 C 234.190 557.780 228.030 558.559 224.967 555.171 C 219.748 549.400 223.884 540.888 230.357 539.796 C 242.592 537.731 249.490 552.279 243.230 561.392 C 230.373 580.106 202.681 565.016 212.466 540.221 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 244.975 592.987 C 243.612 591.561 246.252 590.265 247.422 590.439 C 252.058 591.129 251.733 597.329 247.855 599.744 C 241.250 603.856 233.607 598.278 233.679 591.714 C 233.815 579.307 249.356 575.096 257.214 582.872 C 273.354 598.842 253.595 623.422 230.927 609.397 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 232.808 641.966 C 230.997 641.185 230.701 644.111 231.271 645.147 C 233.533 649.253 239.232 646.787 240.144 642.312 C 241.698 634.688 233.807 629.467 227.679 631.821 C 216.097 636.271 217.564 652.305 227.590 656.962 C 248.182 666.528 264.339 639.443 243.296 623.081 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 189.017 605.233 C 187.528 603.939 186.358 606.638 186.588 607.798 C 187.498 612.396 193.675 611.776 195.902 607.788 C 199.696 600.995 193.761 593.626 187.208 594.010 C 174.821 594.736 171.354 610.459 179.495 617.939 C 196.214 633.301 219.827 612.396 204.740 590.420 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 170.025 552.795 C 169.573 550.875 167.047 552.381 166.555 553.457 C 164.606 557.720 169.981 560.827 174.119 558.893 C 181.168 555.598 180.658 546.149 175.116 542.631 C 164.641 535.981 152.638 546.714 154.873 557.541 C 159.462 579.778 190.840 576.614 191.441 549.965 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 184.194 499.466 C 184.907 497.627 181.972 497.440 180.958 498.049 C 176.940 500.463 179.617 506.066 184.123 506.810 C 191.800 508.077 196.722 499.996 194.140 493.961 C 189.260 482.553 173.292 484.619 169.013 494.813 C 160.225 515.748 187.895 530.880 203.459 509.239 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 141.047 478.524 C 141.561 476.619 138.623 476.744 137.679 477.457 C 133.938 480.282 137.192 485.570 141.752 485.834 C 149.519 486.284 153.560 477.727 150.355 471.998 C 144.297 461.170 128.637 464.912 125.459 475.501 C 118.932 497.247 148.046 509.371 161.236 486.207 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 209.404 474.036 C 208.230 474.662 209.647 476.049 210.432 476.184 C 213.547 476.721 214.647 472.682 212.674 470.318 C 209.312 466.290 203.241 468.250 201.902 472.468 C 199.371 480.441 208.434 486.417 215.107 483.096 C 228.811 476.275 221.345 456.367 203.871 460.564 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 325.481 616.694 C 327.386 616.182 327.258 619.120 326.545 620.063 C 323.716 623.801 318.431 620.543 318.171 615.983 C 317.729 608.215 326.288 604.181 332.014 607.391 C 342.837 613.459 339.082 629.116 328.490 632.285 C 306.738 638.792 294.640 609.667 317.815 596.498 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 365.209 649.436 C 366.984 648.575 367.410 651.484 366.887 652.545 C 364.811 656.748 359.008 654.541 357.896 650.111 C 356.002 642.564 363.651 636.994 369.878 639.071 C 381.649 642.997 380.901 659.081 371.094 664.183 C 350.951 674.662 337.179 646.687 353.885 631.040 C 361.063 624.317 360.013 619.191 360.014 619.190 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":325.455,\\\"max\\\":394.545},\\\"y\\\":{\\\"min\\\":291.955,\\\"max\\\":439.695}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":693.255,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":25.81,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":150.088,\\\"y\\\":394.203,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999876128357025,\\\"y\\\":0.004977366286832002}},{\\\"point\\\":{\\\"x\\\":569.912,\\\"y\\\":394.203,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999876128357025,\\\"y\\\":0.004977366286831986}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":583.192,\\\"y\\\":563.878,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129281960130468,\\\"y\\\":0.7012370407569631}},{\\\"point\\\":{\\\"x\\\":137.892,\\\"y\\\":563.924,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986952911624466,\\\"y\\\":0.7154193805785696}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":582.714,\\\"y\\\":118.509,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314695719351648,\\\"y\\\":-0.775400657544227}},{\\\"point\\\":{\\\"x\\\":138.042,\\\"y\\\":118.585,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817359597329795,\\\"y\\\":-0.7315983059076567}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":620.375,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"tree_top\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":51.169,\\\"max\\\":668.831},\\\"y\\\":{\\\"min\\\":80.297,\\\"max\\\":473.939}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tree_top\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"tree_top\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 313.954 470.212 C 313.963 470.212 406.037 470.212 406.046 470.212 C 406.047 470.205 403.835 419.719 412.995 403.544 C 424.325 383.538 449.590 390.371 450.722 390.055 C 453.481 389.285 505.344 395.127 546.615 371.811 C 585.620 349.776 592.161 325.899 592.165 325.895 C 592.160 325.898 568.767 345.348 536.603 358.340 C 505.887 370.747 468.901 366.664 468.894 366.665 C 468.903 366.655 538.166 336.597 554.566 269.002 C 570.817 202.020 496.208 166.191 496.204 166.188 C 496.207 166.192 551.675 216.935 531.723 264.057 C 519.363 293.248 505.340 306.848 487.758 320.006 C 474.105 330.223 446.292 350.088 446.288 350.091 C 446.288 350.086 452.414 323.864 449.927 299.224 C 444.909 249.484 418.917 239.028 418.914 239.022 C 418.916 239.027 432.185 261.077 432.033 297.260 C 431.923 323.246 424.338 355.463 412.607 364.987 C 404.370 371.674 386.637 379.591 376.717 375.718 C 372.705 374.152 375.000 338.152 372.727 310.402 C 370.463 282.770 360.017 170.852 360.016 170.838 C 359.983 170.498 349.540 282.770 347.273 310.402 C 344.997 338.152 347.508 374.880 343.283 375.718 C 330.327 378.290 316.063 370.373 307.393 364.987 C 294.557 357.013 288.077 323.246 287.967 297.260 C 287.815 261.077 301.084 239.027 301.086 239.022 C 301.083 239.028 275.091 249.484 270.073 299.224 C 267.586 323.864 273.712 350.086 273.712 350.091 C 273.708 350.088 245.895 330.223 232.242 320.006 C 214.660 306.848 200.637 293.248 188.277 264.057 C 168.325 216.935 223.793 166.192 223.796 166.188 C 223.792 166.191 149.183 202.020 165.434 269.002 C 181.834 336.597 251.097 366.655 251.106 366.665 C 251.099 366.664 214.114 370.747 183.397 358.340 C 151.233 345.348 127.840 325.898 127.835 325.895 C 127.839 325.899 134.380 349.776 173.385 371.811 C 214.656 395.127 266.519 389.285 269.278 390.055 C 270.411 390.371 288.945 389.316 307.005 403.544 C 316.166 410.761 313.953 470.205 313.954 470.212 M 114.917 258.653 C 114.919 258.656 123.579 280.775 135.777 287.524 C 147.947 294.258 171.235 289.861 171.239 289.862 C 171.237 289.859 162.346 268.078 150.224 261.361 C 138.102 254.643 114.921 258.653 114.917 258.653 M 148.428 325.083 C 148.431 325.084 161.756 337.571 172.454 338.220 C 183.127 338.868 197.835 328.115 197.837 328.114 C 197.835 328.113 184.461 315.937 173.827 315.285 C 163.192 314.632 148.431 325.082 148.428 325.083 M 348.482 286.834 C 348.482 286.831 349.515 267.844 342.869 258.879 C 336.238 249.935 317.815 245.408 317.813 245.406 C 317.813 245.409 317.060 264.226 323.661 273.143 C 330.263 282.059 348.480 286.832 348.482 286.834 M 269.592 298.230 C 269.589 298.227 259.023 274.967 245.536 268.417 C 232.080 261.881 207.320 267.935 207.316 267.935 C 207.318 267.938 218.113 290.822 231.517 297.342 C 244.921 303.863 269.588 298.230 269.592 298.230 M 226.505 194.708 C 226.506 194.712 227.716 225.434 239.770 238.861 C 251.797 252.257 282.140 256.757 282.144 256.759 C 282.143 256.755 280.508 226.349 268.533 212.993 C 256.557 199.637 226.509 194.710 226.505 194.708 M 341.397 160.139 C 341.393 160.141 311.298 172.912 302.485 189.955 C 293.692 206.959 300.642 238.828 300.642 238.833 C 300.646 238.830 330.267 225.755 339.039 208.818 C 347.811 191.880 341.396 160.144 341.397 160.139 M 360.496 81.297 C 360.494 81.301 339.505 106.367 339.412 125.553 C 339.319 144.696 360.008 169.913 360.010 169.917 C 360.012 169.913 380.441 144.792 380.545 125.718 C 380.650 106.644 360.498 81.302 360.496 81.297 M 282.283 100.728 C 282.279 100.729 249.927 105.444 237.078 119.692 C 224.258 133.909 222.893 166.498 222.891 166.503 C 222.896 166.501 254.865 161.372 267.648 147.215 C 280.432 133.058 282.281 100.733 282.283 100.728 M 147.608 114.873 C 147.608 114.877 139.069 146.435 147.032 163.891 C 154.978 181.307 184.337 195.520 184.340 195.523 C 184.340 195.518 192.347 164.145 184.442 146.787 C 176.536 129.428 147.612 114.876 147.608 114.873 M 95.829 181.107 C 95.831 181.111 101.402 213.326 115.986 225.793 C 130.537 238.232 163.151 238.733 163.155 238.734 C 163.153 238.730 157.178 206.907 142.688 194.504 C 128.197 182.101 95.834 181.108 95.829 181.107 M 66.669 260.282 C 66.670 260.287 68.346 292.936 81.333 307.059 C 94.291 321.150 126.611 325.550 126.615 325.552 C 126.614 325.547 124.490 293.238 111.588 279.190 C 98.685 265.142 66.673 260.284 66.669 260.282 M 52.169 358.812 C 52.174 358.813 80.360 375.377 99.298 372.302 C 118.194 369.233 139.650 344.665 139.654 344.662 C 139.649 344.661 111.501 328.660 92.671 331.705 C 73.841 334.750 52.174 358.809 52.169 358.812 M 101.743 426.545 C 101.747 426.544 134.402 428.120 149.745 416.601 C 165.054 405.106 172.643 373.384 172.645 373.379 C 172.640 373.381 140.280 372.284 125.020 383.727 C 109.759 395.170 101.745 426.541 101.743 426.545 M 181.263 467.414 C 181.267 467.411 211.503 454.976 220.504 438.033 C 229.485 421.127 222.890 389.183 222.890 389.178 C 222.886 389.181 193.122 401.925 184.162 418.764 C 175.202 435.604 181.264 467.409 181.263 467.414 M 291.997 447.531 C 291.997 447.527 297.314 424.724 291.175 412.430 C 285.049 400.164 263.677 390.730 263.674 390.727 C 263.675 390.731 258.733 413.388 264.829 425.614 C 270.924 437.841 291.994 447.528 291.997 447.531 M 605.083 258.653 C 605.081 258.656 596.421 280.775 584.223 287.524 C 572.053 294.258 548.765 289.861 548.761 289.862 C 548.763 289.859 557.654 268.078 569.776 261.361 C 581.898 254.643 605.079 258.653 605.083 258.653 M 371.518 286.834 C 371.518 286.831 370.485 267.844 377.131 258.879 C 383.762 249.935 402.185 245.408 402.187 245.406 C 402.187 245.409 402.940 264.226 396.339 273.143 C 389.737 282.059 371.520 286.832 371.518 286.834 M 450.408 298.230 C 450.411 298.227 460.977 274.967 474.464 268.417 C 487.920 261.881 512.680 267.935 512.684 267.935 C 512.682 267.938 501.887 290.822 488.483 297.342 C 475.079 303.863 450.412 298.230 450.408 298.230 M 493.495 194.708 C 493.494 194.712 492.284 225.434 480.230 238.861 C 468.203 252.257 437.860 256.757 437.856 256.759 C 437.857 256.755 439.492 226.349 451.467 212.993 C 463.443 199.637 493.491 194.710 493.495 194.708 M 424.701 295.443 C 424.699 295.447 421.650 321.199 410.626 331.690 C 399.627 342.159 373.815 343.935 373.812 343.936 C 373.813 343.933 377.199 318.474 388.152 308.037 C 399.105 297.600 424.697 295.445 424.701 295.443 M 378.603 160.139 C 378.607 160.141 408.702 172.912 417.515 189.955 C 426.308 206.959 419.358 238.828 419.358 238.833 C 419.354 238.830 389.733 225.755 380.961 208.818 C 372.189 191.880 378.604 160.144 378.603 160.139 M 437.717 100.728 C 437.721 100.729 470.073 105.444 482.922 119.692 C 495.742 133.909 497.107 166.498 497.109 166.503 C 497.104 166.501 465.135 161.372 452.352 147.215 C 439.568 133.058 437.719 100.733 437.717 100.728 M 572.392 114.873 C 572.392 114.877 580.931 146.435 572.968 163.891 C 565.022 181.307 535.663 195.520 535.660 195.523 C 535.660 195.518 527.653 164.145 535.559 146.787 C 543.464 129.428 572.388 114.876 572.392 114.873 M 624.171 181.107 C 624.169 181.111 618.598 213.326 604.015 225.793 C 589.463 238.232 556.849 238.733 556.845 238.734 C 556.847 238.730 562.822 206.907 577.312 194.504 C 591.803 182.101 624.166 181.108 624.171 181.107 M 653.331 260.282 C 653.330 260.287 651.654 292.936 638.667 307.059 C 625.709 321.150 593.389 325.550 593.385 325.552 C 593.386 325.547 595.510 293.238 608.412 279.190 C 621.315 265.142 653.327 260.284 653.331 260.282 M 667.831 358.812 C 667.826 358.813 639.640 375.377 620.702 372.302 C 601.806 369.233 580.350 344.665 580.346 344.662 C 580.351 344.661 608.499 328.660 627.329 331.705 C 646.159 334.750 667.826 358.809 667.831 358.812 M 618.257 426.545 C 618.253 426.544 585.598 428.120 570.255 416.601 C 554.946 405.106 547.357 373.384 547.355 373.379 C 547.360 373.381 579.720 372.284 594.980 383.727 C 610.241 395.170 618.255 426.541 618.257 426.545 M 538.737 467.414 C 538.733 467.411 508.497 454.976 499.496 438.033 C 490.515 421.127 497.110 389.183 497.110 389.178 C 497.114 389.181 526.878 401.925 535.838 418.764 C 544.798 435.604 538.736 467.409 538.737 467.414 M 428.003 447.531 C 428.003 447.527 422.686 424.724 428.825 412.430 C 434.951 400.164 456.323 390.730 456.326 390.727 C 456.325 390.731 461.267 413.388 455.171 425.614 C 449.076 437.841 428.006 447.528 428.003 447.531 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 547.547 338.220 C 536.873 338.868 522.165 328.115 522.163 328.114 C 522.165 328.113 535.539 315.937 546.173 315.285 C 556.808 314.632 571.569 325.082 571.572 325.083 C 571.569 325.084 558.244 337.571 547.547 338.220 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 264.867 454.794 C 264.867 444.751 256.765 436.650 246.722 436.650 C 236.679 436.650 228.578 444.751 228.578 454.794 C 228.577 464.838 236.679 472.939 246.722 472.939 C 256.765 472.939 264.867 464.838 264.867 454.794 M 163.432 448.797 C 163.432 438.754 155.330 430.652 145.287 430.652 C 135.244 430.652 127.142 438.754 127.142 448.797 C 127.142 458.840 135.244 466.942 145.287 466.942 C 155.330 466.942 163.432 458.840 163.432 448.797 M 92.104 401.245 C 92.104 391.201 84.002 383.100 73.959 383.100 C 63.916 383.100 55.814 391.201 55.814 401.245 C 55.814 411.288 63.916 419.389 73.959 419.389 C 84.002 419.389 92.104 411.288 92.104 401.245 M 217.241 119.686 C 217.241 109.643 209.139 101.541 199.096 101.541 C 189.053 101.541 180.951 109.643 180.951 119.686 C 180.951 129.729 189.053 137.830 199.096 137.830 C 209.139 137.830 217.241 129.729 217.241 119.686 M 102.115 232.309 C 102.115 222.266 94.013 214.164 83.970 214.164 C 73.927 214.164 65.825 222.266 65.825 232.309 C 65.825 242.352 73.927 250.454 83.970 250.454 C 94.013 250.454 102.115 242.352 102.115 232.309 M 228.503 236.063 C 228.503 226.020 220.401 217.918 210.358 217.918 C 200.315 217.918 192.213 226.020 192.213 236.063 C 192.213 246.106 200.315 254.208 210.358 254.208 C 220.401 254.208 228.503 246.106 228.503 236.063 M 326.110 129.697 C 326.110 119.654 318.008 111.552 307.965 111.552 C 297.922 111.552 289.821 119.654 289.821 129.697 C 289.821 139.740 297.922 147.842 307.965 147.842 C 318.009 147.842 326.110 139.740 326.110 129.697 M 294.826 174.746 C 294.826 164.703 286.724 156.601 276.681 156.601 C 266.638 156.601 258.536 164.703 258.536 174.746 C 258.536 184.789 266.638 192.891 276.681 192.891 C 286.724 192.891 294.826 184.789 294.826 174.746 M 455.133 454.794 C 455.133 444.751 463.235 436.650 473.278 436.650 C 483.321 436.650 491.422 444.751 491.423 454.794 C 491.423 464.838 483.321 472.939 473.278 472.939 C 463.235 472.939 455.133 464.838 455.133 454.794 M 556.568 448.797 C 556.568 438.754 564.670 430.652 574.713 430.652 C 584.756 430.652 592.858 438.754 592.858 448.797 C 592.858 458.840 584.756 466.942 574.713 466.942 C 564.670 466.942 556.568 458.840 556.568 448.797 M 627.896 401.245 C 627.896 391.201 635.998 383.100 646.041 383.100 C 656.084 383.100 664.186 391.201 664.186 401.245 C 664.186 411.288 656.084 419.389 646.041 419.389 C 635.998 419.389 627.896 411.288 627.896 401.245 M 502.759 119.686 C 502.759 109.643 510.861 101.541 520.904 101.541 C 530.947 101.541 539.049 109.643 539.049 119.686 C 539.049 129.729 530.947 137.830 520.904 137.830 C 510.861 137.830 502.759 129.729 502.759 119.686 M 617.885 232.309 C 617.885 222.266 625.987 214.164 636.030 214.164 C 646.073 214.164 654.175 222.266 654.175 232.309 C 654.175 242.352 646.073 250.454 636.030 250.454 C 625.987 250.454 617.885 242.352 617.885 232.309 M 491.497 236.063 C 491.497 226.020 499.599 217.918 509.642 217.918 C 519.685 217.918 527.787 226.020 527.787 236.063 C 527.787 246.106 519.685 254.208 509.642 254.208 C 499.599 254.208 491.497 246.106 491.497 236.063 M 393.890 129.697 C 393.890 119.654 401.992 111.552 412.035 111.552 C 422.078 111.552 430.179 119.654 430.179 129.697 C 430.180 139.740 422.078 147.842 412.035 147.842 C 401.991 147.842 393.890 139.740 393.890 129.697 M 425.174 174.746 C 425.174 164.703 433.276 156.601 443.319 156.601 C 453.362 156.601 461.464 164.703 461.464 174.746 C 461.464 184.789 453.362 192.891 443.319 192.891 C 433.276 192.891 425.174 184.789 425.174 174.746 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 308.953 331.690 C 319.952 342.159 345.763 343.935 345.767 343.936 C 345.765 343.933 342.379 318.474 331.426 308.037 C 320.473 297.600 294.882 295.445 294.878 295.443 C 294.879 295.447 297.929 321.199 308.953 331.690 Z\\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":470.272,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":359.867,\\\"y\\\":83.41,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":70.838,\\\"y\\\":280.304,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873127414375,\\\"y\\\":0.005037296512844308}},{\\\"point\\\":{\\\"x\\\":649.684,\\\"y\\\":280.304,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873127414376,\\\"y\\\":0.005037296512844282}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":405.616,\\\"y\\\":469.124,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129855973001704,\\\"y\\\":0.7011786776867356}},{\\\"point\\\":{\\\"x\\\":315.08,\\\"y\\\":469.133,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986806118523448,\\\"y\\\":0.715433716441735}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":535.548,\\\"y\\\":104.682,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.631434774746449,\\\"y\\\":-0.7754289943256579}},{\\\"point\\\":{\\\"x\\\":184.782,\\\"y\\\":104.742,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817375386520337,\\\"y\\\":-0.7315968345972165}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":470.16,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"triangle\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":27.638,\\\"max\\\":692.362},\\\"y\\\":{\\\"min\\\":71.898,\\\"max\\\":648.102}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"triangle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"triangle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#FF7D93F5-77F2-46FD-B596-1EF0381D61B0_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 73.898 C 360.033 73.955 690.329 646.045 690.362 646.102 C 690.296 646.102 29.704 646.102 29.638 646.102 C 29.671 646.045 359.967 73.955 360.000 73.898 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":230.023,\\\"max\\\":490.127},\\\"y\\\":{\\\"min\\\":317.562,\\\"max\\\":577.667}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":674.065,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360.075,\\\"y\\\":77.793,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":194.43,\\\"y\\\":359.043,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.868514074398802,\\\"y\\\":-0.49566450606351903}},{\\\"point\\\":{\\\"x\\\":526.616,\\\"y\\\":360.954,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8685512541368067,\\\"y\\\":-0.4955993532455227}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":41.378,\\\"y\\\":639.913,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.860043090391753,\\\"y\\\":0.5102214055382261}},{\\\"point\\\":{\\\"x\\\":681.449,\\\"y\\\":640.279,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8701184940442231,\\\"y\\\":0.4928425776271906}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":359.957,\\\"y\\\":640.19,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"FF7D93F5-77F2-46FD-B596-1EF0381D61B0_0\\\",\\\"cx\\\":\\\"50.35%\\\",\\\"cy\\\":\\\"66.22%\\\",\\\"r\\\":\\\"113.76%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"24.71%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"triskele\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":70.17292901118992,\\\"max\\\":652.5885794199888},\\\"y\\\":{\\\"min\\\":89.61549604274816,\\\"max\\\":638.1116237500617}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"triskele\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"triskele\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 416.405 550.655 C 441.868 581.030 487.814 596.872 526.781 589.619 C 565.975 582.324 604.079 551.023 616.213 513.046 C 625.774 483.123 616.217 446.759 596.346 422.428 C 578.304 400.337 547.905 383.587 519.663 387.576 C 488.715 391.946 457.315 417.929 450.208 448.365 C 444.303 473.655 456.095 505.604 477.747 519.944 C 494.130 530.794 519.970 531.866 535.777 520.192 C 551.331 508.705 560.523 483.165 552.471 465.585 C 548.205 456.268 536.362 450.432 526.119 450.711 C 520.669 450.859 513.773 453.284 511.991 458.437 C 506.658 473.862 521.184 471.063 525.043 477.615 C 530.399 486.708 524.003 494.881 517.317 498.034 C 505.572 503.573 489.244 492.690 482.741 481.450 C 476.181 470.111 478.875 454.077 485.666 442.874 C 493.364 430.176 508.404 421.499 523.195 420.192 C 540.504 418.662 559.388 426.260 570.794 439.370 C 585.087 455.799 589.583 480.860 584.866 502.119 C 580.610 521.303 567.015 538.829 549.850 548.394 C 527.455 560.872 498.238 562.903 474.325 553.663 C 450.727 544.547 431.823 523.323 422.586 499.772 C 412.769 474.739 413.325 444.896 424.381 420.384 C 436.275 394.013 459.986 371.771 487.488 362.796 C 522.077 351.509 563.207 357.398 594.029 376.732 C 621.956 394.250 641.814 425.312 648.140 457.666 C 655.197 493.764 646.830 534.071 625.236 563.847 C 602.657 594.982 565.168 616.699 526.918 620.717 C 477.189 625.941 433.968 608.275 400.814 577.670 C 357.025 537.246 361.563 480.011 329.454 435.354 C 296.509 389.534 246.581 374.064 199.803 382.095 C 160.739 388.801 124.074 420.828 110.872 458.201 C 97.593 495.792 105.648 544.442 132.470 573.938 C 153.604 597.180 189.874 607.086 220.881 602.042 C 249.034 597.463 278.739 579.511 289.406 553.058 C 301.094 524.072 294.293 483.887 271.488 462.515 C 252.539 444.756 218.974 438.993 195.730 450.574 C 178.141 459.337 164.293 481.179 166.499 500.705 C 168.670 519.919 186.193 540.649 205.443 542.467 C 215.645 543.430 226.621 536.092 231.501 527.082 C 234.097 522.288 235.445 515.104 231.873 510.984 C 221.182 498.653 216.343 512.632 208.739 512.698 C 198.186 512.790 194.306 503.165 194.918 495.797 C 195.994 482.857 213.583 474.158 226.568 474.146 C 239.669 474.134 252.208 484.485 258.514 495.967 C 265.662 508.982 265.657 526.346 259.393 539.809 C 252.064 555.565 236.041 568.120 218.985 571.442 C 197.611 575.606 173.659 566.969 157.607 552.255 C 143.121 538.977 134.740 518.440 135.040 498.792 C 135.430 473.158 148.280 446.841 168.239 430.750 C 187.933 414.873 215.765 409.113 240.779 412.890 C 267.367 416.904 292.934 432.307 308.634 454.137 C 325.525 477.624 332.932 509.279 326.953 537.584 C 319.433 573.183 293.768 605.857 261.613 622.883 C 232.479 638.310 195.650 639.977 164.468 629.278 C 129.677 617.341 98.954 589.941 83.964 556.352 C 68.289 521.230 68.227 477.906 83.872 442.771 C 104.212 397.092 141.132 368.528 184.203 355.086 C 233.830 339.598 277.816 362.999 325.831 365.744 C 376.805 368.659 436.531 328.811 456.295 279.725 C 471.099 242.957 460.616 194.774 434.851 164.655 C 408.936 134.359 362.776 117.010 323.821 125.490 C 293.126 132.172 266.412 158.631 255.276 188.005 C 245.166 214.675 245.860 249.376 263.435 271.841 C 282.694 296.457 320.896 310.659 350.808 301.595 C 375.662 294.064 397.435 267.878 399.028 241.957 C 400.233 222.344 388.241 199.430 370.228 191.577 C 352.503 183.850 325.788 188.660 314.589 204.423 C 308.654 212.776 309.521 225.950 314.884 234.681 C 317.737 239.328 323.285 244.087 328.639 243.054 C 344.663 239.961 334.977 228.780 338.722 222.162 C 343.919 212.977 354.194 214.429 360.268 218.643 C 370.937 226.045 369.676 245.627 363.194 256.878 C 356.655 268.230 341.420 273.913 328.323 273.633 C 313.478 273.316 298.444 264.629 289.916 252.474 C 279.936 238.248 277.074 218.095 282.725 201.662 C 289.806 181.070 309.262 164.645 330.031 158.101 C 348.773 152.195 370.749 155.206 387.615 165.289 C 409.619 178.444 425.985 202.731 429.941 228.060 C 433.844 253.055 424.916 280.039 409.138 299.813 C 392.368 320.831 366.245 335.272 339.490 337.953 C 310.704 340.838 279.586 331.425 258.063 312.094 C 230.994 287.783 215.529 249.219 216.861 212.860 C 218.069 179.915 235.040 147.187 259.896 125.532 C 287.630 101.370 326.720 88.463 363.304 92.276 C 401.558 96.262 439.109 117.870 461.714 148.987 C 491.103 189.441 499.280 236.167 487.486 279.719 C 469.174 347.336 422.023 358.787 396.844 404.695 C 374.269 445.856 384.350 512.417 416.405 550.655 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":370.462,\\\"y\\\":685.238,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":182.372,\\\"y\\\":307.72,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8535840270229896,\\\"y\\\":-0.5209551888706131}},{\\\"point\\\":{\\\"x\\\":534.825,\\\"y\\\":311.17,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8779462509064101,\\\"y\\\":-0.4787592093311406}},{\\\"point\\\":{\\\"x\\\":352.028,\\\"y\\\":604.705,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.024351561943891358,\\\"y\\\":0.9997034567464959}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":350.612,\\\"y\\\":57.035,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.024365509714555564,\\\"y\\\":-0.999703116898387}},{\\\"point\\\":{\\\"x\\\":51.125,\\\"y\\\":570.054,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8779503873573876,\\\"y\\\":0.47875162385000114}},{\\\"point\\\":{\\\"x\\\":652.026,\\\"y\\\":588.896,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8535870262818154,\\\"y\\\":0.5209502745592592}}]}},{\\\"name\\\":\\\"trumpet\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":235.19373940081604,\\\"max\\\":701.971},\\\"y\\\":{\\\"min\\\":273.3269839645844,\\\"max\\\":471.4430148261214}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"trumpet\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"trumpet\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 701.471 372.385 C 701.471 386.115 697.485 391.822 694.661 391.822 C 691.837 391.822 687.851 386.115 687.851 372.385 C 687.851 358.654 691.837 352.947 694.661 352.947 C 697.485 352.947 701.471 358.654 701.471 372.385 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 254.539 468.227 C 254.553 468.220 310.633 400.232 389.677 393.465 C 527.309 381.681 694.766 386.255 694.797 386.254 C 694.797 386.253 697.059 382.133 697.059 372.385 C 697.059 362.637 694.797 358.517 694.797 358.516 C 694.766 358.515 527.309 362.266 389.677 351.305 C 310.594 345.006 254.553 276.549 254.539 276.542 C 254.539 276.561 254.539 468.208 254.539 468.227 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 254.697 273.827 C 263.513 273.801 274.056 305.392 274.234 372.359 C 274.412 439.291 264.044 470.917 255.232 470.943 C 246.417 470.968 235.873 439.377 235.696 372.410 C 235.518 305.478 245.886 273.852 254.697 273.827 M 254.551 286.970 C 257.557 286.970 266.577 307.400 266.577 372.385 C 266.577 437.369 257.557 457.800 254.551 457.800 C 251.546 457.800 242.526 437.369 242.526 372.385 C 242.526 307.400 251.546 286.970 254.551 286.970 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 266.577 372.385 C 266.577 437.369 257.557 457.800 254.551 457.800 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 254.551 457.800 C 251.546 457.800 242.526 437.369 242.526 372.385 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 242.526 372.385 C 242.526 307.400 251.546 286.970 254.551 286.970 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 254.551 286.970 C 257.557 286.970 266.577 307.400 266.577 372.385 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 266.577 372.385 C 266.577 437.369 257.557 457.800 254.551 457.800 C 251.546 457.800 242.526 437.369 242.526 372.385 C 242.526 307.400 251.546 286.970 254.551 286.970 C 257.557 286.970 266.577 307.400 266.577 372.385 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":7.731,\\\"max\\\":255.132},\\\"y\\\":{\\\"min\\\":290.217,\\\"max\\\":454.553}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":687.374,\\\"y\\\":372.385,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":681.805,\\\"y\\\":314.651,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.005065661198267069,\\\"y\\\":-0.9999871694560007}},{\\\"point\\\":{\\\"x\\\":681.804,\\\"y\\\":430.119,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.005033600866368021,\\\"y\\\":0.9999873313509118}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":533.909,\\\"y\\\":307.31,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.715406494931242,\\\"y\\\":-0.6987084849994273}},{\\\"point\\\":{\\\"x\\\":534.006,\\\"y\\\":437.068,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7012507470509166,\\\"y\\\":0.7129147142264153}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":698.149,\\\"y\\\":372.385,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"two_faced\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":34.519,\\\"max\\\":685.481},\\\"y\\\":{\\\"min\\\":109.636,\\\"max\\\":634.38}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"two_faced\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"two_faced\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.339 110.760 C 360.339 110.812 360.339 633.327 360.339 633.380 C 360.323 633.376 243.422 628.750 202.284 602.734 C 126.844 555.026 128.129 522.284 128.122 522.276 C 128.139 522.274 207.861 490.482 297.082 502.864 C 194.342 460.340 112.810 480.228 112.791 480.226 C 112.790 480.221 98.397 429.226 98.396 429.221 C 98.389 429.219 35.526 408.969 35.519 408.967 C 35.527 408.953 102.729 278.876 109.223 263.404 C 104.283 194.056 118.488 110.651 118.489 110.636 C 118.513 110.636 360.315 110.760 360.339 110.760 M 150.309 256.831 C 150.317 256.830 176.663 256.159 226.803 247.430 C 268.729 240.132 308.812 229.651 308.820 229.649 C 308.814 229.659 303.023 312.230 243.157 322.497 C 183.290 332.763 150.319 256.838 150.309 256.831 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 404.569 295.217 C 404.576 295.218 430.922 295.889 481.062 304.618 C 522.989 311.917 563.072 322.397 563.080 322.399 C 563.073 322.390 557.283 239.818 497.416 229.552 C 437.549 219.285 404.578 295.211 404.569 295.217 M 359.661 110.760 C 359.661 110.812 359.661 633.327 359.661 633.380 C 359.677 633.376 476.578 628.750 517.716 602.734 C 593.156 555.026 591.870 522.284 591.878 522.276 C 591.861 522.271 473.183 530.867 427.638 474.540 C 483.169 488.722 607.191 480.225 607.209 480.226 C 607.210 480.221 621.603 429.226 621.604 429.221 C 621.611 429.219 684.474 408.969 684.481 408.967 C 684.473 408.953 617.288 279.913 610.777 263.404 C 612.404 178.833 601.512 110.651 601.511 110.636 C 601.487 110.636 359.685 110.760 359.661 110.760 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":190.507,\\\"max\\\":275.538},\\\"y\\\":{\\\"min\\\":236.181,\\\"max\\\":321.212}},{\\\"x\\\":{\\\"min\\\":444.462,\\\"max\\\":529.493},\\\"y\\\":{\\\"min\\\":236.18,\\\"max\\\":321.211}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":699.379,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":109.308,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":108.692,\\\"y\\\":506.633,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873620856039,\\\"y\\\":0.005027491330220669}},{\\\"point\\\":{\\\"x\\\":611.308,\\\"y\\\":506.633,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873620856038,\\\"y\\\":0.005027491330220682}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":211.991,\\\"y\\\":608.545,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7129033945308432,\\\"y\\\":0.7012622548422246}},{\\\"point\\\":{\\\"x\\\":508.131,\\\"y\\\":608.576,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6987339817286651,\\\"y\\\":0.7153815924229567}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":121.376,\\\"y\\\":112.646,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6314219981031151,\\\"y\\\":-0.7754393982197899}},{\\\"point\\\":{\\\"x\\\":597.82,\\\"y\\\":112.727,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6817361480275335,\\\"y\\\":-0.7315981304463407}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":634.096,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"unihorn\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":297.3599801477942,\\\"max\\\":421.7055926413711},\\\"y\\\":{\\\"min\\\":15.885000000000002,\\\"max\\\":702.144}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"unihorn\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"unihorn\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.131 17.885 C 360.132 17.889 366.991 42.718 368.086 54.362 C 369.056 64.684 367.034 84.548 367.281 87.451 C 367.602 91.227 374.712 116.207 375.818 129.647 C 376.867 142.381 374.125 166.837 374.431 170.414 C 374.736 173.972 381.711 197.462 382.673 210.132 C 383.627 222.691 380.265 246.758 380.550 250.286 C 380.843 253.906 388.191 277.726 389.353 290.599 C 390.613 304.557 387.225 331.401 387.700 335.311 C 388.067 338.332 395.634 357.877 396.945 368.628 C 398.907 384.719 394.404 415.802 394.850 420.335 C 395.169 423.583 401.998 444.906 403.214 456.457 C 404.818 471.696 401.395 501.097 402.000 505.360 C 402.432 508.409 410.787 527.958 412.201 538.825 C 414.498 556.467 408.751 590.555 409.149 595.538 C 409.466 599.498 417.093 625.629 418.442 639.702 C 420.064 656.624 420.539 690.422 417.330 693.960 C 413.927 697.712 378.153 700.144 360.131 700.144 C 342.110 700.144 306.361 697.688 302.933 693.960 C 300.416 691.223 298.484 665.000 299.769 651.827 C 300.959 639.630 309.790 617.520 310.083 614.089 C 310.466 609.604 302.954 579.168 304.650 563.239 C 306.020 550.377 316.859 527.527 317.232 523.911 C 317.626 520.100 311.479 494.218 312.627 480.634 C 313.771 467.096 324.112 442.694 324.382 438.886 C 324.626 435.461 318.658 412.393 319.391 400.195 C 320.291 385.219 331.161 358.061 331.532 353.862 C 331.837 350.415 327.803 326.946 328.645 314.662 C 329.651 300.002 338.434 272.959 338.682 268.837 C 338.903 265.175 333.876 240.351 334.871 227.334 C 335.943 213.316 345.450 187.744 345.832 183.812 C 346.214 179.869 342.138 152.915 343.427 138.878 C 344.606 126.022 352.744 102.407 352.982 98.787 C 353.180 95.774 349.063 75.372 349.669 64.643 C 350.516 49.658 360.130 17.890 360.131 17.885 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 331.532 353.862 C 350.255 347.678 368.977 341.494 387.700 335.311 M 352.982 98.787 C 357.748 95.008 362.515 91.230 367.281 87.451 M 345.832 183.812 C 355.365 179.346 364.898 174.880 374.431 170.414 M 338.682 268.837 C 352.638 262.653 366.594 256.470 380.550 250.286 M 324.382 438.886 C 347.871 432.703 371.361 426.519 394.850 420.335 M 317.232 523.911 C 345.488 517.728 373.744 511.544 402.000 505.360 M 310.083 614.089 C 343.105 607.905 376.127 601.721 409.149 595.538 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":685.952,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":31.274,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":329.035,\\\"y\\\":360.936,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999869423966429,\\\"y\\\":0.005110287292651839}},{\\\"point\\\":{\\\"x\\\":394.967,\\\"y\\\":360.936,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999869443305632,\\\"y\\\":0.005109908846835923}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":415.296,\\\"y\\\":693.311,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128965506064748,\\\"y\\\":0.7012692123096449}},{\\\"point\\\":{\\\"x\\\":304.513,\\\"y\\\":693.359,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987263029800354,\\\"y\\\":0.7153890923992705}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":374.071,\\\"y\\\":128.186,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314454286031289,\\\"y\\\":-0.7754203187279854}},{\\\"point\\\":{\\\"x\\\":345.734,\\\"y\\\":128.265,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817084818456935,\\\"y\\\":-0.7316239100655744}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":699.132,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true}},{\\\"name\\\":\\\"urn\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":143.02466067076602,\\\"max\\\":577.3012086708661},\\\"y\\\":{\\\"min\\\":36.892,\\\"max\\\":636.63275}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"urn\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"urn\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#9329B78A-CAC2-4471-9F51-1D2335FE9695_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 178.839 162.931 C 187.525 181.450 221.998 194.472 233.944 247.094 C 258.886 222.459 290.427 186.150 276.745 132.874 C 269.428 104.382 228.476 90.515 199.305 102.146 C 175.988 111.444 170.069 144.236 178.839 162.931 M 443.256 132.873 C 429.040 194.245 461.479 222.188 486.055 247.093 C 498.188 194.514 529.268 184.246 541.162 162.931 C 550.082 146.944 544.012 111.444 520.695 102.146 C 491.525 90.515 450.215 98.758 443.256 132.873 M 480.149 38.892 C 480.147 38.896 462.113 53.474 454.874 83.220 C 479.610 67.807 507.825 62.583 535.670 75.949 C 577.791 96.168 581.033 146.401 569.662 172.146 C 556.455 202.048 516.032 219.257 512.716 276.126 C 538.116 307.671 560.249 350.607 560.249 419.365 C 560.249 559.539 495.339 602.007 460.125 619.614 C 420.075 639.639 299.925 639.639 259.875 619.614 C 224.661 602.007 159.751 559.539 159.751 419.365 C 159.751 350.607 181.884 307.672 207.283 276.127 C 203.968 219.257 160.231 197.078 150.338 172.146 C 139.957 145.986 141.646 94.949 184.330 75.949 C 213.135 63.127 245.768 69.965 266.231 88.192 C 258.315 64.154 239.853 38.897 239.851 38.892 C 239.875 38.894 480.125 38.893 480.149 38.892 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":222.623,\\\"max\\\":497.377},\\\"y\\\":{\\\"min\\\":288.283,\\\"max\\\":563.037}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":722.814,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":39.338,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":160.648,\\\"y\\\":420.837,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873521986961,\\\"y\\\":0.005029457489738821}},{\\\"point\\\":{\\\"x\\\":559.352,\\\"y\\\":420.837,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873521986961,\\\"y\\\":0.0050294574897388}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":471.883,\\\"y\\\":608.757,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129221308160933,\\\"y\\\":0.701243207020675}},{\\\"point\\\":{\\\"x\\\":247.949,\\\"y\\\":608.799,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698721393252034,\\\"y\\\":0.7153938877373335}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":548.806,\\\"y\\\":83.251,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314588659701251,\\\"y\\\":-0.7754093761283286}},{\\\"point\\\":{\\\"x\\\":171.858,\\\"y\\\":83.329,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817163878820501,\\\"y\\\":-0.7316165433429249}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":632.425,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"9329B78A-CAC2-4471-9F51-1D2335FE9695_0\\\",\\\"cx\\\":\\\"49.81%\\\",\\\"cy\\\":\\\"57.15%\\\",\\\"r\\\":\\\"74.55%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"38.43%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"virus\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":32.058,\\\"max\\\":687.942},\\\"y\\\":{\\\"min\\\":18.216,\\\"max\\\":674.1}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"virus\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"virus2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 672.100 C 406.123 672.100 347.074 574.248 383.117 570.656 C 419.145 567.067 380.669 674.904 425.802 665.494 C 470.851 656.103 392.685 572.389 427.206 561.696 C 461.731 551.002 444.672 664.521 487.038 646.541 C 529.365 628.578 435.927 561.825 467.684 544.637 C 499.434 527.452 504.314 642.267 542.410 616.538 C 580.498 590.815 475.799 543.330 503.654 520.377 C 531.504 497.427 558.131 609.275 590.624 576.782 C 623.117 544.289 511.269 517.662 534.219 489.812 C 557.172 461.957 604.657 566.657 630.380 528.569 C 656.109 490.472 541.294 485.592 558.479 453.842 C 575.667 422.085 642.420 515.523 660.383 473.196 C 678.363 430.830 564.844 447.889 575.538 413.364 C 586.231 378.842 669.945 457.009 679.337 411.960 C 688.746 366.826 580.909 405.303 584.499 369.275 C 588.090 333.232 685.942 392.281 685.942 346.158 C 685.942 300.035 588.090 359.084 584.499 323.041 C 580.909 287.013 688.746 325.489 679.337 280.356 C 669.945 235.307 586.231 313.473 575.538 278.952 C 564.844 244.427 678.363 261.486 660.383 219.120 C 642.420 176.793 575.667 270.231 558.479 238.474 C 541.294 206.724 656.109 201.844 630.380 163.747 C 604.658 125.659 557.172 230.359 534.219 202.504 C 511.269 174.654 623.117 148.027 590.624 115.534 C 558.131 83.041 531.504 194.889 503.654 171.939 C 475.799 148.986 580.499 101.500 542.411 75.778 C 504.315 50.049 499.434 164.864 467.684 147.679 C 435.927 130.491 529.365 63.738 487.038 45.775 C 444.672 27.795 461.731 141.314 427.206 130.620 C 392.685 119.927 470.851 36.213 425.802 26.821 C 380.669 17.412 419.145 125.249 383.117 121.659 C 347.074 118.068 406.123 20.216 360.000 20.216 C 313.877 20.216 372.926 118.068 336.883 121.659 C 300.855 125.249 339.332 17.412 294.198 26.821 C 249.149 36.213 327.315 119.927 292.794 130.620 C 258.269 141.314 275.328 27.795 232.962 45.775 C 190.635 63.738 284.073 130.491 252.316 147.679 C 220.566 164.863 215.686 50.049 177.590 75.778 C 139.502 101.500 244.201 148.986 216.346 171.939 C 188.496 194.889 161.869 83.041 129.376 115.534 C 96.883 148.027 208.731 174.653 185.781 202.504 C 162.828 230.359 115.343 125.659 89.620 163.747 C 63.891 201.843 178.706 206.724 161.521 238.474 C 144.333 270.231 77.580 176.793 59.617 219.120 C 41.637 261.486 155.156 244.427 144.462 278.952 C 133.769 313.473 50.055 235.307 40.663 280.356 C 31.254 325.489 139.091 287.013 135.501 323.041 C 131.910 359.084 34.058 300.035 34.058 346.158 C 34.058 392.281 131.910 333.232 135.501 369.275 C 139.091 405.303 31.254 366.826 40.663 411.960 C 50.055 457.009 133.769 378.842 144.462 413.364 C 155.156 447.889 41.637 430.830 59.617 473.196 C 77.580 515.523 144.333 422.085 161.521 453.842 C 178.706 485.592 63.891 490.472 89.620 528.568 C 115.342 566.656 162.828 461.956 185.781 489.812 C 208.731 517.662 96.883 544.289 129.376 576.782 C 161.869 609.275 188.496 497.427 216.346 520.377 C 244.201 543.330 139.501 590.815 177.589 616.538 C 215.686 642.267 220.566 527.452 252.316 544.637 C 284.073 561.825 190.635 628.578 232.962 646.541 C 275.328 664.521 258.269 551.002 292.794 561.696 C 327.315 572.389 249.149 656.103 294.198 665.494 C 339.332 674.904 300.855 567.067 336.883 570.656 C 372.926 574.248 313.877 672.100 360.000 672.100 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":196.525,\\\"max\\\":523.475},\\\"y\\\":{\\\"min\\\":182.682,\\\"max\\\":509.633}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":702.836,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":15.235,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":24.413,\\\"y\\\":347.106,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871947582506,\\\"y\\\":0.005060663941083771}},{\\\"point\\\":{\\\"x\\\":696.64,\\\"y\\\":347.106,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871947582506,\\\"y\\\":0.005060663941083773}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":599.024,\\\"y\\\":585.651,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129025918842584,\\\"y\\\":0.7012630708120217}},{\\\"point\\\":{\\\"x\\\":122.119,\\\"y\\\":585.7,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987438260231833,\\\"y\\\":0.7153719770821916}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":598.513,\\\"y\\\":108.671,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314251011779329,\\\"y\\\":-0.7754368714488866}},{\\\"point\\\":{\\\"x\\\":122.279,\\\"y\\\":108.752,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817616570058118,\\\"y\\\":-0.7315743591984958}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":677.845,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"water\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":137.52198456250272,\\\"max\\\":582.9383097088784},\\\"y\\\":{\\\"min\\\":15.494,\\\"max\\\":704.514}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"water\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"water\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#2E3BB2F1-D5FB-4B3D-A5D1-DD816AA8BC52_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 279.810 17.494 C 279.812 17.502 298.245 79.856 298.245 102.382 C 298.245 124.908 279.810 164.743 279.810 187.270 C 279.810 209.796 298.245 249.631 298.245 272.157 C 298.245 294.683 279.810 334.519 279.810 357.045 C 279.810 379.571 298.245 419.406 298.245 441.932 C 298.245 464.458 279.810 504.294 279.810 526.820 C 279.810 549.346 298.245 589.182 298.245 611.708 C 298.245 634.234 279.812 696.587 279.810 696.595 C 279.825 696.595 430.525 696.595 430.540 696.595 C 430.542 696.587 448.974 634.234 448.974 611.708 C 448.974 589.182 430.540 549.346 430.540 526.820 C 430.540 504.294 448.974 464.458 448.974 441.932 C 448.974 419.406 430.540 379.571 430.540 357.045 C 430.540 334.519 448.974 294.683 448.974 272.157 C 448.974 249.631 430.540 209.796 430.540 187.270 C 430.540 164.743 448.974 124.908 448.974 102.382 C 448.974 79.856 430.542 17.502 430.540 17.494 C 430.525 17.494 279.825 17.494 279.810 17.494 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 430.540 17.494 C 430.525 17.494 279.825 17.494 279.810 17.494 C 279.812 17.502 298.245 79.856 298.245 102.382 C 298.245 124.908 279.810 164.743 279.810 187.270 C 279.810 209.796 298.245 249.631 298.245 272.157 C 298.245 294.683 279.810 334.519 279.810 357.045 C 279.810 379.571 298.245 419.406 298.245 441.932 C 298.245 464.458 279.810 504.294 279.810 526.820 C 279.810 549.346 298.245 589.182 298.245 611.708 C 298.245 634.234 279.812 696.587 279.810 696.595 C 279.825 696.595 430.525 696.595 430.540 696.595 C 430.542 696.587 448.974 634.234 448.974 611.708 C 448.974 589.182 430.540 549.346 430.540 526.820 C 430.540 504.294 448.974 464.458 448.974 441.932 C 448.974 419.406 430.540 379.571 430.540 357.045 C 430.540 334.519 448.974 294.683 448.974 272.157 C 448.974 249.631 430.540 209.796 430.540 187.270 C 430.540 164.743 448.974 124.908 448.974 102.382 C 448.974 79.856 430.542 17.502 430.540 17.494 M 335.927 611.708 C 335.927 634.234 317.495 696.587 317.493 696.595 M 317.493 526.820 C 317.493 549.346 335.927 589.182 335.927 611.708 M 335.927 441.932 C 335.927 464.458 317.493 504.294 317.493 526.820 M 317.493 357.045 C 317.493 379.571 335.927 419.406 335.927 441.932 M 335.927 272.157 C 335.927 294.683 317.493 334.519 317.493 357.045 M 317.493 187.270 C 317.493 209.796 335.927 249.631 335.927 272.157 M 335.927 102.382 C 335.927 124.908 317.493 164.743 317.493 187.270 M 317.493 17.494 C 317.495 17.502 335.927 79.856 335.927 102.382 M 411.292 611.708 C 411.292 634.234 392.860 696.587 392.858 696.595 M 392.858 526.820 C 392.858 549.346 411.292 589.182 411.292 611.708 M 411.292 441.932 C 411.292 464.458 392.858 504.294 392.858 526.820 M 392.858 357.045 C 392.858 379.571 411.292 419.406 411.292 441.932 M 411.292 272.157 C 411.292 294.683 392.858 334.519 392.858 357.045 M 392.858 187.270 C 392.858 209.796 411.292 249.631 411.292 272.157 M 411.292 102.382 C 411.292 124.908 392.858 164.743 392.858 187.270 M 392.858 17.494 C 392.860 17.502 411.292 79.856 411.292 102.382 M 373.609 611.708 C 373.609 634.234 355.177 696.587 355.175 696.595 M 355.175 526.820 C 355.175 549.346 373.609 589.182 373.609 611.708 M 373.609 441.932 C 373.609 464.458 355.175 504.294 355.175 526.820 M 355.175 357.045 C 355.175 379.571 373.609 419.406 373.609 441.932 M 373.609 272.157 C 373.609 294.683 355.175 334.519 355.175 357.045 M 355.175 187.270 C 355.175 209.796 373.609 249.631 373.609 272.157 M 373.609 102.382 C 373.609 124.908 355.175 164.743 355.175 187.270 M 355.175 17.494 C 355.177 17.502 373.609 79.856 373.609 102.382 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 295.451 581.042 C 311.893 589.479 313.988 605.188 313.989 605.191 C 313.987 605.184 313.579 567.734 290.739 538.617 C 279.210 523.921 260.332 522.304 253.734 536.786 C 245.237 555.440 262.437 564.102 295.451 581.042 M 203.090 619.744 C 221.556 619.400 231.839 629.695 231.842 629.696 C 231.836 629.692 208.280 597.164 170.333 587.223 C 152.264 582.489 136.729 596.372 139.947 608.420 C 146.534 633.088 165.561 620.443 203.090 619.744 M 424.549 581.042 C 408.020 589.309 406.012 605.188 406.011 605.191 C 406.013 605.184 405.792 567.230 429.261 538.617 C 441.831 523.293 464.672 522.348 468.574 538.517 C 473.475 558.819 461.674 562.475 424.549 581.042 M 516.333 619.167 C 498.356 622.360 488.161 629.695 488.158 629.696 C 488.164 629.692 509.411 596.009 549.667 587.223 C 567.916 583.239 585.072 597.103 580.053 608.420 C 568.575 634.306 546.534 613.802 516.333 619.167 M 260.839 696.005 C 263.245 698.895 263.149 702.513 263.149 702.514 C 263.169 702.514 460.567 702.514 460.587 702.514 C 460.587 702.513 459.805 699.233 461.737 695.363 C 479.118 660.560 552.716 692.484 522.413 651.734 C 489.692 607.731 456.420 698.498 433.108 666.894 C 415.159 642.559 498.320 616.890 458.706 602.015 C 396.815 578.776 425.818 671.501 385.822 662.246 C 350.429 654.056 423.843 582.263 356.370 583.802 C 298.604 585.119 368.321 647.420 333.707 662.109 C 292.231 679.709 303.018 570.338 248.262 602.958 C 217.337 621.380 303.116 638.810 274.344 664.858 C 259.085 678.672 194.011 609.640 180.423 662.382 C 171.325 697.696 232.491 661.948 260.839 696.005 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":68.676,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":21.026,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":214.18,\\\"y\\\":360.935,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999869443305632,\\\"y\\\":0.005109908846835934}},{\\\"point\\\":{\\\"x\\\":505.82,\\\"y\\\":360.935,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999869443305632,\\\"y\\\":0.005109908846835945}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":700.978,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"defs\\\":[{\\\"type\\\":\\\"linearGradient\\\",\\\"id\\\":\\\"2E3BB2F1-D5FB-4B3D-A5D1-DD816AA8BC52_0\\\",\\\"x1\\\":\\\"47.97%\\\",\\\"y1\\\":\\\"16.92%\\\",\\\"x2\\\":\\\"47.97%\\\",\\\"y2\\\":\\\"131.64%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"32.94%\\\",\\\"color\\\":\\\"#ffffff\\\"},{\\\"offset\\\":\\\"100.00%\\\",\\\"color\\\":\\\"#000000\\\"}]}]},{\\\"name\\\":\\\"waterworks\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":18.77423614463172,\\\"max\\\":697.8805},\\\"y\\\":{\\\"min\\\":12.21023614463172,\\\"max\\\":688.7205000000001}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"waterworks_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"waterworks\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 554.181 246.879 C 554.181 246.868 545.758 209.542 545.758 134.142 C 545.758 58.741 554.181 21.416 554.181 21.405 C 554.191 21.407 672.737 -2.073 696.528 114.489 C 696.998 116.791 696.998 151.492 696.528 153.795 C 672.737 270.357 554.191 246.876 554.181 246.879 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 26.662 545.021 C 26.673 545.021 63.999 536.598 139.399 536.598 C 214.800 536.598 252.125 545.021 252.136 545.021 C 252.134 545.031 275.614 663.577 159.052 687.368 C 156.750 687.838 122.049 687.838 119.746 687.368 C 3.184 663.577 26.665 545.031 26.662 545.021 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 524.531 202.818 C 509.648 206.118 494.784 197.756 482.861 200.225 C 471.019 202.676 462.760 214.151 451.360 217.666 C 439.943 221.186 426.766 216.344 415.877 220.957 C 404.986 225.570 399.362 238.344 389.036 243.932 C 378.704 249.523 364.994 247.232 355.308 253.776 C 345.618 260.322 342.649 273.869 333.651 281.286 C 324.653 288.703 310.807 289.026 302.569 297.264 C 294.331 305.502 294.009 319.348 286.591 328.346 C 279.174 337.344 265.627 340.313 259.081 350.002 C 252.537 359.689 254.827 373.399 249.237 383.731 C 243.649 394.057 230.875 399.681 226.262 410.572 C 221.649 421.461 226.491 434.638 222.971 446.055 C 219.456 457.455 208.316 465.789 205.530 477.556 C 202.368 490.912 213.000 503.031 208.213 519.257 C 237.231 526.656 253.024 540.267 253.024 549.533 C 253.024 558.918 239.092 572.551 208.096 579.840 C 173.280 588.027 125.594 589.099 92.848 584.221 C 46.294 577.286 25.689 560.874 25.689 549.533 C 25.689 538.192 46.591 521.755 92.847 514.845 C 92.847 514.845 95.633 506.592 96.057 502.291 C 97.656 486.038 87.974 469.718 91.218 454.001 C 94.463 438.283 109.702 427.323 114.367 412.193 C 119.038 397.039 112.613 379.550 118.735 365.097 C 124.858 350.642 141.812 343.177 149.229 329.472 C 156.649 315.759 153.608 297.562 162.294 284.706 C 170.983 271.846 188.963 267.905 198.808 255.963 C 208.652 244.020 209.080 225.643 220.014 214.709 C 230.948 203.775 249.326 203.347 261.268 193.502 C 273.210 183.658 277.151 165.678 290.011 156.989 C 302.867 148.303 321.064 151.344 334.777 143.923 C 348.482 136.507 355.947 119.553 370.402 113.430 C 384.855 107.308 402.344 113.734 417.497 109.062 C 432.628 104.397 443.588 89.158 459.306 85.914 C 475.023 82.669 491.273 91.300 507.595 90.751 C 512.325 90.593 520.150 87.570 520.150 87.570 C 521.657 54.001 543.497 20.412 554.838 20.412 C 566.179 20.412 585.402 40.683 589.526 87.569 C 593.271 130.142 592.381 164.519 585.145 202.816 C 579.233 234.106 566.040 247.948 554.838 247.746 C 545.455 247.577 531.906 234.201 524.531 202.818 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 201.390 536.068 C 214.081 539.807 220.029 544.640 220.029 549.533 C 220.029 554.464 213.988 559.335 201.404 563.036 C 194.107 565.182 184.514 566.937 172.595 568.054 C 164.237 568.838 155.045 569.309 144.745 569.421 C 142.654 569.444 121.624 569.176 113.800 568.658 C 102.159 567.889 92.368 566.552 84.676 564.860 C 66.897 560.950 58.685 555.283 58.685 549.533 C 58.685 543.784 66.897 538.117 84.676 534.206 C 82.942 539.106 81.628 544.202 81.628 549.533 C 81.628 554.834 82.927 559.903 84.676 564.860 M 208.213 519.257 C 236.898 526.673 253.024 540.267 253.024 549.533 C 253.024 558.918 239.092 572.551 208.096 579.840 C 173.280 588.027 125.594 589.099 92.848 584.221 C 46.294 577.286 25.689 560.874 25.689 549.533 C 25.689 538.192 46.262 521.561 92.847 514.845 C 90.417 521.337 87.125 527.670 84.676 534.206 M 520.150 87.570 C 521.453 53.975 543.497 20.412 554.838 20.412 C 566.179 20.412 585.402 40.683 589.526 87.569 C 593.271 130.142 592.381 164.519 585.145 202.816 C 579.233 234.106 564.222 247.746 554.838 247.746 C 545.453 247.746 532.447 233.660 524.531 202.818 C 509.648 206.118 494.784 197.756 482.861 200.225 C 471.019 202.676 462.760 214.151 451.360 217.666 C 439.943 221.186 426.766 216.344 415.877 220.957 C 404.986 225.570 399.362 238.344 389.036 243.932 C 378.704 249.523 364.994 247.232 355.308 253.776 C 345.618 260.322 342.649 273.869 333.651 281.286 C 324.653 288.703 310.807 289.026 302.569 297.264 C 294.331 305.502 294.009 319.348 286.591 328.346 C 279.174 337.344 265.627 340.313 259.081 350.002 C 252.537 359.689 254.827 373.399 249.237 383.731 C 243.649 394.057 230.875 399.681 226.262 410.572 C 221.649 421.461 226.491 434.638 222.971 446.055 C 219.456 457.455 207.913 465.700 205.530 477.556 C 203.165 489.316 212.648 503.290 208.213 519.257 C 206.633 524.945 203.644 530.463 201.390 536.068 C 195.952 549.588 198.164 555.584 201.404 563.036 M 113.800 568.658 C 111.173 562.585 108.927 556.258 108.954 549.533 C 108.979 543.111 121.951 527.402 122.549 505.019 C 122.960 489.636 114.933 474.327 117.990 459.517 C 121.047 444.707 135.407 434.380 139.802 420.123 C 144.204 405.845 138.149 389.365 143.918 375.747 C 149.687 362.127 165.663 355.093 172.651 342.179 C 179.643 329.258 176.778 312.112 184.962 299.999 C 193.149 287.881 210.091 284.168 219.366 272.916 C 228.642 261.662 229.046 244.346 239.349 234.044 C 249.651 223.741 266.967 223.337 278.220 214.061 C 289.473 204.786 293.186 187.844 305.303 179.657 C 317.417 171.472 334.563 174.337 347.484 167.346 C 360.398 160.357 367.432 144.382 381.052 138.613 C 394.670 132.844 411.150 138.899 425.428 134.497 C 439.685 130.102 450.012 115.743 464.822 112.685 C 479.632 109.628 495.071 119.282 510.324 117.244 C 519.413 116.029 529.770 111.002 535.727 108.434 C 542.018 105.744 548.245 103.649 554.838 103.649 C 561.431 103.649 567.642 105.782 573.949 108.433 C 573.212 97.182 571.887 87.511 570.184 79.490 C 566.453 61.910 560.688 53.407 554.838 53.407 C 548.988 53.407 543.223 61.910 539.492 79.491 C 532.932 81.800 526.585 85.165 520.150 87.570 C 515.905 89.162 512.325 90.593 507.595 90.751 C 491.273 91.300 475.023 82.669 459.306 85.914 C 443.588 89.158 432.628 104.397 417.497 109.062 C 402.344 113.734 384.855 107.308 370.402 113.430 C 355.947 119.553 348.482 136.507 334.777 143.923 C 321.064 151.344 302.867 148.303 290.011 156.989 C 277.151 165.678 273.210 183.658 261.268 193.502 C 249.326 203.347 230.948 203.775 220.014 214.709 C 209.080 225.643 208.652 244.020 198.808 255.963 C 188.963 267.905 170.983 271.846 162.294 284.706 C 153.608 297.562 156.649 315.759 149.229 329.472 C 141.812 343.177 124.858 350.642 118.735 365.097 C 112.613 379.550 119.038 397.039 114.367 412.193 C 109.702 427.323 94.463 438.283 91.218 454.001 C 87.974 469.718 97.656 486.038 96.057 502.291 C 95.633 506.592 94.420 510.764 92.847 514.845 C 92.847 514.845 95.633 506.592 96.057 502.291 C 97.656 486.038 87.974 469.718 91.218 454.001 C 94.463 438.283 109.702 427.323 114.367 412.193 C 119.038 397.039 112.613 379.550 118.735 365.097 C 124.858 350.642 141.812 343.177 149.229 329.472 C 156.649 315.759 153.608 297.562 162.294 284.706 C 170.983 271.846 188.963 267.905 198.808 255.963 C 208.652 244.020 209.080 225.643 220.014 214.709 C 230.948 203.775 249.326 203.347 261.268 193.502 C 273.210 183.658 277.151 165.678 290.011 156.989 C 302.867 148.303 321.064 151.344 334.777 143.923 C 348.482 136.507 355.947 119.553 370.402 113.430 C 384.855 107.308 402.344 113.734 417.497 109.062 C 432.628 104.397 443.588 89.158 459.306 85.914 C 475.023 82.669 491.273 91.300 507.595 90.751 C 512.325 90.593 520.150 87.570 520.150 87.570 C 521.657 54.001 543.497 20.412 554.838 20.412 C 566.179 20.412 585.402 40.683 589.526 87.569 C 593.271 130.142 592.381 164.519 585.145 202.816 C 579.233 234.106 566.040 247.948 554.838 247.746 C 545.455 247.577 531.906 234.201 524.531 202.818 C 530.329 201.533 535.726 198.343 541.366 196.083 C 545.112 208.803 549.945 214.751 554.838 214.751 C 559.731 214.751 564.564 208.803 568.303 196.112 C 570.415 188.943 572.151 179.328 573.337 167.330 C 567.235 164.686 561.223 161.848 554.838 162.366 C 538.568 163.688 525.159 173.345 516.185 174.171 C 502.880 175.396 489.536 167.559 476.677 170.213 C 463.816 172.868 454.849 185.336 442.470 189.153 C 430.072 192.975 415.762 187.718 403.938 192.727 C 392.111 197.736 386.004 211.607 374.791 217.675 C 363.571 223.747 348.683 221.259 338.165 228.366 C 327.643 235.474 324.418 250.185 314.647 258.239 C 304.876 266.294 289.841 266.644 280.895 275.590 C 271.949 284.536 271.599 299.572 263.544 309.343 C 255.490 319.113 240.779 322.338 233.671 332.859 C 226.564 343.378 229.052 358.266 222.980 369.486 C 216.912 380.699 203.041 386.806 198.032 398.633 C 193.023 410.458 198.280 424.767 194.458 437.165 C 190.641 449.544 178.173 458.511 175.518 471.372 C 172.864 484.231 181.327 497.954 179.476 510.880 C 177.323 525.915 167.671 543.127 167.671 549.533 C 167.671 556.054 170.074 562.144 172.595 568.054 M 144.745 569.421 C 141.937 562.923 139.415 556.454 139.415 549.533 C 139.415 531.204 151.027 517.694 152.081 508.059 C 153.640 493.808 144.986 479.465 147.834 465.667 C 150.682 451.868 164.060 442.247 168.156 428.964 C 172.257 415.661 166.616 400.307 171.991 387.620 C 177.366 374.930 192.249 368.377 198.760 356.345 C 205.274 344.307 202.605 328.332 210.231 317.046 C 217.858 305.756 233.643 302.297 242.285 291.813 C 250.927 281.329 251.303 265.196 260.902 255.597 C 270.501 245.998 286.634 245.622 297.118 236.980 C 307.601 228.338 311.061 212.553 322.350 204.925 C 333.637 197.300 349.612 199.969 361.650 193.455 C 373.682 186.944 380.235 172.061 392.925 166.685 C 405.612 161.311 420.966 166.952 434.269 162.851 C 447.552 158.756 457.173 145.378 470.972 142.529 C 484.770 139.681 499.050 147.580 513.365 146.776 C 519.994 146.404 536.891 132.962 554.838 134.110 C 561.312 134.524 566.703 136.842 574.757 139.153 C 574.843 128.007 574.568 117.875 573.949 108.433 M 574.757 139.153 C 574.674 149.953 574.122 159.396 573.337 167.330 M 539.492 79.491 C 550.611 75.575 562.705 76.614 570.184 79.490 M 541.366 196.083 C 552.601 191.583 563.364 193.898 568.303 196.112 M 25.689 549.533 C 25.689 538.192 46.591 521.755 92.847 514.845 M 92.848 584.221 C 46.294 577.286 25.689 560.874 25.689 549.533 M 208.096 579.840 C 173.280 588.027 125.594 589.099 92.848 584.221 M 253.024 549.533 C 253.024 558.918 239.092 572.551 208.096 579.840 M 208.213 519.257 C 237.231 526.656 253.024 540.267 253.024 549.533 M 205.530 477.556 C 202.368 490.912 213.000 503.031 208.213 519.257 M 222.971 446.055 C 219.456 457.455 208.316 465.789 205.530 477.556 M 226.262 410.572 C 221.649 421.461 226.491 434.638 222.971 446.055 M 249.237 383.731 C 243.649 394.057 230.875 399.681 226.262 410.572 M 259.081 350.002 C 252.537 359.689 254.827 373.399 249.237 383.731 M 286.591 328.346 C 279.174 337.344 265.627 340.313 259.081 350.002 M 302.569 297.264 C 294.331 305.502 294.009 319.348 286.591 328.346 M 333.651 281.286 C 324.653 288.703 310.807 289.026 302.569 297.264 M 355.308 253.776 C 345.618 260.322 342.649 273.869 333.651 281.286 M 389.036 243.932 C 378.704 249.523 364.994 247.232 355.308 253.776 M 415.877 220.957 C 404.986 225.570 399.362 238.344 389.036 243.932 M 451.360 217.666 C 439.943 221.186 426.766 216.344 415.877 220.957 M 482.861 200.225 C 471.019 202.676 462.760 214.151 451.360 217.666 M 524.531 202.818 C 509.648 206.118 494.784 197.756 482.861 200.225 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 220.029 549.533 C 220.029 554.464 213.988 559.335 201.404 563.036 C 198.164 555.584 195.952 549.588 201.390 536.068 C 214.081 539.807 220.029 544.640 220.029 549.533 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 58.685 549.533 C 58.685 543.784 66.897 538.117 84.676 534.206 C 82.942 539.106 81.628 544.202 81.628 549.533 C 81.628 554.834 82.927 559.903 84.676 564.860 C 66.897 560.950 58.685 555.283 58.685 549.533 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 554.838 53.407 C 560.688 53.407 566.453 61.910 570.184 79.490 C 562.705 76.614 550.611 75.575 539.492 79.491 C 543.223 61.910 548.988 53.407 554.838 53.407 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 554.838 214.751 C 549.945 214.751 545.112 208.803 541.366 196.083 C 552.601 191.583 563.364 193.898 568.303 196.112 C 564.564 208.803 559.731 214.751 554.838 214.751 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 513.308 257.074 C 521.377 259.392 529.016 252.749 531.615 238.085 C 537.412 205.382 564.014 205.821 564.017 205.818 C 564.012 205.819 536.342 201.426 514.408 217.185 C 495.194 230.990 501.062 253.555 513.308 257.074 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 513.308 13.662 C 521.377 11.344 529.016 17.987 531.615 32.651 C 537.412 65.353 564.014 64.914 564.017 64.917 C 564.012 64.916 536.342 69.309 514.408 53.550 C 495.195 39.746 501.063 17.180 513.308 13.662 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 20.226 504.272 C 17.908 512.341 24.551 519.979 39.215 522.579 C 71.918 528.376 71.479 554.978 71.482 554.981 C 71.481 554.976 75.874 527.305 60.114 505.372 C 46.310 486.158 23.744 492.026 20.226 504.272 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 263.638 504.272 C 265.956 512.341 259.313 519.979 244.649 522.579 C 211.946 528.376 212.386 554.978 212.382 554.981 C 212.383 554.976 207.990 527.306 223.749 505.372 C 237.554 486.158 260.120 492.026 263.638 504.272 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":509.206,\\\"y\\\":504.173,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7070833488209456,\\\"y\\\":-0.7071302127756648}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":697.816,\\\"y\\\":139.815,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":181.621,\\\"y\\\":175.248,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7106929355109912,\\\"y\\\":-0.7035023464173875}},{\\\"point\\\":{\\\"x\\\":348.914,\\\"y\\\":342.541,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7035023464173885,\\\"y\\\":0.7106929355109903}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":243.634,\\\"y\\\":627.542,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712873763811751,\\\"y\\\":0.7012923761662232}},{\\\"point\\\":{\\\"x\\\":35.268,\\\"y\\\":627.605,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987087443167477,\\\"y\\\":0.7154062416664491}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":143.42,\\\"y\\\":688.994,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":635.543,\\\"y\\\":30.399,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7012356970404198,\\\"y\\\":-0.7129295176917818}},{\\\"point\\\":{\\\"x\\\":635.606,\\\"y\\\":238.765,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7154062416664484,\\\"y\\\":0.6987087443167483}}]}},{\\\"name\\\":\\\"wave\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":17.232901539241478,\\\"max\\\":677.234},\\\"y\\\":{\\\"min\\\":58.151757242838634,\\\"max\\\":583.1494785407912}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wave\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"Layer_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 46.599 319.536 C 89.157 50.190 410.686 38.718 499.854 140.403 C 524.050 167.997 550.007 223.835 507.356 227.340 C 460.387 231.199 386.275 281.623 385.337 356.280 C 384.278 440.605 522.830 502.199 522.843 502.214 C 522.837 502.214 457.479 500.270 457.473 500.270 C 457.449 500.275 328.431 546.924 219.637 556.838 C 133.964 564.646 24.325 460.513 46.599 319.536 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 103.011 316.457 C 103.016 316.473 95.189 398.422 152.592 468.067 C 218.734 548.315 327.634 546.154 327.651 546.161 M 176.775 183.897 C 176.773 183.914 137.003 285.820 151.475 349.079 C 165.022 408.297 193.233 438.964 239.363 478.488 C 286.638 518.993 362.593 540.427 362.606 540.433 M 241.260 187.737 C 241.257 187.752 206.501 276.406 215.574 332.948 C 225.286 393.469 246.619 429.316 290.981 471.615 C 325.023 504.073 399.130 526.131 399.141 526.136 M 317.769 181.222 C 317.764 181.237 269.916 267.956 274.581 326.703 C 279.039 382.840 298.777 416.162 336.819 457.685 C 365.559 489.056 430.348 514.726 430.357 514.732 M 453.727 170.256 C 453.715 170.273 338.055 222.555 331.124 343.155 C 328.140 395.077 362.209 434.468 393.757 461.532 C 420.821 484.750 475.503 503.337 475.511 503.341 \\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wave\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 158.205 457.279 C 155.134 469.823 145.142 479.946 133.137 483.801 C 154.898 513.719 189.902 528.054 234.610 534.094 C 332.542 547.325 382.056 494.086 461.985 487.805 C 575.633 478.873 675.212 555.994 675.234 556.001 C 675.212 555.998 564.122 505.700 464.075 525.433 C 403.540 537.373 344.486 591.066 221.206 579.538 C 154.007 573.254 58.019 546.128 53.262 453.095 C 52.811 444.276 54.549 435.546 57.730 427.050 C 62.025 415.582 72.813 403.686 81.620 399.599 C 127.322 378.389 168.724 414.316 158.205 457.279 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 125.271 453.875 C 122.464 456.330 110.718 454.717 115.780 448.438 M 110.842 428.083 C 129.548 426.277 134.803 445.540 125.271 453.875 M 93.162 466.739 C 86.554 453.035 90.569 430.041 110.842 428.083 M 133.137 483.801 C 117.741 488.749 100.878 482.739 93.162 466.739 M 158.205 457.279 C 155.134 469.823 145.142 479.946 133.137 483.801 C 154.898 513.719 189.902 528.054 234.610 534.094 C 332.542 547.325 382.056 494.086 461.985 487.805 C 575.633 478.873 675.212 555.994 675.234 556.001 C 675.212 555.998 564.122 505.700 464.075 525.433 C 403.540 537.373 344.486 591.066 221.206 579.538 C 154.007 573.254 58.019 546.128 53.262 453.095 C 52.811 444.276 54.549 435.546 57.730 427.050 C 62.025 415.582 72.813 403.686 81.620 399.599 C 127.322 378.389 168.724 414.316 158.205 457.279 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 57.730 427.050 C 62.025 415.582 72.813 403.686 81.620 399.599 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 53.262 453.095 C 52.811 444.276 54.549 435.546 57.730 427.050 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 57.730 427.050 C 62.025 415.582 72.813 403.686 81.620 399.599 C 75.358 387.785 76.211 371.927 74.847 361.708 C 92.548 372.373 117.250 372.850 133.923 360.100 C 169.105 333.194 162.466 285.029 122.039 264.290 C 117.145 261.777 111.075 259.466 104.377 257.792 C 90.628 254.356 56.746 254.157 33.667 289.527 C 33.789 290.458 22.472 308.585 19.789 335.633 C 16.564 368.151 27.320 415.946 53.262 453.095 C 52.811 444.276 54.549 435.546 57.730 427.050 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 57.730 427.050 C 62.025 415.582 72.813 403.686 81.620 399.599 C 75.358 387.785 76.211 371.927 74.847 361.708 C 92.548 372.373 117.250 372.850 133.923 360.100 C 169.105 333.194 162.466 285.029 122.039 264.290 C 117.145 261.777 111.075 259.466 104.377 257.792 C 90.628 254.356 56.746 254.157 33.667 289.527 C 33.789 290.458 22.472 308.585 19.789 335.633 C 16.564 368.151 27.320 415.946 53.262 453.095 C 52.811 444.276 54.549 435.546 57.730 427.050 M 60.392 324.581 C 56.878 340.320 62.539 354.088 74.847 361.708 M 105.116 299.907 C 85.258 286.562 64.889 304.435 60.392 324.581 M 102.392 333.681 C 116.756 331.582 122.999 311.925 105.116 299.907 M 96.406 321.480 C 89.082 323.312 92.637 335.106 102.392 333.681 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 33.667 289.527 C 56.746 254.157 90.628 254.356 104.377 257.792 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 104.377 257.792 C 111.075 259.466 117.145 261.777 122.039 264.290 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 122.039 264.290 C 126.137 248.736 134.129 237.023 144.190 230.658 C 148.759 240.393 155.868 248.459 165.415 253.174 C 202.993 271.735 241.180 253.676 251.671 216.580 C 254.858 205.310 255.537 192.474 252.995 178.392 C 251.801 171.777 249.508 164.557 246.117 157.695 C 240.267 145.859 230.814 135.716 218.687 129.410 C 191.988 115.528 159.126 111.028 128.183 124.646 C 53.969 152.785 29.558 258.281 33.667 289.527 C 56.746 254.157 90.628 254.356 104.377 257.792 C 111.075 259.466 117.145 261.777 122.039 264.290 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 122.039 264.290 C 126.137 248.736 134.129 237.023 144.190 230.658 C 148.759 240.393 155.868 248.459 165.415 253.174 C 202.993 271.735 241.180 253.676 251.671 216.580 C 254.858 205.310 255.537 192.474 252.995 178.392 C 251.801 171.777 249.508 164.557 246.117 157.695 C 240.267 145.859 230.814 135.716 218.687 129.410 C 191.988 115.528 159.126 111.028 128.183 124.646 C 53.969 152.785 29.558 258.281 33.667 289.527 C 56.746 254.157 90.628 254.356 104.377 257.792 C 111.075 259.466 117.145 261.777 122.039 264.290 M 167.569 164.888 C 139.304 173.436 132.949 206.712 144.190 230.658 M 211.842 197.924 C 216.120 172.406 188.937 158.426 167.569 164.888 M 177.359 210.321 C 185.840 223.533 207.989 220.905 211.842 197.924 M 186.704 198.977 C 181.630 192.581 171.600 201.349 177.359 210.321 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 252.995 178.392 C 251.801 171.777 249.508 164.557 246.117 157.695 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 246.117 157.695 C 240.267 145.859 230.814 135.716 218.687 129.410 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 218.687 129.410 C 191.988 115.528 159.126 111.028 128.183 124.646 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 251.671 216.580 C 254.858 205.310 255.537 192.474 252.995 178.392 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 252.995 178.392 C 251.801 171.777 249.508 164.557 246.117 157.695 C 240.267 145.859 230.814 135.716 218.687 129.410 C 191.988 115.528 159.126 111.028 128.183 124.646 C 130.084 123.925 165.710 97.104 207.131 78.410 C 305.127 34.182 362.358 84.250 363.216 83.937 C 390.854 106.917 400.605 132.595 399.536 152.620 C 398.060 180.276 387.756 207.984 366.551 227.213 C 325.264 264.652 273.630 253.767 251.671 216.580 C 254.858 205.310 255.537 192.474 252.995 178.392 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 252.995 178.392 C 251.801 171.777 249.508 164.557 246.117 157.695 C 240.267 145.859 230.814 135.716 218.687 129.410 C 191.988 115.528 159.126 111.028 128.183 124.646 C 130.084 123.925 165.710 97.104 207.131 78.410 C 305.127 34.182 362.358 84.250 363.216 83.937 C 390.854 106.917 400.605 132.595 399.536 152.620 C 398.060 180.276 387.756 207.984 366.551 227.213 C 325.264 264.652 273.630 253.767 251.671 216.580 C 254.858 205.310 255.537 192.474 252.995 178.392 M 330.248 132.007 C 301.976 107.040 260.374 126.415 246.117 157.695 M 324.640 196.068 C 352.526 184.683 349.727 149.209 330.248 132.007 M 291.255 169.513 C 283.364 185.998 299.526 206.322 324.640 196.068 M 308.208 171.822 C 311.435 162.883 296.613 158.318 291.255 169.513 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 366.551 227.213 C 387.756 207.984 398.060 180.276 399.536 152.620 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 399.536 152.620 C 400.605 132.595 390.854 106.917 363.216 83.937 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 405.824 297.616 C 377.746 278.215 365.859 251.122 366.551 227.213 C 387.756 207.984 398.060 180.276 399.536 152.620 C 400.605 132.595 390.854 106.917 363.216 83.937 C 423.781 61.834 467.963 66.436 516.985 96.421 C 552.055 117.873 586.927 178.774 570.459 235.284 C 561.117 267.340 531.550 297.498 497.946 308.900 C 466.060 319.720 429.019 313.644 405.824 297.616 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 448.502 198.434 C 462.432 201.507 461.164 219.308 450.316 218.015 M 429.210 242.707 C 409.492 219.163 428.297 193.976 448.502 198.434 M 502.395 234.138 C 487.038 259.650 449.522 266.959 429.210 242.707 M 428.876 142.456 C 483.782 132.738 530.543 187.379 502.395 234.138 M 399.536 152.620 C 408.065 147.909 417.916 144.396 428.876 142.456 M 405.824 297.616 C 377.746 278.215 365.859 251.122 366.551 227.213 C 387.756 207.984 398.060 180.276 399.536 152.620 C 400.605 132.595 390.854 106.917 363.216 83.937 C 423.781 61.834 467.963 66.436 516.985 96.421 C 552.055 117.873 586.927 178.774 570.459 235.284 C 561.117 267.340 531.550 297.498 497.946 308.900 C 466.060 319.720 429.019 313.644 405.824 297.616 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":698.889,\\\"y\\\":572.297,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8445458300936202,\\\"y\\\":-0.5354832778635371}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":302.332,\\\"y\\\":51.916,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":18.112,\\\"y\\\":337.488,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872791315688,\\\"y\\\":0.005043964218926946}},{\\\"point\\\":{\\\"x\\\":586.552,\\\"y\\\":337.488,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872769562663,\\\"y\\\":0.005044395463444383}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":642.219,\\\"y\\\":539.202,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128968614402305,\\\"y\\\":0.7012688963219949}},{\\\"point\\\":{\\\"x\\\":100.611,\\\"y\\\":539.243,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986784692109597,\\\"y\\\":0.7154358089032378}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":532.933,\\\"y\\\":112.123,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6313969658740629,\\\"y\\\":-0.7754597807011188}},{\\\"point\\\":{\\\"x\\\":101.321,\\\"y\\\":135.935,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.681745359745414,\\\"y\\\":-0.73158954644363}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":302.332,\\\"y\\\":575.836,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"wheel\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":41.183,\\\"max\\\":678.817},\\\"y\\\":{\\\"min\\\":22.119,\\\"max\\\":659.755}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wheel\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wheel\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 91.690 215.089 C 91.708 215.096 275.423 291.194 275.441 291.201 C 275.442 291.203 288.579 298.483 283.411 310.959 C 278.243 323.436 263.806 319.295 263.804 319.295 C 263.786 319.288 80.071 243.191 80.053 243.183 C 80.052 243.181 65.822 235.935 71.163 223.043 C 76.503 210.151 91.688 215.090 91.690 215.089 M 384.895 245.101 C 384.903 245.083 461.000 61.368 461.008 61.349 C 461.010 61.349 468.289 48.212 480.766 53.380 C 493.242 58.548 489.101 72.984 489.102 72.986 C 489.094 73.005 412.997 256.720 412.989 256.738 C 412.987 256.739 405.741 270.969 392.849 265.628 C 379.958 260.288 384.896 245.104 384.895 245.101 M 445.214 289.064 C 445.233 289.056 628.947 212.959 628.966 212.951 C 628.968 212.952 643.404 208.811 648.572 221.287 C 653.740 233.763 640.604 241.043 640.603 241.045 C 640.584 241.053 456.869 317.150 456.851 317.158 C 456.849 317.157 441.664 322.095 436.324 309.203 C 430.984 296.311 445.214 289.066 445.214 289.064 M 459.828 623.129 C 459.820 623.110 383.723 439.396 383.715 439.377 C 383.716 439.375 379.574 424.939 392.051 419.771 C 404.527 414.603 411.807 427.740 411.809 427.740 C 411.817 427.759 487.914 611.474 487.921 611.492 C 487.921 611.494 492.859 626.679 479.967 632.019 C 467.075 637.359 459.830 623.130 459.828 623.129 M 466.266 366.957 C 466.283 366.965 640.966 440.850 640.983 440.858 C 640.984 440.860 654.120 448.139 648.953 460.616 C 643.785 473.092 629.348 468.951 629.346 468.952 C 629.328 468.944 445.613 392.847 445.594 392.839 C 445.593 392.837 430.727 385.309 436.704 372.700 C 444.881 355.452 466.263 366.958 466.266 366.957 M 234.144 610.189 C 234.151 610.170 310.249 426.455 310.256 426.437 C 310.258 426.436 317.538 413.300 330.014 418.467 C 342.491 423.635 338.350 438.072 338.350 438.074 C 338.343 438.092 262.245 621.807 262.238 621.826 C 262.236 621.826 254.990 636.056 242.098 630.716 C 229.206 625.376 234.145 610.191 234.144 610.189 M 79.204 440.670 C 79.222 440.663 262.937 364.565 262.955 364.558 C 262.957 364.559 277.394 360.417 282.562 372.893 C 287.730 385.370 274.593 392.649 274.592 392.651 C 274.574 392.659 90.859 468.756 90.841 468.764 C 90.839 468.763 75.654 473.701 70.314 460.810 C 64.974 447.918 79.203 440.672 79.204 440.670 M 307.810 256.125 C 307.802 256.107 231.705 72.392 231.697 72.373 C 231.698 72.371 227.557 57.935 240.033 52.767 C 252.509 47.599 259.789 60.736 259.791 60.737 C 259.799 60.755 335.896 244.470 335.904 244.488 C 335.903 244.490 340.841 259.675 327.949 265.015 C 315.057 270.355 307.812 256.126 307.810 256.125 M 160.831 122.101 C 160.845 122.115 301.454 262.725 301.468 262.739 C 301.468 262.741 310.819 274.494 301.270 284.043 C 291.721 293.592 279.968 284.241 279.966 284.241 C 279.952 284.227 139.342 143.618 139.328 143.604 C 139.328 143.601 128.955 131.462 138.822 121.595 C 148.689 111.728 160.829 122.101 160.831 122.101 M 420.232 262.034 C 420.246 262.020 560.856 121.411 560.870 121.396 C 560.872 121.396 572.625 112.046 582.174 121.595 C 591.722 131.144 582.372 142.897 582.372 142.899 C 582.358 142.913 441.749 283.522 441.734 283.537 C 441.732 283.537 429.593 293.910 419.726 284.043 C 409.859 274.176 420.232 262.036 420.232 262.034 M 459.136 325.733 C 459.156 325.733 658.008 325.733 658.027 325.733 C 658.029 325.735 672.951 327.433 672.951 340.938 C 672.951 354.442 658.029 356.140 658.027 356.142 C 658.008 356.142 459.156 356.142 459.136 356.142 C 459.134 356.140 443.216 354.892 443.215 340.938 C 443.215 326.983 459.134 325.735 459.136 325.733 M 344.796 639.961 C 344.796 639.942 344.796 441.090 344.796 441.070 C 344.797 441.069 346.496 426.146 360.000 426.146 C 373.504 426.146 375.203 441.069 375.204 441.070 C 375.204 441.090 375.204 639.942 375.204 639.961 C 375.203 639.963 373.954 655.882 360.000 655.882 C 346.046 655.882 344.797 639.963 344.796 639.961 M 441.276 400.252 C 441.290 400.267 581.900 540.876 581.914 540.890 C 581.914 540.892 591.264 552.645 581.715 562.194 C 572.166 571.743 560.414 562.393 560.412 562.393 C 560.398 562.379 419.788 421.769 419.774 421.755 C 419.774 421.753 409.401 409.613 419.268 399.746 C 429.135 389.879 441.274 400.252 441.276 400.252 M 141.243 541.641 C 141.257 541.627 281.867 401.017 281.881 401.003 C 281.883 401.003 293.636 391.653 303.185 401.202 C 312.734 410.751 303.383 422.503 303.383 422.505 C 303.369 422.520 162.759 563.129 162.745 563.143 C 162.743 563.143 150.604 573.516 140.737 563.649 C 130.870 553.782 141.243 541.643 141.243 541.641 M 62.969 325.733 C 62.989 325.733 261.841 325.733 261.860 325.733 C 261.862 325.735 276.785 327.433 276.785 340.938 C 276.785 354.442 261.862 356.140 261.860 356.142 C 261.841 356.142 62.989 356.142 62.969 356.142 C 62.968 356.140 47.049 354.892 47.049 340.938 C 47.049 326.983 62.968 325.735 62.969 325.733 M 344.796 242.719 C 344.796 242.699 344.796 43.848 344.796 43.828 C 344.797 43.827 346.496 28.904 360.000 28.904 C 373.504 28.904 375.203 43.827 375.204 43.828 C 375.204 43.848 375.204 242.699 375.204 242.719 C 375.203 242.721 373.954 258.640 360.000 258.640 C 346.046 258.640 344.797 242.721 344.796 242.719 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 449.348 C 390.002 449.348 417.104 437.246 436.706 417.644 C 456.308 398.042 468.410 370.940 468.410 340.938 C 468.410 310.936 456.308 283.834 436.706 264.232 C 417.104 244.630 390.002 232.528 360.000 232.528 C 329.998 232.528 302.896 244.630 283.294 264.232 C 263.692 283.834 251.590 310.936 251.590 340.938 C 251.590 370.940 263.692 398.042 283.294 417.644 C 302.896 437.246 329.998 449.348 360.000 449.348 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 171.199 529.739 C 219.446 577.986 286.155 607.772 360.000 607.772 C 433.845 607.772 500.554 577.986 548.801 529.739 C 597.048 481.492 626.834 414.783 626.834 340.938 C 626.834 267.092 597.049 200.383 548.801 152.136 C 500.554 103.889 433.845 74.104 360.000 74.104 C 286.155 74.104 219.446 103.889 171.199 152.136 C 122.952 200.383 93.166 267.092 93.166 340.938 C 93.166 414.783 122.952 481.492 171.199 529.739 M 135.832 565.106 C 193.117 622.391 272.322 657.755 360.000 657.755 C 447.678 657.755 526.883 622.391 584.168 565.106 C 641.453 507.821 676.817 428.616 676.817 340.938 C 676.817 253.260 641.453 174.055 584.168 116.770 C 526.883 59.484 447.679 24.119 360.000 24.119 C 272.322 24.119 193.117 59.484 135.832 116.770 C 78.547 174.055 43.183 253.259 43.183 340.938 C 43.183 428.616 78.547 507.821 135.832 565.106 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":269.739,\\\"max\\\":450.261},\\\"y\\\":{\\\"min\\\":251.245,\\\"max\\\":431.766}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":703.981,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":19.895,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":39.512,\\\"y\\\":342.422,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999875191515549,\\\"y\\\":0.004996152631640931}},{\\\"point\\\":{\\\"x\\\":681.511,\\\"y\\\":342.422,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999875191515549,\\\"y\\\":0.004996152631640918}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":588.284,\\\"y\\\":570.239,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129114031071889,\\\"y\\\":0.7012541132283925}},{\\\"point\\\":{\\\"x\\\":132.825,\\\"y\\\":570.286,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986926746712067,\\\"y\\\":0.715421935895731}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":587.796,\\\"y\\\":114.709,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314471500328139,\\\"y\\\":-0.7754189169187434}},{\\\"point\\\":{\\\"x\\\":132.978,\\\"y\\\":114.786,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.681724678395931,\\\"y\\\":-0.7316088181986083}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":638.591,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"willendorf\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":165.09062467683822,\\\"max\\\":552.7442374791668},\\\"y\\\":{\\\"min\\\":12.473142486910888,\\\"max\\\":663.6677602138432}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"willendorf\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"willendorf\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 215.609 296.629 C 215.608 296.630 206.529 304.586 201.237 304.271 C 164.047 302.056 198.776 198.841 220.819 155.257 C 235.725 125.786 286.229 144.434 309.575 124.969 C 312.117 122.850 311.005 118.551 309.535 116.268 C 298.776 99.572 288.031 86.771 291.478 64.883 C 295.906 36.765 320.446 15.135 357.214 14.488 C 394.199 13.836 419.476 34.715 424.765 62.927 C 429.018 85.618 422.011 101.518 408.680 117.344 C 407.079 119.244 404.636 122.719 406.594 125.027 C 425.430 147.222 476.596 127.163 491.178 155.231 C 512.939 197.118 536.002 289.000 525.468 295.040 C 520.519 297.878 509.688 297.966 509.688 297.966 C 519.752 308.834 549.944 341.440 550.731 386.283 C 551.598 435.657 509.615 448.676 501.683 469.775 C 496.542 483.452 499.922 505.812 492.542 523.839 C 484.554 543.352 455.425 575.694 454.213 580.233 C 448.125 603.031 431.288 608.503 432.072 634.274 C 432.336 642.967 426.653 655.433 422.873 657.450 C 417.427 660.357 407.305 659.896 403.071 660.526 C 400.227 660.950 393.068 658.505 391.582 657.242 C 388.386 654.526 375.099 631.076 373.329 626.251 C 363.856 600.424 362.206 574.584 360.133 546.882 C 359.563 539.268 360.316 528.882 361.189 520.104 C 360.658 518.500 360.695 516.991 360.708 515.554 C 360.708 515.554 360.708 515.554 361.189 520.104 C 360.772 508.270 360.271 502.770 358.102 501.451 C 355.903 500.114 350.437 499.908 347.475 498.420 C 334.424 491.865 309.735 471.665 310.497 466.759 C 311.493 460.345 351.953 474.423 360.223 474.389 C 368.093 474.358 406.421 460.735 407.491 466.816 C 408.350 471.699 382.782 490.626 370.423 498.426 C 368.525 499.625 365.132 500.659 363.708 501.726 C 361.776 503.173 361.331 508.669 360.708 515.554 C 360.866 517.045 361.032 518.599 361.189 520.104 C 362.077 528.562 363.008 538.028 363.233 545.077 C 364.108 572.517 368.145 597.675 365.101 624.754 C 364.639 628.859 360.088 650.078 358.105 652.804 C 355.988 655.714 343.170 662.236 337.900 661.628 C 333.871 661.162 324.407 660.802 319.253 658.032 C 316.458 656.530 311.342 647.730 311.450 641.287 C 311.907 614.133 296.983 606.161 285.383 583.198 C 283.407 579.286 245.040 562.823 232.745 547.464 C 215.048 525.356 214.930 492.135 206.252 472.282 C 197.702 452.720 165.179 433.581 167.179 389.663 C 169.804 332.046 201.524 336.034 213.714 305.530 C 214.904 303.600 215.239 299.525 215.609 296.629 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 351.571 232.489 C 350.945 291.811 360.638 325.716 341.581 352.982 C 324.507 377.411 299.868 386.353 271.034 378.579 C 240.874 370.446 223.979 349.060 221.089 318.020 C 219.495 300.898 233.159 291.799 239.194 278.689 M 357.941 232.339 C 370.260 295.447 362.220 380.550 449.986 382.433 C 478.389 383.042 502.990 332.833 494.030 292.544 C 475.950 283.109 457.227 264.761 440.918 259.397 C 427.223 254.893 408.722 248.055 394.309 247.689 C 387.153 247.508 371.242 254.520 370.782 251.658 C 370.276 248.512 387.272 246.645 387.869 243.665 C 388.448 240.773 367.989 247.946 367.127 245.200 C 366.054 241.783 383.185 241.221 384.744 235.661 C 378.875 234.336 368.283 237.759 367.507 236.551 C 365.613 233.604 379.585 229.842 384.289 228.872 C 402.932 225.028 422.373 231.696 441.563 234.718 C 449.295 235.935 460.465 240.602 469.054 244.661 C 471.282 245.646 473.367 246.657 475.154 247.543 C 479.030 249.464 481.506 250.794 481.507 250.795 C 481.506 250.791 476.763 236.534 472.941 221.945 M 494.030 292.544 C 499.259 295.325 502.438 297.524 509.688 297.966 C 517.657 298.452 520.519 297.878 525.468 295.040 C 536.002 289.000 512.939 197.118 491.178 155.231 C 476.596 127.163 425.430 147.222 406.594 125.027 C 404.636 122.719 407.079 119.244 408.680 117.344 C 422.011 101.518 429.018 85.618 424.765 62.927 C 419.476 34.715 394.199 13.836 357.214 14.488 C 320.446 15.135 295.906 36.765 291.478 64.883 C 288.031 86.771 298.776 99.572 309.535 116.268 C 311.005 118.551 312.117 122.850 309.575 124.969 C 286.229 144.434 235.725 125.786 220.819 155.257 C 198.776 198.841 164.047 302.056 201.237 304.271 C 206.529 304.586 215.608 296.630 215.609 296.629 C 215.615 296.624 267.401 250.568 272.691 252.239 C 284.530 255.979 301.643 248.252 313.989 249.562 C 321.046 250.311 336.140 258.388 336.858 255.605 C 337.642 252.572 321.240 249.104 320.917 246.135 C 320.598 243.217 340.162 252.124 341.336 249.512 C 342.436 247.068 331.589 243.010 330.911 238.744 C 335.889 238.213 344.282 240.730 345.215 239.983 C 348.991 236.961 327.979 232.016 321.473 230.728 C 305.759 227.618 289.179 229.510 273.047 232.155 C 268.390 232.918 262.792 235.619 257.038 238.009 C 246.757 242.599 236.228 247.197 233.007 248.894 C 231.811 249.524 238.548 231.130 241.319 222.248 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":310.141,\\\"max\\\":409.859},\\\"y\\\":{\\\"min\\\":26.979,\\\"max\\\":126.697}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":368.359,\\\"y\\\":701.625,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":17.691,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":211.902,\\\"y\\\":299.162,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871545278943,\\\"y\\\":0.005068607225371273}},{\\\"point\\\":{\\\"x\\\":509.144,\\\"y\\\":299.162,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871545278943,\\\"y\\\":0.005068607225371273}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":516.129,\\\"y\\\":446.583,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128878822340616,\\\"y\\\":0.7012780242983767}},{\\\"point\\\":{\\\"x\\\":192.423,\\\"y\\\":446.616,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698750931414721,\\\"y\\\":0.7153650367798666}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":486.135,\\\"y\\\":146.578,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314390702479099,\\\"y\\\":-0.7754254964627196}},{\\\"point\\\":{\\\"x\\\":230.513,\\\"y\\\":146.622,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6816797197040873,\\\"y\\\":-0.7316507088386897}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":367.314,\\\"y\\\":601.832,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"wind\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":156.64822393686316,\\\"max\\\":553.2045129094946},\\\"y\\\":{\\\"min\\\":25.96870002188763,\\\"max\\\":691.074}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wind\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wind\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 438.462 283.668 C 467.629 240.208 463.902 208.350 425.028 162.015 C 439.941 156.785 456.304 143.679 462.385 125.813 C 470.724 101.308 464.071 70.174 448.075 51.807 C 425.575 25.972 385.595 23.993 363.398 32.450 C 316.049 50.490 310.221 86.132 308.925 106.676 C 306.645 142.805 325.362 162.454 336.659 175.715 C 368.905 213.565 393.481 234.501 390.321 265.974 C 384.144 327.490 407.733 355.519 407.735 355.528 C 407.738 355.521 405.705 332.479 438.462 283.668 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 438.462 283.668 C 467.629 240.208 463.902 208.350 425.028 162.015 C 439.941 156.785 456.304 143.679 462.385 125.813 C 470.724 101.308 464.071 70.174 448.075 51.807 C 425.575 25.972 385.595 23.993 363.398 32.450 C 316.049 50.490 310.221 86.132 308.925 106.676 C 306.645 142.805 325.362 162.454 336.659 175.715 C 368.905 213.565 393.481 234.501 390.321 265.974 C 384.144 327.490 407.733 355.519 407.735 355.528 C 407.738 355.521 405.705 332.479 438.462 283.668 M 348.756 97.068 C 334.760 142.300 373.956 179.925 425.028 162.015 M 424.886 86.782 C 409.292 54.694 358.535 65.466 348.756 97.068 M 402.594 129.352 C 425.101 129.519 433.373 104.248 424.886 86.782 M 387.206 101.437 C 377.024 110.538 382.325 129.201 402.594 129.352 M 398.234 107.904 C 403.030 102.667 394.121 95.257 387.206 101.437 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 463.495 333.462 C 480.593 303.624 485.353 283.304 488.496 255.320 C 502.100 255.489 519.202 249.714 529.389 237.055 C 543.362 219.693 547.163 192.548 539.641 172.973 C 529.061 145.439 497.305 132.047 476.856 132.342 C 433.237 132.970 418.012 160.081 410.904 176.316 C 398.405 204.867 407.155 226.516 412.976 240.339 C 426.190 271.719 431.718 287.993 432.112 309.649 C 432.840 349.600 419.787 387.215 419.786 387.223 C 419.791 387.217 439.031 376.156 463.495 333.462 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 463.495 333.462 C 480.593 303.624 485.353 283.304 488.496 255.320 C 502.100 255.489 519.202 249.714 529.389 237.055 C 543.362 219.693 547.163 192.548 539.641 172.973 C 529.061 145.439 497.305 132.047 476.856 132.342 C 433.237 132.970 418.012 160.081 410.904 176.316 C 398.405 204.867 407.155 226.516 412.976 240.339 C 426.190 271.719 431.718 287.993 432.112 309.649 C 432.840 349.600 419.787 387.215 419.786 387.223 C 419.791 387.217 439.031 376.156 463.495 333.462 M 445.956 180.292 C 421.294 212.750 441.902 254.744 488.496 255.320 M 510.568 194.425 C 507.418 163.871 463.186 157.614 445.956 180.292 M 479.983 222.283 C 498.138 229.056 512.282 211.056 510.568 194.425 M 475.769 195.166 C 464.848 199.524 463.632 216.184 479.983 222.283 M 482.781 203.649 C 488.205 200.828 483.184 192.206 475.769 195.166 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 291.326 305.005 C 267.804 273.307 259.152 251.075 251.508 219.670 C 236.043 221.839 215.733 217.749 202.294 204.817 C 183.862 187.079 175.590 156.725 181.310 133.345 C 189.356 100.459 223.565 80.598 246.890 77.962 C 296.644 72.339 317.919 100.993 328.370 118.445 C 346.750 149.136 339.933 175.056 335.314 191.640 C 324.829 229.288 321.222 248.587 323.597 273.334 C 327.918 318.353 346.247 359.294 346.249 359.303 C 346.243 359.297 324.012 349.051 291.326 305.005 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 291.326 305.005 C 267.804 273.307 259.152 251.075 251.508 219.670 C 236.043 221.839 215.733 217.749 202.294 204.817 C 183.862 187.079 175.590 156.725 181.310 133.345 C 189.356 100.459 223.565 80.598 246.890 77.962 C 296.644 72.339 317.919 100.993 328.370 118.445 C 346.750 149.136 339.933 175.056 335.314 191.640 C 324.829 229.288 321.222 248.587 323.597 273.334 C 327.918 318.353 346.247 359.294 346.249 359.303 C 346.243 359.297 324.012 349.051 291.326 305.005 M 289.039 128.065 C 321.835 161.437 304.473 212.244 251.508 219.670 M 217.528 153.545 C 216.675 118.300 266.126 104.749 289.039 128.065 M 256.400 180.820 C 236.712 191.169 217.993 172.729 217.528 153.545 M 257.257 149.332 C 270.324 152.708 274.130 171.499 256.400 180.820 M 250.505 160.010 C 243.920 157.585 248.384 147.039 257.257 149.332 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 327.812 420.135 C 327.808 420.128 291.703 355.507 257.416 342.141 C 244.855 350.536 225.441 355.517 208.293 349.905 C 184.774 342.207 164.797 319.244 159.944 296.471 C 153.118 264.437 174.564 232.741 193.775 220.632 C 234.754 194.801 265.169 211.084 281.789 221.621 C 314.736 242.510 327.483 277.763 332.809 298.750 C 349.991 366.448 327.813 420.127 327.812 420.135 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 327.812 420.135 C 327.808 420.128 291.703 355.507 257.416 342.141 C 244.855 350.536 225.441 355.517 208.293 349.905 C 184.774 342.207 164.797 319.244 159.944 296.471 C 153.118 264.437 174.564 232.741 193.775 220.632 C 234.754 194.801 265.169 211.084 281.789 221.621 C 314.736 242.510 327.483 277.763 332.809 298.750 C 349.991 366.448 327.813 420.127 327.812 420.135 M 251.572 246.548 C 294.183 261.823 300.433 313.388 257.416 342.141 M 199.994 298.830 C 184.423 268.485 221.802 235.875 251.572 246.548 M 245.333 306.237 C 232.536 323.537 208.470 315.347 199.994 298.830 M 232.832 278.446 C 245.636 275.889 256.857 290.658 245.333 306.237 M 231.443 290.589 C 224.685 291.248 224.138 280.182 232.832 278.446 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 412.257 485.621 C 440.865 423.915 424.892 345.062 397.202 291.888 C 411.939 281.221 425.692 261.387 426.534 239.677 C 427.690 209.899 410.126 177.731 386.445 162.717 C 353.135 141.598 308.371 152.542 286.656 169.162 C 240.334 204.615 245.853 245.800 250.922 268.950 C 262.896 323.631 303.882 333.106 322.628 367.994 C 354.861 427.984 338.756 454.515 327.236 505.161 C 303.589 609.115 361.814 638.590 361.817 638.603 C 361.822 638.588 362.465 593.020 412.257 485.621 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 377.883 459.915 C 422.062 396.452 344.514 307.761 344.510 307.746 M 361.834 638.423 C 361.836 638.405 308.543 559.519 377.883 459.915 M 412.257 485.621 C 440.865 423.915 424.892 345.062 397.202 291.888 C 411.939 281.221 425.692 261.387 426.534 239.677 C 427.690 209.899 410.126 177.731 386.445 162.717 C 353.135 141.598 308.371 152.542 286.656 169.162 C 240.334 204.615 245.853 245.800 250.922 268.950 C 262.896 323.631 303.882 333.106 322.628 367.994 C 354.861 427.984 338.756 454.515 327.236 505.161 C 303.589 609.115 361.814 638.590 361.817 638.603 C 361.822 638.588 362.465 593.020 412.257 485.621 M 291.718 245.269 C 291.125 299.774 346.729 328.419 397.202 291.888 M 372.342 208.924 C 344.600 178.638 292.132 207.189 291.718 245.269 M 361.723 263.214 C 386.612 256.009 387.442 225.409 372.342 208.924 M 335.578 237.465 C 327.331 250.851 339.309 269.703 361.723 263.214 M 349.870 240.980 C 353.443 233.626 341.178 228.375 335.578 237.465 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 296.010 579.309 C 281.336 564.377 256.685 522.366 263.884 471.567 C 249.925 468.273 233.903 458.008 226.708 442.463 C 216.838 421.143 219.867 392.406 232.549 374.300 C 250.388 348.831 286.304 343.147 307.126 348.735 C 345.535 359.042 356.370 390.118 360.499 407.356 C 367.491 436.552 349.278 460.860 341.768 479.994 C 327.047 517.498 324.212 542.851 332.166 580.966 C 337.246 605.305 361.827 638.921 361.830 638.927 C 361.824 638.921 329.843 613.741 296.010 579.309 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 301.173 530.757 C 296.581 491.523 304.413 468.553 304.413 468.547 M 361.543 638.627 C 361.537 638.616 308.965 597.333 301.173 530.757 M 296.010 579.309 C 281.336 564.377 256.685 522.366 263.884 471.567 C 249.925 468.273 233.903 458.008 226.708 442.463 C 216.838 421.143 219.867 392.406 232.549 374.300 C 250.388 348.831 286.304 343.147 307.126 348.735 C 345.535 359.042 356.370 390.118 360.499 407.356 C 367.491 436.552 349.278 460.860 341.768 479.994 C 327.047 517.498 324.212 542.851 332.166 580.966 C 337.246 605.305 361.827 638.921 361.830 638.927 C 361.824 638.921 329.843 613.741 296.010 579.309 M 326.517 405.657 C 343.474 445.145 311.693 482.850 263.884 471.567 M 256.822 403.651 C 267.830 373.199 314.670 378.069 326.517 405.657 M 281.011 439.942 C 260.713 442.245 250.831 420.226 256.822 403.651 M 292.231 413.276 C 302.291 420.517 299.291 437.869 281.011 439.942 M 282.895 420.167 C 278.065 415.899 285.399 408.358 292.231 413.276 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 459.711 478.472 C 480.818 441.524 482.778 414.823 484.469 380.020 C 498.433 382.313 516.919 379.039 529.368 367.609 C 546.443 351.932 554.581 324.609 549.896 303.308 C 543.306 273.345 512.737 254.626 491.663 251.742 C 446.709 245.591 426.828 271.098 416.989 286.686 C 399.687 314.099 405.409 337.701 409.144 352.847 C 418.065 389.023 421.984 407.793 417.566 431.080 C 406.242 490.763 381.024 512.774 368.276 539.848 C 347.042 584.945 361.765 638.651 361.765 638.661 C 361.768 638.652 366.290 589.896 397.683 548.735 C 414.163 527.127 438.967 514.784 459.711 478.472 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 387.823 538.383 C 397.290 523.106 436.732 490.975 448.272 433.383 C 456.351 393.062 451.947 365.139 451.948 365.132 M 361.342 638.241 C 361.345 638.231 359.753 583.677 387.823 538.383 M 459.711 478.472 C 480.818 441.524 482.778 414.823 484.469 380.020 C 498.433 382.313 516.919 379.039 529.368 367.609 C 546.443 351.932 554.581 324.609 549.896 303.308 C 543.306 273.345 512.737 254.626 491.663 251.742 C 446.709 245.591 426.828 271.098 416.989 286.686 C 399.687 314.099 405.409 337.701 409.144 352.847 C 418.065 389.023 421.984 407.793 417.566 431.080 C 406.242 490.763 381.024 512.774 368.276 539.848 C 347.042 584.945 361.765 638.651 361.765 638.661 C 361.768 638.652 366.290 589.896 397.683 548.735 C 414.163 527.127 438.967 514.784 459.711 478.472 M 452.415 296.236 C 421.996 325.772 436.645 372.167 484.469 380.020 M 516.656 320.838 C 518.178 288.927 473.667 275.601 452.415 296.236 M 480.863 344.721 C 498.478 354.515 515.828 338.207 516.656 320.838 M 480.755 316.177 C 468.846 318.958 464.999 335.900 480.863 344.721 M 486.645 325.994 C 492.662 323.937 488.841 314.289 480.755 316.177 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 353.439 575.967 C 355.297 545.566 363.244 528.511 375.265 506.659 C 362.868 500.270 350.299 486.246 347.955 469.756 C 345.099 449.660 355.256 426.722 370.391 415.074 C 391.680 398.690 422.721 403.346 438.478 413.278 C 472.090 434.462 471.063 462.762 468.885 478.755 C 465.055 506.882 447.980 519.560 436.896 527.544 C 411.735 545.669 399.716 555.698 389.134 572.346 C 369.612 603.058 361.912 638.493 361.909 638.500 C 361.908 638.493 350.704 620.699 353.439 575.967 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 372.584 562.003 C 384.755 529.078 404.247 513.004 404.250 513.000 M 361.770 637.200 C 361.771 637.193 356.371 605.864 372.584 562.003 M 353.439 575.967 C 355.297 545.566 363.244 528.511 375.265 506.659 C 362.868 500.270 350.299 486.246 347.955 469.756 C 345.099 449.660 355.256 426.722 370.391 415.074 C 391.680 398.690 422.721 403.346 438.478 413.278 C 472.090 434.462 471.063 462.762 468.885 478.755 C 465.055 506.882 447.980 519.560 436.896 527.544 C 411.735 545.669 399.716 555.698 389.134 572.346 C 369.612 603.058 361.912 638.493 361.909 638.500 C 361.908 638.493 350.704 620.699 353.439 575.967 M 439.749 465.215 C 444.236 501.166 412.077 525.630 375.265 506.659 M 382.814 445.545 C 399.760 423.287 436.537 439.475 439.749 465.215 M 393.372 481.715 C 376.044 478.365 373.590 457.660 382.814 445.545 M 409.515 462.633 C 415.937 471.202 408.977 484.731 393.372 481.715 M 400.038 465.900 C 397.160 461.133 405.154 456.813 409.515 462.633 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 373.016 638.790 C 376.037 621.276 377.491 610.870 375.457 596.459 C 381.338 593.537 386.735 587.061 388.884 579.518 C 392.468 566.936 390.304 551.422 382.409 541.978 C 371.304 528.694 351.123 527.286 339.821 531.333 C 315.712 539.965 312.636 557.936 311.538 568.281 C 309.476 587.722 316.794 596.322 324.363 606.359 C 335.976 621.760 342.943 628.443 347.669 639.767 C 357.646 663.675 360.402 689.069 360.403 689.074 C 360.404 689.069 366.758 675.071 373.016 638.790 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 361.913 634.464 C 360.801 612.924 352.389 599.906 352.388 599.903 M 360.672 688.276 C 360.672 688.271 363.363 662.565 361.913 634.464 M 373.016 638.790 C 376.037 621.276 377.491 610.870 375.457 596.459 C 381.338 593.537 386.735 587.061 388.884 579.518 C 392.468 566.936 390.304 551.422 382.409 541.978 C 371.304 528.694 351.123 527.286 339.821 531.333 C 315.712 539.965 312.636 557.936 311.538 568.281 C 309.476 587.722 316.794 596.322 324.363 606.359 C 335.976 621.760 342.943 628.443 347.669 639.767 C 357.646 663.675 360.402 689.069 360.403 689.074 C 360.404 689.069 366.758 675.071 373.016 638.790 M 331.763 563.834 C 324.054 588.427 349.073 609.567 375.457 596.459 M 370.335 559.414 C 362.783 543.041 336.764 547.881 331.763 563.834 M 358.637 580.696 C 370.007 581.010 374.445 568.326 370.335 559.414 M 351.146 566.434 C 345.909 570.929 348.397 580.413 358.637 580.696 M 356.653 569.814 C 359.130 567.216 354.703 563.381 351.146 566.434 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":361.052,\\\"y\\\":734.213,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":384.192,\\\"y\\\":29.171,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":171.711,\\\"y\\\":302.768,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999874560013274,\\\"y\\\":0.00500877629700349}},{\\\"point\\\":{\\\"x\\\":548.289,\\\"y\\\":302.768,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999874560013274,\\\"y\\\":0.005008776297003481}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":408.21,\\\"y\\\":548.564,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128965506064706,\\\"y\\\":0.7012692123096492}},{\\\"point\\\":{\\\"x\\\":275.057,\\\"y\\\":548.612,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986883991125029,\\\"y\\\":0.7154261114507967}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":201.216,\\\"y\\\":99.186,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5366054888277688,\\\"y\\\":-0.8438332473657999}},{\\\"point\\\":{\\\"x\\\":533.833,\\\"y\\\":160.932,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7625015279734099,\\\"y\\\":-0.6469864139518042}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":361.052,\\\"y\\\":663.933,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]}},{\\\"name\\\":\\\"window\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":49.024,\\\"max\\\":670.976},\\\"y\\\":{\\\"min\\\":3.5490000000000004,\\\"max\\\":666.389}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"window\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"window\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"5\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 176.849 622.732 C 176.849 622.687 176.849 173.845 176.849 173.800 C 176.867 173.785 216.285 24.520 359.358 24.520 C 502.431 24.520 541.849 173.785 541.867 173.800 C 541.867 173.845 541.867 622.687 541.867 622.732 C 541.831 622.732 176.885 622.732 176.849 622.732 M 223.209 573.123 C 223.209 573.084 223.209 187.620 223.209 187.581 C 223.223 187.570 251.818 74.123 359.358 74.123 C 466.898 74.123 495.493 187.570 495.507 187.581 C 495.507 187.620 495.507 573.084 495.507 573.123 C 495.480 573.123 223.236 573.123 223.209 573.123 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"5\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 496.792 187.581 C 496.792 187.620 496.792 573.084 496.792 573.123 C 496.805 573.132 632.927 663.880 632.940 663.889 C 632.940 663.823 632.940 6.115 632.940 6.049 C 632.934 6.053 591.967 24.331 564.866 51.432 C 496.792 119.507 496.798 187.567 496.792 187.581 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 632.940 6.049 C 632.940 6.115 632.940 663.823 632.940 663.889 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"5\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 668.476 12.695 C 668.473 12.694 644.786 8.264 632.940 6.049 C 632.940 6.115 632.940 663.823 632.940 663.889 C 644.786 661.673 668.473 657.244 668.476 657.243 C 668.476 657.178 668.476 12.759 668.476 12.695 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"5\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 223.209 187.581 C 223.209 187.620 223.209 573.084 223.209 573.123 C 223.195 573.132 87.073 663.880 87.060 663.889 C 87.060 663.823 87.060 6.115 87.060 6.049 C 87.066 6.053 128.033 24.331 155.134 51.432 C 223.208 119.507 223.202 187.567 223.209 187.581 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 87.060 6.049 C 87.060 6.115 87.060 663.823 87.060 663.889 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"5\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 51.524 12.695 C 51.527 12.694 75.214 8.264 87.060 6.049 C 87.060 6.115 87.060 663.823 87.060 663.889 C 75.214 661.673 51.527 657.244 51.524 657.243 C 51.524 657.178 51.524 12.759 51.524 12.695 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":137.538,\\\"max\\\":582.462},\\\"y\\\":{\\\"min\\\":127.773,\\\"max\\\":542.165}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":703.666,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":28.542,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":51.845,\\\"y\\\":335.899,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871473592833,\\\"y\\\":0.005070021325709432}},{\\\"point\\\":{\\\"x\\\":668.238,\\\"y\\\":335.899,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871454425175,\\\"y\\\":0.005070399365451875}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":533.43,\\\"y\\\":615.954,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128987927729078,\\\"y\\\":0.7012669329598613}},{\\\"point\\\":{\\\"x\\\":183.871,\\\"y\\\":616.001,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986685263651337,\\\"y\\\":0.7154455187271583}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":663.939,\\\"y\\\":14.832,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314455570586257,\\\"y\\\":-0.7754202141232338}},{\\\"point\\\":{\\\"x\\\":53.978,\\\"y\\\":14.91,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817255992302469,\\\"y\\\":-0.7316079601495332}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":619.624,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"wing\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":38.45402314026018,\\\"max\\\":646.9647922185453},\\\"y\\\":{\\\"min\\\":15.301571249356066,\\\"max\\\":679.571904459341}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wing\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wingR_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 59.515 530.167 C 96.684 506.498 142.867 501.596 189.529 435.852 C 258.847 338.186 196.921 286.805 236.012 227.904 C 258.887 193.438 314.823 180.442 396.288 134.157 C 534.042 55.892 629.359 3.187 642.560 20.654 C 653.983 35.769 622.915 105.688 587.307 134.236 C 520.240 188.006 377.279 233.842 377.258 233.852 C 377.282 233.848 634.428 138.366 616.350 190.923 C 595.966 250.182 546.354 265.289 526.113 273.135 C 502.851 282.151 364.990 303.755 364.974 303.758 C 364.997 303.758 594.227 263.872 589.188 298.262 C 586.682 315.363 539.115 349.801 492.553 361.016 C 448.254 371.685 351.006 368.932 350.991 368.933 C 351.012 368.936 561.931 365.344 560.045 396.926 C 559.004 414.371 496.369 447.439 453.525 444.112 C 386.856 438.935 328.598 428.984 328.585 428.983 C 328.603 428.988 511.965 455.809 507.314 483.447 C 504.353 501.045 440.347 526.276 392.566 514.844 C 354.893 505.831 291.288 485.767 291.278 485.764 C 291.291 485.771 424.162 522.866 426.290 555.113 C 426.812 563.037 400.890 578.549 357.116 577.636 C 309.480 576.642 242.868 538.224 242.856 538.220 C 242.868 538.228 363.380 599.870 354.373 618.400 C 348.300 630.895 321.883 638.350 292.088 633.641 C 257.100 628.111 195.174 581.511 195.164 581.506 C 195.172 581.514 294.257 647.428 271.946 667.701 C 263.778 675.123 217.334 671.938 198.838 659.419 C 186.005 650.734 140.607 607.107 140.601 607.102 C 140.604 607.109 191.356 670.275 169.958 675.601 C 138.526 683.426 110.996 666.614 89.225 648.691 C 75.896 637.718 43.661 603.727 40.635 567.258 C 38.977 547.266 48.983 536.874 59.515 530.167 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":84.723,\\\"y\\\":562.626,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9664242984557929,\\\"y\\\":-0.25695150389563465}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":634.556,\\\"y\\\":27.153,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.706778064897462,\\\"y\\\":-0.7074353447346261}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":234.127,\\\"y\\\":235.467,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.829341299406811,\\\"y\\\":-0.5587423458967671}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"wing_angel\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":222.25395971538865,\\\"max\\\":488.97208874420335},\\\"y\\\":{\\\"min\\\":35.391468124075345,\\\"max\\\":685.8200392397181}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wing_angel\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wing_angel\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 473.928 683.593 C 429.620 672.034 450.971 390.718 442.789 276.628 C 442.782 276.663 446.874 644.598 428.100 637.391 C 383.635 620.322 411.211 334.581 404.783 259.680 C 404.777 259.713 401.678 595.748 385.189 587.439 C 345.101 567.239 371.297 297.310 366.936 236.183 C 366.906 243.098 359.614 516.509 345.635 508.569 C 304.696 485.315 331.335 336.190 334.844 215.095 C 331.334 251.964 320.900 444.035 311.264 432.164 C 272.355 384.230 295.790 279.455 299.300 195.214 C 299.299 195.229 282.986 351.332 279.553 347.849 C 237.141 304.826 265.925 217.215 270.606 173.922 C 270.603 173.932 250.840 273.438 246.197 270.786 C 225.079 258.728 216.400 185.994 232.819 126.625 C 242.708 90.868 286.161 49.854 333.196 40.183 C 377.681 31.038 423.985 44.294 462.524 80.956 C 499.687 116.310 483.792 196.653 482.483 272.750 C 476.666 610.994 493.315 688.650 473.928 683.593 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 462.939 172.059 C 471.155 171.209 463.330 111.047 463.330 111.040 M 432.756 91.116 C 438.983 126.186 433.858 175.070 462.939 172.059 M 428.247 157.121 C 438.234 159.985 432.755 91.123 432.756 91.116 M 400.408 75.477 C 405.310 96.601 393.683 147.209 428.247 157.121 M 388.126 141.674 C 402.604 146.005 400.309 76.008 400.408 75.477 M 365.727 67.627 C 371.224 83.021 358.340 132.761 388.126 141.674 M 352.590 131.421 C 371.910 139.300 364.420 76.481 365.727 67.627 M 332.837 67.185 C 334.115 85.974 321.253 118.642 352.590 131.421 M 318.591 122.058 C 327.876 124.804 332.835 67.190 332.837 67.185 M 302.453 68.696 C 302.455 68.701 285.290 112.209 318.591 122.058 M 457.421 283.697 C 471.456 284.108 467.171 251.774 459.909 173.532 M 423.891 155.989 C 430.116 178.505 423.462 282.702 457.421 283.697 M 410.749 263.454 C 439.820 270.094 423.446 165.287 423.891 155.989 M 389.501 141.241 C 392.752 165.105 386.266 257.861 410.749 263.454 M 378.848 243.640 C 394.001 247.484 389.261 143.540 389.501 141.241 M 357.189 131.982 C 360.901 164.441 347.530 235.694 378.848 243.640 M 340.541 217.828 C 358.944 225.520 357.187 131.991 357.189 131.982 M 323.190 122.619 C 324.384 152.225 311.920 205.866 340.541 217.828 M 305.434 199.545 C 317.809 207.427 323.188 122.627 323.190 122.619 M 296.720 106.686 C 296.438 134.257 278.290 182.257 305.434 199.545 M 272.980 175.272 C 285.912 185.785 296.717 106.693 296.720 106.686 M 269.405 96.562 C 264.075 114.333 247.551 154.600 272.980 175.272 M 482.483 272.750 C 476.666 610.994 493.315 688.650 473.928 683.593 C 429.620 672.034 450.971 390.718 442.789 276.628 C 442.782 276.663 446.874 644.598 428.100 637.391 C 383.635 620.322 411.211 334.581 404.783 259.680 C 404.777 259.713 401.678 595.748 385.189 587.439 C 345.101 567.239 371.297 297.310 366.936 236.183 C 366.906 243.098 359.614 516.509 345.635 508.569 C 304.696 485.315 331.335 336.190 334.844 215.095 C 331.334 251.964 320.900 444.035 311.264 432.164 C 272.355 384.230 295.790 279.455 299.300 195.214 C 299.299 195.229 282.986 351.332 279.553 347.849 C 237.141 304.826 265.925 217.215 270.606 173.922 C 270.603 173.932 250.840 273.438 246.197 270.786 C 225.079 258.728 216.400 185.994 232.819 126.625 C 242.708 90.868 286.161 49.854 333.196 40.183 C 377.681 31.038 423.985 44.294 462.524 80.956 C 499.687 116.310 483.792 196.653 482.483 272.750 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":237.306,\\\"y\\\":168.87,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":36.892,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":474.06,\\\"y\\\":674.242,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.09400305178925455,\\\"y\\\":0.9955719091327893}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"wing_bat\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":33.161759059160474,\\\"max\\\":699.689},\\\"y\\\":{\\\"min\\\":15.977026603816963,\\\"max\\\":698.562}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wing_bat\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wing_bat\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 41.730 601.414 C 41.746 601.407 166.675 566.650 207.396 531.219 C 249.203 494.843 289.077 426.453 302.014 372.567 C 313.412 325.089 272.343 254.583 292.456 210.091 C 317.614 154.441 401.343 116.184 455.888 88.712 C 519.733 56.556 684.286 20.862 684.309 20.855 C 684.301 20.873 617.396 89.778 607.850 194.800 C 600.938 270.835 629.492 342.257 641.301 343.894 C 625.284 344.162 588.425 393.475 562.930 462.406 C 535.929 535.409 547.640 599.063 547.638 599.077 C 547.623 599.078 469.147 586.920 396.632 611.501 C 329.021 634.419 287.688 689.864 287.677 689.872 C 287.666 689.869 239.584 666.124 175.283 664.728 C 109.150 663.292 60.577 679.916 60.565 679.917 C 60.564 679.914 56.671 669.091 52.949 649.010 C 48.188 623.331 41.731 601.419 41.730 601.414 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 38.230 590.475 C 75.786 576.375 157.539 542.894 196.882 513.060 C 236.145 483.287 289.768 395.906 289.589 332.426 C 289.253 213.589 249.021 226.617 203.137 236.164 C 203.146 236.157 286.254 145.843 419.053 87.469 C 583.111 15.354 697.661 17.995 697.689 17.988 C 697.666 17.996 541.412 67.213 468.705 99.757 C 394.349 133.039 303.599 190.510 305.837 203.401 C 306.518 207.325 317.628 238.754 323.637 262.158 C 328.279 280.236 331.433 306.972 333.553 308.532 C 336.524 310.718 413.665 293.134 493.062 305.374 C 658.511 330.881 667.088 355.359 667.105 355.364 C 667.087 355.361 619.519 336.133 486.395 327.985 C 416.496 323.706 332.739 338.575 330.686 344.850 C 329.680 347.924 324.692 369.650 319.288 385.270 C 313.472 402.084 303.648 422.308 302.014 427.044 C 299.901 433.166 369.393 444.854 452.245 504.873 C 516.042 551.088 559.096 611.490 559.107 611.501 C 559.095 611.492 512.583 568.494 441.075 523.096 C 363.019 473.541 284.379 456.282 282.899 461.450 C 281.986 464.637 275.099 479.899 268.196 490.835 C 258.922 505.526 244.624 521.669 240.847 525.485 C 237.391 528.975 259.444 551.651 280.294 604.675 C 293.693 638.752 287.677 696.552 287.678 696.562 C 287.675 696.553 275.518 645.299 258.352 611.638 C 237.978 571.688 211.117 550.004 207.396 552.245 C 204.583 553.939 183.362 563.778 167.359 570.320 C 153.885 575.828 61.410 609.725 46.509 614.472 C 43.585 615.403 40.904 613.375 39.303 611.702 C 33.139 605.266 34.790 591.767 38.230 590.475 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":96.183,\\\"y\\\":597.654,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.8854430478053971,\\\"y\\\":-0.46474789842783526}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":389.102,\\\"y\\\":50.359,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.4389590633965882,\\\"y\\\":-0.8985070621102484}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":681.358,\\\"y\\\":20.521,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.976908230080636,\\\"y\\\":-0.21365933164905085}},{\\\"point\\\":{\\\"x\\\":215.194,\\\"y\\\":229.073,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8802117557726281,\\\"y\\\":0.4745811469071093}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":545.538,\\\"y\\\":596.666,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6781355256068047,\\\"y\\\":0.7349368740987099}},{\\\"point\\\":{\\\"x\\\":287.29,\\\"y\\\":684.808,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.024958884076504644,\\\"y\\\":0.9996884785300146}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":656.41,\\\"y\\\":349.038,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.910112679298643,\\\"y\\\":0.4143608463402951}},{\\\"point\\\":{\\\"x\\\":260.995,\\\"y\\\":434.835,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9221517739289816,\\\"y\\\":-0.38682826401341525}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":51.106,\\\"y\\\":620.15,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9458069587273175,\\\"y\\\":0.32472942093839074}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"wing_butterfly\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":41.77071372590024,\\\"max\\\":457.0246171676067},\\\"y\\\":{\\\"min\\\":8.834233618370453,\\\"max\\\":692.742463508742}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wing_butterfly\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"butterfly_wing\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 224.643 647.130 C 224.977 637.478 217.460 629.422 207.807 629.088 C 198.154 628.754 190.098 636.271 189.764 645.924 C 189.430 655.576 196.948 663.632 206.600 663.966 C 216.253 664.300 224.309 656.783 224.643 647.130 M 285.190 655.896 C 285.572 644.849 276.969 635.629 265.922 635.247 C 254.875 634.865 245.655 643.468 245.273 654.515 C 244.890 665.562 253.494 674.782 264.541 675.165 C 275.588 675.547 284.808 666.943 285.190 655.896 M 191.294 611.694 C 191.607 602.645 184.561 595.092 175.512 594.779 C 166.463 594.466 158.910 601.513 158.597 610.562 C 158.284 619.612 165.331 627.164 174.380 627.477 C 183.429 627.790 190.981 620.743 191.294 611.694 M 122.105 151.246 C 122.346 144.265 116.910 138.439 109.929 138.198 C 102.949 137.956 97.122 143.393 96.881 150.373 C 96.639 157.354 102.076 163.180 109.057 163.422 C 116.037 163.663 121.863 158.227 122.105 151.246 M 110.923 109.471 C 111.232 100.551 104.285 93.107 95.365 92.798 C 86.446 92.490 79.001 99.436 78.693 108.355 C 78.384 117.275 85.330 124.720 94.250 125.028 C 103.170 125.337 110.614 118.390 110.923 109.471 M 115.689 52.814 C 116.118 40.404 106.454 30.047 94.044 29.617 C 81.634 29.188 71.276 38.853 70.847 51.263 C 70.417 63.673 80.082 74.030 92.492 74.460 C 104.902 74.889 115.260 65.224 115.689 52.814 M 158.438 127.957 C 208.891 154.275 257.677 181.803 257.687 181.809 C 257.687 181.805 254.058 154.657 259.253 143.383 C 262.604 136.112 276.856 125.907 276.858 125.905 C 276.853 125.901 240.660 94.928 227.895 86.742 C 209.920 75.216 160.359 39.151 148.728 47.678 C 138.074 55.488 112.366 103.924 158.438 127.957 M 176.845 526.574 C 152.077 528.286 160.914 548.517 162.075 561.449 C 163.226 574.271 177.574 573.572 185.431 573.361 C 208.213 572.747 246.072 527.516 246.078 527.512 C 246.078 527.510 240.701 515.022 240.701 515.021 C 240.694 515.022 218.211 523.715 176.845 526.574 M 244.574 495.831 C 242.425 496.854 183.128 508.850 178.571 499.988 C 171.826 486.869 188.158 472.379 192.593 469.163 C 201.232 462.899 258.516 467.126 258.523 467.126 C 258.521 467.129 246.139 484.723 244.574 495.831 M 209.213 448.350 C 247.385 446.028 269.682 445.239 269.688 445.239 C 269.690 445.236 293.241 419.932 293.243 419.929 C 293.236 419.930 245.751 418.525 222.551 423.833 C 205.185 427.805 196.794 449.106 209.213 448.350 M 265.510 536.720 C 267.787 537.827 307.549 531.388 307.553 531.387 C 307.551 531.391 289.710 558.043 281.257 575.342 C 275.053 588.039 275.404 600.995 267.488 610.326 C 258.038 621.465 240.948 618.799 231.173 613.594 C 224.612 610.101 216.233 598.168 218.356 592.747 C 225.190 575.294 266.648 537.846 265.510 536.720 M 412.343 542.647 C 441.310 476.057 434.452 454.496 430.782 452.071 C 426.630 449.328 365.368 503.422 348.905 517.154 C 336.612 527.408 296.644 582.810 305.377 622.246 C 312.602 654.872 345.810 622.575 359.824 608.905 C 369.663 599.308 401.471 567.640 412.343 542.647 M 366.000 469.425 C 443.637 417.181 433.685 415.332 430.501 408.096 C 427.101 400.370 353.238 408.351 336.010 418.307 C 317.651 428.917 269.259 492.064 276.768 500.458 C 288.804 513.913 321.742 499.207 366.000 469.425 M 314.609 370.700 C 350.083 370.151 376.674 368.945 376.680 368.945 C 376.673 368.940 327.113 343.819 307.575 319.325 C 292.489 300.412 238.384 307.440 189.370 287.102 C 156.616 273.511 174.000 329.439 193.432 345.708 C 219.468 367.505 250.917 371.686 314.609 370.700 M 186.668 258.739 C 238.504 278.970 284.265 280.079 284.275 280.081 C 284.273 280.078 273.018 256.801 268.007 241.660 C 264.195 230.144 260.371 210.860 260.371 210.857 C 260.360 210.851 166.936 155.018 152.973 156.709 C 133.686 159.044 132.236 237.496 186.668 258.739 M 324.171 300.530 C 352.923 343.590 431.124 378.144 437.333 372.790 C 443.366 367.588 398.924 272.894 386.285 252.733 C 320.842 148.348 295.397 146.490 284.170 165.083 C 274.676 180.806 290.762 250.493 324.171 300.530 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 224.643 647.130 C 224.977 637.478 217.460 629.422 207.807 629.088 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 207.807 629.088 C 198.154 628.754 190.098 636.271 189.764 645.924 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 189.764 645.924 C 189.430 655.576 196.948 663.632 206.600 663.966 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 206.600 663.966 C 216.253 664.300 224.309 656.783 224.643 647.130 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 285.190 655.896 C 285.572 644.849 276.969 635.629 265.922 635.247 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 265.922 635.247 C 254.875 634.865 245.655 643.468 245.273 654.515 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 245.273 654.515 C 244.890 665.562 253.494 674.782 264.541 675.165 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 264.541 675.165 C 275.588 675.547 284.808 666.943 285.190 655.896 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 191.294 611.694 C 191.607 602.645 184.561 595.092 175.512 594.779 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 175.512 594.779 C 166.463 594.466 158.910 601.513 158.597 610.562 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 158.597 610.562 C 158.284 619.612 165.331 627.164 174.380 627.477 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 174.380 627.477 C 183.429 627.790 190.981 620.743 191.294 611.694 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 122.105 151.246 C 122.346 144.265 116.910 138.439 109.929 138.198 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 109.929 138.198 C 102.949 137.956 97.122 143.393 96.881 150.373 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 96.881 150.373 C 96.639 157.354 102.076 163.180 109.057 163.422 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 109.057 163.422 C 116.037 163.663 121.863 158.227 122.105 151.246 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 110.923 109.471 C 111.232 100.551 104.285 93.107 95.365 92.798 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 95.365 92.798 C 86.446 92.490 79.001 99.436 78.693 108.355 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 78.693 108.355 C 78.384 117.275 85.330 124.720 94.250 125.028 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 94.250 125.028 C 103.170 125.337 110.614 118.390 110.923 109.471 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 115.689 52.814 C 116.118 40.404 106.454 30.047 94.044 29.617 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 94.044 29.617 C 81.634 29.188 71.276 38.853 70.847 51.263 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 70.847 51.263 C 70.417 63.673 80.082 74.030 92.492 74.460 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 92.492 74.460 C 104.902 74.889 115.260 65.224 115.689 52.814 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 158.438 127.957 C 208.891 154.275 257.677 181.803 257.687 181.809 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 257.687 181.809 C 257.687 181.805 254.058 154.657 259.253 143.383 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 259.253 143.383 C 262.604 136.112 276.856 125.907 276.858 125.905 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 276.858 125.905 C 276.853 125.901 240.660 94.928 227.895 86.742 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 227.895 86.742 C 209.920 75.216 160.359 39.151 148.728 47.678 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 148.728 47.678 C 138.074 55.488 112.366 103.924 158.438 127.957 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 176.845 526.574 C 152.077 528.286 160.914 548.517 162.075 561.449 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 162.075 561.449 C 163.226 574.271 177.574 573.572 185.431 573.361 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 185.431 573.361 C 208.213 572.747 246.072 527.516 246.078 527.512 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 246.078 527.512 C 246.078 527.510 240.701 515.022 240.701 515.021 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 240.701 515.021 C 240.694 515.022 218.211 523.715 176.845 526.574 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 244.574 495.831 C 242.425 496.854 183.128 508.850 178.571 499.988 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 178.571 499.988 C 171.826 486.869 188.158 472.379 192.593 469.163 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 192.593 469.163 C 201.232 462.899 258.516 467.126 258.523 467.126 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 258.523 467.126 C 258.521 467.129 246.139 484.723 244.574 495.831 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 209.213 448.350 C 247.385 446.028 269.682 445.239 269.688 445.239 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 269.688 445.239 C 269.690 445.236 293.241 419.932 293.243 419.929 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 293.243 419.929 C 293.236 419.930 245.751 418.525 222.551 423.833 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 222.551 423.833 C 205.185 427.805 196.794 449.106 209.213 448.350 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 265.510 536.720 C 267.787 537.827 307.549 531.388 307.553 531.387 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 307.553 531.387 C 307.551 531.391 289.710 558.043 281.257 575.342 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 281.257 575.342 C 275.053 588.039 275.404 600.995 267.488 610.326 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 267.488 610.326 C 258.038 621.465 240.948 618.799 231.173 613.594 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 231.173 613.594 C 224.612 610.101 216.233 598.168 218.356 592.747 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 218.356 592.747 C 225.190 575.294 266.648 537.846 265.510 536.720 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 412.343 542.647 C 441.310 476.057 434.452 454.496 430.782 452.071 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 430.782 452.071 C 426.630 449.328 365.368 503.422 348.905 517.154 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 348.905 517.154 C 336.612 527.408 296.644 582.810 305.377 622.246 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 305.377 622.246 C 312.602 654.872 345.810 622.575 359.824 608.905 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 359.824 608.905 C 369.663 599.308 401.471 567.640 412.343 542.647 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 366.000 469.425 C 443.637 417.181 433.685 415.332 430.501 408.096 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 430.501 408.096 C 427.101 400.370 353.238 408.351 336.010 418.307 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 336.010 418.307 C 317.651 428.917 269.259 492.064 276.768 500.458 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 276.768 500.458 C 288.804 513.913 321.742 499.207 366.000 469.425 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 314.609 370.700 C 350.083 370.151 376.674 368.945 376.680 368.945 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 376.680 368.945 C 376.673 368.940 327.113 343.819 307.575 319.325 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 307.575 319.325 C 292.489 300.412 238.384 307.440 189.370 287.102 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 189.370 287.102 C 156.616 273.511 174.000 329.439 193.432 345.708 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 193.432 345.708 C 219.468 367.505 250.917 371.686 314.609 370.700 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 186.668 258.739 C 238.504 278.970 284.265 280.079 284.275 280.081 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 284.275 280.081 C 284.273 280.078 273.018 256.801 268.007 241.660 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 268.007 241.660 C 264.195 230.144 260.371 210.860 260.371 210.857 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 260.371 210.857 C 260.360 210.851 166.936 155.018 152.973 156.709 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 152.973 156.709 C 133.686 159.044 132.236 237.496 186.668 258.739 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 324.171 300.530 C 352.923 343.590 431.124 378.144 437.333 372.790 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 437.333 372.790 C 443.366 367.588 398.924 272.894 386.285 252.733 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 386.285 252.733 C 320.842 148.348 295.397 146.490 284.170 165.083 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 284.170 165.083 C 274.676 180.806 290.762 250.493 324.171 300.530 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 442.037 516.914 C 464.578 450.232 454.183 360.450 438.006 320.571 C 411.342 254.839 368.837 171.055 318.052 124.353 C 261.651 72.487 165.459 5.232 89.069 11.206 C 76.116 12.219 56.651 19.470 50.506 30.917 C 19.176 89.279 106.205 175.191 126.106 238.371 C 137.218 273.650 136.656 327.469 158.467 357.342 C 166.311 368.085 180.694 379.647 194.029 383.826 C 245.540 399.968 373.918 386.962 373.936 386.962 C 373.921 386.964 305.210 396.649 223.462 401.440 C 195.618 403.072 171.503 443.465 158.914 468.355 C 140.262 505.232 130.291 564.308 139.129 604.677 C 153.006 668.058 187.864 696.407 251.012 689.808 C 297.127 684.989 327.039 668.372 349.218 650.229 C 386.763 619.518 421.103 578.844 442.037 516.914 M 224.643 647.130 C 224.977 637.478 217.460 629.422 207.807 629.088 C 198.154 628.754 190.098 636.271 189.764 645.924 C 189.430 655.576 196.948 663.632 206.600 663.966 C 216.253 664.300 224.309 656.783 224.643 647.130 M 285.190 655.896 C 285.572 644.849 276.969 635.629 265.922 635.247 C 254.875 634.865 245.655 643.468 245.273 654.515 C 244.890 665.562 253.494 674.782 264.541 675.165 C 275.588 675.547 284.808 666.943 285.190 655.896 M 191.294 611.694 C 191.607 602.645 184.561 595.092 175.512 594.779 C 166.463 594.466 158.910 601.513 158.597 610.562 C 158.284 619.612 165.331 627.164 174.380 627.477 C 183.429 627.790 190.981 620.743 191.294 611.694 M 122.105 151.246 C 122.346 144.265 116.910 138.439 109.929 138.198 C 102.949 137.956 97.122 143.393 96.881 150.373 C 96.639 157.354 102.076 163.180 109.057 163.422 C 116.037 163.663 121.863 158.227 122.105 151.246 M 110.923 109.471 C 111.232 100.551 104.285 93.107 95.365 92.798 C 86.446 92.490 79.001 99.436 78.693 108.355 C 78.384 117.275 85.330 124.720 94.250 125.028 C 103.170 125.337 110.614 118.390 110.923 109.471 M 115.689 52.814 C 116.118 40.404 106.454 30.047 94.044 29.617 C 81.634 29.188 71.276 38.853 70.847 51.263 C 70.417 63.673 80.082 74.030 92.492 74.460 C 104.902 74.889 115.260 65.224 115.689 52.814 M 158.438 127.957 C 208.891 154.275 257.677 181.803 257.687 181.809 C 257.687 181.805 254.058 154.657 259.253 143.383 C 262.604 136.112 276.856 125.907 276.858 125.905 C 276.853 125.901 240.660 94.928 227.895 86.742 C 209.920 75.216 160.359 39.151 148.728 47.678 C 138.074 55.488 112.366 103.924 158.438 127.957 M 176.845 526.574 C 152.077 528.286 160.914 548.517 162.075 561.449 C 163.226 574.271 177.574 573.572 185.431 573.361 C 208.213 572.747 246.072 527.516 246.078 527.512 C 246.078 527.510 240.701 515.022 240.701 515.021 C 240.694 515.022 218.211 523.715 176.845 526.574 M 244.574 495.831 C 242.425 496.854 183.128 508.850 178.571 499.988 C 171.826 486.869 188.158 472.379 192.593 469.163 C 201.232 462.899 258.516 467.126 258.523 467.126 C 258.521 467.129 246.139 484.723 244.574 495.831 M 209.213 448.350 C 247.385 446.028 269.682 445.239 269.688 445.239 C 269.690 445.236 293.241 419.932 293.243 419.929 C 293.236 419.930 245.751 418.525 222.551 423.833 C 205.185 427.805 196.794 449.106 209.213 448.350 M 265.510 536.720 C 267.787 537.827 307.549 531.388 307.553 531.387 C 307.551 531.391 289.710 558.043 281.257 575.342 C 275.053 588.039 275.404 600.995 267.488 610.326 C 258.038 621.465 240.948 618.799 231.173 613.594 C 224.612 610.101 216.233 598.168 218.356 592.747 C 225.190 575.294 266.648 537.846 265.510 536.720 M 412.343 542.647 C 441.310 476.057 434.452 454.496 430.782 452.071 C 426.630 449.328 365.368 503.422 348.905 517.154 C 336.612 527.408 296.644 582.810 305.377 622.246 C 312.602 654.872 345.810 622.575 359.824 608.905 C 369.663 599.308 401.471 567.640 412.343 542.647 M 366.000 469.425 C 443.637 417.181 433.685 415.332 430.501 408.096 C 427.101 400.370 353.238 408.351 336.010 418.307 C 317.651 428.917 269.259 492.064 276.768 500.458 C 288.804 513.913 321.742 499.207 366.000 469.425 M 314.609 370.700 C 350.083 370.151 376.674 368.945 376.680 368.945 C 376.673 368.940 327.113 343.819 307.575 319.325 C 292.489 300.412 238.384 307.440 189.370 287.102 C 156.616 273.511 174.000 329.439 193.432 345.708 C 219.468 367.505 250.917 371.686 314.609 370.700 M 186.668 258.739 C 238.504 278.970 284.265 280.079 284.275 280.081 C 284.273 280.078 273.018 256.801 268.007 241.660 C 264.195 230.144 260.371 210.860 260.371 210.857 C 260.360 210.851 166.936 155.018 152.973 156.709 C 133.686 159.044 132.236 237.496 186.668 258.739 M 324.171 300.530 C 352.923 343.590 431.124 378.144 437.333 372.790 C 443.366 367.588 398.924 272.894 386.285 252.733 C 320.842 148.348 295.397 146.490 284.170 165.083 C 274.676 180.806 290.762 250.493 324.171 300.530 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":457.059,\\\"y\\\":395.394,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":451.934,\\\"y\\\":395.151,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999871526874639,\\\"y\\\":0.0050689703114871615}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true}},{\\\"name\\\":\\\"wing_eagle\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":119.05701671286413,\\\"max\\\":648.844},\\\"y\\\":{\\\"min\\\":21.0971610765087,\\\"max\\\":691.522}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wing_eagle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wing_eagle_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 150.877 304.166 C 170.990 287.148 264.054 272.855 297.629 245.294 C 349.553 202.673 360.247 138.574 347.926 97.491 C 335.439 55.855 284.897 61.250 284.891 61.246 C 284.901 61.243 307.863 18.963 382.596 31.304 C 422.755 37.936 452.966 70.157 452.973 70.161 C 452.975 70.166 473.435 102.177 478.332 115.610 C 506.395 192.587 487.301 285.005 519.697 382.725 C 552.394 481.355 647.333 623.810 647.344 623.835 C 647.335 623.830 570.044 647.363 484.699 483.448 C 456.819 429.901 437.033 333.148 437.028 333.133 C 437.031 333.149 450.223 431.516 469.070 489.493 C 494.048 566.330 554.356 683.699 554.367 683.718 C 554.359 683.714 463.902 695.406 397.239 492.775 C 379.485 438.810 370.582 346.035 370.580 346.020 C 370.581 346.036 373.625 443.860 387.709 501.907 C 405.853 576.685 461.382 690.003 461.390 690.022 C 461.376 690.005 357.596 665.625 322.712 519.827 C 312.595 477.541 308.723 406.542 308.722 406.531 C 308.722 406.541 306.592 468.295 309.575 506.105 C 314.414 567.430 327.438 647.459 327.440 647.473 C 327.432 647.459 264.152 626.487 249.437 504.068 C 245.157 468.467 242.082 410.222 242.081 410.212 C 242.081 410.220 236.193 457.478 237.415 486.602 C 239.639 539.624 242.342 611.216 242.342 611.228 C 242.336 611.214 184.292 582.461 179.046 463.949 C 177.899 438.052 177.538 395.912 177.538 395.905 C 177.537 395.910 173.063 421.382 173.197 446.153 C 173.431 489.637 168.276 532.426 168.276 532.434 C 168.271 532.422 115.200 508.473 121.000 409.515 C 124.338 352.558 135.834 316.895 150.877 304.166 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 150.877 304.166 C 170.990 287.148 264.054 272.855 297.629 245.294 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 297.629 245.294 C 349.553 202.673 360.247 138.574 347.926 97.491 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 347.926 97.491 C 335.439 55.855 284.897 61.250 284.891 61.246 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 284.891 61.246 C 284.901 61.243 307.863 18.963 382.596 31.304 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"1\\\",\\\"strokeLinecap\\\":\\\"butt\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 382.596 31.304 C 422.755 37.936 452.966 70.157 452.973 70.161 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 190.508 425.268 C 190.504 425.256 104.769 409.777 150.877 304.166 C 170.990 287.148 264.054 272.855 297.629 245.294 C 349.553 202.673 360.247 138.574 347.926 97.491 C 335.439 55.855 284.897 61.250 284.891 61.246 C 284.901 61.243 307.863 18.963 382.596 31.304 C 422.755 37.936 452.966 70.157 452.973 70.161 C 522.695 144.465 490.441 258.080 552.208 371.209 C 512.486 370.840 484.749 368.881 461.451 292.046 C 452.562 262.733 449.517 212.938 449.516 212.930 C 449.516 212.938 449.731 263.108 451.151 294.077 C 452.908 332.394 477.055 363.380 488.269 396.750 C 429.386 385.494 415.412 372.211 398.711 335.384 C 388.392 312.629 390.947 270.253 390.946 270.246 C 390.946 270.252 392.661 301.321 392.006 323.979 C 390.510 375.744 412.152 421.858 412.154 421.868 C 412.146 421.861 353.241 425.945 338.847 355.457 C 334.906 336.155 338.803 303.739 338.803 303.734 C 338.802 303.738 332.562 330.745 331.137 347.673 C 326.695 400.462 336.421 442.519 336.422 442.528 C 336.415 442.521 288.197 429.544 272.341 371.758 C 267.339 353.527 265.155 322.652 265.155 322.647 C 265.154 322.651 267.984 350.708 263.915 368.358 C 256.787 399.269 259.124 442.751 259.123 442.758 C 259.118 442.749 201.284 429.304 204.685 353.390 C 205.030 345.679 203.236 333.177 203.236 333.175 C 203.235 333.178 200.674 348.893 197.516 360.720 C 189.090 392.284 190.509 425.262 190.508 425.268 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"3\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 226.954 372.618 C 226.947 372.611 147.818 387.279 150.596 303.579 C 170.709 286.560 263.773 272.268 297.349 244.707 C 349.272 202.086 359.966 137.987 347.646 96.904 C 335.159 55.268 284.617 60.662 284.611 60.659 C 284.621 60.655 303.535 19.031 378.379 22.844 C 414.634 24.692 421.903 30.424 445.515 48.015 C 502.426 96.852 476.950 121.339 535.431 148.833 C 459.012 207.344 464.615 113.733 417.017 94.844 C 463.495 117.998 458.118 188.012 499.132 213.914 C 408.368 265.860 427.790 171.371 396.418 145.206 C 422.151 176.656 418.643 217.561 418.444 221.196 C 415.624 272.754 439.519 294.102 439.521 294.109 C 439.513 294.107 354.175 331.704 360.321 272.268 C 363.492 241.599 355.325 222.051 355.324 222.046 C 355.324 222.053 366.029 244.422 356.329 287.978 C 348.457 323.323 373.448 343.501 373.450 343.507 C 373.442 343.504 296.596 350.456 299.107 316.733 C 301.386 286.107 299.095 275.957 299.095 275.953 C 299.094 275.958 305.568 302.883 294.307 319.145 C 281.571 337.538 295.236 365.301 295.236 365.306 C 295.230 365.302 226.264 382.139 229.967 327.483 C 230.903 313.662 228.644 302.933 228.644 302.930 C 228.643 302.933 234.951 317.157 224.573 334.051 C 210.246 357.373 226.954 372.614 226.954 372.618 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":159.14,\\\"y\\\":338.562,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":24.949,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":132.046,\\\"y\\\":340.906,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999873181281341,\\\"y\\\":0.005036227050266388}},{\\\"point\\\":{\\\"x\\\":546.841,\\\"y\\\":364.098,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999873181281341,\\\"y\\\":0.005036227050266405}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":147.166,\\\"y\\\":511.614,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986883991125039,\\\"y\\\":0.7154261114507957}},{\\\"point\\\":{\\\"x\\\":626.406,\\\"y\\\":613.821,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128601268615755,\\\"y\\\":0.7013062380521781}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":451.576,\\\"y\\\":52.285,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314454286031296,\\\"y\\\":-0.7754203187279851}},{\\\"point\\\":{\\\"x\\\":293.461,\\\"y\\\":245.278,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817454199674226,\\\"y\\\":-0.7315894903246236}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":448.366,\\\"y\\\":677.016,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6340410014059548,\\\"y\\\":0.7732994300632414}}]}},{\\\"name\\\":\\\"wing_egypt\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":12.343412354409955,\\\"max\\\":690.1079177194641},\\\"y\\\":{\\\"min\\\":220.3742578505522,\\\"max\\\":511.80548175177177}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wing_egypt\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wing_Egypt_2\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 661.254 284.544 C 651.501 282.407 446.493 286.614 413.967 284.543 C 281.132 276.085 217.620 277.520 32.570 223.593 C -0.170 214.052 10.583 263.061 69.814 282.496 C 94.163 290.485 239.938 303.792 239.955 303.794 C 239.938 303.792 105.197 293.858 70.496 286.145 C 31.782 277.538 28.663 322.772 78.449 339.609 C 103.546 348.097 258.419 336.518 258.437 336.518 C 258.420 336.518 109.649 346.548 84.864 343.469 C 50.566 339.209 44.929 391.350 99.268 395.976 C 118.013 397.572 272.086 362.224 272.103 362.221 C 272.086 362.224 163.770 391.688 99.079 398.000 C 68.761 400.958 93.686 449.163 139.692 444.644 C 169.406 441.726 310.340 383.398 310.357 383.392 C 310.340 383.399 238.929 419.151 141.966 446.924 C 107.149 456.896 148.250 491.082 187.172 485.558 C 218.606 481.097 341.592 393.747 341.608 393.738 C 341.596 393.745 276.651 443.687 230.252 468.328 C 185.384 492.156 236.241 516.695 279.991 492.577 C 299.962 481.567 362.128 412.178 362.136 412.170 C 362.128 412.178 337.056 449.848 286.019 489.388 C 264.745 505.869 322.783 516.536 345.429 493.641 C 367.938 470.885 413.906 410.472 413.913 410.463 C 413.906 410.472 380.260 455.167 347.840 496.407 C 335.530 512.067 387.879 511.260 404.323 495.130 C 414.643 485.007 459.424 413.031 459.430 413.023 C 459.424 413.031 446.769 444.114 408.457 493.003 C 397.051 507.558 441.969 510.894 459.257 493.428 C 472.991 479.553 506.265 408.777 506.270 408.769 C 506.266 408.777 493.575 445.103 460.807 496.407 C 449.235 514.525 490.013 514.770 504.547 494.067 C 520.678 471.090 548.972 399.418 548.976 399.409 C 548.972 399.418 537.367 440.455 508.336 493.854 C 498.289 512.334 540.884 514.505 554.830 492.365 C 563.347 478.843 594.435 401.120 594.439 401.110 C 594.435 401.120 590.497 435.846 556.554 494.705 C 548.268 509.073 592.048 507.512 600.637 493.216 C 613.707 471.463 628.188 402.822 628.191 402.813 C 628.189 402.822 623.558 432.609 606.149 494.705 C 605.266 497.854 629.619 505.819 639.213 493.003 C 652.328 475.483 662.630 407.926 662.633 407.917 C 662.631 407.926 659.392 451.902 648.167 492.153 C 644.817 504.168 670.939 498.758 677.098 487.047 C 687.490 467.283 684.396 448.595 686.741 405.365 C 688.852 366.467 692.068 291.292 661.254 284.544 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 424.300 282.842 C 424.278 282.839 276.882 277.061 206.460 255.190 C 192.940 250.991 190.799 304.617 231.054 312.265 C 263.486 318.427 394.664 309.218 394.680 309.218 C 394.663 309.219 258.138 321.445 219.206 316.364 C 203.502 314.315 209.026 362.537 254.160 364.524 C 279.728 365.650 416.018 321.985 416.034 321.981 C 416.017 321.985 284.795 365.605 251.556 368.453 C 229.174 370.371 260.850 415.448 288.264 406.928 C 324.885 395.546 429.796 337.304 429.810 337.297 C 429.797 337.304 339.406 391.982 300.575 404.328 C 275.536 412.288 317.077 447.648 351.924 430.396 C 375.476 418.735 453.220 348.366 453.231 348.358 C 453.222 348.366 390.727 405.593 365.750 424.935 C 342.892 442.635 396.015 447.007 406.391 442.802 C 428.087 434.010 483.531 356.024 483.538 356.016 C 483.533 356.023 440.041 411.652 424.989 432.593 C 417.640 442.816 449.365 446.755 469.073 438.548 C 485.851 431.562 517.974 362.830 517.979 362.822 C 517.975 362.829 492.917 416.498 480.784 434.294 C 476.274 440.909 501.518 453.881 520.046 440.250 C 531.778 431.620 562.749 361.129 562.753 361.121 C 562.750 361.128 539.201 416.131 529.689 433.443 C 525.988 440.179 551.702 452.389 567.575 437.698 C 578.403 427.676 596.503 370.487 596.506 370.480 C 596.503 370.486 578.581 420.627 572.397 435.145 C 569.505 441.933 598.227 452.261 608.904 437.698 C 616.424 427.440 632.322 370.487 632.325 370.480 C 632.323 370.486 616.622 417.398 612.348 433.443 C 610.561 440.155 635.716 453.157 646.789 434.294 C 653.129 423.494 661.253 373.889 661.254 373.883 C 661.253 373.889 653.403 414.921 650.922 430.891 C 649.727 438.590 668.598 453.421 681.919 435.145 C 687.114 428.019 686.817 408.807 687.430 391.752 C 690.325 311.185 684.459 315.274 659.877 307.516 C 659.853 307.513 424.323 282.844 424.300 282.842 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 571.019 321.130 C 559.174 319.458 441.192 286.166 418.789 283.693 C 410.028 282.726 383.980 284.643 357.484 283.692 C 344.338 283.220 341.704 320.503 380.216 322.832 C 386.297 323.200 421.540 313.473 421.544 313.472 C 421.540 313.473 386.029 325.127 376.771 328.788 C 360.934 335.051 383.511 360.391 402.946 357.716 C 417.795 355.673 452.536 318.581 452.541 318.577 C 452.537 318.581 423.589 348.752 411.213 358.568 C 398.425 368.711 430.383 382.014 442.210 374.734 C 450.524 369.616 489.733 326.240 489.738 326.235 C 489.734 326.240 457.968 363.562 449.098 375.585 C 439.950 387.984 461.307 398.694 481.472 388.348 C 492.907 382.481 516.599 335.600 516.602 335.595 C 516.599 335.600 491.513 380.712 491.804 389.199 C 492.107 398.046 511.402 400.208 523.491 390.900 C 530.723 385.332 551.041 339.003 551.043 338.998 C 551.041 339.003 531.741 382.363 529.690 390.050 C 525.791 404.659 553.424 405.198 561.375 395.154 C 566.525 388.650 582.727 341.556 582.729 341.551 C 582.727 341.556 570.971 380.496 567.575 393.453 C 565.544 401.203 590.232 408.298 600.639 391.752 C 604.248 386.013 614.414 346.661 614.415 346.656 C 614.414 346.660 609.982 374.843 604.082 390.900 C 596.933 410.360 624.588 412.446 634.391 401.962 C 644.072 391.608 648.855 342.407 648.856 342.401 C 648.856 342.406 641.968 386.091 642.656 393.453 C 643.809 405.776 663.836 407.536 672.965 401.111 C 688.349 390.285 687.128 351.273 681.919 326.235 C 671.153 320.886 579.407 322.314 571.019 321.130 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 633.702 274.333 C 633.679 274.334 414.908 282.307 409.871 282.347 C 355.636 282.775 396.044 325.295 427.105 317.015 C 435.153 314.870 459.514 306.033 459.517 306.032 C 459.515 306.033 438.349 312.690 431.790 315.483 C 402.237 328.062 447.043 348.784 465.943 339.245 C 474.237 335.059 494.645 314.078 494.647 314.076 C 494.645 314.078 478.925 330.147 466.831 339.276 C 454.056 348.921 483.930 365.878 501.898 351.514 C 510.049 344.998 529.287 319.432 529.289 319.429 C 529.287 319.432 514.576 339.187 504.854 350.445 C 495.965 360.740 526.468 373.399 543.090 355.412 C 554.900 342.632 561.261 324.536 561.263 324.533 C 561.262 324.536 551.816 346.449 547.224 352.534 C 536.506 366.736 566.419 374.005 580.462 358.954 C 588.230 350.628 594.325 326.594 594.326 326.591 C 594.325 326.594 586.126 350.055 582.064 356.897 C 573.483 371.352 605.840 380.055 615.905 363.178 C 620.433 355.586 627.589 328.791 627.590 328.788 C 627.589 328.791 621.822 351.831 619.262 358.212 C 610.294 380.564 644.823 375.428 650.922 361.971 C 655.115 352.720 658.586 330.245 658.587 330.242 C 658.586 330.245 653.285 352.469 651.348 359.558 C 645.344 381.525 678.423 381.641 683.986 361.121 C 686.426 352.121 685.021 344.806 685.363 322.832 C 686.185 270.149 633.707 274.338 633.702 274.333 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":634.839,\\\"y\\\":382.901,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-1,\\\"y\\\":0}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":588.355,\\\"y\\\":277.547,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":68.445,\\\"y\\\":360.914,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999871127343471,\\\"y\\\":0.005076845991756351}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":636.344,\\\"y\\\":489.474,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129548583074988,\\\"y\\\":0.7012099329129147}},{\\\"point\\\":{\\\"x\\\":399.203,\\\"y\\\":489.521,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.69868360500436,\\\"y\\\":0.7154307933672631}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":21.359,\\\"y\\\":230.239,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.7530505477989466,\\\"y\\\":-0.657962667983303}},{\\\"point\\\":{\\\"x\\\":670.291,\\\"y\\\":287.217,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314452197200537,\\\"y\\\":-0.7754204888269933}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":682.845,\\\"y\\\":382.108,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":1,\\\"y\\\":0}}]}},{\\\"name\\\":\\\"wings_egypt\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":3.6617462006002945,\\\"max\\\":716.3382537993999},\\\"y\\\":{\\\"min\\\":277.3519690264922,\\\"max\\\":442.273}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wings_egypt\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"wing_Egypt\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 383.705 311.126 C 388.690 310.034 493.469 312.184 510.092 311.126 C 577.984 306.804 610.445 307.536 705.023 279.975 C 721.756 275.098 716.260 300.147 685.987 310.080 C 673.543 314.163 599.038 320.964 599.030 320.965 C 599.038 320.964 667.904 315.887 685.639 311.944 C 705.425 307.546 707.019 330.664 681.574 339.270 C 668.747 343.608 589.593 337.690 589.583 337.690 C 589.592 337.690 665.629 342.816 678.296 341.243 C 695.826 339.065 698.707 365.715 670.934 368.079 C 661.354 368.894 582.607 350.828 582.599 350.827 C 582.607 350.828 637.967 365.887 671.031 369.113 C 686.526 370.625 673.787 395.263 650.273 392.953 C 635.087 391.461 563.057 361.650 563.048 361.647 C 563.056 361.651 599.554 379.923 649.111 394.118 C 666.906 399.215 645.900 416.687 626.007 413.864 C 609.941 411.583 547.083 366.939 547.075 366.935 C 547.081 366.939 580.274 392.464 603.989 405.057 C 626.920 417.236 600.928 429.778 578.567 417.451 C 568.360 411.824 536.588 376.359 536.584 376.355 C 536.588 376.359 549.402 395.613 575.486 415.821 C 586.359 424.244 556.697 429.696 545.122 417.995 C 533.618 406.364 510.124 375.487 510.120 375.483 C 510.124 375.487 527.320 398.331 543.890 419.408 C 550.182 427.412 523.426 427.000 515.022 418.756 C 509.747 413.582 486.860 376.795 486.857 376.791 C 486.860 376.795 493.328 392.682 512.909 417.669 C 518.738 425.107 495.781 426.813 486.946 417.886 C 479.926 410.795 462.920 374.621 462.917 374.617 C 462.920 374.621 469.406 393.188 486.153 419.408 C 492.067 428.668 471.226 428.793 463.798 418.212 C 455.553 406.469 441.092 369.838 441.090 369.833 C 441.092 369.838 447.024 390.812 461.861 418.104 C 466.996 427.549 445.226 428.658 438.098 417.343 C 433.745 410.432 417.857 370.707 417.854 370.703 C 417.856 370.708 419.870 388.456 437.217 418.539 C 441.452 425.882 419.076 425.084 414.687 417.777 C 408.007 406.659 400.605 371.578 400.604 371.573 C 400.605 371.578 402.972 386.802 411.870 418.539 C 412.321 420.148 399.874 424.219 394.971 417.669 C 388.268 408.715 383.002 374.186 383.001 374.182 C 383.002 374.186 384.657 396.662 390.394 417.234 C 392.107 423.375 378.755 420.610 375.608 414.625 C 370.296 404.523 371.878 394.972 370.679 372.877 C 369.600 352.997 367.957 314.575 383.705 311.126 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 504.812 310.256 C 504.823 310.255 580.156 307.303 616.149 296.124 C 623.059 293.977 624.153 321.386 603.579 325.295 C 587.003 328.444 519.958 323.737 519.950 323.737 C 519.959 323.737 589.736 329.986 609.634 327.390 C 617.660 326.342 614.837 350.988 591.769 352.004 C 578.701 352.579 509.045 330.262 509.036 330.260 C 509.045 330.262 576.112 352.556 593.100 354.012 C 604.539 354.992 588.350 378.031 574.339 373.676 C 555.622 367.859 502.003 338.092 501.995 338.088 C 502.002 338.091 548.200 366.038 568.047 372.348 C 580.844 376.416 559.613 394.488 541.803 385.670 C 529.765 379.711 490.031 343.745 490.026 343.741 C 490.030 343.745 521.970 372.994 534.736 382.879 C 546.419 391.926 519.268 394.160 513.965 392.011 C 502.876 387.518 474.539 347.659 474.535 347.655 C 474.538 347.659 496.767 376.091 504.460 386.793 C 508.216 392.018 492.001 394.031 481.929 389.837 C 473.354 386.267 456.935 351.138 456.933 351.134 C 456.934 351.138 469.742 378.567 475.943 387.663 C 478.248 391.044 465.346 397.673 455.876 390.707 C 449.880 386.296 434.051 350.268 434.049 350.264 C 434.051 350.268 446.086 378.380 450.948 387.228 C 452.839 390.671 439.697 396.911 431.584 389.402 C 426.051 384.281 416.800 355.051 416.798 355.048 C 416.799 355.051 425.959 380.678 429.120 388.098 C 430.598 391.567 415.918 396.846 410.461 389.402 C 406.618 384.160 398.493 355.051 398.492 355.048 C 398.493 355.051 406.517 379.028 408.701 387.228 C 409.614 390.659 396.758 397.304 391.098 387.663 C 387.858 382.143 383.706 356.790 383.705 356.787 C 383.706 356.790 387.718 377.762 388.986 385.923 C 389.597 389.859 379.952 397.438 373.143 388.098 C 370.488 384.455 370.640 374.636 370.327 365.920 C 368.848 324.742 371.846 326.832 384.409 322.867 C 384.421 322.866 504.800 310.258 504.812 310.256 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 429.824 329.825 C 435.878 328.971 496.178 311.956 507.628 310.691 C 512.106 310.197 525.419 311.177 538.961 310.691 C 545.680 310.450 547.026 329.505 527.343 330.695 C 524.235 330.883 506.222 325.912 506.220 325.911 C 506.222 325.912 524.372 331.868 529.103 333.739 C 537.198 336.940 525.658 349.892 515.725 348.525 C 508.136 347.480 490.380 328.523 490.377 328.521 C 490.380 328.523 505.175 343.943 511.501 348.960 C 518.036 354.144 501.703 360.943 495.658 357.222 C 491.409 354.606 471.369 332.437 471.367 332.434 C 471.369 332.437 487.604 351.512 492.138 357.657 C 496.813 363.994 485.898 369.468 475.591 364.180 C 469.747 361.182 457.638 337.221 457.636 337.218 C 457.638 337.221 470.459 360.277 470.311 364.615 C 470.155 369.137 460.294 370.241 454.116 365.485 C 450.420 362.639 440.035 338.960 440.034 338.958 C 440.035 338.960 449.899 361.121 450.947 365.050 C 452.940 372.516 438.817 372.792 434.753 367.659 C 432.121 364.335 423.840 340.265 423.839 340.262 C 423.840 340.265 429.849 360.167 431.584 366.789 C 432.622 370.751 420.005 374.376 414.686 365.920 C 412.841 362.987 407.646 342.874 407.645 342.872 C 407.645 342.874 409.911 357.277 412.926 365.485 C 416.579 375.430 402.446 376.496 397.435 371.138 C 392.487 365.846 390.043 340.700 390.042 340.697 C 390.042 340.700 393.562 363.027 393.211 366.789 C 392.622 373.088 382.386 373.987 377.720 370.703 C 369.858 365.170 370.482 345.231 373.143 332.434 C 378.646 329.700 425.537 330.431 429.824 329.825 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 397.787 305.908 C 397.799 305.908 509.612 309.983 512.186 310.003 C 539.906 310.222 519.253 331.955 503.378 327.722 C 499.265 326.626 486.814 322.109 486.812 322.109 C 486.814 322.109 497.631 325.512 500.984 326.939 C 516.088 333.369 493.188 343.959 483.529 339.084 C 479.289 336.944 468.859 326.221 468.857 326.220 C 468.859 326.221 476.893 334.434 483.074 339.100 C 489.604 344.029 474.335 352.696 465.151 345.354 C 460.986 342.024 451.154 328.957 451.152 328.956 C 451.154 328.957 458.672 339.054 463.641 344.808 C 468.184 350.070 452.594 356.539 444.099 347.346 C 438.063 340.815 434.811 331.567 434.810 331.565 C 434.811 331.566 439.639 342.766 441.986 345.876 C 447.464 353.135 432.175 356.849 424.998 349.157 C 421.028 344.902 417.913 332.618 417.912 332.616 C 417.912 332.618 422.103 344.609 424.179 348.106 C 428.565 355.494 412.027 359.942 406.883 351.316 C 404.569 347.435 400.911 333.741 400.911 333.739 C 400.911 333.741 403.859 345.516 405.168 348.778 C 409.751 360.202 392.103 357.577 388.986 350.699 C 386.843 345.971 385.069 334.484 385.068 334.483 C 385.069 334.484 387.778 345.842 388.768 349.466 C 391.837 360.693 374.930 360.752 372.087 350.264 C 370.840 345.665 371.559 341.926 371.383 330.695 C 370.963 303.769 397.785 305.910 397.787 305.908 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 336.295 311.126 C 331.310 310.034 226.531 312.184 209.908 311.126 C 142.016 306.803 109.555 307.536 14.977 279.975 C -1.756 275.098 3.740 300.147 34.013 310.080 C 46.457 314.163 120.962 320.964 120.971 320.965 C 120.962 320.964 52.096 315.887 34.361 311.944 C 14.575 307.546 12.981 330.664 38.426 339.270 C 51.253 343.608 130.408 337.690 130.417 337.690 C 130.408 337.690 54.372 342.816 41.704 341.243 C 24.175 339.065 21.294 365.715 49.066 368.079 C 58.647 368.894 137.393 350.828 137.401 350.827 C 137.393 350.828 82.033 365.887 48.969 369.113 C 33.474 370.625 46.214 395.263 69.727 392.953 C 84.913 391.461 156.944 361.650 156.953 361.647 C 156.944 361.651 120.446 379.923 70.889 394.118 C 53.094 399.215 74.101 416.687 93.993 413.864 C 110.059 411.583 172.917 366.939 172.925 366.935 C 172.919 366.939 139.726 392.463 116.011 405.057 C 93.080 417.236 119.073 429.778 141.433 417.451 C 151.640 411.824 183.413 376.359 183.417 376.355 C 183.413 376.359 170.598 395.613 144.514 415.821 C 133.641 424.244 163.303 429.696 174.878 417.995 C 186.382 406.364 209.876 375.487 209.880 375.483 C 209.876 375.487 192.680 398.331 176.110 419.408 C 169.819 427.412 196.574 427.000 204.978 418.756 C 210.253 413.582 233.140 376.795 233.143 376.791 C 233.140 376.795 226.672 392.682 207.091 417.669 C 201.262 425.108 224.219 426.813 233.055 417.886 C 240.074 410.795 257.081 374.621 257.083 374.617 C 257.081 374.621 250.594 393.187 233.847 419.408 C 227.933 428.668 248.774 428.794 256.202 418.212 C 264.447 406.469 278.908 369.838 278.910 369.833 C 278.908 369.838 272.976 390.812 258.139 418.104 C 253.004 427.549 274.774 428.658 281.902 417.343 C 286.255 410.432 302.144 370.707 302.146 370.703 C 302.144 370.708 300.131 388.456 282.783 418.539 C 278.548 425.882 300.924 425.084 305.313 417.778 C 311.993 406.660 319.395 371.578 319.396 371.573 C 319.395 371.578 317.028 386.802 308.130 418.539 C 307.679 420.148 320.126 424.219 325.029 417.669 C 331.732 408.715 336.998 374.186 336.999 374.182 C 336.998 374.186 335.343 396.662 329.606 417.234 C 327.893 423.375 341.245 420.610 344.392 414.625 C 349.704 404.523 348.122 394.972 349.321 372.877 C 350.400 352.997 352.043 314.575 336.295 311.126 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 215.188 310.256 C 215.177 310.255 139.844 307.302 103.851 296.124 C 96.941 293.977 95.847 321.386 116.421 325.295 C 132.997 328.444 200.042 323.737 200.050 323.737 C 200.041 323.737 130.264 329.986 110.366 327.390 C 102.340 326.342 105.163 350.988 128.231 352.004 C 141.299 352.579 210.955 330.262 210.964 330.260 C 210.955 330.262 143.888 352.556 126.900 354.012 C 115.461 354.992 131.650 378.031 145.661 373.676 C 164.378 367.859 217.997 338.092 218.005 338.088 C 217.998 338.091 171.800 366.037 151.953 372.347 C 139.156 376.416 160.387 394.488 178.197 385.670 C 190.235 379.711 229.970 343.745 229.975 343.741 C 229.970 343.745 198.030 372.994 185.264 382.879 C 173.581 391.926 200.732 394.160 206.035 392.011 C 217.124 387.517 245.461 347.659 245.465 347.655 C 245.462 347.659 223.234 376.091 215.541 386.793 C 211.785 392.018 227.999 394.031 238.072 389.837 C 246.647 386.267 263.065 351.138 263.068 351.134 C 263.066 351.138 250.258 378.567 244.057 387.663 C 241.752 391.044 254.654 397.673 264.124 390.707 C 270.120 386.296 285.949 350.268 285.951 350.264 C 285.950 350.268 273.914 378.380 269.052 387.228 C 267.161 390.671 280.303 396.911 288.416 389.402 C 293.950 384.281 303.201 355.051 303.202 355.048 C 303.201 355.051 294.041 380.678 290.880 388.098 C 289.402 391.567 304.082 396.846 309.539 389.402 C 313.382 384.160 321.508 355.051 321.509 355.048 C 321.508 355.051 313.483 379.027 311.299 387.228 C 310.386 390.658 323.242 397.304 328.902 387.663 C 332.142 382.143 336.294 356.790 336.295 356.787 C 336.294 356.790 332.282 377.762 331.014 385.923 C 330.403 389.859 340.048 397.438 346.857 388.098 C 349.512 384.455 349.360 374.636 349.673 365.920 C 351.152 324.742 348.154 326.832 335.591 322.867 C 335.579 322.866 215.200 310.258 215.188 310.256 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 290.176 329.825 C 284.122 328.971 223.822 311.956 212.372 310.691 C 207.894 310.197 194.581 311.177 181.039 310.691 C 174.320 310.450 172.974 329.505 192.657 330.695 C 195.765 330.883 213.778 325.912 213.780 325.911 C 213.778 325.912 195.628 331.868 190.897 333.739 C 182.802 336.940 194.342 349.891 204.275 348.524 C 211.864 347.480 229.620 328.523 229.623 328.521 C 229.620 328.523 214.825 343.943 208.500 348.960 C 201.964 354.144 218.297 360.943 224.342 357.222 C 228.591 354.606 248.631 332.437 248.633 332.434 C 248.631 332.437 232.396 351.512 227.863 357.657 C 223.187 363.994 234.102 369.468 244.409 364.180 C 250.253 361.182 262.362 337.221 262.364 337.218 C 262.362 337.221 249.541 360.277 249.689 364.615 C 249.845 369.137 259.706 370.242 265.884 365.485 C 269.581 362.639 279.965 338.960 279.966 338.957 C 279.965 338.960 270.101 361.121 269.053 365.050 C 267.060 372.516 281.183 372.792 285.247 367.659 C 287.879 364.335 296.160 340.265 296.161 340.262 C 296.160 340.265 290.151 360.167 288.416 366.789 C 287.378 370.750 299.995 374.376 305.314 365.920 C 307.159 362.987 312.355 342.874 312.355 342.872 C 312.355 342.874 310.089 357.277 307.074 365.485 C 303.420 375.431 317.555 376.496 322.565 371.138 C 327.513 365.846 329.957 340.700 329.958 340.697 C 329.958 340.700 326.438 363.027 326.789 366.789 C 327.378 373.088 337.614 373.987 342.280 370.703 C 350.142 365.170 349.518 345.231 346.857 332.434 C 341.354 329.700 294.463 330.431 290.176 329.825 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 322.213 305.908 C 322.201 305.908 210.388 309.983 207.814 310.003 C 180.094 310.222 200.747 331.954 216.622 327.722 C 220.735 326.626 233.186 322.109 233.188 322.109 C 233.186 322.109 222.369 325.512 219.016 326.939 C 203.912 333.369 226.812 343.959 236.472 339.084 C 240.711 336.944 251.141 326.221 251.143 326.220 C 251.141 326.221 243.107 334.434 236.926 339.100 C 230.396 344.029 245.665 352.696 254.849 345.354 C 259.014 342.024 268.847 328.957 268.848 328.956 C 268.847 328.957 261.328 339.054 256.359 344.808 C 251.816 350.070 267.406 356.540 275.902 347.346 C 281.937 340.815 285.189 331.566 285.190 331.565 C 285.189 331.566 280.361 342.766 278.014 345.876 C 272.536 353.135 287.825 356.849 295.002 349.157 C 298.973 344.902 302.087 332.618 302.088 332.616 C 302.088 332.618 297.897 344.609 295.821 348.106 C 291.435 355.494 307.973 359.942 313.117 351.316 C 315.431 347.435 319.089 333.741 319.089 333.739 C 319.089 333.741 316.141 345.516 314.833 348.778 C 310.249 360.202 327.897 357.577 331.014 350.699 C 333.157 345.971 334.931 334.484 334.932 334.482 C 334.931 334.484 332.222 345.842 331.232 349.466 C 328.163 360.693 345.070 360.752 347.913 350.264 C 349.160 345.665 348.441 341.926 348.617 330.695 C 349.037 303.769 322.215 305.910 322.213 305.908 Z\\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"circle\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 279.727 C 404.431 279.727 440.273 315.569 440.273 360.000 C 440.273 404.431 404.431 440.273 360.000 440.273 C 315.569 440.273 279.727 404.431 279.727 360.000 C 279.727 315.569 315.569 279.727 360.000 279.727 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":303.466,\\\"max\\\":416.534},\\\"y\\\":{\\\"min\\\":303.466,\\\"max\\\":416.534}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":520.513,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":278.521,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":23.852,\\\"y\\\":321.654,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.999987196609553,\\\"y\\\":0.005060298110508342}},{\\\"point\\\":{\\\"x\\\":696.148,\\\"y\\\":321.654,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.999987196609553,\\\"y\\\":0.005060298110508353}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":564.395,\\\"y\\\":420.033,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7128578893212155,\\\"y\\\":0.7013085124483387}},{\\\"point\\\":{\\\"x\\\":155.436,\\\"y\\\":420.076,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987104229361701,\\\"y\\\":0.7154046022219583}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":420.967,\\\"y\\\":300.035,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314461081805572,\\\"y\\\":-0.7754197653294814}},{\\\"point\\\":{\\\"x\\\":299.797,\\\"y\\\":300.124,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817160018062427,\\\"y\\\":-0.7316169030861103}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":438.491,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"woman_bottom\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":276.94281485058775,\\\"max\\\":442.50418362441917},\\\"y\\\":{\\\"min\\\":368.223,\\\"max\\\":708.3466662195988}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"woman_bottom\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"woman_bottom\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 441.210 369.223 C 441.210 369.224 441.720 380.689 441.397 386.981 C 438.177 449.759 424.287 473.122 411.491 523.831 C 404.700 550.744 407.455 562.103 404.439 588.614 C 399.717 630.121 396.650 657.572 399.630 665.042 C 403.044 673.603 405.239 676.637 407.475 679.045 C 411.532 683.414 427.586 694.454 432.223 694.383 C 435.975 694.325 442.383 698.501 440.065 699.055 C 436.529 699.901 432.833 696.684 432.832 696.684 C 432.832 696.684 439.168 701.234 435.353 701.542 C 432.260 701.792 426.885 697.409 426.884 697.409 C 426.884 697.409 434.531 702.939 428.406 702.899 C 426.412 702.886 422.005 697.674 422.005 697.674 C 422.005 697.674 430.920 706.585 423.211 704.793 C 422.268 704.574 418.404 700.236 418.404 700.235 C 418.403 700.235 410.186 696.631 412.876 697.352 C 419.000 698.994 425.860 706.779 421.124 707.137 C 404.496 708.393 410.468 703.641 402.391 702.555 C 399.017 702.102 392.815 699.741 391.617 699.607 C 389.445 699.365 377.194 702.493 371.416 700.895 C 368.514 700.092 369.766 687.750 374.657 681.842 C 379.227 676.322 374.504 673.374 376.978 663.414 C 381.786 644.061 361.520 607.389 364.154 571.242 C 365.026 559.284 373.767 530.755 374.063 525.023 C 374.687 512.944 366.349 508.649 360.881 426.295 C 360.770 424.626 364.549 424.397 376.745 402.463 C 378.635 399.065 370.248 415.732 359.514 423.917 C 349.265 415.542 341.020 399.015 342.729 402.463 C 353.880 424.947 358.705 424.265 358.594 426.295 C 354.106 508.630 345.894 512.942 346.144 525.023 C 346.270 531.094 352.938 561.811 353.547 574.480 C 355.257 610.018 335.595 647.013 342.829 665.203 C 348.945 680.583 341.703 681.882 344.068 686.577 C 347.477 693.347 354.730 706.797 340.811 706.352 C 323.708 705.805 341.544 690.916 336.175 694.914 C 333.684 696.769 331.587 707.088 326.746 705.520 C 318.288 702.781 329.941 695.736 328.770 695.894 C 325.461 696.340 324.738 707.050 320.727 705.996 C 312.504 703.837 322.048 695.894 320.871 696.073 C 318.929 696.370 318.430 704.965 314.687 705.119 C 305.061 705.514 314.289 695.552 312.992 695.858 C 309.854 696.596 311.870 704.774 305.325 704.939 C 296.941 705.150 304.138 696.064 310.828 690.093 C 312.489 688.612 312.437 685.834 315.124 680.246 C 318.705 672.797 319.970 661.290 320.138 658.597 C 320.679 649.939 316.840 623.792 310.024 587.882 C 305.189 562.411 315.375 551.028 310.181 524.563 C 300.024 472.804 281.693 450.277 278.077 386.981 C 277.718 380.690 278.193 369.226 278.193 369.226 C 332.532 369.225 441.193 369.223 441.210 369.223 Z\\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":369.551,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":369.418,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":279.65,\\\"y\\\":414.325,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872861335325,\\\"y\\\":0.005042575858884988}},{\\\"point\\\":{\\\"x\\\":438.769,\\\"y\\\":414.325,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872861335325,\\\"y\\\":0.005042575858884966}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":417.995,\\\"y\\\":701.158,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712903806165148,\\\"y\\\":0.701261836374435}},{\\\"point\\\":{\\\"x\\\":321.518,\\\"y\\\":701.206,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6987156961473291,\\\"y\\\":0.7153994520247784}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":true}},{\\\"name\\\":\\\"woman_libra\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":110.15782991363385,\\\"max\\\":610.9011708871176},\\\"y\\\":{\\\"min\\\":26.588853232245643,\\\"max\\\":391.335}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"woman_libra\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"hair\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 30.893 C 351.304 25.711 320.529 30.986 311.071 39.783 C 295.719 54.060 299.757 64.641 287.007 78.359 C 271.845 94.671 256.896 92.443 243.129 109.948 C 229.970 126.681 236.480 140.866 223.548 157.776 C 210.142 175.304 194.238 172.647 180.952 190.266 C 164.774 211.722 170.110 222.538 157.865 251.281 C 144.524 282.598 120.828 277.847 112.926 321.080 C 107.235 352.220 135.032 388.199 135.035 388.206 C 135.057 388.206 359.694 389.335 359.716 389.335 C 359.739 389.335 586.002 388.206 586.025 388.206 C 586.027 388.199 613.824 352.220 608.133 321.080 C 600.231 277.847 576.535 282.598 563.194 251.281 C 550.949 222.538 556.285 211.722 540.107 190.266 C 526.822 172.647 510.917 175.304 497.511 157.776 C 484.579 140.866 491.090 126.681 477.930 109.948 C 464.164 92.443 449.214 94.671 434.052 78.359 C 421.302 64.641 425.295 54.109 409.989 39.783 C 400.346 30.758 368.908 25.206 360.000 30.893 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 238.869 389.276 C 229.367 379.460 212.849 364.188 213.001 338.772 C 213.175 309.516 228.915 309.432 232.464 287.051 C 236.760 259.958 228.065 251.834 236.860 229.941 C 244.511 210.896 260.329 210.133 268.136 191.151 C 275.254 173.842 265.734 163.223 272.999 145.975 C 281.535 125.708 296.411 124.191 307.389 105.135 C 316.514 89.295 310.903 80.206 322.686 63.474 C 328.737 54.882 351.951 45.201 359.860 47.497 C 367.838 45.055 391.466 54.782 397.616 63.474 C 409.438 80.179 403.789 89.295 412.914 105.135 C 423.892 124.191 438.768 125.708 447.304 145.975 C 454.569 163.223 445.049 173.842 452.167 191.151 C 459.974 210.133 475.792 210.896 483.443 229.941 C 492.238 251.834 483.543 259.958 487.839 287.051 C 491.388 309.432 507.128 309.516 507.302 338.772 C 507.453 364.188 490.936 379.460 481.434 389.276 M 197.902 389.217 C 187.619 375.727 173.109 362.245 175.108 336.664 C 177.806 302.135 196.951 303.813 203.823 277.883 C 211.215 249.991 203.598 240.671 215.152 218.708 C 225.014 199.964 240.942 200.461 250.947 181.793 C 260.244 164.445 251.759 152.365 261.285 135.143 C 271.656 116.396 286.200 116.349 298.507 98.812 C 309.418 83.265 304.391 73.445 317.762 56.914 C 325.072 47.877 351.319 38.559 359.860 41.726 C 368.691 38.462 395.126 47.779 402.541 56.914 C 415.940 73.423 410.885 83.265 421.795 98.812 C 434.103 116.349 448.647 116.396 459.017 135.143 C 468.544 152.365 460.059 164.445 469.356 181.793 C 479.360 200.461 495.289 199.964 505.151 218.708 C 516.705 240.671 509.088 249.991 516.480 277.883 C 523.352 303.813 542.497 302.135 545.195 336.664 C 547.194 362.245 532.684 375.727 522.401 389.217 M 163.836 387.177 C 155.470 375.593 139.720 358.199 141.998 335.698 C 146.282 293.389 169.713 296.248 180.139 265.004 C 189.650 236.502 183.479 226.474 197.356 204.673 C 208.984 186.408 224.932 187.983 236.691 169.802 C 247.816 152.601 240.310 139.428 251.664 122.377 C 263.789 104.168 278.550 105.217 292.360 88.249 C 304.321 73.553 299.757 63.232 314.365 47.850 C 322.815 38.952 351.479 31.960 360.140 36.140 C 369.107 31.281 397.483 38.948 405.938 47.850 C 420.546 63.231 415.982 73.553 427.943 88.249 C 441.752 105.217 456.513 104.168 468.639 122.377 C 479.993 139.428 472.487 152.601 483.612 169.802 C 495.371 187.983 511.319 186.408 522.946 204.673 C 536.824 226.474 530.653 236.502 540.164 265.004 C 550.590 296.248 574.021 293.389 578.305 335.698 C 580.583 358.199 564.833 375.593 556.467 387.177 \\\"},\\\"children\\\":[]}]},{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"woman_top\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 441.484 389.126 C 441.484 389.125 439.950 383.294 439.444 380.565 C 437.561 372.942 435.359 366.089 432.518 359.854 C 426.836 347.383 419.620 337.146 414.433 326.508 C 402.498 302.034 397.588 282.585 404.424 250.032 C 407.523 235.272 414.960 219.428 414.961 219.425 C 414.966 219.433 440.763 298.306 463.946 294.492 C 480.123 291.830 494.619 272.902 503.640 252.355 C 510.401 236.958 519.230 207.777 521.861 207.440 C 523.992 207.167 537.960 207.854 539.871 207.582 C 543.535 207.059 576.830 191.319 577.146 187.553 C 577.535 182.911 546.641 188.706 546.638 188.706 C 546.634 188.706 511.074 187.601 511.069 187.602 C 511.065 187.609 502.652 205.907 468.449 258.074 C 463.528 265.580 462.729 254.875 455.065 230.721 C 449.226 212.316 441.291 200.182 437.070 183.531 C 430.723 158.492 375.271 153.211 373.824 137.431 C 373.149 130.062 371.543 116.117 374.723 113.828 C 376.018 112.896 388.078 100.877 388.395 82.487 C 388.562 72.797 382.651 51.588 359.928 52.081 C 337.106 51.474 331.270 72.793 331.435 82.487 C 331.748 100.877 343.812 112.896 345.108 113.828 C 348.287 116.117 346.681 130.062 346.006 137.431 C 344.559 153.211 289.107 158.492 282.760 183.531 C 278.539 200.182 270.604 212.316 264.765 230.721 C 257.101 254.875 256.302 265.580 251.381 258.074 C 217.179 205.907 208.765 187.609 208.761 187.602 C 208.756 187.601 173.196 188.555 173.192 188.555 C 173.189 188.555 142.545 184.037 143.156 188.579 C 143.648 192.235 175.019 206.588 179.487 206.638 C 183.121 206.678 195.819 206.942 197.969 207.440 C 204.334 208.915 209.429 236.958 216.190 252.355 C 225.212 272.902 239.707 291.830 255.884 294.492 C 279.067 298.306 304.864 219.433 304.869 219.425 C 304.870 219.428 312.307 235.272 315.406 250.032 C 322.242 282.585 317.333 302.034 305.397 326.508 C 300.210 337.146 292.994 347.383 287.312 359.854 C 284.471 366.089 282.269 372.942 280.386 380.565 C 279.881 383.294 278.346 389.125 278.346 389.126 C 278.362 389.126 441.468 389.126 441.484 389.126 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 326.647 205.282 C 340.314 205.282 351.339 216.306 351.339 229.972 C 351.339 243.639 340.314 254.663 326.647 254.663 C 312.981 254.663 301.956 243.639 301.957 229.972 C 301.957 216.306 312.981 205.282 326.647 205.282 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 393.753 205.282 C 380.087 205.282 369.062 216.306 369.062 229.972 C 369.062 243.639 380.087 254.664 393.753 254.664 C 407.420 254.664 418.445 243.639 418.445 229.972 C 418.444 216.306 407.419 205.282 393.753 205.282 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 314.931 190.629 C 314.939 190.629 404.025 190.629 404.034 190.629 C 404.034 190.633 404.034 229.954 404.034 229.958 C 404.025 229.958 314.939 229.958 314.931 229.958 C 314.931 229.954 314.931 190.633 314.931 190.629 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 530.501 195.724 C 535.950 193.540 541.399 191.356 546.847 189.172 M 537.546 199.350 C 545.677 195.197 553.808 191.043 561.940 186.890 M 547.023 199.526 C 555.154 195.255 563.285 190.985 571.416 186.715 \\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 187.228 195.724 C 182.327 193.540 177.425 191.356 172.523 189.172 M 181.824 199.350 C 173.693 195.197 165.562 191.043 157.431 186.890 M 172.347 199.526 C 164.216 195.255 156.085 190.985 147.954 186.715 \\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":95.055,\\\"max\\\":255.587},\\\"y\\\":{\\\"min\\\":29.143,\\\"max\\\":189.675}},{\\\"x\\\":{\\\"min\\\":464.412,\\\"max\\\":624.945},\\\"y\\\":{\\\"min\\\":29.142,\\\"max\\\":189.675}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":388.743,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360.092,\\\"y\\\":30.127,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":144.567,\\\"y\\\":277.887,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872723162575,\\\"y\\\":0.0050453152023373134}},{\\\"point\\\":{\\\"x\\\":575.433,\\\"y\\\":277.887,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872723162575,\\\"y\\\":0.0050453152023373195}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":388.742,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":true,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"woman_stand\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":167.0731740631161,\\\"max\\\":580.2318433376647},\\\"y\\\":{\\\"min\\\":15.850238606848176,\\\"max\\\":696.2289494683224}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"woman_stand\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"woman_stand\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 329.247 19.816 C 319.781 23.012 312.184 28.258 306.026 36.127 C 302.455 40.690 302.921 46.524 299.617 51.284 C 296.510 55.759 290.514 56.920 288.398 61.940 C 285.323 69.237 292.870 77.256 289.462 84.404 C 286.394 90.840 276.118 90.034 273.279 96.574 C 270.730 102.447 277.866 108.950 275.002 114.676 C 272.898 118.882 265.912 117.816 263.868 122.051 C 261.072 127.841 268.784 134.309 266.137 140.168 C 264.044 144.803 256.435 143.950 254.428 148.622 C 251.716 154.940 253.500 162.468 257.764 167.861 C 262.867 174.316 271.199 176.587 279.428 176.627 C 287.799 176.668 293.250 169.051 301.541 167.893 C 309.573 166.771 317.220 173.767 324.467 170.125 C 350.271 157.154 337.260 117.022 354.342 93.734 C 360.028 85.982 374.456 85.216 374.763 75.606 C 375.608 49.074 378.563 45.432 373.230 35.742 C 369.369 28.725 362.802 20.731 351.019 18.641 C 344.578 17.498 336.521 17.360 329.247 19.816 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 280.773 662.206 C 280.743 659.106 273.489 669.770 273.191 666.684 C 272.429 658.790 280.887 655.196 285.862 649.597 C 293.552 640.942 307.670 632.404 309.968 627.234 C 315.265 615.318 302.858 578.162 305.348 551.597 C 306.883 535.224 316.857 515.054 316.169 506.162 C 313.379 470.076 302.929 438.501 294.392 402.028 C 290.934 387.255 286.997 373.582 287.776 357.885 C 289.293 327.287 310.211 304.772 311.452 274.162 C 312.130 257.452 303.509 227.340 303.508 227.335 C 303.506 227.340 289.368 255.869 282.994 271.936 C 278.457 283.375 277.192 293.992 271.746 305.027 C 261.342 326.106 243.010 348.628 233.670 359.865 C 230.969 363.113 225.282 369.159 220.333 373.816 C 213.776 379.989 204.929 391.651 200.760 390.280 C 197.094 389.074 211.794 373.600 211.796 373.599 C 211.793 373.601 188.667 393.191 185.767 392.560 C 181.103 391.546 202.634 374.526 202.636 374.524 C 202.634 374.525 179.898 393.575 177.621 390.162 C 176.181 388.005 198.756 370.776 198.758 370.774 C 198.756 370.776 175.202 391.032 173.241 388.986 C 169.446 385.023 193.579 365.460 193.581 365.457 C 193.579 365.459 170.754 386.223 169.144 382.697 C 167.778 379.706 186.604 362.018 188.271 359.907 C 188.777 359.266 194.347 356.735 194.348 356.735 C 194.349 356.735 203.029 353.176 203.030 353.176 C 203.032 353.175 215.350 349.060 218.149 346.332 C 229.820 334.957 231.830 305.134 241.712 281.271 C 245.045 273.223 253.911 267.379 256.451 261.403 C 262.327 247.580 261.780 224.937 263.521 204.620 C 264.997 187.389 266.143 171.559 275.428 156.969 C 280.461 149.061 287.261 143.980 295.456 139.429 C 305.231 134.000 317.532 132.362 323.504 122.492 C 326.610 117.359 326.315 111.535 325.581 105.581 C 325.126 101.889 321.670 99.344 322.007 95.639 C 322.515 90.046 330.116 87.776 330.560 82.178 C 330.875 78.220 326.478 75.646 326.453 71.675 C 326.428 67.594 330.588 64.918 330.563 60.836 C 330.538 56.866 325.249 54.117 326.456 50.334 C 327.982 45.548 336.358 47.439 338.684 42.987 C 340.831 38.875 334.660 33.127 337.927 29.834 C 343.994 23.718 354.942 29.719 361.877 34.828 C 368.207 39.492 369.102 47.363 372.868 54.264 C 374.562 57.368 376.447 59.786 377.565 63.140 C 380.400 71.642 384.892 80.448 380.746 88.394 C 377.231 95.131 365.301 92.074 361.871 98.854 C 357.078 108.325 360.626 120.147 367.126 128.539 C 378.393 143.084 402.176 135.044 415.894 147.305 C 437.475 166.592 439.363 195.127 451.195 221.542 C 455.177 230.431 460.233 244.696 462.032 246.993 C 467.688 254.216 507.758 280.224 534.677 294.830 C 541.124 298.328 547.400 299.617 553.606 303.525 C 560.683 307.981 579.625 315.768 571.819 318.769 C 570.315 319.347 564.933 314.923 560.845 313.778 C 558.474 313.113 554.914 310.585 553.914 312.836 C 552.876 315.170 559.519 325.643 564.948 330.631 C 568.754 334.128 580.316 332.960 577.904 337.531 C 577.239 338.790 569.790 337.854 565.901 336.128 C 561.280 334.076 555.358 326.399 555.202 326.550 C 555.051 326.697 559.772 334.689 563.671 337.712 C 566.950 340.254 575.470 338.336 574.495 342.369 C 574.128 343.889 567.535 343.899 564.091 342.648 C 558.196 340.507 551.458 330.082 551.276 330.279 C 551.120 330.449 555.683 339.481 559.702 343.082 C 562.589 345.669 570.857 344.658 569.419 348.257 C 568.458 350.663 559.667 347.296 555.285 344.610 C 550.170 341.476 544.289 331.540 544.124 331.737 C 544.018 331.864 546.457 338.614 548.793 341.707 C 550.678 344.203 554.965 344.501 555.448 347.591 C 556.334 353.256 544.182 342.912 539.609 337.093 C 532.075 327.507 523.436 310.093 521.051 307.861 C 515.266 302.448 456.728 280.746 445.540 271.194 C 437.973 264.733 412.150 225.284 412.146 225.280 C 412.147 225.283 410.901 245.553 412.782 256.322 C 417.313 282.273 435.303 300.397 438.648 326.527 C 442.019 352.870 435.894 375.444 431.210 401.585 C 424.394 439.622 405.638 470.187 402.792 507.590 C 401.708 521.838 406.970 534.571 406.098 549.265 C 404.785 571.364 397.955 589.183 393.023 610.765 C 389.774 624.982 381.070 645.506 383.232 651.008 C 385.603 657.041 406.265 665.549 421.455 675.523 C 422.939 676.497 423.723 679.264 422.421 680.472 C 420.149 682.582 413.991 673.255 414.677 676.279 C 414.751 676.605 419.741 679.694 420.724 682.617 C 421.032 683.530 421.415 684.761 420.654 685.352 C 418.041 687.381 413.775 678.416 413.138 679.714 C 412.431 681.159 417.695 683.300 418.981 686.048 C 419.370 686.878 420.057 687.895 419.476 688.605 C 416.964 691.674 410.396 680.743 409.774 682.883 C 409.378 684.243 416.431 686.189 417.260 689.643 C 417.631 691.187 418.223 693.440 416.054 693.989 C 413.229 694.705 410.617 693.685 407.879 692.684 C 404.962 691.618 403.139 689.450 400.336 688.112 C 395.772 685.935 391.214 685.809 386.777 683.386 C 382.787 681.207 380.686 677.421 376.584 675.462 C 369.867 672.255 359.813 677.431 355.901 671.100 C 351.947 664.701 360.240 655.888 361.357 650.445 C 362.924 642.818 365.081 631.340 365.623 620.813 C 367.081 592.503 358.072 568.647 360.905 540.441 C 361.974 529.800 366.797 521.521 367.899 510.883 C 368.588 504.238 367.305 498.584 367.626 491.910 C 368.984 463.673 376.566 440.518 377.884 412.279 C 378.441 400.336 376.180 379.578 377.115 378.331 C 381.933 371.912 395.765 355.283 395.767 355.280 C 395.765 355.282 378.311 377.556 377.137 377.197 C 375.371 376.658 347.815 347.483 347.812 347.480 C 347.815 347.483 366.045 365.226 375.980 379.944 C 376.723 381.044 376.479 403.013 375.612 415.504 C 373.704 442.962 366.047 465.435 364.864 492.934 C 364.573 499.680 366.197 505.389 365.464 512.102 C 364.305 522.737 360.541 531.165 357.596 541.450 C 350.713 565.487 343.063 585.137 336.697 609.315 C 334.449 617.851 331.913 624.967 331.143 633.760 C 330.619 639.734 334.934 645.667 331.799 650.779 C 327.924 657.098 318.362 654.588 312.433 659.037 C 306.344 663.605 303.619 674.503 294.412 678.820 C 287.979 681.836 284.142 690.737 277.178 689.321 C 275.654 689.011 273.766 688.266 273.958 686.296 C 274.655 679.157 289.587 672.513 289.099 672.663 C 281.095 675.126 273.892 689.317 272.560 680.133 C 271.986 676.177 288.380 668.538 284.893 665.989 C 284.222 665.499 271.717 680.719 271.773 672.915 C 271.815 667.145 280.810 666.066 280.773 662.206 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 339.472 58.108 C 339.473 58.107 343.932 49.639 348.400 48.162 C 352.292 46.875 359.841 50.306 359.842 50.306 C 359.842 50.307 355.576 56.122 352.875 57.377 C 349.224 59.075 339.473 58.108 339.472 58.108 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 405.462 208.805 C 405.563 207.922 406.551 205.458 408.894 205.536 C 411.251 205.615 412.112 208.156 412.115 209.050 C 412.119 210.080 411.035 213.277 408.329 213.029 C 405.814 212.799 405.354 209.756 405.462 208.805 M 310.365 215.162 C 310.431 212.718 311.287 210.708 314.386 210.560 C 317.239 210.424 318.498 213.333 318.539 214.354 C 318.581 215.415 317.482 218.444 314.516 218.600 C 311.783 218.745 310.338 216.141 310.365 215.162 M 407.428 178.180 C 409.847 186.595 423.656 200.014 421.417 209.966 C 419.705 217.576 415.019 227.028 402.014 228.096 C 380.359 229.874 367.306 213.493 367.463 200.508 M 349.213 207.973 C 349.533 220.445 337.572 234.075 319.183 234.173 C 306.928 234.238 300.827 226.054 297.912 218.266 C 293.845 207.397 303.095 200.124 307.335 182.414 \\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":318.411,\\\"max\\\":407.442},\\\"y\\\":{\\\"min\\\":234.841,\\\"max\\\":345.658}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":343.316,\\\"y\\\":685.952,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":342.125,\\\"y\\\":26.508,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":409.443,\\\"y\\\":148.655,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7533652820395683,\\\"y\\\":-0.6576022747964317}},{\\\"point\\\":{\\\"x\\\":277.398,\\\"y\\\":160.103,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.8560978328455029,\\\"y\\\":-0.5168137968332825}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":306.552,\\\"y\\\":363.846,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986883991125071,\\\"y\\\":0.7154261114507926}},{\\\"point\\\":{\\\"x\\\":421.731,\\\"y\\\":364.99,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712932968582661,\\\"y\\\":0.7012321885851466}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":305.517,\\\"y\\\":36.505,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6817454199674197,\\\"y\\\":-0.7315894903246263}},{\\\"point\\\":{\\\"x\\\":365.223,\\\"y\\\":37.618,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.6314454286031319,\\\"y\\\":-0.7754203187279831}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":301.457,\\\"y\\\":370.871,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.5367223813778635,\\\"y\\\":0.8437589023696729}}]},\\\"meta\\\":{\\\"always_nest\\\":false,\\\"always_be_nested\\\":false,\\\"invert_nested\\\":true,\\\"rotate_clockwise\\\":true}},{\\\"name\\\":\\\"woman_top\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":149.76583426659028,\\\"max\\\":569.7091657308556},\\\"y\\\":{\\\"min\\\":96.52332220511795,\\\"max\\\":452.683}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"halves\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"woman_top\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"woman_top\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#ffffff\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.387 383.482 C 381.103 383.474 388.625 389.771 410.626 381.163 C 424.126 375.882 427.779 369.350 440.964 363.325 C 449.475 359.436 455.686 362.365 462.426 355.873 C 472.144 346.511 467.824 337.308 473.248 324.952 C 477.740 314.720 486.310 315.420 485.963 300.988 C 485.461 280.117 476.089 283.542 473.248 270.067 C 469.963 254.486 477.713 246.454 472.475 231.416 C 467.762 217.884 457.784 216.514 451.603 203.587 C 444.109 187.910 451.183 177.081 441.554 162.617 C 435.074 152.882 427.476 155.263 419.191 145.127 C 410.494 134.488 413.228 127.765 405.927 118.441 C 394.959 104.434 381.029 97.601 360.387 97.524 C 339.453 97.445 325.231 104.271 314.073 118.448 C 306.750 127.752 309.504 134.490 300.809 145.127 C 292.523 155.262 284.926 152.882 278.446 162.617 C 268.817 177.081 275.891 187.910 268.397 203.587 C 262.217 216.514 252.238 217.884 247.525 231.416 C 242.287 246.454 250.037 254.486 246.752 270.067 C 243.911 283.542 234.539 280.117 234.037 300.988 C 233.691 315.420 242.260 314.720 246.752 324.952 C 252.176 337.308 247.855 346.511 257.574 355.873 C 264.314 362.365 270.525 359.436 279.036 363.325 C 292.221 369.350 295.823 376.014 309.373 381.164 C 330.965 389.370 339.352 383.491 360.387 383.482 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 439.444 443.122 C 437.561 435.499 435.359 428.646 432.518 422.411 C 426.836 409.940 419.620 399.703 414.433 389.065 C 402.498 364.591 397.588 345.143 404.424 312.589 C 407.523 297.829 414.960 281.985 414.961 281.982 C 414.965 281.990 439.054 341.027 456.144 354.747 C 465.032 361.883 471.784 375.989 482.630 384.491 C 492.665 392.356 509.857 402.704 511.344 407.430 C 511.931 409.294 516.781 421.083 517.871 422.460 C 520.971 426.376 556.513 453.681 556.757 448.174 C 556.904 444.837 535.039 430.575 535.602 429.453 C 536.247 428.169 560.447 450.423 562.595 447.260 C 564.589 444.325 540.563 427.047 541.056 426.376 C 541.573 425.672 563.653 446.908 566.612 444.660 C 570.277 441.875 544.830 423.789 545.462 423.134 C 546.075 422.500 569.341 444.277 568.696 440.880 C 567.419 434.157 541.877 409.799 544.040 411.124 C 552.740 416.456 567.241 424.907 562.643 419.918 C 552.390 408.794 546.891 400.319 526.685 397.818 C 518.370 396.789 506.173 368.749 479.898 347.099 C 475.622 343.575 471.365 342.534 460.174 307.327 C 452.593 283.479 442.663 267.636 437.070 246.088 C 430.581 221.085 375.271 215.768 373.824 199.988 C 373.149 192.619 371.543 178.674 374.723 176.385 C 376.018 175.453 388.078 163.434 388.395 145.044 C 388.562 135.354 382.651 114.145 359.928 114.638 C 337.495 115.125 330.684 136.492 330.714 147.605 C 330.750 160.951 343.520 175.539 344.752 176.385 C 347.981 178.604 346.326 192.619 345.650 199.988 C 344.204 215.768 288.894 221.085 282.405 246.088 C 276.812 267.636 266.881 283.479 259.301 307.327 C 248.110 342.534 243.853 343.575 239.577 347.099 C 213.302 368.749 201.105 396.789 192.790 397.818 C 172.584 400.319 167.085 408.794 156.831 419.918 C 152.234 424.907 166.735 416.456 175.435 411.124 C 177.597 409.799 152.055 434.157 150.779 440.880 C 150.134 444.277 173.400 422.500 174.012 423.134 C 174.645 423.789 149.198 441.875 152.863 444.660 C 155.822 446.908 177.902 425.672 178.419 426.376 C 178.912 427.047 154.886 444.325 156.879 447.260 C 159.028 450.423 183.228 428.169 183.873 429.453 C 184.436 430.575 162.570 444.837 162.718 448.174 C 162.962 453.681 198.504 426.376 201.604 422.460 C 202.694 421.083 207.544 409.294 208.131 407.430 C 209.618 402.704 226.809 392.356 236.844 384.491 C 247.691 375.989 254.443 361.883 263.331 354.747 C 280.420 341.027 304.510 281.990 304.514 281.982 C 304.515 281.985 311.951 297.829 315.051 312.589 C 321.886 345.143 316.977 364.591 305.042 389.065 C 299.854 399.703 292.576 409.943 286.862 422.416 C 284.006 428.652 281.456 435.429 279.924 443.128 C 279.264 445.675 279.024 447.169 278.091 451.408 C 278.107 451.408 441.468 451.683 441.484 451.683 C 441.484 451.682 439.950 445.851 439.444 443.122 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 326.647 267.839 C 340.314 267.839 351.339 278.863 351.339 292.530 C 351.339 306.196 340.314 317.221 326.647 317.220 C 312.981 317.220 301.956 306.196 301.957 292.530 C 301.957 278.863 312.981 267.839 326.647 267.839 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 393.753 267.839 C 380.087 267.839 369.062 278.863 369.062 292.530 C 369.062 306.196 380.087 317.221 393.753 317.221 C 407.420 317.221 418.445 306.196 418.445 292.530 C 418.444 278.863 407.419 267.839 393.753 267.839 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#ffffff\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"none\\\",\\\"d\\\":\\\"M 314.931 253.187 C 314.939 253.187 404.025 253.187 404.034 253.187 C 404.034 253.190 404.034 292.511 404.034 292.515 C 404.025 292.515 314.939 292.515 314.931 292.515 C 314.931 292.511 314.931 253.190 314.931 253.187 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"none\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"2\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 358.802 401.017 C 358.802 398.512 359.585 397.511 360.150 397.511 C 360.716 397.511 361.499 398.512 361.499 401.017 C 361.499 403.522 360.716 404.523 360.150 404.523 C 359.585 404.523 358.802 403.522 358.802 401.017 \\\"},\\\"children\\\":[]}]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":259.613,\\\"max\\\":460.387},\\\"y\\\":{\\\"min\\\":37.213,\\\"max\\\":237.988}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":451.3,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":275.475,\\\"y\\\":241.586,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999872880189178,\\\"y\\\":0.005042201956493386}},{\\\"point\\\":{\\\"x\\\":443.958,\\\"y\\\":241.586,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999872880189178,\\\"y\\\":0.0050422019564934075}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":557.575,\\\"y\\\":440.295,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.712903806165146,\\\"y\\\":0.7012618363744371}},{\\\"point\\\":{\\\"x\\\":162.751,\\\"y\\\":440.343,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986777434832865,\\\"y\\\":0.7154365176317902}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":451.299,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}]},\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":false}},{\\\"name\\\":\\\"yoni\\\",\\\"bbox\\\":{\\\"x\\\":{\\\"min\\\":158.455,\\\"max\\\":561.545},\\\"y\\\":{\\\"min\\\":79.625,\\\"max\\\":640.375}},\\\"layers\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"yoni\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"g\\\",\\\"props\\\":{\\\"id\\\":\\\"yoni\\\"},\\\"children\\\":[{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#734A6FEA-CE16-44BD-8DD9-BF259C65C781_0)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 638.375 C 234.913 638.375 160.455 494.050 160.455 360.000 C 160.455 225.950 234.913 81.625 360.000 81.625 C 485.087 81.625 559.545 225.950 559.545 360.000 C 559.545 494.050 485.087 638.375 360.000 638.375 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"url(#734A6FEA-CE16-44BD-8DD9-BF259C65C781_1)\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 86.905 C 360.003 86.914 366.890 128.457 393.960 182.347 C 440.563 261.884 515.690 287.927 515.690 360.000 C 515.690 432.073 440.564 458.116 393.960 537.654 C 366.890 591.543 360.003 633.086 360.000 633.095 C 359.997 633.086 353.110 591.543 326.040 537.654 C 279.437 458.116 204.310 432.073 204.310 360.000 C 204.310 287.927 279.436 261.884 326.040 182.347 C 353.110 128.457 359.997 86.914 360.000 86.905 Z\\\"},\\\"children\\\":[]},{\\\"tagName\\\":\\\"path\\\",\\\"props\\\":{\\\"fill\\\":\\\"#000000\\\",\\\"fillRule\\\":\\\"evenodd\\\",\\\"stroke\\\":\\\"#000000\\\",\\\"strokeWidth\\\":\\\"4\\\",\\\"strokeLinecap\\\":\\\"round\\\",\\\"strokeLinejoin\\\":\\\"round\\\",\\\"d\\\":\\\"M 360.000 86.905 C 360.001 86.914 361.792 126.076 372.695 182.347 C 392.566 258.291 418.203 298.625 418.203 360.000 C 418.203 421.375 392.566 461.709 372.695 537.654 C 361.792 593.924 360.001 633.086 360.000 633.095 C 359.999 633.086 358.208 593.924 347.305 537.654 C 327.434 461.709 301.797 421.375 301.797 360.000 C 301.797 298.625 327.434 258.291 347.305 182.347 C 358.208 126.076 359.999 86.914 360.000 86.905 Z\\\"},\\\"children\\\":[]}]}]}],\\\"specs\\\":{\\\"nesting\\\":[{\\\"x\\\":{\\\"min\\\":298.128,\\\"max\\\":421.872},\\\"y\\\":{\\\"min\\\":268.993,\\\"max\\\":451.007}}],\\\"anchor\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":701.284,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"crown\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":83.977,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":-1}}],\\\"arm\\\":[{\\\"point\\\":{\\\"x\\\":158.386,\\\"y\\\":360.935,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.9999869423966429,\\\"y\\\":0.005110287292651839}},{\\\"point\\\":{\\\"x\\\":561.614,\\\"y\\\":360.935,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.9999869423966429,\\\"y\\\":0.005110287292651861}}],\\\"leg\\\":[{\\\"point\\\":{\\\"x\\\":503.604,\\\"y\\\":555.5,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129295332816484,\\\"y\\\":0.7012356811905758}},{\\\"point\\\":{\\\"x\\\":216.144,\\\"y\\\":555.563,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.698724731626487,\\\"y\\\":0.715390627149597}}],\\\"tail\\\":[{\\\"point\\\":{\\\"x\\\":360,\\\"y\\\":639.641,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0,\\\"y\\\":1}}],\\\"horn\\\":[{\\\"point\\\":{\\\"x\\\":216.144,\\\"y\\\":165.236,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":-0.6986964927886371,\\\"y\\\":-0.71541820704037}},{\\\"point\\\":{\\\"x\\\":503.604,\\\"y\\\":165.299,\\\"t\\\":0},\\\"normal\\\":{\\\"x\\\":0.7129295332816484,\\\"y\\\":-0.7012356811905758}}]},\\\"defs\\\":[{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"734A6FEA-CE16-44BD-8DD9-BF259C65C781_0\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"50.00%\\\",\\\"r\\\":\\\"50.00%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"18.04%\\\",\\\"color\\\":\\\"#000000\\\"},{\\\"offset\\\":\\\"87.84%\\\",\\\"color\\\":\\\"#ffffff\\\"}]},{\\\"type\\\":\\\"radialGradient\\\",\\\"id\\\":\\\"734A6FEA-CE16-44BD-8DD9-BF259C65C781_1\\\",\\\"cx\\\":\\\"50.00%\\\",\\\"cy\\\":\\\"50.00%\\\",\\\"r\\\":\\\"50.00%\\\",\\\"stops\\\":[{\\\"offset\\\":\\\"0.00%\\\",\\\"color\\\":\\\"#000000\\\"},{\\\"offset\\\":\\\"56.08%\\\",\\\"color\\\":\\\"#ffffff\\\"}]}],\\\"meta\\\":{\\\"always_nest\\\":true,\\\"always_be_nested\\\":false,\\\"never_be_nested\\\":false,\\\"invert_nested\\\":false}}]\");\nexport default _SvgVocabulary;", "import React, { useState } from \"react\";\n\nfunction getTargetPathInfo(target: SVGElement): string[] {\n  const path: string[] = [];\n  let node = target;\n  while (true) {\n    const {\n      specType,\n      specIndex,\n      symbolName,\n      attachParent,\n      attachType,\n      attachIndex,\n    } = node.dataset;\n    if (specType && specIndex) {\n      path.unshift(`${specType}[${specIndex}]`);\n    } else if (symbolName) {\n      path.unshift(symbolName);\n    } else if (attachParent && attachType && attachIndex && path.length) {\n      const i = path.length - 1;\n      path[i] = `${path[i]}@${attachParent}.${attachType}[${attachIndex}]`;\n    }\n    if (node.parentNode instanceof SVGElement) {\n      node = node.parentNode;\n    } else {\n      break;\n    }\n  }\n  return path;\n}\n\nexport const HoverDebugHelper: React.FC<{\n  children: any;\n}> = (props) => {\n  type HoverInfo = {\n    x: number;\n    y: number;\n    text: string;\n  };\n  let [hoverInfo, setHoverInfo] = useState<HoverInfo | null>(null);\n  const clearHoverInfo = () => setHoverInfo(null);\n  const handleMouseMove: React.MouseEventHandler = (e) => {\n    const { target } = e;\n    if (target instanceof SVGElement) {\n      const x = e.clientX + window.scrollX;\n      const y = e.clientY + window.scrollY;\n      const path = getTargetPathInfo(target);\n      if (path.length) {\n        setHoverInfo({ x, y, text: path.join(\".\") });\n        return;\n      }\n    }\n    clearHoverInfo();\n  };\n\n  return (\n    <div onMouseMove={handleMouseMove} onMouseLeave={clearHoverInfo}>\n      {hoverInfo && (\n        <div\n          className=\"hover-debug-helper\"\n          style={{\n            position: \"absolute\",\n            pointerEvents: \"none\",\n            top: `${hoverInfo.y}px`,\n            left: `${hoverInfo.x}px`,\n          }}\n        >\n          {hoverInfo.text}\n        </div>\n      )}\n      {props.children}\n    </div>\n  );\n};\n", "import React, { useContext, useMemo, useRef, useState } from \"react\";\nimport { SvgVocabulary, SvgVocabularyWithBlank } from \"../svg-vocabulary\";\nimport {\n  EMPTY_SVG_SYMBOL_DATA,\n  noFillIfShowingSpecs,\n  SvgSymbolData,\n} from \"../svg-symbol\";\nimport {\n  AttachmentPointType,\n  ATTACHMENT_POINT_TYPES,\n  iterAttachmentPoints,\n} from \"../specs\";\nimport { Random } from \"../random\";\nimport { range } from \"../util\";\n\nimport { AutoSizingSvg } from \"../auto-sizing-svg\";\nimport { ExportWidget } from \"../export-svg\";\nimport {\n  CreatureContext,\n  CreatureContextType,\n  CreatureSymbol,\n  NestedCreatureSymbol,\n} from \"../creature-symbol\";\nimport { HoverDebugHelper } from \"../hover-debug-helper\";\nimport { svgScale, SvgTransform } from \"../svg-transform\";\nimport { NumericSlider } from \"../numeric-slider\";\nimport { Checkbox } from \"../checkbox\";\nimport {\n  CompositionContextWidget,\n  createSvgCompositionContext,\n} from \"../svg-composition-context\";\nimport { Page } from \"../page\";\nimport { RandomizerWidget } from \"../randomizer-widget\";\nimport { VocabularyWidget } from \"../vocabulary-widget\";\n\n/** Symbols that can be the \"root\" (i.e., main body) of a creature. */\nconst ROOT_SYMBOLS = SvgVocabulary.items.filter(\n  (data) => data.meta?.always_be_nested !== true\n);\n\ntype AttachmentSymbolMap = {\n  [key in AttachmentPointType]: SvgSymbolData[];\n};\n\n/**\n * Symbols that can be attached to the main body of a creature,\n * at a particular attachment point.\n */\nconst ATTACHMENT_SYMBOLS: AttachmentSymbolMap = (() => {\n  const result = {} as AttachmentSymbolMap;\n\n  for (let type of ATTACHMENT_POINT_TYPES) {\n    result[type] = SvgVocabulary.items.filter((data) => {\n      const { meta } = data;\n\n      // If we have no metadata whatsoever, it can attach anywhere.\n      if (!meta) return true;\n\n      if (meta.always_be_nested === true) {\n        // This symbol should *only* ever be nested, so return false.\n        return false;\n      }\n\n      // If we have no \"attach_to\", it can attach anywhere.\n      if (!meta.attach_to) {\n        return true;\n      }\n\n      // Only attach to points listed in \"attach_to\".\n      return meta.attach_to.includes(type);\n    });\n  }\n\n  return result;\n})();\n\n/** Symbols that can be nested within any part of a creature. */\nconst NESTED_SYMBOLS = SvgVocabulary.items.filter(\n  // Since we don't currently support recursive nesting, ignore anything that\n  // wants nested children.\n  (data) =>\n    data.meta?.always_nest !== true && data.meta?.never_be_nested !== true\n);\n\n/**\n * Given a parent symbol, return an array of random children to be nested within\n * it.\n *\n * Can return an empty array e.g. if the parent symbol doesn't have\n * any nesting areas.\n */\nfunction getNestingChildren(\n  parent: SvgSymbolData,\n  rng: Random,\n  preferNesting?: boolean\n): NestedCreatureSymbol[] {\n  const { meta, specs } = parent;\n  if ((meta?.always_nest || preferNesting) && specs?.nesting) {\n    const indices = range(specs.nesting.length);\n    const child = rng.choice(NESTED_SYMBOLS);\n    return [\n      {\n        data: child,\n        attachments: [],\n        nests: [],\n        indices,\n        invertColors: meta?.invert_nested ?? false,\n      },\n    ];\n  }\n  return [];\n}\n\n/**\n * Randomly creates a symbol with the given number of\n * types of attachments.  The symbol itself, and where the\n * attachments are attached, are chosen randomly.\n */\nfunction getSymbolWithAttachments(\n  numAttachmentKinds: number,\n  { rng, randomlyInvert: randomlyInvertSymbols }: CreatureGeneratorOptions\n): CreatureSymbol {\n  const root = rng.choice(ROOT_SYMBOLS);\n  const randomlyInvertRng = rng.clone();\n  const shouldInvert = () =>\n    randomlyInvertSymbols ? randomlyInvertRng.bool() : false;\n  const result: CreatureSymbol = {\n    data: root,\n    attachments: [],\n    nests: getNestingChildren(root, rng, true),\n    invertColors: shouldInvert(),\n  };\n  if (root.specs) {\n    const attachmentKinds = rng.uniqueChoices(\n      Array.from(iterAttachmentPoints(root.specs))\n        .filter((point) => point.type !== \"anchor\")\n        .map((point) => point.type),\n      numAttachmentKinds\n    );\n    for (let kind of attachmentKinds) {\n      const attachment = rng.choice(ATTACHMENT_SYMBOLS[kind]);\n      const indices = range(root.specs[kind]?.length ?? 0);\n      result.attachments.push({\n        data: attachment,\n        attachTo: kind,\n        indices,\n        attachments: [],\n        nests: getNestingChildren(attachment, rng),\n        invertColors: shouldInvert(),\n      });\n    }\n  }\n  return result;\n}\n\ntype CreatureGeneratorOptions = {\n  rng: Random;\n  randomlyInvert: boolean;\n};\n\ntype CreatureGenerator = (options: CreatureGeneratorOptions) => CreatureSymbol;\n\n/**\n * Each index of this array represents the algorithm we use to\n * randomly construct a creature with a particular \"complexity level\".\n *\n * For instance, the algorithm used to create a creature with\n * complexity level 0 will be the first item of this array.\n */\nconst COMPLEXITY_LEVEL_GENERATORS: CreatureGenerator[] = [\n  ...range(5).map((i) => getSymbolWithAttachments.bind(null, i)),\n];\n\nconst MAX_COMPLEXITY_LEVEL = COMPLEXITY_LEVEL_GENERATORS.length - 1;\n\nconst INITIAL_COMPLEXITY_LEVEL = 2;\n\nfunction getDownloadBasename(randomSeed: number) {\n  return `mystic-symbolic-creature-${randomSeed}`;\n}\n\nfunction creatureHasSymbol(\n  creature: CreatureSymbol,\n  symbol: SvgSymbolData\n): boolean {\n  if (creature.data === symbol) return true;\n  if (creature.attachments.some((a) => creatureHasSymbol(a, symbol)))\n    return true;\n  return creature.nests.some((n) => creatureHasSymbol(n, symbol));\n}\n\nfunction repeatUntilSymbolIsIncluded(\n  symbol: SvgSymbolData,\n  rng: Random,\n  createCreature: (rng: Random) => CreatureSymbol,\n  maxAttempts = 10_000\n): CreatureSymbol {\n  if (symbol === EMPTY_SVG_SYMBOL_DATA) return createCreature(rng);\n\n  for (let i = 0; i < maxAttempts; i++) {\n    const creature = createCreature(rng);\n    if (creatureHasSymbol(creature, symbol)) return creature;\n  }\n\n  // We don't want to hold up the UI forever so just log a message and\n  // return *something*.\n\n  console.log(\n    `Tried to create a creature with the ${symbol.name} symbol ` +\n      `but gave up after ${maxAttempts} attempts.`\n  );\n\n  return createCreature(rng);\n}\n\nexport const CreaturePage: React.FC<{}> = () => {\n  const svgRef = useRef<SVGSVGElement>(null);\n  const [randomSeed, setRandomSeed] = useState<number>(Date.now());\n  const [randomlyInvert, setRandomlyInvert] = useState(true);\n  const [compCtx, setCompCtx] = useState(createSvgCompositionContext());\n  const [complexity, setComplexity] = useState(INITIAL_COMPLEXITY_LEVEL);\n  const defaultCtx = useContext(CreatureContext);\n  const newRandomSeed = () => setRandomSeed(Date.now());\n  const ctx: CreatureContextType = noFillIfShowingSpecs({\n    ...defaultCtx,\n    ...compCtx,\n  });\n  const [alwaysInclude, setAlwaysInclude] = useState<SvgSymbolData>(\n    EMPTY_SVG_SYMBOL_DATA\n  );\n  const creature = useMemo(\n    () =>\n      repeatUntilSymbolIsIncluded(\n        alwaysInclude,\n        new Random(randomSeed),\n        (rng) =>\n          COMPLEXITY_LEVEL_GENERATORS[complexity]({\n            rng,\n            randomlyInvert,\n          })\n      ),\n    [alwaysInclude, complexity, randomSeed, randomlyInvert]\n  );\n\n  return (\n    <Page title=\"Creature!\">\n      <div className=\"sidebar\">\n        <CompositionContextWidget ctx={compCtx} onChange={setCompCtx} />\n        <div className=\"thingy\">\n          <NumericSlider\n            label=\"Random creature complexity\"\n            min={0}\n            max={MAX_COMPLEXITY_LEVEL}\n            step={1}\n            value={complexity}\n            onChange={(value) => {\n              setComplexity(value);\n              newRandomSeed();\n            }}\n          />\n        </div>\n        <div className=\"thingy\">\n          <Checkbox\n            label=\"Randomly invert symbols\"\n            value={randomlyInvert}\n            onChange={setRandomlyInvert}\n          />\n        </div>\n        <RandomizerWidget\n          onColorsChange={(colors) => setCompCtx({ ...compCtx, ...colors })}\n          onSymbolsChange={newRandomSeed}\n        >\n          <div className=\"thingy\">\n            <VocabularyWidget\n              label=\"Always include this symbol\"\n              value={alwaysInclude}\n              onChange={setAlwaysInclude}\n              choices={SvgVocabularyWithBlank}\n            />\n          </div>\n        </RandomizerWidget>\n        <div className=\"thingy\">\n          <ExportWidget\n            basename={getDownloadBasename(randomSeed)}\n            svgRef={svgRef}\n          />\n        </div>\n      </div>\n      <div className=\"canvas\" style={{ backgroundColor: compCtx.background }}>\n        <CreatureContext.Provider value={ctx}>\n          <HoverDebugHelper>\n            <AutoSizingSvg\n              padding={20}\n              ref={svgRef}\n              bgColor={compCtx.background}\n            >\n              <SvgTransform transform={svgScale(0.5)}>\n                <CreatureSymbol {...creature} />\n              </SvgTransform>\n            </AutoSizingSvg>\n          </HoverDebugHelper>\n        </CreatureContext.Provider>\n      </div>\n    </Page>\n  );\n};\n", "import React, { useCallback, useEffect, useRef, useState } from \"react\";\n\ntype AutoSizingSvgProps = {\n  padding?: number;\n  bgColor?: string;\n  sizeToElement?: React.RefObject<HTMLElement>;\n  children: JSX.Element | JSX.Element[];\n};\n\nfunction useResizeHandler(onResize: () => void) {\n  useEffect(() => {\n    window.addEventListener(\"resize\", onResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  });\n}\n\n/**\n * An SVG element with an optional background color that\n * automatically sizes itself to either its contents, or\n * if the `sizeToElement` prop is provided, to the given\n * container.\n */\nexport const AutoSizingSvg = React.forwardRef(\n  (props: AutoSizingSvgProps, ref: React.ForwardedRef<SVGSVGElement>) => {\n    const { bgColor, sizeToElement } = props;\n    const [x, setX] = useState(0);\n    const [y, setY] = useState(0);\n    const [width, setWidth] = useState(1);\n    const [height, setHeight] = useState(1);\n    const gRef = useRef<SVGGElement>(null);\n    const resizeToElement = useCallback(() => {\n      if (sizeToElement?.current) {\n        const bbox = sizeToElement.current.getBoundingClientRect();\n        setX(-bbox.width / 2);\n        setY(-bbox.height / 2);\n        setWidth(bbox.width);\n        setHeight(bbox.height);\n        return true;\n      }\n      return false;\n    }, [sizeToElement]);\n\n    useResizeHandler(resizeToElement);\n\n    // Note that we're passing `props.children` in as a dependency; it's not\n    // used anywhere in the effect, but since any change to the\n    // children may result in a dimension change in the SVG element, we\n    // want it to trigger the effect.\n    useEffect(() => {\n      if (!resizeToElement()) {\n        const svgEl = gRef.current;\n        if (svgEl) {\n          const bbox = svgEl.getBBox();\n          const padding = props.padding || 0;\n          setX(bbox.x - padding);\n          setY(bbox.y - padding);\n          setWidth(bbox.width + padding * 2);\n          setHeight(bbox.height + padding * 2);\n        }\n      }\n    }, [props.padding, resizeToElement, props.children]);\n\n    return (\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={`${width}px`}\n        height={`${height}px`}\n        viewBox={`${x} ${y} ${width} ${height}`}\n        ref={ref}\n      >\n        {bgColor && (\n          <rect\n            x={x}\n            y={y}\n            width={width}\n            height={height}\n            fill={bgColor}\n            data-is-background\n          />\n        )}\n        <g ref={gRef}>{props.children}</g>\n      </svg>\n    );\n  }\n);\n\nexport function getSvgMetadata(svgEl: SVGSVGElement) {\n  let bgColor: string | undefined = undefined;\n  const backgroundEl = svgEl.querySelector(\"[data-is-background]\");\n  if (backgroundEl) {\n    bgColor = backgroundEl.getAttribute(\"fill\") ?? undefined;\n  }\n  const { x, y, width, height } = svgEl.viewBox.baseVal;\n  return { x, y, width, height, bgColor };\n}\n\nexport type SvgMetadata = ReturnType<typeof getSvgMetadata>;\n\nexport const SvgWithBackground: React.FC<SvgMetadata & { children?: any }> = ({\n  x,\n  y,\n  width,\n  height,\n  bgColor,\n  children,\n}) => (\n  <svg\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={`${width}px`}\n    height={`${height}px`}\n    viewBox={`${x} ${y} ${width} ${height}`}\n  >\n    {bgColor && (\n      <rect\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        fill={bgColor}\n        data-is-background\n      />\n    )}\n    {children}\n  </svg>\n);\n", "import React, { useState } from \"react\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport { createGIF } from \"./animated-gif\";\nimport { getSvgMetadata, SvgWithBackground } from \"./auto-sizing-svg\";\n\nfunction getSvgDocument(svgMarkup: string): string {\n  return [\n    `<?xml version=\"1.0\" encoding=\"utf-8\"?>`,\n    \"<!-- Generator: https://github.com/toolness/mystic-symbolic -->\",\n    '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">',\n    svgMarkup,\n  ].join(\"\\n\");\n}\n\ntype ProgressHandler = (value: number | null) => void;\n\ntype ImageExporter = (\n  svgEl: SVGSVGElement,\n  onProgress: ProgressHandler\n) => Promise<string>;\n\n/**\n * Initiates a download on the user's browser which downloads the given\n * SVG element under the given filename, using the given export algorithm.\n */\nasync function exportImage(\n  svgRef: React.RefObject<SVGSVGElement>,\n  basename: string,\n  ext: string,\n  onProgress: ProgressHandler,\n  exporter: ImageExporter\n) {\n  const svgEl = svgRef.current;\n  if (!svgEl) {\n    alert(\"Oops, an error occurred! Please try again later.\");\n    return;\n  }\n  const url = await exporter(svgEl, onProgress);\n  const anchor = document.createElement(\"a\");\n  anchor.href = url;\n  anchor.download = `${basename}.${ext}`;\n  document.body.append(anchor);\n  anchor.click();\n  document.body.removeChild(anchor);\n  onProgress(null);\n}\n\nfunction getCanvasContext2D(\n  canvas: HTMLCanvasElement\n): CanvasRenderingContext2D {\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) throw new Error(`Unable to get 2D context for canvas!`);\n  return ctx;\n}\n\nfunction getSvgUrl(svgMarkup: string): string {\n  return `data:image/svg+xml;utf8,${encodeURIComponent(\n    getSvgDocument(svgMarkup)\n  )}`;\n}\n\n/**\n * Exports the given SVG as an SVG in a data URL.\n */\nconst exportSvg: ImageExporter = async (svgEl) => getSvgUrl(svgEl.outerHTML);\n\n/**\n * Exports the given SVG as a PNG in a data URL.\n */\nconst exportPng: ImageExporter = async (svgEl, onProgress) => {\n  const dataURL = await exportSvg(svgEl, onProgress);\n\n  return new Promise((resolve, reject) => {\n    const canvas = document.createElement(\"canvas\");\n    const img = document.createElement(\"img\");\n\n    img.onload = () => {\n      canvas.width = img.width;\n      canvas.height = img.height;\n      const ctx = getCanvasContext2D(canvas);\n      ctx.drawImage(img, 0, 0);\n      resolve(canvas.toDataURL());\n    };\n    img.onerror = reject;\n    img.src = dataURL;\n  });\n};\n\nfunction drawImage(\n  canvas: HTMLCanvasElement,\n  dataURL: string,\n  scale: number\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const img = document.createElement(\"img\");\n\n    img.onload = () => {\n      const scaledWidth = Math.floor(img.width * scale);\n      const scaledHeight = Math.floor(img.height * scale);\n      canvas.width = scaledWidth;\n      canvas.height = scaledHeight;\n      const ctx = getCanvasContext2D(canvas);\n      ctx.drawImage(\n        img,\n        0,\n        0,\n        img.width,\n        img.height,\n        0,\n        0,\n        scaledWidth,\n        scaledHeight\n      );\n      resolve();\n    };\n    img.onerror = reject;\n    img.src = dataURL;\n  });\n}\n\n/**\n * Exports the given SVG as a GIF in a data URL.\n */\nasync function exportGif(\n  animate: ExportableAnimation,\n  scale: number,\n  svgEl: SVGSVGElement,\n  onProgress: (value: number) => void\n): Promise<string> {\n  const fps = animate.fps || 15;\n  const msecPerFrame = 1000 / fps;\n  const numFrames = Math.floor(animate.duration / msecPerFrame);\n  const svgMeta = getSvgMetadata(svgEl);\n  const render = (animPct: number) => (\n    <SvgWithBackground {...svgMeta}>\n      {animate.render(animPct)}\n    </SvgWithBackground>\n  );\n  const gif = createGIF();\n\n  for (let i = 0; i < numFrames; i++) {\n    onProgress(i / numFrames);\n    const canvas = document.createElement(\"canvas\");\n    const animPct = i / numFrames;\n    const markup = renderToStaticMarkup(render(animPct));\n    const url = getSvgUrl(markup);\n    await drawImage(canvas, url, scale);\n    gif.addFrame(canvas, { delay: msecPerFrame });\n  }\n\n  return new Promise((resolve, reject) => {\n    gif.on(\"finished\", function (blob) {\n      onProgress(1);\n      resolve(URL.createObjectURL(blob));\n    });\n    gif.render();\n  });\n}\n\nexport type AnimationRenderer = (time: number) => JSX.Element;\n\nexport type ExportableAnimation = {\n  duration: number;\n  fps?: number;\n  render: AnimationRenderer;\n};\n\nconst DEFAULT_GIF_SCALE = 0.5;\n\nexport const ExportWidget: React.FC<{\n  svgRef: React.RefObject<SVGSVGElement>;\n  animate?: ExportableAnimation | false;\n  gifScale?: number;\n  basename: string;\n}> = ({ svgRef, basename, animate, gifScale }) => {\n  const [progress, setProgress] = useState<number | null>(null);\n\n  if (progress !== null) {\n    return (\n      <div className=\"overlay-wrapper\">\n        <p>Exporting&hellip;</p>\n        <progress value={progress} />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <button\n        onClick={() =>\n          exportImage(svgRef, basename, \"svg\", setProgress, exportSvg)\n        }\n      >\n        Export SVG\n      </button>{\" \"}\n      <button\n        onClick={() =>\n          exportImage(svgRef, basename, \"png\", setProgress, exportPng)\n        }\n      >\n        Export PNG\n      </button>{\" \"}\n      {animate && (\n        <button\n          onClick={() =>\n            exportImage(\n              svgRef,\n              basename,\n              \"gif\",\n              setProgress,\n              exportGif.bind(null, animate, gifScale || DEFAULT_GIF_SCALE)\n            )\n          }\n        >\n          Export GIF\n        </button>\n      )}\n    </>\n  );\n};\n", "import GIF from \"../vendor/gif.js/gif\";\nimport { GIF_WORKER_JS } from \"../vendor/gif.js/gif.worker\";\n\nexport function createGIF(): GIF {\n  const workerBlob = new Blob([GIF_WORKER_JS], {\n    type: \"application/javascript\",\n  });\n  return new GIF({\n    workers: 2,\n    workerScript: URL.createObjectURL(workerBlob),\n    quality: 10,\n    repeat: 0,\n  });\n}\n", "/**\n * This is just a string containing the gif.js worker JS. It alleviates\n * us from having to find the file at runtime.\n *\n * Concept taken from: https://github.com/jnordberg/gif.js/issues/115\n */\nexport const GIF_WORKER_JS = `\n// gif.worker.js 0.2.0 - https://github.com/jnordberg/gif.js\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){var NeuQuant=require(\"./TypedNeuQuant.js\");var LZWEncoder=require(\"./LZWEncoder.js\");function ByteArray(){this.page=-1;this.pages=[];this.newPage()}ByteArray.pageSize=4096;ByteArray.charMap={};for(var i=0;i<256;i++)ByteArray.charMap[i]=String.fromCharCode(i);ByteArray.prototype.newPage=function(){this.pages[++this.page]=new Uint8Array(ByteArray.pageSize);this.cursor=0};ByteArray.prototype.getData=function(){var rv=\"\";for(var p=0;p<this.pages.length;p++){for(var i=0;i<ByteArray.pageSize;i++){rv+=ByteArray.charMap[this.pages[p][i]]}}return rv};ByteArray.prototype.writeByte=function(val){if(this.cursor>=ByteArray.pageSize)this.newPage();this.pages[this.page][this.cursor++]=val};ByteArray.prototype.writeUTFBytes=function(string){for(var l=string.length,i=0;i<l;i++)this.writeByte(string.charCodeAt(i))};ByteArray.prototype.writeBytes=function(array,offset,length){for(var l=length||array.length,i=offset||0;i<l;i++)this.writeByte(array[i])};function GIFEncoder(width,height){this.width=~~width;this.height=~~height;this.transparent=null;this.transIndex=0;this.repeat=-1;this.delay=0;this.image=null;this.pixels=null;this.indexedPixels=null;this.colorDepth=null;this.colorTab=null;this.neuQuant=null;this.usedEntry=new Array;this.palSize=7;this.dispose=-1;this.firstFrame=true;this.sample=10;this.dither=false;this.globalPalette=false;this.out=new ByteArray}GIFEncoder.prototype.setDelay=function(milliseconds){this.delay=Math.round(milliseconds/10)};GIFEncoder.prototype.setFrameRate=function(fps){this.delay=Math.round(100/fps)};GIFEncoder.prototype.setDispose=function(disposalCode){if(disposalCode>=0)this.dispose=disposalCode};GIFEncoder.prototype.setRepeat=function(repeat){this.repeat=repeat};GIFEncoder.prototype.setTransparent=function(color){this.transparent=color};GIFEncoder.prototype.addFrame=function(imageData){this.image=imageData;this.colorTab=this.globalPalette&&this.globalPalette.slice?this.globalPalette:null;this.getImagePixels();this.analyzePixels();if(this.globalPalette===true)this.globalPalette=this.colorTab;if(this.firstFrame){this.writeLSD();this.writePalette();if(this.repeat>=0){this.writeNetscapeExt()}}this.writeGraphicCtrlExt();this.writeImageDesc();if(!this.firstFrame&&!this.globalPalette)this.writePalette();this.writePixels();this.firstFrame=false};GIFEncoder.prototype.finish=function(){this.out.writeByte(59)};GIFEncoder.prototype.setQuality=function(quality){if(quality<1)quality=1;this.sample=quality};GIFEncoder.prototype.setDither=function(dither){if(dither===true)dither=\"FloydSteinberg\";this.dither=dither};GIFEncoder.prototype.setGlobalPalette=function(palette){this.globalPalette=palette};GIFEncoder.prototype.getGlobalPalette=function(){return this.globalPalette&&this.globalPalette.slice&&this.globalPalette.slice(0)||this.globalPalette};GIFEncoder.prototype.writeHeader=function(){this.out.writeUTFBytes(\"GIF89a\")};GIFEncoder.prototype.analyzePixels=function(){if(!this.colorTab){this.neuQuant=new NeuQuant(this.pixels,this.sample);this.neuQuant.buildColormap();this.colorTab=this.neuQuant.getColormap()}if(this.dither){this.ditherPixels(this.dither.replace(\"-serpentine\",\"\"),this.dither.match(/-serpentine/)!==null)}else{this.indexPixels()}this.pixels=null;this.colorDepth=8;this.palSize=7;if(this.transparent!==null){this.transIndex=this.findClosest(this.transparent,true)}};GIFEncoder.prototype.indexPixels=function(imgq){var nPix=this.pixels.length/3;this.indexedPixels=new Uint8Array(nPix);var k=0;for(var j=0;j<nPix;j++){var index=this.findClosestRGB(this.pixels[k++]&255,this.pixels[k++]&255,this.pixels[k++]&255);this.usedEntry[index]=true;this.indexedPixels[j]=index}};GIFEncoder.prototype.ditherPixels=function(kernel,serpentine){var kernels={FalseFloydSteinberg:[[3/8,1,0],[3/8,0,1],[2/8,1,1]],FloydSteinberg:[[7/16,1,0],[3/16,-1,1],[5/16,0,1],[1/16,1,1]],Stucki:[[8/42,1,0],[4/42,2,0],[2/42,-2,1],[4/42,-1,1],[8/42,0,1],[4/42,1,1],[2/42,2,1],[1/42,-2,2],[2/42,-1,2],[4/42,0,2],[2/42,1,2],[1/42,2,2]],Atkinson:[[1/8,1,0],[1/8,2,0],[1/8,-1,1],[1/8,0,1],[1/8,1,1],[1/8,0,2]]};if(!kernel||!kernels[kernel]){throw\"Unknown dithering kernel: \"+kernel}var ds=kernels[kernel];var index=0,height=this.height,width=this.width,data=this.pixels;var direction=serpentine?-1:1;this.indexedPixels=new Uint8Array(this.pixels.length/3);for(var y=0;y<height;y++){if(serpentine)direction=direction*-1;for(var x=direction==1?0:width-1,xend=direction==1?width:0;x!==xend;x+=direction){index=y*width+x;var idx=index*3;var r1=data[idx];var g1=data[idx+1];var b1=data[idx+2];idx=this.findClosestRGB(r1,g1,b1);this.usedEntry[idx]=true;this.indexedPixels[index]=idx;idx*=3;var r2=this.colorTab[idx];var g2=this.colorTab[idx+1];var b2=this.colorTab[idx+2];var er=r1-r2;var eg=g1-g2;var eb=b1-b2;for(var i=direction==1?0:ds.length-1,end=direction==1?ds.length:0;i!==end;i+=direction){var x1=ds[i][1];var y1=ds[i][2];if(x1+x>=0&&x1+x<width&&y1+y>=0&&y1+y<height){var d=ds[i][0];idx=index+x1+y1*width;idx*=3;data[idx]=Math.max(0,Math.min(255,data[idx]+er*d));data[idx+1]=Math.max(0,Math.min(255,data[idx+1]+eg*d));data[idx+2]=Math.max(0,Math.min(255,data[idx+2]+eb*d))}}}}};GIFEncoder.prototype.findClosest=function(c,used){return this.findClosestRGB((c&16711680)>>16,(c&65280)>>8,c&255,used)};GIFEncoder.prototype.findClosestRGB=function(r,g,b,used){if(this.colorTab===null)return-1;if(this.neuQuant&&!used){return this.neuQuant.lookupRGB(r,g,b)}var c=b|g<<8|r<<16;var minpos=0;var dmin=256*256*256;var len=this.colorTab.length;for(var i=0,index=0;i<len;index++){var dr=r-(this.colorTab[i++]&255);var dg=g-(this.colorTab[i++]&255);var db=b-(this.colorTab[i++]&255);var d=dr*dr+dg*dg+db*db;if((!used||this.usedEntry[index])&&d<dmin){dmin=d;minpos=index}}return minpos};GIFEncoder.prototype.getImagePixels=function(){var w=this.width;var h=this.height;this.pixels=new Uint8Array(w*h*3);var data=this.image;var srcPos=0;var count=0;for(var i=0;i<h;i++){for(var j=0;j<w;j++){this.pixels[count++]=data[srcPos++];this.pixels[count++]=data[srcPos++];this.pixels[count++]=data[srcPos++];srcPos++}}};GIFEncoder.prototype.writeGraphicCtrlExt=function(){this.out.writeByte(33);this.out.writeByte(249);this.out.writeByte(4);var transp,disp;if(this.transparent===null){transp=0;disp=0}else{transp=1;disp=2}if(this.dispose>=0){disp=dispose&7}disp<<=2;this.out.writeByte(0|disp|0|transp);this.writeShort(this.delay);this.out.writeByte(this.transIndex);this.out.writeByte(0)};GIFEncoder.prototype.writeImageDesc=function(){this.out.writeByte(44);this.writeShort(0);this.writeShort(0);this.writeShort(this.width);this.writeShort(this.height);if(this.firstFrame||this.globalPalette){this.out.writeByte(0)}else{this.out.writeByte(128|0|0|0|this.palSize)}};GIFEncoder.prototype.writeLSD=function(){this.writeShort(this.width);this.writeShort(this.height);this.out.writeByte(128|112|0|this.palSize);this.out.writeByte(0);this.out.writeByte(0)};GIFEncoder.prototype.writeNetscapeExt=function(){this.out.writeByte(33);this.out.writeByte(255);this.out.writeByte(11);this.out.writeUTFBytes(\"NETSCAPE2.0\");this.out.writeByte(3);this.out.writeByte(1);this.writeShort(this.repeat);this.out.writeByte(0)};GIFEncoder.prototype.writePalette=function(){this.out.writeBytes(this.colorTab);var n=3*256-this.colorTab.length;for(var i=0;i<n;i++)this.out.writeByte(0)};GIFEncoder.prototype.writeShort=function(pValue){this.out.writeByte(pValue&255);this.out.writeByte(pValue>>8&255)};GIFEncoder.prototype.writePixels=function(){var enc=new LZWEncoder(this.width,this.height,this.indexedPixels,this.colorDepth);enc.encode(this.out)};GIFEncoder.prototype.stream=function(){return this.out};module.exports=GIFEncoder},{\"./LZWEncoder.js\":2,\"./TypedNeuQuant.js\":3}],2:[function(require,module,exports){var EOF=-1;var BITS=12;var HSIZE=5003;var masks=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535];function LZWEncoder(width,height,pixels,colorDepth){var initCodeSize=Math.max(2,colorDepth);var accum=new Uint8Array(256);var htab=new Int32Array(HSIZE);var codetab=new Int32Array(HSIZE);var cur_accum,cur_bits=0;var a_count;var free_ent=0;var maxcode;var clear_flg=false;var g_init_bits,ClearCode,EOFCode;function char_out(c,outs){accum[a_count++]=c;if(a_count>=254)flush_char(outs)}function cl_block(outs){cl_hash(HSIZE);free_ent=ClearCode+2;clear_flg=true;output(ClearCode,outs)}function cl_hash(hsize){for(var i=0;i<hsize;++i)htab[i]=-1}function compress(init_bits,outs){var fcode,c,i,ent,disp,hsize_reg,hshift;g_init_bits=init_bits;clear_flg=false;n_bits=g_init_bits;maxcode=MAXCODE(n_bits);ClearCode=1<<init_bits-1;EOFCode=ClearCode+1;free_ent=ClearCode+2;a_count=0;ent=nextPixel();hshift=0;for(fcode=HSIZE;fcode<65536;fcode*=2)++hshift;hshift=8-hshift;hsize_reg=HSIZE;cl_hash(hsize_reg);output(ClearCode,outs);outer_loop:while((c=nextPixel())!=EOF){fcode=(c<<BITS)+ent;i=c<<hshift^ent;if(htab[i]===fcode){ent=codetab[i];continue}else if(htab[i]>=0){disp=hsize_reg-i;if(i===0)disp=1;do{if((i-=disp)<0)i+=hsize_reg;if(htab[i]===fcode){ent=codetab[i];continue outer_loop}}while(htab[i]>=0)}output(ent,outs);ent=c;if(free_ent<1<<BITS){codetab[i]=free_ent++;htab[i]=fcode}else{cl_block(outs)}}output(ent,outs);output(EOFCode,outs)}function encode(outs){outs.writeByte(initCodeSize);remaining=width*height;curPixel=0;compress(initCodeSize+1,outs);outs.writeByte(0)}function flush_char(outs){if(a_count>0){outs.writeByte(a_count);outs.writeBytes(accum,0,a_count);a_count=0}}function MAXCODE(n_bits){return(1<<n_bits)-1}function nextPixel(){if(remaining===0)return EOF;--remaining;var pix=pixels[curPixel++];return pix&255}function output(code,outs){cur_accum&=masks[cur_bits];if(cur_bits>0)cur_accum|=code<<cur_bits;else cur_accum=code;cur_bits+=n_bits;while(cur_bits>=8){char_out(cur_accum&255,outs);cur_accum>>=8;cur_bits-=8}if(free_ent>maxcode||clear_flg){if(clear_flg){maxcode=MAXCODE(n_bits=g_init_bits);clear_flg=false}else{++n_bits;if(n_bits==BITS)maxcode=1<<BITS;else maxcode=MAXCODE(n_bits)}}if(code==EOFCode){while(cur_bits>0){char_out(cur_accum&255,outs);cur_accum>>=8;cur_bits-=8}flush_char(outs)}}this.encode=encode}module.exports=LZWEncoder},{}],3:[function(require,module,exports){var ncycles=100;var netsize=256;var maxnetpos=netsize-1;var netbiasshift=4;var intbiasshift=16;var intbias=1<<intbiasshift;var gammashift=10;var gamma=1<<gammashift;var betashift=10;var beta=intbias>>betashift;var betagamma=intbias<<gammashift-betashift;var initrad=netsize>>3;var radiusbiasshift=6;var radiusbias=1<<radiusbiasshift;var initradius=initrad*radiusbias;var radiusdec=30;var alphabiasshift=10;var initalpha=1<<alphabiasshift;var alphadec;var radbiasshift=8;var radbias=1<<radbiasshift;var alpharadbshift=alphabiasshift+radbiasshift;var alpharadbias=1<<alpharadbshift;var prime1=499;var prime2=491;var prime3=487;var prime4=503;var minpicturebytes=3*prime4;function NeuQuant(pixels,samplefac){var network;var netindex;var bias;var freq;var radpower;function init(){network=[];netindex=new Int32Array(256);bias=new Int32Array(netsize);freq=new Int32Array(netsize);radpower=new Int32Array(netsize>>3);var i,v;for(i=0;i<netsize;i++){v=(i<<netbiasshift+8)/netsize;network[i]=new Float64Array([v,v,v,0]);freq[i]=intbias/netsize;bias[i]=0}}function unbiasnet(){for(var i=0;i<netsize;i++){network[i][0]>>=netbiasshift;network[i][1]>>=netbiasshift;network[i][2]>>=netbiasshift;network[i][3]=i}}function altersingle(alpha,i,b,g,r){network[i][0]-=alpha*(network[i][0]-b)/initalpha;network[i][1]-=alpha*(network[i][1]-g)/initalpha;network[i][2]-=alpha*(network[i][2]-r)/initalpha}function alterneigh(radius,i,b,g,r){var lo=Math.abs(i-radius);var hi=Math.min(i+radius,netsize);var j=i+1;var k=i-1;var m=1;var p,a;while(j<hi||k>lo){a=radpower[m++];if(j<hi){p=network[j++];p[0]-=a*(p[0]-b)/alpharadbias;p[1]-=a*(p[1]-g)/alpharadbias;p[2]-=a*(p[2]-r)/alpharadbias}if(k>lo){p=network[k--];p[0]-=a*(p[0]-b)/alpharadbias;p[1]-=a*(p[1]-g)/alpharadbias;p[2]-=a*(p[2]-r)/alpharadbias}}}function contest(b,g,r){var bestd=~(1<<31);var bestbiasd=bestd;var bestpos=-1;var bestbiaspos=bestpos;var i,n,dist,biasdist,betafreq;for(i=0;i<netsize;i++){n=network[i];dist=Math.abs(n[0]-b)+Math.abs(n[1]-g)+Math.abs(n[2]-r);if(dist<bestd){bestd=dist;bestpos=i}biasdist=dist-(bias[i]>>intbiasshift-netbiasshift);if(biasdist<bestbiasd){bestbiasd=biasdist;bestbiaspos=i}betafreq=freq[i]>>betashift;freq[i]-=betafreq;bias[i]+=betafreq<<gammashift}freq[bestpos]+=beta;bias[bestpos]-=betagamma;return bestbiaspos}function inxbuild(){var i,j,p,q,smallpos,smallval,previouscol=0,startpos=0;for(i=0;i<netsize;i++){p=network[i];smallpos=i;smallval=p[1];for(j=i+1;j<netsize;j++){q=network[j];if(q[1]<smallval){smallpos=j;smallval=q[1]}}q=network[smallpos];if(i!=smallpos){j=q[0];q[0]=p[0];p[0]=j;j=q[1];q[1]=p[1];p[1]=j;j=q[2];q[2]=p[2];p[2]=j;j=q[3];q[3]=p[3];p[3]=j}if(smallval!=previouscol){netindex[previouscol]=startpos+i>>1;for(j=previouscol+1;j<smallval;j++)netindex[j]=i;previouscol=smallval;startpos=i}}netindex[previouscol]=startpos+maxnetpos>>1;for(j=previouscol+1;j<256;j++)netindex[j]=maxnetpos}function inxsearch(b,g,r){var a,p,dist;var bestd=1e3;var best=-1;var i=netindex[g];var j=i-1;while(i<netsize||j>=0){if(i<netsize){p=network[i];dist=p[1]-g;if(dist>=bestd)i=netsize;else{i++;if(dist<0)dist=-dist;a=p[0]-b;if(a<0)a=-a;dist+=a;if(dist<bestd){a=p[2]-r;if(a<0)a=-a;dist+=a;if(dist<bestd){bestd=dist;best=p[3]}}}}if(j>=0){p=network[j];dist=g-p[1];if(dist>=bestd)j=-1;else{j--;if(dist<0)dist=-dist;a=p[0]-b;if(a<0)a=-a;dist+=a;if(dist<bestd){a=p[2]-r;if(a<0)a=-a;dist+=a;if(dist<bestd){bestd=dist;best=p[3]}}}}}return best}function learn(){var i;var lengthcount=pixels.length;var alphadec=30+(samplefac-1)/3;var samplepixels=lengthcount/(3*samplefac);var delta=~~(samplepixels/ncycles);var alpha=initalpha;var radius=initradius;var rad=radius>>radiusbiasshift;if(rad<=1)rad=0;for(i=0;i<rad;i++)radpower[i]=alpha*((rad*rad-i*i)*radbias/(rad*rad));var step;if(lengthcount<minpicturebytes){samplefac=1;step=3}else if(lengthcount%prime1!==0){step=3*prime1}else if(lengthcount%prime2!==0){step=3*prime2}else if(lengthcount%prime3!==0){step=3*prime3}else{step=3*prime4}var b,g,r,j;var pix=0;i=0;while(i<samplepixels){b=(pixels[pix]&255)<<netbiasshift;g=(pixels[pix+1]&255)<<netbiasshift;r=(pixels[pix+2]&255)<<netbiasshift;j=contest(b,g,r);altersingle(alpha,j,b,g,r);if(rad!==0)alterneigh(rad,j,b,g,r);pix+=step;if(pix>=lengthcount)pix-=lengthcount;i++;if(delta===0)delta=1;if(i%delta===0){alpha-=alpha/alphadec;radius-=radius/radiusdec;rad=radius>>radiusbiasshift;if(rad<=1)rad=0;for(j=0;j<rad;j++)radpower[j]=alpha*((rad*rad-j*j)*radbias/(rad*rad))}}}function buildColormap(){init();learn();unbiasnet();inxbuild()}this.buildColormap=buildColormap;function getColormap(){var map=[];var index=[];for(var i=0;i<netsize;i++)index[network[i][3]]=i;var k=0;for(var l=0;l<netsize;l++){var j=index[l];map[k++]=network[j][0];map[k++]=network[j][1];map[k++]=network[j][2]}return map}this.getColormap=getColormap;this.lookupRGB=inxsearch}module.exports=NeuQuant},{}],4:[function(require,module,exports){var GIFEncoder,renderFrame;GIFEncoder=require(\"./GIFEncoder.js\");renderFrame=function(frame){var encoder,page,stream,transfer;encoder=new GIFEncoder(frame.width,frame.height);if(frame.index===0){encoder.writeHeader()}else{encoder.firstFrame=false}encoder.setTransparent(frame.transparent);encoder.setRepeat(frame.repeat);encoder.setDelay(frame.delay);encoder.setQuality(frame.quality);encoder.setDither(frame.dither);encoder.setGlobalPalette(frame.globalPalette);encoder.addFrame(frame.data);if(frame.last){encoder.finish()}if(frame.globalPalette===true){frame.globalPalette=encoder.getGlobalPalette()}stream=encoder.stream();frame.data=stream.pages;frame.cursor=stream.cursor;frame.pageSize=stream.constructor.pageSize;if(frame.canTransfer){transfer=function(){var i,len,ref,results;ref=frame.data;results=[];for(i=0,len=ref.length;i<len;i++){page=ref[i];results.push(page.buffer)}return results}();return self.postMessage(frame,transfer)}else{return self.postMessage(frame)}};self.onmessage=function(event){return renderFrame(event.data)}},{\"./GIFEncoder.js\":1}]},{},[4]);\n`;\n", "import React, { useContext } from \"react\";\nimport { BBox, Point } from \"../vendor/bezier-js\";\nimport { getAttachmentTransforms } from \"./attach\";\nimport { getBoundingBoxCenter, uniformlyScaleToFit } from \"./bounding-box\";\nimport { scalePointXY, subtractPoints } from \"./point\";\nimport { AttachmentPointType } from \"./specs\";\nimport {\n  createSvgSymbolContext,\n  safeGetAttachmentPoint,\n  SvgSymbolContent,\n  SvgSymbolContext,\n  SvgSymbolData,\n  swapColors,\n} from \"./svg-symbol\";\nimport {\n  svgRotate,\n  svgScale,\n  svgTransformOrigin,\n  SvgTransform,\n  svgTranslate,\n} from \"./svg-transform\";\n\nconst DEFAULT_ATTACHMENT_SCALE = 0.5;\n\nexport type CreatureContextType = SvgSymbolContext & {\n  attachmentScale: number;\n  parent: SvgSymbolData | null;\n};\n\nexport const CreatureContext = React.createContext<CreatureContextType>({\n  ...createSvgSymbolContext(),\n  attachmentScale: DEFAULT_ATTACHMENT_SCALE,\n  parent: null,\n});\n\nexport type AttachedCreatureSymbol = CreatureSymbol & {\n  attachTo: AttachmentPointType;\n  indices: number[];\n};\n\nexport type NestedCreatureSymbol = CreatureSymbol & {\n  indices: number[];\n};\n\nexport type CreatureSymbol = {\n  data: SvgSymbolData;\n  invertColors: boolean;\n  attachments: AttachedCreatureSymbol[];\n  nests: NestedCreatureSymbol[];\n};\n\nexport type CreatureSymbolProps = CreatureSymbol;\n\ntype NestedCreatureSymbolProps = NestedCreatureSymbol & {\n  parent: SvgSymbolData;\n};\n\ntype AttachedCreatureSymbolProps = AttachedCreatureSymbol & {\n  parent: SvgSymbolData;\n};\n\nfunction getNestingTransforms(parent: BBox, child: BBox) {\n  const parentCenter = getBoundingBoxCenter(parent);\n  const childCenter = getBoundingBoxCenter(child);\n  const translation = subtractPoints(parentCenter, childCenter);\n  const uniformScaling = uniformlyScaleToFit(parent, child);\n  const scaling: Point = { x: uniformScaling, y: uniformScaling };\n\n  return { translation, transformOrigin: childCenter, scaling };\n}\n\ntype AttachmentTransformProps = {\n  /**\n   * Where to move the attachment once it has been\n   * scaled and rotated.\n   */\n  translate: Point;\n\n  /** The origin from which scaling and rotation are done. */\n  transformOrigin: Point;\n\n  /** How much to scale the attachment, relative to `transformOrigin`. */\n  scale: Point;\n\n  /** How much to rotate the attachment, relative to `transformOrigin`. */\n  rotate?: number;\n\n  /** The attachment. */\n  children: JSX.Element;\n};\n\n/**\n * A wrapper for an attachment that rotates and/or scales it relative\n * to the given origin point, and then translates it the given amount.\n */\nconst AttachmentTransform: React.FC<AttachmentTransformProps> = (props) => (\n  <SvgTransform\n    transform={[\n      // Remember that transforms are applied in reverse order,\n      // so read the following from the end first!\n      svgTranslate(props.translate),\n      svgTransformOrigin(props.transformOrigin, [\n        svgScale(props.scale),\n        svgRotate(props.rotate ?? 0),\n      ]),\n    ]}\n  >\n    {props.children}\n  </SvgTransform>\n);\n\nconst AttachedCreatureSymbol: React.FC<AttachedCreatureSymbolProps> = ({\n  indices,\n  parent,\n  attachTo,\n  data,\n  ...props\n}) => {\n  const ctx = useContext(CreatureContext);\n  const children: JSX.Element[] = [];\n\n  for (let attachIndex of indices) {\n    const parentAp = safeGetAttachmentPoint(parent, attachTo, attachIndex);\n    const ourAp = safeGetAttachmentPoint(data, \"anchor\");\n\n    if (!parentAp || !ourAp) {\n      continue;\n    }\n\n    // If we're attaching something oriented towards the left, horizontally flip\n    // the attachment image.\n    let xFlip = parentAp.normal.x < 0 ? -1 : 1;\n\n    // Er, things look weird if we don't inverse the flip logic for\n    // the downward-facing attachments, like legs...\n    if (parentAp.normal.y > 0) {\n      xFlip *= -1;\n    }\n\n    const t = getAttachmentTransforms(parentAp, {\n      point: ourAp.point,\n      normal: scalePointXY(ourAp.normal, xFlip, 1),\n    });\n\n    children.push(\n      <AttachmentTransform\n        key={attachIndex}\n        transformOrigin={ourAp.point}\n        translate={t.translation}\n        scale={{ x: ctx.attachmentScale * xFlip, y: ctx.attachmentScale }}\n        rotate={xFlip * t.rotation}\n      >\n        <g\n          data-attach-parent={parent.name}\n          data-attach-type={attachTo}\n          data-attach-index={attachIndex}\n        >\n          <CreatureSymbol data={data} {...props} />\n        </g>\n      </AttachmentTransform>\n    );\n  }\n\n  return <>{children}</>;\n};\n\nconst NestedCreatureSymbol: React.FC<NestedCreatureSymbolProps> = ({\n  indices,\n  parent,\n  data,\n  ...props\n}) => {\n  const children: JSX.Element[] = [];\n\n  for (let nestIndex of indices) {\n    const parentNest = (parent.specs?.nesting ?? [])[nestIndex];\n    if (!parentNest) {\n      console.log(\n        `Parent symbol ${parent.name} has no nesting index ${nestIndex}.`\n      );\n      continue;\n    }\n    const t = getNestingTransforms(parentNest, data.bbox);\n    children.push(\n      <AttachmentTransform\n        key={nestIndex}\n        transformOrigin={t.transformOrigin}\n        translate={t.translation}\n        scale={t.scaling}\n      >\n        <g\n          data-attach-parent={parent.name}\n          data-attach-type=\"nesting\"\n          data-attach-index={nestIndex}\n        >\n          <CreatureSymbol data={data} {...props} />\n        </g>\n      </AttachmentTransform>\n    );\n  }\n\n  return <>{children}</>;\n};\n\nexport const CreatureSymbol: React.FC<CreatureSymbolProps> = (props) => {\n  let ctx = useContext(CreatureContext);\n  const { data, attachments, nests } = props;\n  const attachmentCtx: CreatureContextType = { ...ctx, parent: data };\n\n  if (props.invertColors) {\n    ctx = swapColors(ctx);\n  }\n\n  // If we're inverted, then pass our inverted colors on to our\n  // nested children, to maintain color balance in the composition.\n  const nestedCtx: CreatureContextType = { ...ctx, parent: data };\n\n  // The attachments should be before our symbol in the DOM so they\n  // appear behind our symbol, while anything nested within our symbol\n  // should be after our symbol so they appear in front of it.\n  return (\n    <>\n      {attachments.length && (\n        <CreatureContext.Provider value={attachmentCtx}>\n          {attachments.map((a, i) => (\n            <AttachedCreatureSymbol key={i} {...a} parent={data} />\n          ))}\n        </CreatureContext.Provider>\n      )}\n      <SvgSymbolContent data={data} {...ctx} />\n      {nests.length && (\n        <CreatureContext.Provider value={nestedCtx}>\n          {nests.map((n, i) => (\n            <NestedCreatureSymbol key={i} {...n} parent={data} />\n          ))}\n        </CreatureContext.Provider>\n      )}\n    </>\n  );\n};\n", "import { Point } from \"../vendor/bezier-js\";\nimport { normalizedPoint2rad, scalePointXY, subtractPoints } from \"./point\";\nimport { PointWithNormal } from \"./specs\";\nimport { rad2deg } from \"./util\";\n\nfunction normalizeDeg(deg: number): number {\n  deg = deg % 360;\n  if (deg < 0) {\n    deg = 360 + deg;\n  }\n  return deg;\n}\n\n/**\n * Convert the given normal in screen-space coordinates into\n * degrees of rotation in attachment-space coordinates.\n */\nexport function normalToAttachmentSpaceDegrees(normal: Point): number {\n  // We need to flip our y because we're in screen space, yet our\n  // rotational math assumes we're not.\n  const yFlipped = scalePointXY(normal, 1, -1);\n\n  const rad = normalizedPoint2rad(yFlipped);\n\n  // The origin of our rotation space assumes that \"up\" is 0\n  // degrees, while our rotational math assumes 0 degrees is \"right\".\n  const reoriented = normalizeDeg(90 - rad2deg(rad));\n\n  return reoriented;\n}\n\n/**\n * Given a child point that needs to be attached to a parent\n * point, return the amount of translation and rotation we\n * need to apply to the child point in order to align its\n * position and normal with that of its parent.\n */\nexport function getAttachmentTransforms(\n  parent: PointWithNormal,\n  child: PointWithNormal\n) {\n  const translation = subtractPoints(parent.point, child.point);\n  const parentRot = normalToAttachmentSpaceDegrees(parent.normal);\n  const childRot = normalToAttachmentSpaceDegrees(child.normal);\n  const rotation = parentRot - childRot;\n  return { translation, rotation };\n}\n", "import React from \"react\";\nimport { Point } from \"../vendor/bezier-js\";\nimport { reversePoint } from \"./point\";\n\nexport type SvgTransform =\n  | {\n      kind: \"translate\";\n      amount: Point;\n    }\n  | {\n      kind: \"rotate\";\n      degrees: number;\n    }\n  | {\n      kind: \"scale\";\n      amount: Point;\n    }\n  | {\n      kind: \"transformOrigin\";\n      amount: Point;\n      transforms: SvgTransform[];\n    };\n\nfunction getSvgCodeForTransform(t: SvgTransform): string {\n  switch (t.kind) {\n    case \"translate\":\n      return `translate(${t.amount.x} ${t.amount.y})`;\n\n    case \"scale\":\n      return `scale(${t.amount.x} ${t.amount.y})`;\n\n    case \"rotate\":\n      return `rotate(${t.degrees})`;\n\n    case \"transformOrigin\":\n      /**\n       * We originally used the SVG \"transform-origin\" attribute here but\n       * that's not currently supported by Safari. Instead, we'll set the origin\n       * of our SVG to the transform origin, do the transform, and then move our\n       * origin back to the original origin, which does the same thing.\n       **/\n      return getSvgCodeForTransforms([\n        svgTranslate(t.amount),\n        ...t.transforms,\n        svgTranslate(reversePoint(t.amount)),\n      ]);\n  }\n}\n\nfunction getSvgCodeForTransforms(transforms: SvgTransform[]): string {\n  return transforms.map(getSvgCodeForTransform).join(\" \");\n}\n\n/**\n * Apply the given SVG transforms (e.g. rotate, scale)\n * centered at the given origin point.\n */\nexport function svgTransformOrigin(\n  amount: Point,\n  transforms: SvgTransform[]\n): SvgTransform {\n  return { kind: \"transformOrigin\", amount, transforms };\n}\n\nexport function svgTranslate(amount: Point): SvgTransform {\n  return { kind: \"translate\", amount };\n}\n\nexport function svgScale(amount: Point | number): SvgTransform {\n  if (typeof amount === \"number\") {\n    amount = { x: amount, y: amount };\n  }\n  return { kind: \"scale\", amount };\n}\n\nexport function svgRotate(degrees: number): SvgTransform {\n  return { kind: \"rotate\", degrees };\n}\n\n/**\n * Creates a SVG `<g>` element with the given children and transforms.\n *\n * Like the SVG `transform` attribute, the transforms are applied in\n * the *reverse* order that they are specified.\n */\nexport const SvgTransform: React.FC<{\n  transform: SvgTransform[] | SvgTransform;\n  children: any;\n}> = ({ transform, children }) => {\n  if (!Array.isArray(transform)) {\n    transform = [transform];\n  }\n\n  return <g transform={getSvgCodeForTransforms(transform)}>{children}</g>;\n};\n", "import React from \"react\";\nimport { slugify } from \"./util\";\nimport { Vocabulary, VocabularyType } from \"./vocabulary\";\n\nexport type VocabularyWidgetProps<T extends VocabularyType> = {\n  id?: string;\n  label: string;\n  value: T;\n  onChange: (value: T) => void;\n  choices: Vocabulary<T>;\n};\n\nexport function VocabularyWidget<T extends VocabularyType>({\n  id,\n  label,\n  value,\n  onChange,\n  choices,\n}: VocabularyWidgetProps<T>) {\n  id = id || slugify(label);\n\n  return (\n    <div className=\"flex-widget\">\n      <label htmlFor={id}>{label}: </label>\n      <select\n        id={id}\n        onChange={(e) => onChange(choices.get(e.target.value))}\n        value={value.name}\n      >\n        {choices.items.map((choice) => (\n          <option key={choice.name} value={choice.name}>\n            {choice.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n", "import { createPageWithShareableState } from \"../../page-with-shareable-state\";\nimport { MANDALA_DESIGN_DEFAULTS, MandalaPageWithDefaults } from \"./core\";\nimport {\n  deserializeMandalaDesign,\n  serializeMandalaDesign,\n} from \"./serialization\";\n\nexport const MandalaPage = createPageWithShareableState({\n  defaultValue: MANDALA_DESIGN_DEFAULTS,\n  serialize: serializeMandalaDesign,\n  deserialize: deserializeMandalaDesign,\n  component: MandalaPageWithDefaults,\n});\n", "import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { PageContext, PAGE_QUERY_ARG } from \"./page\";\n\nexport type ComponentWithShareableStateProps<T> = {\n  /** The default state to use when the component is first rendered. */\n  defaults: T;\n\n  /**\n   * Callback to trigger whenever the shareable state changes. Note\n   * that each call will add a new entry to the browser's navigation history.\n   * As such, every call to this function will mark a boundary where the\n   * user can press the \"back\" button to go back to the previous state.\n   */\n  onChange: (value: T) => void;\n};\n\nexport type PageWithShareableStateOptions<T> = {\n  /** The default shareable state. */\n  defaultValue: T;\n\n  /**\n   * Deserialize the given state, throwing an exception\n   * if it's invalid in any way.\n   */\n  deserialize: (value: string) => T;\n\n  /** Serialize the given state to a string. */\n  serialize: (value: T) => string;\n\n  /** Component to render the page. */\n  component: React.ComponentType<ComponentWithShareableStateProps<T>>;\n};\n\n/** The query string argument that will store the serialized state. */\nexport const STATE_QUERY_ARG = \"s\";\n\n/**\n * Create a component that represents a page which exposes some\n * aspect of its state in the current URL, so that it can be\n * easily shared, recorded in the browser history, etc.\n */\nexport function createPageWithShareableState<T>({\n  defaultValue,\n  deserialize,\n  serialize,\n  component,\n}: PageWithShareableStateOptions<T>): React.FC<{}> {\n  const Component = component;\n\n  const PageWithShareableState: React.FC<{}> = () => {\n    const { search, pushState, currPage } = useContext(PageContext);\n\n    /** The current serialized state, as reflected in the URL bar. */\n    const state = search.get(STATE_QUERY_ARG) || serialize(defaultValue);\n\n    /**\n     * What we think the latest serialized state is; used to determine whether\n     * the user navigated in their browser history.\n     */\n    const [latestState, setLatestState] = useState(state);\n\n    /**\n     * The key to use when rendering our page component. This will\n     * be incremented whenever the user navigates their browser\n     * history, to ensure that our component resets itself to the\n     * default state we pass in.\n     */\n    const [key, setKey] = useState(0);\n\n    /**\n     * Remembers whether we're in the middle of an update triggered by\n     * our own component.\n     */\n    const [isInOnChange, setIsInOnChange] = useState(false);\n\n    /** The default state from th URL, which we'll pass into our component. */\n    let defaults: T = defaultValue;\n\n    try {\n      defaults = deserialize(state || \"\");\n    } catch (e) {\n      console.log(`Error deserializing state: ${e}`);\n    }\n\n    const onChange = useCallback(\n      (value: T) => {\n        const newState = serialize(value);\n        if (state !== newState) {\n          const newSearch = new URLSearchParams();\n          newSearch.set(PAGE_QUERY_ARG, currPage);\n          newSearch.set(STATE_QUERY_ARG, newState);\n          setIsInOnChange(true);\n          setLatestState(newState);\n          pushState(\"?\" + newSearch.toString());\n          setIsInOnChange(false);\n        }\n      },\n      [state, currPage, pushState]\n    );\n\n    useEffect(() => {\n      if (!isInOnChange && latestState !== state) {\n        // The user navigated in their browser.\n        setLatestState(state);\n        setKey(key + 1);\n      }\n    }, [isInOnChange, state, latestState, key]);\n\n    return <Component key={key} defaults={defaults} onChange={onChange} />;\n  };\n\n  return PageWithShareableState;\n}\n", "import React, { useCallback, useMemo, useRef, useState } from \"react\";\nimport { AutoSizingSvg } from \"../../auto-sizing-svg\";\nimport { AnimationRenderer, ExportWidget } from \"../../export-svg\";\nimport { HoverDebugHelper } from \"../../hover-debug-helper\";\nimport { NumericSlider } from \"../../numeric-slider\";\nimport {\n  noFillIfShowingSpecs,\n  SvgSymbolContext,\n  swapColors,\n} from \"../../svg-symbol\";\nimport { VocabularyWidget } from \"../../vocabulary-widget\";\nimport { svgRotate, svgScale, SvgTransform } from \"../../svg-transform\";\nimport { SvgVocabulary } from \"../../svg-vocabulary\";\nimport { isEvenNumber, NumericRange, secsToMsecs } from \"../../util\";\nimport { Random } from \"../../random\";\nimport { Checkbox } from \"../../checkbox\";\nimport {\n  CompositionContextWidget,\n  createSvgCompositionContext,\n} from \"../../svg-composition-context\";\nimport { Page } from \"../../page\";\nimport { MandalaCircle, MandalaCircleParams } from \"../../mandala-circle\";\nimport { useAnimationPct } from \"../../animation\";\nimport { RandomizerWidget } from \"../../randomizer-widget\";\nimport { useDebouncedEffect } from \"../../use-debounced-effect\";\n\nexport type ExtendedMandalaCircleParams = MandalaCircleParams & {\n  scaling: number;\n  rotation: number;\n  symbolScaling: number;\n  symbolRotation: number;\n  animateSymbolRotation: boolean;\n};\n\nconst CIRCLE_1_DEFAULTS: ExtendedMandalaCircleParams = {\n  data: SvgVocabulary.get(\"eye\"),\n  radius: 300,\n  numSymbols: 5,\n  scaling: 1,\n  rotation: 0,\n  symbolScaling: 1,\n  symbolRotation: 0,\n  invertEveryOtherSymbol: false,\n  animateSymbolRotation: false,\n};\n\nconst CIRCLE_2_DEFAULTS: ExtendedMandalaCircleParams = {\n  data: SvgVocabulary.get(\"leg\"),\n  radius: 0,\n  numSymbols: 3,\n  scaling: 0.5,\n  rotation: 0,\n  symbolScaling: 1,\n  symbolRotation: 0,\n  invertEveryOtherSymbol: false,\n  animateSymbolRotation: false,\n};\n\nconst RADIUS: NumericRange = {\n  min: -500,\n  max: 500,\n  step: 1,\n};\n\nconst RADIUS_RANDOM: NumericRange = {\n  min: 100,\n  max: RADIUS.max,\n  step: 1,\n};\n\nconst NUM_SYMBOLS: NumericRange = {\n  min: 1,\n  max: 20,\n  step: 1,\n};\n\nconst SCALING: NumericRange = {\n  min: 0.1,\n  max: 1,\n  step: 0.05,\n};\n\nconst ROTATION: NumericRange = {\n  min: 0,\n  max: 359,\n  step: 1,\n};\n\nconst DURATION_SECS: NumericRange = {\n  min: 0.5,\n  max: 10,\n  step: 0.1,\n};\n\nconst DEFAULT_DURATION_SECS = 3;\n\nconst ExtendedMandalaCircle: React.FC<\n  ExtendedMandalaCircleParams & SvgSymbolContext\n> = ({ scaling, rotation, symbolScaling, symbolRotation, ...props }) => {\n  props = {\n    ...props,\n    symbolTransforms: [svgScale(symbolScaling), svgRotate(symbolRotation)],\n  };\n\n  return (\n    <SvgTransform transform={[svgScale(scaling), svgRotate(rotation)]}>\n      <MandalaCircle {...props} />\n    </SvgTransform>\n  );\n};\n\nfunction animateMandalaCircleParams(\n  value: ExtendedMandalaCircleParams,\n  animPct: number\n): ExtendedMandalaCircleParams {\n  if (value.animateSymbolRotation) {\n    const direction = value.data.meta?.rotate_clockwise ? 1 : -1;\n    value = {\n      ...value,\n      symbolRotation: direction * animPct * ROTATION.max,\n    };\n  }\n  return value;\n}\n\nconst ExtendedMandalaCircleParamsWidget: React.FC<{\n  idPrefix: string;\n  value: ExtendedMandalaCircleParams;\n  onChange: (value: ExtendedMandalaCircleParams) => void;\n}> = ({ idPrefix, value, onChange }) => {\n  return (\n    <div className=\"thingy\">\n      <VocabularyWidget\n        id={`${idPrefix}symbol`}\n        label=\"Symbol\"\n        value={value.data}\n        onChange={(data) => onChange({ ...value, data })}\n        choices={SvgVocabulary}\n      />\n      <NumericSlider\n        id={`${idPrefix}radius`}\n        label=\"Radius\"\n        value={value.radius}\n        onChange={(radius) => onChange({ ...value, radius })}\n        {...RADIUS}\n      />\n      <NumericSlider\n        id={`${idPrefix}numSymbols`}\n        label=\"Number of symbols\"\n        value={value.numSymbols}\n        onChange={(numSymbols) => onChange({ ...value, numSymbols })}\n        {...NUM_SYMBOLS}\n      />\n      <NumericSlider\n        id={`${idPrefix}scaling`}\n        label=\"Scaling\"\n        value={value.scaling}\n        onChange={(scaling) => onChange({ ...value, scaling })}\n        {...SCALING}\n      />\n      <NumericSlider\n        id={`${idPrefix}rotation`}\n        label=\"Rotation\"\n        value={value.rotation}\n        onChange={(rotation) => onChange({ ...value, rotation })}\n        {...ROTATION}\n      />\n      <NumericSlider\n        id={`${idPrefix}symbolScaling`}\n        label=\"Symbol scaling\"\n        value={value.symbolScaling}\n        onChange={(symbolScaling) => onChange({ ...value, symbolScaling })}\n        {...SCALING}\n      />\n      <NumericSlider\n        id={`${idPrefix}symbolRotation`}\n        label=\"Symbol rotation\"\n        disabled={value.animateSymbolRotation}\n        value={value.symbolRotation}\n        onChange={(symbolRotation) => onChange({ ...value, symbolRotation })}\n        {...ROTATION}\n      />\n      <Checkbox\n        label=\"Animate symbol rotation\"\n        value={value.animateSymbolRotation}\n        onChange={(animateSymbolRotation) =>\n          onChange({ ...value, animateSymbolRotation })\n        }\n      />\n      <Checkbox\n        label=\"Invert every other symbol (applies only to circles with an even number of symbols)\"\n        disabled={!isEvenNumber(value.numSymbols)}\n        value={value.invertEveryOtherSymbol}\n        onChange={(invertEveryOtherSymbol) =>\n          onChange({ ...value, invertEveryOtherSymbol })\n        }\n      />\n    </div>\n  );\n};\n\nfunction getRandomCircleParams(rng: Random): MandalaCircleParams {\n  return {\n    data: rng.choice(SvgVocabulary.items),\n    radius: rng.inRange(RADIUS_RANDOM),\n    numSymbols: rng.inRange(NUM_SYMBOLS),\n    invertEveryOtherSymbol: rng.bool(),\n  };\n}\n\nexport const MANDALA_DESIGN_DEFAULTS = {\n  circle1: CIRCLE_1_DEFAULTS,\n  circle2: CIRCLE_2_DEFAULTS,\n  durationSecs: DEFAULT_DURATION_SECS,\n  baseCompCtx: createSvgCompositionContext(),\n  useTwoCircles: false,\n  invertCircle2: true,\n  firstBehind: false,\n};\n\nexport type MandalaDesign = typeof MANDALA_DESIGN_DEFAULTS;\n\nfunction isDesignAnimated(design: MandalaDesign): boolean {\n  return getCirclesFromDesign(design).some((c) => c.animateSymbolRotation);\n}\n\nfunction createAnimationRenderer({\n  baseCompCtx,\n  invertCircle2,\n  circle1,\n  circle2,\n  useTwoCircles,\n  firstBehind,\n}: MandalaDesign): AnimationRenderer {\n  const symbolCtx = noFillIfShowingSpecs(baseCompCtx);\n  const circle2SymbolCtx = invertCircle2 ? swapColors(symbolCtx) : symbolCtx;\n\n  return (animPct) => {\n    const circles = [\n      <ExtendedMandalaCircle\n        key=\"first\"\n        {...animateMandalaCircleParams(circle1, animPct)}\n        {...symbolCtx}\n      />,\n    ];\n\n    if (useTwoCircles) {\n      circles.push(\n        <ExtendedMandalaCircle\n          key=\"second\"\n          {...animateMandalaCircleParams(circle2, animPct)}\n          {...circle2SymbolCtx}\n        />\n      );\n      if (firstBehind) {\n        circles.reverse();\n      }\n    }\n\n    return <SvgTransform transform={svgScale(0.5)}>{circles}</SvgTransform>;\n  };\n}\n\nconst AnimatedMandala: React.FC<{\n  config: MandalaDesign;\n  render: AnimationRenderer;\n}> = ({ config, render }) => {\n  const animPct = useAnimationPct(\n    isDesignAnimated(config) ? secsToMsecs(config.durationSecs) : 0\n  );\n\n  return <>{render(animPct)}</>;\n};\n\nexport function getCirclesFromDesign(\n  design: MandalaDesign\n): ExtendedMandalaCircleParams[] {\n  const circles: ExtendedMandalaCircleParams[] = [design.circle1];\n\n  if (design.useTwoCircles) {\n    circles.push(design.circle2);\n  }\n\n  return circles;\n}\n\nfunction getBasename(design: MandalaDesign): string {\n  return `mandala-${getCirclesFromDesign(design)\n    .map((c) => c.data.name)\n    .join(\"-\")}`;\n}\n\n/**\n * A mandala page that starts with the given default mandala configuration.\n *\n * The given handler will be called whenever the user changes the\n * configuration.\n *\n * Note that the default is only used to determine the initial state of\n * the component at mount.  Any changes to the prop once the component has\n * been mounted are ignored.\n */\nexport const MandalaPageWithDefaults: React.FC<{\n  defaults: MandalaDesign;\n  onChange: (defaults: MandalaDesign) => void;\n}> = ({ defaults, onChange }) => {\n  const svgRef = useRef<SVGSVGElement>(null);\n  const canvasRef = useRef<HTMLDivElement>(null);\n  const [circle1, setCircle1] = useState(defaults.circle1);\n  const [circle2, setCircle2] = useState(defaults.circle2);\n  const [durationSecs, setDurationSecs] = useState(defaults.durationSecs);\n  const [baseCompCtx, setBaseCompCtx] = useState(defaults.baseCompCtx);\n  const [useTwoCircles, setUseTwoCircles] = useState(defaults.useTwoCircles);\n  const [invertCircle2, setInvertCircle2] = useState(defaults.invertCircle2);\n  const [firstBehind, setFirstBehind] = useState(defaults.firstBehind);\n  const design: MandalaDesign = useMemo(\n    () => ({\n      circle1,\n      circle2,\n      durationSecs,\n      baseCompCtx,\n      useTwoCircles,\n      invertCircle2,\n      firstBehind,\n    }),\n    [\n      circle1,\n      circle2,\n      durationSecs,\n      baseCompCtx,\n      useTwoCircles,\n      invertCircle2,\n      firstBehind,\n    ]\n  );\n  const isAnimated = isDesignAnimated(design);\n  const render = useMemo(() => createAnimationRenderer(design), [design]);\n\n  useDebouncedEffect(\n    250,\n    useCallback(() => onChange(design), [onChange, design])\n  );\n\n  return (\n    <Page title=\"Mandala!\">\n      <div className=\"sidebar\">\n        <CompositionContextWidget ctx={baseCompCtx} onChange={setBaseCompCtx} />\n        <fieldset>\n          <legend>First circle</legend>\n          <ExtendedMandalaCircleParamsWidget\n            idPrefix=\"c1\"\n            value={circle1}\n            onChange={setCircle1}\n          />\n        </fieldset>\n        <div className=\"thingy\">\n          <Checkbox\n            label=\"Add a second circle\"\n            value={useTwoCircles}\n            onChange={setUseTwoCircles}\n          />\n        </div>\n        {useTwoCircles && (\n          <fieldset>\n            <legend>Second circle</legend>\n            <ExtendedMandalaCircleParamsWidget\n              idPrefix=\"c2\"\n              value={circle2}\n              onChange={setCircle2}\n            />\n            <Checkbox\n              label=\"Invert colors\"\n              value={invertCircle2}\n              onChange={setInvertCircle2}\n            />{\" \"}\n            <Checkbox\n              label=\"Place behind first circle\"\n              value={firstBehind}\n              onChange={setFirstBehind}\n            />\n          </fieldset>\n        )}\n        {isAnimated && (\n          <NumericSlider\n            label=\"Animation loop duration\"\n            valueSuffix=\"s\"\n            value={durationSecs}\n            onChange={(duration) => setDurationSecs(duration)}\n            {...DURATION_SECS}\n          />\n        )}\n        <RandomizerWidget\n          onColorsChange={(colors) =>\n            setBaseCompCtx({ ...baseCompCtx, ...colors })\n          }\n          onSymbolsChange={(rng) => {\n            setCircle1({ ...circle1, ...getRandomCircleParams(rng) });\n            setCircle2({ ...circle2, ...getRandomCircleParams(rng) });\n          }}\n        />\n        <div className=\"thingy\">\n          <ExportWidget\n            basename={getBasename(design)}\n            svgRef={svgRef}\n            animate={\n              isAnimated && { duration: secsToMsecs(durationSecs), render }\n            }\n          />\n        </div>\n      </div>\n      <div\n        className=\"canvas\"\n        style={{ backgroundColor: baseCompCtx.background }}\n        ref={canvasRef}\n      >\n        <HoverDebugHelper>\n          <AutoSizingSvg\n            ref={svgRef}\n            bgColor={baseCompCtx.background}\n            sizeToElement={canvasRef}\n          >\n            <AnimatedMandala config={defaults} render={render} />\n          </AutoSizingSvg>\n        </HoverDebugHelper>\n      </div>\n    </Page>\n  );\n};\n", "import React from \"react\";\n\nimport { getAttachmentTransforms } from \"./attach\";\nimport { getBoundingBoxCenter } from \"./bounding-box\";\nimport { PointWithNormal } from \"./specs\";\nimport {\n  safeGetAttachmentPoint,\n  SvgSymbolContent,\n  SvgSymbolContext,\n  SvgSymbolData,\n  swapColors,\n} from \"./svg-symbol\";\nimport { svgRotate, SvgTransform, svgTranslate } from \"./svg-transform\";\nimport { isEvenNumber, range } from \"./util\";\n\n/**\n * Returns the anchor point of the given symbol; if it doesn't have\n * an anchor point, return a reasonable default one by taking the\n * center of the symbol and having the normal point along the negative\n * y-axis (i.e., up).\n */\nfunction getAnchorOrCenter(symbol: SvgSymbolData): PointWithNormal {\n  return (\n    safeGetAttachmentPoint(symbol, \"anchor\") || {\n      point: getBoundingBoxCenter(symbol.bbox),\n      normal: { x: 0, y: -1 },\n    }\n  );\n}\n\nexport type MandalaCircleParams = {\n  data: SvgSymbolData;\n  radius: number;\n  numSymbols: number;\n  symbolTransforms?: SvgTransform[];\n  invertEveryOtherSymbol: boolean;\n};\n\nexport type MandalaCircleProps = MandalaCircleParams & SvgSymbolContext;\n\nexport const MandalaCircle: React.FC<MandalaCircleProps> = (props) => {\n  const degreesPerItem = 360 / props.numSymbols;\n  const { translation, rotation } = getAttachmentTransforms(\n    {\n      point: { x: 0, y: 0 },\n      normal: { x: 0, y: -1 },\n    },\n    getAnchorOrCenter(props.data)\n  );\n  const transform: SvgTransform[] = [\n    // Remember that transforms are applied in reverse order,\n    // so read the following from the end first!\n\n    // Finally, move the symbol out along the radius of the circle.\n    svgTranslate({ x: 0, y: -props.radius }),\n\n    // Then apply any individual symbol transformations.\n    ...(props.symbolTransforms || []),\n\n    // First, re-orient the symbol so its anchor point is at\n    // the origin and facing the proper direction.\n    svgRotate(rotation),\n    svgTranslate(translation),\n  ];\n\n  const invertEveryOtherSymbol =\n    isEvenNumber(props.numSymbols) && props.invertEveryOtherSymbol;\n\n  const symbols = range(props.numSymbols)\n    .reverse()\n    .map((i) => (\n      <SvgTransform\n        key={i}\n        transform={[svgRotate(degreesPerItem * i), ...transform]}\n      >\n        {invertEveryOtherSymbol && isEvenNumber(i) ? (\n          <SvgSymbolContent {...swapColors(props)} />\n        ) : (\n          <SvgSymbolContent {...props} />\n        )}\n      </SvgTransform>\n    ));\n\n  return <>{symbols}</>;\n};\n", "import { useEffect, useState } from \"react\";\n\n/**\n * A React hook that can be used for animation.\n *\n * Given a duration in milliseconds, returns the percentage through\n * that duration that has passed as a floating-point number\n * from 0.0 to 1.0.\n *\n * Changes in the returned value will be triggered by `requestAnimationFrame`,\n * so they will likely be tied to the monitor's refresh rate.\n *\n * Assumes that the animation is looping, so the percentage will\n * reset to zero once it has finished.\n */\nexport function useAnimationPct(durationMs: number): number {\n  const [pct, setPct] = useState(0);\n  const [lastTimestamp, setLastTimestamp] = useState<number | undefined>(\n    undefined\n  );\n\n  useEffect(() => {\n    if (!durationMs) {\n      setPct(0);\n      setLastTimestamp(undefined);\n      return;\n    }\n\n    const callback = (timestamp: number) => {\n      if (typeof lastTimestamp === \"number\") {\n        const timeDelta = timestamp - lastTimestamp;\n        const pctDelta = timeDelta / durationMs;\n        setPct((pct + pctDelta) % 1.0);\n      }\n      setLastTimestamp(timestamp);\n    };\n    const timeout = requestAnimationFrame(callback);\n\n    return () => {\n      cancelAnimationFrame(timeout);\n    };\n  }, [durationMs, pct, lastTimestamp]);\n\n  return pct;\n}\n", "import { useEffect } from \"react\";\n\n/**\n * Like useEffect(), but ensures that the effect is only\n * called when the callback hasn't changed for the\n * given number of milliseconds.\n *\n * Note that this means that the callback itself needs\n * to be wrapped in something like `useCallback()`, or\n * else it may never be called!\n */\nexport function useDebouncedEffect(ms: number, effect: React.EffectCallback) {\n  useEffect(() => {\n    const timeout = setTimeout(effect, ms);\n\n    return () => clearTimeout(timeout);\n  }, [effect, ms]);\n}\n", "import { SvgVocabulary } from \"../../svg-vocabulary\";\nimport { SvgCompositionContext } from \"../../svg-composition-context\";\nimport MandalaAvsc from \"./mandala-design.avsc.json\";\nimport type {\n  AvroCircle,\n  AvroMandalaDesign,\n  AvroSvgCompositionContext,\n} from \"./mandala-design.avsc\";\nimport * as avro from \"avro-js\";\nimport {\n  MANDALA_DESIGN_DEFAULTS,\n  ExtendedMandalaCircleParams,\n  MandalaDesign,\n  getCirclesFromDesign,\n} from \"./core\";\nimport { fromBase64, toBase64 } from \"../../base64\";\nimport { clampedBytesToRGBColor } from \"../../color-util\";\n\nconst avroMandalaDesign = avro.parse<AvroMandalaDesign>(MandalaAvsc);\n\n/**\n * A generic interface for \"packing\" one type to a different representation\n * for the purposes of serialization, and \"unpacking\" the packed type\n * back to its original representation (for deserialization).\n */\ninterface Packer<UnpackedType, PackedType> {\n  pack(value: UnpackedType): PackedType;\n  unpack(value: PackedType): UnpackedType;\n}\n\nconst CirclePacker: Packer<ExtendedMandalaCircleParams, AvroCircle> = {\n  pack: ({ data, ...circle }) => ({\n    ...circle,\n    symbol: data.name,\n  }),\n  unpack: ({ symbol, ...circle }) => ({\n    ...circle,\n    data: SvgVocabulary.get(symbol),\n  }),\n};\n\nconst SvgCompositionContextPacker: Packer<\n  SvgCompositionContext,\n  AvroSvgCompositionContext\n> = {\n  pack: (ctx) => ({\n    ...ctx,\n    fill: ColorPacker.pack(ctx.fill),\n    stroke: ColorPacker.pack(ctx.stroke),\n    background: ColorPacker.pack(ctx.background),\n    uniformStrokeWidth: ctx.uniformStrokeWidth || 1,\n  }),\n  unpack: (ctx) => ({\n    ...ctx,\n    fill: ColorPacker.unpack(ctx.fill),\n    stroke: ColorPacker.unpack(ctx.stroke),\n    background: ColorPacker.unpack(ctx.background),\n    showSpecs: false,\n  }),\n};\n\nexport const ColorPacker: Packer<string, number> = {\n  pack: (string) => {\n    const red = parseInt(string.substring(1, 3), 16);\n    const green = parseInt(string.substring(3, 5), 16);\n    const blue = parseInt(string.substring(5, 7), 16);\n    return (red << 16) + (green << 8) + blue;\n  },\n  unpack: (number) => {\n    const red = (number >> 16) & 0xff;\n    const green = (number >> 8) & 0xff;\n    const blue = number & 0xff;\n    return clampedBytesToRGBColor([red, green, blue]);\n  },\n};\n\nconst DesignConfigPacker: Packer<MandalaDesign, AvroMandalaDesign> = {\n  pack: (value) => {\n    return {\n      ...value,\n      circles: getCirclesFromDesign(value).map(CirclePacker.pack),\n      baseCompCtx: SvgCompositionContextPacker.pack(value.baseCompCtx),\n    };\n  },\n  unpack: ({ circles, ...value }) => {\n    if (circles.length === 0) {\n      throw new Error(`Circles must have at least one item!`);\n    }\n    const useTwoCircles = circles.length > 1;\n    const circle1 = CirclePacker.unpack(circles[0]);\n    const circle2 = useTwoCircles\n      ? CirclePacker.unpack(circles[1])\n      : MANDALA_DESIGN_DEFAULTS.circle2;\n    return {\n      ...value,\n      baseCompCtx: SvgCompositionContextPacker.unpack(value.baseCompCtx),\n      circle1,\n      circle2,\n      useTwoCircles,\n    };\n  },\n};\n\nexport function serializeMandalaDesign(value: MandalaDesign): string {\n  const buf = avroMandalaDesign.toBuffer(DesignConfigPacker.pack(value));\n  return toBase64(buf);\n}\n\nexport function deserializeMandalaDesign(value: string): MandalaDesign {\n  const buf = fromBase64(value);\n  return DesignConfigPacker.unpack(avroMandalaDesign.fromBuffer(buf));\n}\n", "import { SlowBuffer } from \"buffer\";\n\nexport function toBase64(buf: Buffer): string {\n  return btoa(String.fromCharCode(...buf));\n}\n\nexport function fromBase64(value: string): Buffer {\n  const binaryString = atob(value);\n  const buf = new SlowBuffer(binaryString.length);\n\n  for (let i = 0; i < binaryString.length; i++) {\n    buf[i] = binaryString.charCodeAt(i);\n  }\n\n  return buf;\n}\n", "import React, { useContext, useState } from \"react\";\nimport { AutoSizingSvg } from \"../auto-sizing-svg\";\nimport { CreatureContext, CreatureContextType } from \"../creature-symbol\";\nimport { createCreatureSymbolFactory } from \"../creature-symbol-factory\";\nimport { HoverDebugHelper } from \"../hover-debug-helper\";\nimport { Page } from \"../page\";\nimport { PaletteAlgorithmWidget } from \"../palette-algorithm-widget\";\nimport { Random } from \"../random\";\nimport {\n  createRandomColorPalette,\n  DEFAULT_RANDOM_PALETTE_ALGORITHM,\n  RandomPaletteAlgorithm,\n} from \"../random-colors\";\nimport { createSvgSymbolContext } from \"../svg-symbol\";\nimport { svgScale, SvgTransform } from \"../svg-transform\";\nimport { SvgVocabulary } from \"../svg-vocabulary\";\nimport { SymbolContextWidget } from \"../symbol-context-widget\";\nimport { range } from \"../util\";\n\nconst symbol = createCreatureSymbolFactory(SvgVocabulary);\n\nconst Eye = symbol(\"eye\");\n\nconst Hand = symbol(\"hand\");\n\nconst Arm = symbol(\"arm\");\n\nconst Antler = symbol(\"antler\");\n\nconst Crown = symbol(\"crown\");\n\nconst Wing = symbol(\"wing\");\n\nconst MuscleArm = symbol(\"muscle_arm\");\n\nconst Leg = symbol(\"leg\");\n\nconst Tail = symbol(\"tail\");\n\nconst Lightning = symbol(\"lightning\");\n\nconst EYE_CREATURE = (\n  <Eye>\n    <Lightning nestInside />\n    <Arm attachTo=\"arm\" left>\n      <Wing attachTo=\"arm\" left right />\n    </Arm>\n    <Arm attachTo=\"arm\" right>\n      <MuscleArm attachTo=\"arm\" left right />\n    </Arm>\n    <Antler attachTo=\"horn\" left right />\n    <Crown attachTo=\"crown\">\n      <Hand attachTo=\"horn\" left right>\n        <Arm attachTo=\"arm\" left />\n      </Hand>\n    </Crown>\n    <Leg attachTo=\"leg\" left right />\n    <Tail attachTo=\"tail\" invert />\n  </Eye>\n);\n\nconst RandomColorSampling: React.FC<{}> = () => {\n  const [paletteAlg, setPaletteAlg] = useState<RandomPaletteAlgorithm>(\n    DEFAULT_RANDOM_PALETTE_ALGORITHM\n  );\n  const [seed, setSeed] = useState(Date.now());\n  const NUM_COLORS = 100;\n  const rng = new Random(seed);\n  const palette = createRandomColorPalette(NUM_COLORS, rng, paletteAlg);\n\n  return (\n    <>\n      <PaletteAlgorithmWidget value={paletteAlg} onChange={setPaletteAlg} />\n      <div className=\"thingy\">\n        <div style={{ fontSize: 0 }}>\n          {range(NUM_COLORS).map((i) => (\n            <div\n              key={i}\n              style={{\n                backgroundColor: palette[i],\n                width: \"1rem\",\n                height: \"1rem\",\n                display: \"inline-block\",\n              }}\n            />\n          ))}\n        </div>\n      </div>\n      <div className=\"thingy\">\n        <button onClick={() => setSeed(Date.now())}>Regenerate colors</button>\n      </div>\n    </>\n  );\n};\n\nexport const DebugPage: React.FC<{}> = () => {\n  const [symbolCtx, setSymbolCtx] = useState(createSvgSymbolContext());\n  const defaultCtx = useContext(CreatureContext);\n  const ctx: CreatureContextType = {\n    ...defaultCtx,\n    ...symbolCtx,\n    fill: symbolCtx.showSpecs ? \"none\" : symbolCtx.fill,\n  };\n\n  return (\n    <Page title=\"Debug!\">\n      <div className=\"sidebar\">\n        <SymbolContextWidget ctx={symbolCtx} onChange={setSymbolCtx} />\n        <h2>Random color sampling</h2>\n        <RandomColorSampling />\n      </div>\n      <div className=\"canvas\">\n        <CreatureContext.Provider value={ctx}>\n          <HoverDebugHelper>\n            <AutoSizingSvg padding={20}>\n              <SvgTransform transform={svgScale(0.5)}>\n                {EYE_CREATURE}\n              </SvgTransform>\n            </AutoSizingSvg>\n          </HoverDebugHelper>\n        </CreatureContext.Provider>\n      </div>\n    </Page>\n  );\n};\n", "import React from \"react\";\nimport {\n  AttachedCreatureSymbol,\n  CreatureSymbol,\n  NestedCreatureSymbol,\n} from \"./creature-symbol\";\nimport { AttachmentPointType } from \"./specs\";\nimport { SvgSymbolData } from \"./svg-symbol\";\nimport { Vocabulary } from \"./vocabulary\";\n\ntype AttachmentIndices = {\n  left?: boolean;\n  right?: boolean;\n};\n\ntype AttachmentChildren = JSX.Element | JSX.Element[];\n\ntype SimpleCreatureSymbolProps = AttachmentIndices & {\n  nestInside?: boolean;\n  children?: AttachmentChildren;\n  attachTo?: AttachmentPointType;\n  invert?: boolean;\n  indices?: number[];\n};\n\nfunction getAttachmentIndices(ai: AttachmentIndices): number[] {\n  const result: number[] = [];\n\n  if (ai.left) {\n    result.push(0);\n  }\n  if (ai.right) {\n    result.push(1);\n  }\n  if (result.length === 0) {\n    result.push(0);\n  }\n  return result;\n}\n\ntype SplitCreatureSymbolChildren = {\n  attachments: JSX.Element[];\n  nests: JSX.Element[];\n};\n\nfunction splitCreatureSymbolChildren(\n  children?: AttachmentChildren\n): SplitCreatureSymbolChildren {\n  const result: SplitCreatureSymbolChildren = {\n    attachments: [],\n    nests: [],\n  };\n  if (!children) return result;\n\n  React.Children.forEach(children, (child) => {\n    if (child.props.nestInside) {\n      result.nests.push(child);\n    } else {\n      result.attachments.push(child);\n    }\n  });\n\n  return result;\n}\n\ntype SimpleCreatureSymbolFC = React.FC<SimpleCreatureSymbolProps> & {\n  creatureSymbolData: SvgSymbolData;\n};\n\n/**\n * Create a factory that can be used to return React components to\n * render a `<CreatureSymbol>`.\n */\nexport function createCreatureSymbolFactory(\n  vocabulary: Vocabulary<SvgSymbolData>\n) {\n  /**\n   * Returns a React component that renders a `<CreatureSymbol>`, using the symbol\n   * with the given name as its default data.\n   */\n  return function createCreatureSymbol(\n    name: string\n  ): React.FC<SimpleCreatureSymbolProps> {\n    const data = vocabulary.get(name);\n    const Component: SimpleCreatureSymbolFC = (props) => {\n      const symbol = getCreatureSymbol(data, props);\n      return <CreatureSymbol {...symbol} />;\n    };\n    Component.creatureSymbolData = data;\n    return Component;\n  };\n}\n\nfunction isSimpleCreatureSymbolFC(fn: any): fn is SimpleCreatureSymbolFC {\n  return !!fn.creatureSymbolData;\n}\n\nfunction extractNestedCreatureSymbol(el: JSX.Element): NestedCreatureSymbol {\n  const base = extractCreatureSymbolFromElement(el);\n  const props: SimpleCreatureSymbolProps = el.props;\n  const indices = props.indices || getAttachmentIndices(props);\n  const result: NestedCreatureSymbol = {\n    ...base,\n    indices,\n  };\n  return result;\n}\n\nfunction extractAttachedCreatureSymbol(\n  el: JSX.Element\n): AttachedCreatureSymbol {\n  const base = extractNestedCreatureSymbol(el);\n  const props: SimpleCreatureSymbolProps = el.props;\n  const { attachTo } = props;\n  if (!attachTo) {\n    throw new Error(\"Expected attachment to have `attachTo` prop!\");\n  }\n  const result: AttachedCreatureSymbol = {\n    ...base,\n    attachTo,\n  };\n  return result;\n}\n\nfunction getCreatureSymbol(\n  data: SvgSymbolData,\n  props: SimpleCreatureSymbolProps\n): CreatureSymbol {\n  const { attachments, nests } = splitCreatureSymbolChildren(props.children);\n  const result: CreatureSymbol = {\n    data,\n    attachments: attachments.map(extractAttachedCreatureSymbol),\n    nests: nests.map(extractNestedCreatureSymbol),\n    invertColors: props.invert ?? false,\n  };\n  return result;\n}\n\nfunction extractCreatureSymbolFromElement(el: JSX.Element): CreatureSymbol {\n  if (isSimpleCreatureSymbolFC(el.type)) {\n    return getCreatureSymbol(el.type.creatureSymbolData, el.props);\n  }\n  throw new Error(\"Found unknown component type!\");\n}\n"],
  "mappings": "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",
  "names": []
}
